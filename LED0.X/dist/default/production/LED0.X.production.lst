

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jul 25 14:46:14 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1703 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   120                           PORTC equ 0Eh ;# 
   121  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   122                           PIR1 equ 011h ;# 
   123  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   124                           PIR2 equ 012h ;# 
   125  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   126                           PIR3 equ 013h ;# 
   127  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   128                           TMR0 equ 015h ;# 
   129  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   130                           TMR1 equ 016h ;# 
   131  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   132                           TMR1L equ 016h ;# 
   133  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   134                           TMR1H equ 017h ;# 
   135  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   136                           T1CON equ 018h ;# 
   137  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   138                           T1GCON equ 019h ;# 
   139  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   140                           TMR2 equ 01Ah ;# 
   141  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   142                           PR2 equ 01Bh ;# 
   143  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   144                           T2CON equ 01Ch ;# 
   145  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   148                           TRISC equ 08Eh ;# 
   149  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   150                           PIE1 equ 091h ;# 
   151  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   152                           PIE2 equ 092h ;# 
   153  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   154                           PIE3 equ 093h ;# 
   155  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   156                           OPTION_REG equ 095h ;# 
   157  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   158                           PCON equ 096h ;# 
   159  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   160                           WDTCON equ 097h ;# 
   161  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   162                           OSCTUNE equ 098h ;# 
   163  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   164                           OSCCON equ 099h ;# 
   165  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   166                           OSCSTAT equ 09Ah ;# 
   167  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   168                           ADRES equ 09Bh ;# 
   169  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   170                           ADRESL equ 09Bh ;# 
   171  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   172                           ADRESH equ 09Ch ;# 
   173  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   174                           ADCON0 equ 09Dh ;# 
   175  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   176                           ADCON1 equ 09Eh ;# 
   177  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   178                           ADCON2 equ 09Fh ;# 
   179  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   182                           LATC equ 010Eh ;# 
   183  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   184                           BORCON equ 0116h ;# 
   185  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   186                           FVRCON equ 0117h ;# 
   187  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   188                           ZCD1CON equ 011Ch ;# 
   189  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   190                           ANSELA equ 018Ch ;# 
   191  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   192                           ANSELC equ 018Eh ;# 
   193  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   194                           PMADR equ 0191h ;# 
   195  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   196                           PMADRL equ 0191h ;# 
   197  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   198                           PMADRH equ 0192h ;# 
   199  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   200                           PMDAT equ 0193h ;# 
   201  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   202                           PMDATL equ 0193h ;# 
   203  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   204                           PMDATH equ 0194h ;# 
   205  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   206                           PMCON1 equ 0195h ;# 
   207  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   208                           PMCON2 equ 0196h ;# 
   209  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   210                           VREGCON equ 0197h ;# 
   211  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   212                           WPUA equ 020Ch ;# 
   213  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   214                           WPUC equ 020Eh ;# 
   215  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   216                           SSP1BUF equ 0211h ;# 
   217  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   218                           SSPBUF equ 0211h ;# 
   219  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   220                           SSP1ADD equ 0212h ;# 
   221  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   222                           SSPADD equ 0212h ;# 
   223  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   224                           SSP1MSK equ 0213h ;# 
   225  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   226                           SSPMSK equ 0213h ;# 
   227  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   228                           SSP1STAT equ 0214h ;# 
   229  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   230                           SSPSTAT equ 0214h ;# 
   231  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   232                           SSP1CON1 equ 0215h ;# 
   233  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   234                           SSPCON equ 0215h ;# 
   235  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   236                           SSPCON1 equ 0215h ;# 
   237  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   238                           SSP1CON equ 0215h ;# 
   239  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   240                           SSP1CON2 equ 0216h ;# 
   241  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   242                           SSPCON2 equ 0216h ;# 
   243  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   244                           SSP1CON3 equ 0217h ;# 
   245  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   246                           SSPCON3 equ 0217h ;# 
   247  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   248                           ODCONA equ 028Ch ;# 
   249  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   250                           ODCONC equ 028Eh ;# 
   251  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   252                           CCPR1 equ 0291h ;# 
   253  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   254                           CCPR1L equ 0291h ;# 
   255  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   256                           CCPR1H equ 0292h ;# 
   257  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   258                           CCP1CON equ 0293h ;# 
   259  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   260                           ECCP1CON equ 0293h ;# 
   261  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   262                           CCPR2 equ 0298h ;# 
   263  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   264                           CCPR2L equ 0298h ;# 
   265  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   266                           CCPR2H equ 0299h ;# 
   267  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   268                           CCP2CON equ 029Ah ;# 
   269  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   270                           ECCP2CON equ 029Ah ;# 
   271  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   272                           SLRCONA equ 030Ch ;# 
   273  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   274                           SLRCONC equ 030Eh ;# 
   275  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   276                           INLVLA equ 038Ch ;# 
   277  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   278                           INLVLC equ 038Eh ;# 
   279  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   280                           IOCAP equ 0391h ;# 
   281  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   282                           IOCAN equ 0392h ;# 
   283  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   284                           IOCAF equ 0393h ;# 
   285  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   286                           IOCCP equ 0397h ;# 
   287  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   288                           IOCCN equ 0398h ;# 
   289  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   290                           IOCCF equ 0399h ;# 
   291  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   292                           OPA1CON equ 0511h ;# 
   293  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   294                           OPA2CON equ 0515h ;# 
   295  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   296                           PPSLOCK equ 0E0Fh ;# 
   297  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   298                           INTPPS equ 0E10h ;# 
   299  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   300                           T0CKIPPS equ 0E11h ;# 
   301  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   302                           T1CKIPPS equ 0E12h ;# 
   303  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   304                           T1GPPS equ 0E13h ;# 
   305  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   306                           CCP1PPS equ 0E14h ;# 
   307  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   308                           CCP2PPS equ 0E15h ;# 
   309  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   310                           SSPCLKPPS equ 0E20h ;# 
   311  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   312                           SSPDATPPS equ 0E21h ;# 
   313  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   314                           SSPSSPPS equ 0E22h ;# 
   315  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   316                           RA0PPS equ 0E90h ;# 
   317  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   318                           RA1PPS equ 0E91h ;# 
   319  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   320                           RA2PPS equ 0E92h ;# 
   321  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   322                           RA4PPS equ 0E94h ;# 
   323  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   324                           RA5PPS equ 0E95h ;# 
   325  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   326                           RC0PPS equ 0EA0h ;# 
   327  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   328                           RC1PPS equ 0EA1h ;# 
   329  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   330                           RC2PPS equ 0EA2h ;# 
   331  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   332                           RC3PPS equ 0EA3h ;# 
   333  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   334                           RC4PPS equ 0EA4h ;# 
   335  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   336                           RC5PPS equ 0EA5h ;# 
   337  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   338                           ICDBK0H equ 0F9Eh ;# 
   339  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   340                           STATUS_SHAD equ 0FE4h ;# 
   341  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   342                           WREG_SHAD equ 0FE5h ;# 
   343  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   344                           BSR_SHAD equ 0FE6h ;# 
   345  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   346                           PCLATH_SHAD equ 0FE7h ;# 
   347  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   348                           FSR0L_SHAD equ 0FE8h ;# 
   349  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   350                           FSR0H_SHAD equ 0FE9h ;# 
   351  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   352                           FSR1L_SHAD equ 0FEAh ;# 
   353  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   354                           FSR1H_SHAD equ 0FEBh ;# 
   355  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   356                           STKPTR equ 0FEDh ;# 
   357  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   358                           TOSL equ 0FEEh ;# 
   359  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   360                           TOSH equ 0FEFh ;# 
   361  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   362                           INDF0 equ 00h ;# 
   363  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   364                           INDF1 equ 01h ;# 
   365  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   366                           PCL equ 02h ;# 
   367  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   368                           STATUS equ 03h ;# 
   369  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   370                           FSR0L equ 04h ;# 
   371  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   372                           FSR0H equ 05h ;# 
   373  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   374                           FSR1L equ 06h ;# 
   375  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   376                           FSR1H equ 07h ;# 
   377  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   378                           BSR equ 08h ;# 
   379  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   380                           WREG equ 09h ;# 
   381  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   382                           PCLATH equ 0Ah ;# 
   383  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   384                           INTCON equ 0Bh ;# 
   385  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   386                           PORTA equ 0Ch ;# 
   387  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   388                           PORTC equ 0Eh ;# 
   389  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   390                           PIR1 equ 011h ;# 
   391  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   392                           PIR2 equ 012h ;# 
   393  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   394                           PIR3 equ 013h ;# 
   395  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   396                           TMR0 equ 015h ;# 
   397  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   398                           TMR1 equ 016h ;# 
   399  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   400                           TMR1L equ 016h ;# 
   401  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   402                           TMR1H equ 017h ;# 
   403  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   404                           T1CON equ 018h ;# 
   405  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   406                           T1GCON equ 019h ;# 
   407  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   408                           TMR2 equ 01Ah ;# 
   409  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   410                           PR2 equ 01Bh ;# 
   411  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   412                           T2CON equ 01Ch ;# 
   413  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   414                           TRISA equ 08Ch ;# 
   415  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   416                           TRISC equ 08Eh ;# 
   417  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   418                           PIE1 equ 091h ;# 
   419  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   420                           PIE2 equ 092h ;# 
   421  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   422                           PIE3 equ 093h ;# 
   423  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   424                           OPTION_REG equ 095h ;# 
   425  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   426                           PCON equ 096h ;# 
   427  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   428                           WDTCON equ 097h ;# 
   429  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   430                           OSCTUNE equ 098h ;# 
   431  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   432                           OSCCON equ 099h ;# 
   433  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   434                           OSCSTAT equ 09Ah ;# 
   435  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   436                           ADRES equ 09Bh ;# 
   437  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   438                           ADRESL equ 09Bh ;# 
   439  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   440                           ADRESH equ 09Ch ;# 
   441  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   442                           ADCON0 equ 09Dh ;# 
   443  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   444                           ADCON1 equ 09Eh ;# 
   445  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   446                           ADCON2 equ 09Fh ;# 
   447  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   448                           LATA equ 010Ch ;# 
   449  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   450                           LATC equ 010Eh ;# 
   451  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   452                           BORCON equ 0116h ;# 
   453  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   454                           FVRCON equ 0117h ;# 
   455  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   456                           ZCD1CON equ 011Ch ;# 
   457  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   458                           ANSELA equ 018Ch ;# 
   459  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   460                           ANSELC equ 018Eh ;# 
   461  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   462                           PMADR equ 0191h ;# 
   463  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   464                           PMADRL equ 0191h ;# 
   465  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   466                           PMADRH equ 0192h ;# 
   467  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   468                           PMDAT equ 0193h ;# 
   469  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   470                           PMDATL equ 0193h ;# 
   471  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   472                           PMDATH equ 0194h ;# 
   473  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   474                           PMCON1 equ 0195h ;# 
   475  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   476                           PMCON2 equ 0196h ;# 
   477  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   478                           VREGCON equ 0197h ;# 
   479  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   480                           WPUA equ 020Ch ;# 
   481  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   482                           WPUC equ 020Eh ;# 
   483  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   484                           SSP1BUF equ 0211h ;# 
   485  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   486                           SSPBUF equ 0211h ;# 
   487  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   488                           SSP1ADD equ 0212h ;# 
   489  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   490                           SSPADD equ 0212h ;# 
   491  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   492                           SSP1MSK equ 0213h ;# 
   493  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   494                           SSPMSK equ 0213h ;# 
   495  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   496                           SSP1STAT equ 0214h ;# 
   497  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   498                           SSPSTAT equ 0214h ;# 
   499  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   500                           SSP1CON1 equ 0215h ;# 
   501  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   502                           SSPCON equ 0215h ;# 
   503  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   504                           SSPCON1 equ 0215h ;# 
   505  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   506                           SSP1CON equ 0215h ;# 
   507  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   508                           SSP1CON2 equ 0216h ;# 
   509  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   510                           SSPCON2 equ 0216h ;# 
   511  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   512                           SSP1CON3 equ 0217h ;# 
   513  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   514                           SSPCON3 equ 0217h ;# 
   515  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   516                           ODCONA equ 028Ch ;# 
   517  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   518                           ODCONC equ 028Eh ;# 
   519  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   520                           CCPR1 equ 0291h ;# 
   521  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   522                           CCPR1L equ 0291h ;# 
   523  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   524                           CCPR1H equ 0292h ;# 
   525  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   526                           CCP1CON equ 0293h ;# 
   527  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   528                           ECCP1CON equ 0293h ;# 
   529  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   530                           CCPR2 equ 0298h ;# 
   531  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   532                           CCPR2L equ 0298h ;# 
   533  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   534                           CCPR2H equ 0299h ;# 
   535  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   536                           CCP2CON equ 029Ah ;# 
   537  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   538                           ECCP2CON equ 029Ah ;# 
   539  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   540                           SLRCONA equ 030Ch ;# 
   541  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   542                           SLRCONC equ 030Eh ;# 
   543  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   544                           INLVLA equ 038Ch ;# 
   545  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   546                           INLVLC equ 038Eh ;# 
   547  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   548                           IOCAP equ 0391h ;# 
   549  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   550                           IOCAN equ 0392h ;# 
   551  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   552                           IOCAF equ 0393h ;# 
   553  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   554                           IOCCP equ 0397h ;# 
   555  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   556                           IOCCN equ 0398h ;# 
   557  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   558                           IOCCF equ 0399h ;# 
   559  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   560                           OPA1CON equ 0511h ;# 
   561  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   562                           OPA2CON equ 0515h ;# 
   563  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   564                           PPSLOCK equ 0E0Fh ;# 
   565  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   566                           INTPPS equ 0E10h ;# 
   567  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   568                           T0CKIPPS equ 0E11h ;# 
   569  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   570                           T1CKIPPS equ 0E12h ;# 
   571  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   572                           T1GPPS equ 0E13h ;# 
   573  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   574                           CCP1PPS equ 0E14h ;# 
   575  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   576                           CCP2PPS equ 0E15h ;# 
   577  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   578                           SSPCLKPPS equ 0E20h ;# 
   579  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   580                           SSPDATPPS equ 0E21h ;# 
   581  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   582                           SSPSSPPS equ 0E22h ;# 
   583  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   584                           RA0PPS equ 0E90h ;# 
   585  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   586                           RA1PPS equ 0E91h ;# 
   587  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   588                           RA2PPS equ 0E92h ;# 
   589  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   590                           RA4PPS equ 0E94h ;# 
   591  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   592                           RA5PPS equ 0E95h ;# 
   593  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   594                           RC0PPS equ 0EA0h ;# 
   595  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   596                           RC1PPS equ 0EA1h ;# 
   597  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   598                           RC2PPS equ 0EA2h ;# 
   599  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   600                           RC3PPS equ 0EA3h ;# 
   601  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   602                           RC4PPS equ 0EA4h ;# 
   603  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   604                           RC5PPS equ 0EA5h ;# 
   605  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   606                           ICDBK0H equ 0F9Eh ;# 
   607  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   608                           STATUS_SHAD equ 0FE4h ;# 
   609  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   610                           WREG_SHAD equ 0FE5h ;# 
   611  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   612                           BSR_SHAD equ 0FE6h ;# 
   613  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   614                           PCLATH_SHAD equ 0FE7h ;# 
   615  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   616                           FSR0L_SHAD equ 0FE8h ;# 
   617  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   618                           FSR0H_SHAD equ 0FE9h ;# 
   619  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   620                           FSR1L_SHAD equ 0FEAh ;# 
   621  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   622                           FSR1H_SHAD equ 0FEBh ;# 
   623  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   624                           STKPTR equ 0FEDh ;# 
   625  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   626                           TOSL equ 0FEEh ;# 
   627  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   628                           TOSH equ 0FEFh ;# 
   629  0FEF                     	FNCALL	_main,_getadc
   630                           	FNCALL	_main,_wait
   631                           	FNCALL	_main,_wdt_init
   632                           	FNROOT	_main
   633                           	FNCALL	intlevel1,_isr
   634                           	global	intlevel1
   635                           	FNROOT	intlevel1
   636                           	global	isr@n
   637                           	global	_times
   638                           	global	_timebase
   639                           	global	_waitOK
   640                           	global	_vadc
   641                           psect	nvCOMMON,class=COMMON,space=1,noexec
   642                           global __pnvCOMMON
   643                           __pnvCOMMON:
   644  007B                     _vadc:
   645  007B                            ds      2
   646  007B                     
   647                           	global	_TMR0
   648                           _TMR0	set	0x15
   649  0015                     	global	_ADIF
   650                           _ADIF	set	0x8E
   651  008E                     	global	_T0IE
   652                           _T0IE	set	0x5D
   653  005D                     	global	_T0IF
   654                           _T0IF	set	0x5A
   655  005A                     	global	_RC3
   656                           _RC3	set	0x73
   657  0073                     	global	_GIE
   658                           _GIE	set	0x5F
   659  005F                     	global	_ADRESL
   660                           _ADRESL	set	0x9B
   661  009B                     	global	_ADRESH
   662                           _ADRESH	set	0x9C
   663  009C                     	global	_TRISC
   664                           _TRISC	set	0x8E
   665  008E                     	global	_TRISA
   666                           _TRISA	set	0x8C
   667  008C                     	global	_ADCON0bits
   668                           _ADCON0bits	set	0x9D
   669  009D                     	global	_ADCON1bits
   670                           _ADCON1bits	set	0x9E
   671  009E                     	global	_PSA
   672                           _PSA	set	0x4AB
   673  04AB                     	global	_T0CS
   674                           _T0CS	set	0x4AD
   675  04AD                     	global	_ADGO
   676                           _ADGO	set	0x4E9
   677  04E9                     	global	_TRISC3
   678                           _TRISC3	set	0x473
   679  0473                     	global	_TRISA2
   680                           _TRISA2	set	0x462
   681  0462                     	global	_ADPREF1
   682                           _ADPREF1	set	0x4F1
   683  04F1                     	global	_ADPREF0
   684                           _ADPREF0	set	0x4F0
   685  04F0                     	global	_ADFM
   686                           _ADFM	set	0x4F7
   687  04F7                     	global	_ADON
   688                           _ADON	set	0x4E8
   689  04E8                     	global	_LATC
   690                           _LATC	set	0x10E
   691  010E                     	global	_LATA
   692                           _LATA	set	0x10C
   693  010C                     	global	_LATA5
   694                           _LATA5	set	0x865
   695  0865                     	global	_LATA4
   696                           _LATA4	set	0x864
   697  0864                     	global	_LATC4
   698                           _LATC4	set	0x874
   699  0874                     	global	_LATC2
   700                           _LATC2	set	0x872
   701  0872                     	global	_LATC0
   702                           _LATC0	set	0x870
   703  0870                     	global	_LATC1
   704                           _LATC1	set	0x871
   705  0871                     	global	_LATA1
   706                           _LATA1	set	0x861
   707  0861                     	global	_LATA0
   708                           _LATA0	set	0x860
   709  0860                     	global	_ANSC3
   710                           _ANSC3	set	0xC73
   711  0C73                     	global	_ANSA2
   712                           _ANSA2	set	0xC62
   713  0C62                     ; #config settings
   714                           global __CFG_FOSC$INTOSC
   715                           __CFG_FOSC$INTOSC equ 0x0
   716  0000                     global __CFG_WDTE$OFF
   717                           __CFG_WDTE$OFF equ 0x0
   718  0000                     global __CFG_PWRTE$OFF
   719                           __CFG_PWRTE$OFF equ 0x0
   720  0000                     global __CFG_MCLRE$ON
   721                           __CFG_MCLRE$ON equ 0x0
   722  0000                     global __CFG_CP$OFF
   723                           __CFG_CP$OFF equ 0x0
   724  0000                     global __CFG_BOREN$OFF
   725                           __CFG_BOREN$OFF equ 0x0
   726  0000                     global __CFG_CLKOUTEN$OFF
   727                           __CFG_CLKOUTEN$OFF equ 0x0
   728  0000                     global __CFG_WRT$OFF
   729                           __CFG_WRT$OFF equ 0x0
   730  0000                     global __CFG_PPS1WAY$ON
   731                           __CFG_PPS1WAY$ON equ 0x0
   732  0000                     global __CFG_ZCDDIS$ON
   733                           __CFG_ZCDDIS$ON equ 0x0
   734  0000                     global __CFG_PLLEN$ON
   735                           __CFG_PLLEN$ON equ 0x0
   736  0000                     global __CFG_STVREN$ON
   737                           __CFG_STVREN$ON equ 0x0
   738  0000                     global __CFG_BORV$LO
   739                           __CFG_BORV$LO equ 0x0
   740  0000                     global __CFG_LPBOR$OFF
   741                           __CFG_LPBOR$OFF equ 0x0
   742  0000                     global __CFG_LVP$ON
   743                           __CFG_LVP$ON equ 0x0
   744  0000                     	file	"C:\Users\zhgao\AppData\Local\Temp\s68g."
   745                           	line	#
   746                           psect cinit,class=CODE,delta=2
   747                           global start_initialization
   748                           start_initialization:
   749  0033                     
   750                           global __initialization
   751                           __initialization:
   752  0033                     psect	bssCOMMON,class=COMMON,space=1,noexec
   753                           global __pbssCOMMON
   754                           __pbssCOMMON:
   755  0070                     isr@n:
   756  0070                            ds      2
   757  0070                     
   758                           _times:
   759  0072                            ds      2
   760  0072                     
   761                           _timebase:
   762  0074                            ds      2
   763  0074                     
   764                           _waitOK:
   765  0076                            ds      2
   766  0076                     
   767                           	file	"C:\Users\zhgao\AppData\Local\Temp\s68g."
   768                           	line	#
   769                           ; Clear objects allocated to COMMON
   770                           psect cinit,class=CODE,delta=2,merge=1
   771                           	global __pbssCOMMON
   772                           	clrf	((__pbssCOMMON)+0)&07Fh
   773  0033  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
   774  0034  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
   775  0035  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
   776  0036  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
   777  0037  01F4               	clrf	((__pbssCOMMON)+5)&07Fh
   778  0038  01F5               	clrf	((__pbssCOMMON)+6)&07Fh
   779  0039  01F6               	clrf	((__pbssCOMMON)+7)&07Fh
   780  003A  01F7               psect cinit,class=CODE,delta=2,merge=1
   781                           global end_of_initialization,__end_of__initialization
   782                           
   783                           ;End of C runtime variable initialization code
   784                           
   785                           end_of_initialization:
   786  003B                     __end_of__initialization:
   787  003B                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   788  003B  107E               movlb 0
   789  003C  0020               ljmp _main	;jump to C main() function
   790  003D  283E               psect	cstackCOMMON,class=COMMON,space=1,noexec
   791                           global __pcstackCOMMON
   792                           __pcstackCOMMON:
   793  0078                     ?_wdt_init:	; 1 bytes @ 0x0
   794  0078                     ?_main:	; 1 bytes @ 0x0
   795  0078                     ?_isr:	; 1 bytes @ 0x0
   796  0078                     ??_isr:	; 1 bytes @ 0x0
   797  0078                     	ds	1
   798  0078                     ??_wdt_init:	; 1 bytes @ 0x1
   799  0079                     ?_wait:	; 1 bytes @ 0x1
   800  0079                     	global	?_getadc
   801                           ?_getadc:	; 2 bytes @ 0x1
   802  0079                     	global	wait@ms
   803                           wait@ms:	; 2 bytes @ 0x1
   804  0079                     	ds	2
   805  0079                     ??_getadc:	; 1 bytes @ 0x3
   806  007B                     ??_wait:	; 1 bytes @ 0x3
   807  007B                     ??_main:	; 1 bytes @ 0x3
   808  007B                     ;!
   809                           ;!Data Sizes:
   810                           ;!    Strings     0
   811                           ;!    Constant    0
   812                           ;!    Data        0
   813                           ;!    BSS         8
   814                           ;!    Persistent  2
   815                           ;!    Stack       0
   816                           ;!
   817                           ;!Auto Spaces:
   818                           ;!    Space          Size  Autos    Used
   819                           ;!    COMMON           14      3      13
   820                           ;!    BANK0            80      0       0
   821                           ;!    BANK1            80      0       0
   822                           ;!    BANK2            80      0       0
   823                           
   824                           ;!
   825                           ;!Pointer List with Targets:
   826                           ;!
   827                           ;!    None.
   828                           
   829                           
   830                           ;!
   831                           ;!Critical Paths under _main in COMMON
   832                           ;!
   833                           ;!    _main->_getadc
   834                           ;!    _main->_wait
   835                           ;!
   836                           ;!Critical Paths under _isr in COMMON
   837                           ;!
   838                           ;!    None.
   839                           ;!
   840                           ;!Critical Paths under _main in BANK0
   841                           ;!
   842                           ;!    None.
   843                           ;!
   844                           ;!Critical Paths under _isr in BANK0
   845                           ;!
   846                           ;!    None.
   847                           ;!
   848                           ;!Critical Paths under _main in BANK1
   849                           ;!
   850                           ;!    None.
   851                           ;!
   852                           ;!Critical Paths under _isr in BANK1
   853                           ;!
   854                           ;!    None.
   855                           ;!
   856                           ;!Critical Paths under _main in BANK2
   857                           ;!
   858                           ;!    None.
   859                           ;!
   860                           ;!Critical Paths under _isr in BANK2
   861                           ;!
   862                           ;!    None.
   863                           
   864 ;;
   865 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   866 ;;
   867                           
   868                           ;!
   869                           ;!Call Graph Tables:
   870                           ;!
   871                           ;! ---------------------------------------------------------------------------------
   872                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   873                           ;! ---------------------------------------------------------------------------------
   874                           ;! (0) _main                                                 0     0      0    1086
   875                           ;!                             _getadc
   876                           ;!                               _wait
   877                           ;!                           _wdt_init
   878                           ;! ---------------------------------------------------------------------------------
   879                           ;! (1) _wdt_init                                             0     0      0       0
   880                           ;! ---------------------------------------------------------------------------------
   881                           ;! (1) _wait                                                 2     0      2    1086
   882                           ;!                                              1 COMMON     2     0      2
   883                           ;! ---------------------------------------------------------------------------------
   884                           ;! (1) _getadc                                               2     0      2       0
   885                           ;!                                              1 COMMON     2     0      2
   886                           ;! ---------------------------------------------------------------------------------
   887                           ;! Estimated maximum stack depth 1
   888                           ;! ---------------------------------------------------------------------------------
   889                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   890                           ;! ---------------------------------------------------------------------------------
   891                           ;! (2) _isr                                                  1     1      0       0
   892                           ;!                                              0 COMMON     1     1      0
   893                           ;! ---------------------------------------------------------------------------------
   894                           ;! Estimated maximum stack depth 2
   895                           ;! ---------------------------------------------------------------------------------
   896                           ;!
   897                           ;! Call Graph Graphs:
   898                           ;!
   899                           ;! _main (ROOT)
   900                           ;!   _getadc
   901                           ;!   _wait
   902                           ;!   _wdt_init
   903                           ;!
   904                           ;! _isr (ROOT)
   905                           ;!
   906                           
   907                           ;! Address spaces:
   908                           
   909                           ;!Name               Size   Autos  Total    Cost      Usage
   910                           ;!BIGRAM              F0      0       0       0        0.0%
   911                           ;!NULL                 0      0       0       0        0.0%
   912                           ;!CODE                 0      0       0       0        0.0%
   913                           ;!BITCOMMON            E      0       0       1        0.0%
   914                           ;!BITSFR0              0      0       0       1        0.0%
   915                           ;!SFR0                 0      0       0       1        0.0%
   916                           ;!COMMON               E      3       D       2       92.9%
   917                           ;!BITSFR1              0      0       0       2        0.0%
   918                           ;!SFR1                 0      0       0       2        0.0%
   919                           ;!BITSFR2              0      0       0       3        0.0%
   920                           ;!SFR2                 0      0       0       3        0.0%
   921                           ;!STACK                0      0       0       3        0.0%
   922                           ;!BITSFR3              0      0       0       4        0.0%
   923                           ;!SFR3                 0      0       0       4        0.0%
   924                           ;!ABS                  0      0       D       4        0.0%
   925                           ;!BITBANK0            50      0       0       5        0.0%
   926                           ;!BITSFR4              0      0       0       5        0.0%
   927                           ;!SFR4                 0      0       0       5        0.0%
   928                           ;!BANK0               50      0       0       6        0.0%
   929                           ;!BITSFR5              0      0       0       6        0.0%
   930                           ;!SFR5                 0      0       0       6        0.0%
   931                           ;!BITBANK1            50      0       0       7        0.0%
   932                           ;!BITSFR6              0      0       0       7        0.0%
   933                           ;!SFR6                 0      0       0       7        0.0%
   934                           ;!BANK1               50      0       0       8        0.0%
   935                           ;!BITSFR7              0      0       0       8        0.0%
   936                           ;!SFR7                 0      0       0       8        0.0%
   937                           ;!BITBANK2            50      0       0       9        0.0%
   938                           ;!BITSFR8              0      0       0       9        0.0%
   939                           ;!SFR8                 0      0       0       9        0.0%
   940                           ;!BANK2               50      0       0      10        0.0%
   941                           ;!BITSFR9              0      0       0      10        0.0%
   942                           ;!SFR9                 0      0       0      10        0.0%
   943                           ;!BITSFR10             0      0       0      11        0.0%
   944                           ;!SFR10                0      0       0      11        0.0%
   945                           ;!DATA                 0      0       D      11        0.0%
   946                           ;!BITSFR11             0      0       0      12        0.0%
   947                           ;!SFR11                0      0       0      12        0.0%
   948                           ;!BITSFR12             0      0       0      13        0.0%
   949                           ;!SFR12                0      0       0      13        0.0%
   950                           ;!BITSFR13             0      0       0      14        0.0%
   951                           ;!SFR13                0      0       0      14        0.0%
   952                           ;!BITSFR14             0      0       0      15        0.0%
   953                           ;!SFR14                0      0       0      15        0.0%
   954                           ;!BITSFR15             0      0       0      16        0.0%
   955                           ;!SFR15                0      0       0      16        0.0%
   956                           ;!BITSFR16             0      0       0      17        0.0%
   957                           ;!SFR16                0      0       0      17        0.0%
   958                           ;!BITSFR17             0      0       0      18        0.0%
   959                           ;!SFR17                0      0       0      18        0.0%
   960                           ;!BITSFR18             0      0       0      19        0.0%
   961                           ;!SFR18                0      0       0      19        0.0%
   962                           ;!BITSFR19             0      0       0      20        0.0%
   963                           ;!SFR19                0      0       0      20        0.0%
   964                           ;!BITSFR20             0      0       0      21        0.0%
   965                           ;!SFR20                0      0       0      21        0.0%
   966                           ;!BITSFR21             0      0       0      22        0.0%
   967                           ;!SFR21                0      0       0      22        0.0%
   968                           ;!BITSFR22             0      0       0      23        0.0%
   969                           ;!SFR22                0      0       0      23        0.0%
   970                           ;!BITSFR23             0      0       0      24        0.0%
   971                           ;!SFR23                0      0       0      24        0.0%
   972                           ;!BITSFR24             0      0       0      25        0.0%
   973                           ;!SFR24                0      0       0      25        0.0%
   974                           ;!BITSFR25             0      0       0      26        0.0%
   975                           ;!SFR25                0      0       0      26        0.0%
   976                           ;!BITSFR26             0      0       0      27        0.0%
   977                           ;!SFR26                0      0       0      27        0.0%
   978                           ;!BITSFR27             0      0       0      28        0.0%
   979                           ;!SFR27                0      0       0      28        0.0%
   980                           ;!BITSFR28             0      0       0      29        0.0%
   981                           ;!SFR28                0      0       0      29        0.0%
   982                           ;!BITSFR29             0      0       0      30        0.0%
   983                           ;!SFR29                0      0       0      30        0.0%
   984                           ;!BITSFR30             0      0       0      31        0.0%
   985                           ;!SFR30                0      0       0      31        0.0%
   986                           ;!BITSFR31             0      0       0      32        0.0%
   987                           ;!SFR31                0      0       0      32        0.0%
   988                           
   989                           	global	_main
   990                           
   991 ;; *************** function _main *****************
   992 ;; Defined at:
   993 ;;		line 39 in file "main.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;		None
   998 ;; Return value:  Size  Location     Type
   999 ;;                  1    wreg      void 
  1000 ;; Registers used:
  1001 ;;		wreg, status,2, status,0, pclath, cstack
  1002 ;; Tracked objects:
  1003 ;;		On entry : B1F/0
  1004 ;;		On exit  : 0/0
  1005 ;;		Unchanged: 0/0
  1006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1007 ;;      Params:         0       0       0       0
  1008 ;;      Locals:         0       0       0       0
  1009 ;;      Temps:          0       0       0       0
  1010 ;;      Totals:         0       0       0       0
  1011 ;;Total ram usage:        0 bytes
  1012 ;; Hardware stack levels required when called:    2
  1013 ;; This function calls:
  1014 ;;		_getadc
  1015 ;;		_wait
  1016 ;;		_wdt_init
  1017 ;; This function is called by:
  1018 ;;		Startup code after reset
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1022                           	file	"main.c"
  1023                           	line	39
  1024                           global __pmaintext
  1025                           __pmaintext:	;psect for function _main
  1026  003E                     psect	maintext
  1027                           	file	"main.c"
  1028                           	line	39
  1029                           	global	__size_of_main
  1030                           	__size_of_main	equ	__end_of_main-_main
  1031  00C7                     	
  1032                           _main:	
  1033  003E                     ;incstack = 0
  1034                           	opt	stack 14
  1035                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1036                           	line	40
  1037                           	
  1038                           l739:	
  1039  003E                     ;main.c: 40:                 LATC1 = 1;
  1040                           	fcall	_wdt_init
  1041  003E  3181  212F  3180   	line	41
  1042                           	
  1043                           l741:	
  1044  0041                     ;main.c: 41:                 LATC0 = 1;
  1045                           	bsf	(95/8),(95)&7	;volatile
  1046  0041  178B               	line	43
  1047                           	
  1048                           l743:	
  1049  0042                     ;main.c: 43:                 LATC2 = 1;
  1050                           	movlb 1	; select bank1
  1051  0042  0021               	bsf	(1256/8)^080h,(1256)&7	;volatile
  1052  0043  141D               	line	44
  1053                           	
  1054                           l745:	
  1055  0044                     ;main.c: 44:                 LATC4 = 1;
  1056                           	bsf	(1271/8)^080h,(1271)&7	;volatile
  1057  0044  179E               	line	45
  1058                           	
  1059                           l747:	
  1060  0045                     ;main.c: 45:                 wait(250);
  1061                           	movf	(158)^080h,w	;volatile
  1062  0045  081E               	andlw	not (((1<<3)-1)<<4)
  1063  0046  398F               	iorlw	(06h & ((1<<3)-1))<<4
  1064  0047  3860               	movwf	(158)^080h	;volatile
  1065  0048  009E               	line	46
  1066                           	
  1067                           l749:	
  1068  0049                     ;main.c: 46:                 LATA4 = 1;
  1069                           	movf	(157)^080h,w	;volatile
  1070  0049  081D               	andlw	not (((1<<5)-1)<<2)
  1071  004A  3983               	iorlw	(02h & ((1<<5)-1))<<2
  1072  004B  3808               	movwf	(157)^080h	;volatile
  1073  004C  009D               	line	47
  1074                           	
  1075                           l751:	
  1076  004D                     ;main.c: 47:                 LATA5 = 1;
  1077                           	bcf	(1264/8)^080h,(1264)&7	;volatile
  1078  004D  101E               	line	48
  1079                           	
  1080                           l753:	
  1081  004E                     ;main.c: 48:                 wait(250);
  1082                           	bcf	(1265/8)^080h,(1265)&7	;volatile
  1083  004E  109E               	line	50
  1084                           	
  1085                           l755:	
  1086  004F                     ;main.c: 50:                 LATA4 = 0;
  1087                           	clrf	(140)^080h	;volatile
  1088  004F  018C               	line	51
  1089                           	
  1090                           l757:	
  1091  0050                     ;main.c: 51:                 wait(250);
  1092                           	clrf	(142)^080h	;volatile
  1093  0050  018E               	line	52
  1094                           	
  1095                           l759:	
  1096  0051                     ;main.c: 52:                 LATC2 = 0;
  1097                           	bsf	(1122/8)^080h,(1122)&7	;volatile
  1098  0051  150C               	line	53
  1099                           	
  1100                           l761:	
  1101  0052                     ;main.c: 53:                 LATC4 = 0;
  1102                           	bsf	(1139/8)^080h,(1139)&7	;volatile
  1103  0052  158E               	line	54
  1104                           	
  1105                           l763:	
  1106  0053                     ;main.c: 54:                 wait(250);
  1107                           	movlb 2	; select bank2
  1108  0053  0022               	clrf	(268)^0100h	;volatile
  1109  0054  018C               	line	55
  1110                           	
  1111                           l765:	
  1112  0055                     ;main.c: 55:                 LATC1 = 0;
  1113                           	clrf	(270)^0100h	;volatile
  1114  0055  018E               	line	56
  1115                           	
  1116                           l767:	
  1117  0056                     ;main.c: 56:                 LATC0 = 0;
  1118                           	movlb 3	; select bank3
  1119  0056  0023               	bsf	(3170/8)^0180h,(3170)&7	;volatile
  1120  0057  150C               	line	57
  1121                           	
  1122                           l769:	
  1123  0058                     ;main.c: 57:                 wait(250);
  1124                           	bcf	(3187/8)^0180h,(3187)&7	;volatile
  1125  0058  118E               	goto	l771
  1126  0059  285A               	line	58
  1127                           ;main.c: 58:                 LATA0 = 0;
  1128                           	
  1129                           l83:	
  1130  005A                     	line	60
  1131                           	
  1132                           l771:	
  1133  005A                     ;main.c: 60:                 wait(2000);
  1134                           	fcall	_getadc
  1135  005A  3181  2121  3180   	movf	(1+(?_getadc)),w
  1136  005D  087A               	movwf	(_vadc+1)
  1137  005E  00FC               	movf	(0+(?_getadc)),w
  1138  005F  0879               	movwf	(_vadc)
  1139  0060  00FB               	line	62
  1140                           	
  1141                           l773:	
  1142  0061                     ;main.c: 62:             else{
  1143                           	movlw	0
  1144  0061  3000               	subwf	(_vadc+1),w
  1145  0062  027C               	movlw	08Ah
  1146  0063  308A               	skipnz
  1147  0064  1903               	subwf	(_vadc),w
  1148  0065  027B               	skipnc
  1149  0066  1803               	goto	u101
  1150  0067  2869               	goto	u100
  1151  0068  286A               u101:
  1152  0069                     	goto	l839
  1153  0069  28FA               u100:
  1154  006A                     	line	64
  1155                           	
  1156                           l775:	
  1157  006A                     ;main.c: 64:                 LATA1 = 1;
  1158                           	movlb 0	; select bank0
  1159  006A  0020               	btfss	(115/8),(115)&7	;volatile
  1160  006B  1D8E               	goto	u111
  1161  006C  286E               	goto	u110
  1162  006D  286F               u111:
  1163  006E                     	goto	l85
  1164  006E  28C0               u110:
  1165  006F                     	line	65
  1166                           	
  1167                           l777:	
  1168  006F                     ;main.c: 65:                 wait(250);
  1169                           	movlb 2	; select bank2
  1170  006F  0022               	bsf	(2144/8)^0100h,(2144)&7	;volatile
  1171  0070  140C               	line	66
  1172                           ;main.c: 66:                 LATA0 = 0;
  1173                           	bsf	(2145/8)^0100h,(2145)&7	;volatile
  1174  0071  148C               	line	67
  1175                           	
  1176                           l779:	
  1177  0072                     ;main.c: 67:                 LATA1 = 0;
  1178                           	movlw	0FAh
  1179  0072  30FA               	movwf	(wait@ms)
  1180  0073  00F9               	movlw	0
  1181  0074  3000               	movwf	((wait@ms))+1
  1182  0075  00FA               	fcall	_wait
  1183  0076  3181  2105  3180   	line	68
  1184                           	
  1185                           l781:	
  1186  0079                     ;main.c: 68:                 LATC1 = 1;
  1187                           	movlb 2	; select bank2
  1188  0079  0022               	bsf	(2161/8)^0100h,(2161)&7	;volatile
  1189  007A  148E               	line	69
  1190                           	
  1191                           l783:	
  1192  007B                     ;main.c: 69:                 LATC0 = 1;
  1193                           	bsf	(2160/8)^0100h,(2160)&7	;volatile
  1194  007B  140E               	line	70
  1195                           ;main.c: 70:                 wait(250);
  1196                           	movlw	0FAh
  1197  007C  30FA               	movwf	(wait@ms)
  1198  007D  00F9               	movlw	0
  1199  007E  3000               	movwf	((wait@ms))+1
  1200  007F  00FA               	fcall	_wait
  1201  0080  3181  2105  3180   	line	71
  1202                           	
  1203                           l785:	
  1204  0083                     ;main.c: 71:                 LATC1 = 0;
  1205                           	movlb 2	; select bank2
  1206  0083  0022               	bsf	(2162/8)^0100h,(2162)&7	;volatile
  1207  0084  150E               	line	72
  1208                           	
  1209                           l787:	
  1210  0085                     ;main.c: 72:                 LATC0 = 0;
  1211                           	bsf	(2164/8)^0100h,(2164)&7	;volatile
  1212  0085  160E               	line	73
  1213                           ;main.c: 73:                 LATC2 = 1;
  1214                           	movlw	0FAh
  1215  0086  30FA               	movwf	(wait@ms)
  1216  0087  00F9               	movlw	0
  1217  0088  3000               	movwf	((wait@ms))+1
  1218  0089  00FA               	fcall	_wait
  1219  008A  3181  2105  3180   	line	74
  1220                           	
  1221                           l789:	
  1222  008D                     ;main.c: 74:                 LATC4 = 1;
  1223                           	movlb 2	; select bank2
  1224  008D  0022               	bsf	(2148/8)^0100h,(2148)&7	;volatile
  1225  008E  160C               	line	75
  1226                           	
  1227                           l791:	
  1228  008F                     ;main.c: 75:                 wait(250);
  1229                           	bsf	(2149/8)^0100h,(2149)&7	;volatile
  1230  008F  168C               	line	76
  1231                           ;main.c: 76:                 LATC2 = 0;
  1232                           	movlw	0FAh
  1233  0090  30FA               	movwf	(wait@ms)
  1234  0091  00F9               	movlw	0
  1235  0092  3000               	movwf	((wait@ms))+1
  1236  0093  00FA               	fcall	_wait
  1237  0094  3181  2105  3180   	line	77
  1238                           	
  1239                           l793:	
  1240  0097                     ;main.c: 77:                 LATC4 = 0;
  1241                           	movlb 2	; select bank2
  1242  0097  0022               	bcf	(2149/8)^0100h,(2149)&7	;volatile
  1243  0098  128C               	line	78
  1244                           	
  1245                           l795:	
  1246  0099                     ;main.c: 78:                 LATA4 = 1;
  1247                           	bcf	(2148/8)^0100h,(2148)&7	;volatile
  1248  0099  120C               	line	79
  1249                           ;main.c: 79:                 LATA5 = 1;
  1250                           	movlw	0FAh
  1251  009A  30FA               	movwf	(wait@ms)
  1252  009B  00F9               	movlw	0
  1253  009C  3000               	movwf	((wait@ms))+1
  1254  009D  00FA               	fcall	_wait
  1255  009E  3181  2105  3180   	line	80
  1256                           	
  1257                           l797:	
  1258  00A1                     ;main.c: 80:                 wait(250);
  1259                           	movlb 2	; select bank2
  1260  00A1  0022               	bcf	(2162/8)^0100h,(2162)&7	;volatile
  1261  00A2  110E               	line	81
  1262                           	
  1263                           l799:	
  1264  00A3                     ;main.c: 81:                 LATA5 = 0;
  1265                           	bcf	(2164/8)^0100h,(2164)&7	;volatile
  1266  00A3  120E               	line	82
  1267                           ;main.c: 82:                 LATA4 = 0;
  1268                           	movlw	0FAh
  1269  00A4  30FA               	movwf	(wait@ms)
  1270  00A5  00F9               	movlw	0
  1271  00A6  3000               	movwf	((wait@ms))+1
  1272  00A7  00FA               	fcall	_wait
  1273  00A8  3181  2105  3180   	line	83
  1274                           	
  1275                           l801:	
  1276  00AB                     ;main.c: 83:                 wait(2000);
  1277                           	movlb 2	; select bank2
  1278  00AB  0022               	bcf	(2161/8)^0100h,(2161)&7	;volatile
  1279  00AC  108E               	line	84
  1280                           	
  1281                           l803:	
  1282  00AD                     ;main.c: 84:             }
  1283                           	bcf	(2160/8)^0100h,(2160)&7	;volatile
  1284  00AD  100E               	line	85
  1285                           ;main.c: 85:         }
  1286                           	movlw	0FAh
  1287  00AE  30FA               	movwf	(wait@ms)
  1288  00AF  00F9               	movlw	0
  1289  00B0  3000               	movwf	((wait@ms))+1
  1290  00B1  00FA               	fcall	_wait
  1291  00B2  3181  2105  3180   	line	86
  1292                           	
  1293                           l805:	
  1294  00B5                     ;main.c: 86:         else{
  1295                           	movlb 2	; select bank2
  1296  00B5  0022               	bcf	(2144/8)^0100h,(2144)&7	;volatile
  1297  00B6  100C               	line	87
  1298                           	
  1299                           l807:	
  1300  00B7                     ;main.c: 87:             wait(2000);
  1301                           	bcf	(2145/8)^0100h,(2145)&7	;volatile
  1302  00B7  108C               	line	88
  1303                           ;main.c: 88:         }
  1304                           	movlw	0D0h
  1305  00B8  30D0               	movwf	(wait@ms)
  1306  00B9  00F9               	movlw	07h
  1307  00BA  3007               	movwf	((wait@ms))+1
  1308  00BB  00FA               	fcall	_wait
  1309  00BC  3181  2105  3180   	line	89
  1310                           ;main.c: 89:     }
  1311                           	goto	l771
  1312  00BF  285A               	line	90
  1313                           ;main.c: 90: }
  1314                           	
  1315                           l85:	
  1316  00C0                     	line	91
  1317                           ;main.c: 91: void wdt_init(void){
  1318                           	movlb 2	; select bank2
  1319  00C0  0022               	bsf	(2144/8)^0100h,(2144)&7	;volatile
  1320  00C1  140C               	line	92
  1321                           ;main.c: 92: 
  1322                           	bsf	(2145/8)^0100h,(2145)&7	;volatile
  1323  00C2  148C               	line	93
  1324                           	
  1325                           l809:	
  1326  00C3                     ;main.c: 93: }
  1327                           	movlw	0FAh
  1328  00C3  30FA               	movwf	(wait@ms)
  1329  00C4  00F9               	movlw	0
  1330  00C5  3000               	movwf	((wait@ms))+1
  1331  00C6  00FA               	fcall	_wait
  1332  00C7  3181  2105  3180   	line	94
  1333                           	
  1334                           l811:	
  1335  00CA                     ;main.c: 94: unsigned int getadc(){
  1336                           	movlb 2	; select bank2
  1337  00CA  0022               	bcf	(2144/8)^0100h,(2144)&7	;volatile
  1338  00CB  100C               	line	95
  1339                           	
  1340                           l813:	
  1341  00CC                     ;main.c: 95:     ADGO = 1;
  1342                           	bcf	(2145/8)^0100h,(2145)&7	;volatile
  1343  00CC  108C               	line	96
  1344                           	
  1345                           l815:	
  1346  00CD                     ;main.c: 96:     while(ADGO);
  1347                           	bsf	(2161/8)^0100h,(2161)&7	;volatile
  1348  00CD  148E               	line	97
  1349                           	
  1350                           l817:	
  1351  00CE                     ;main.c: 97:     return (unsigned int)((ADRESH<<8)|ADRESL );
  1352                           	bsf	(2160/8)^0100h,(2160)&7	;volatile
  1353  00CE  140E               	line	98
  1354                           ;main.c: 98: }
  1355                           	movlw	0FAh
  1356  00CF  30FA               	movwf	(wait@ms)
  1357  00D0  00F9               	movlw	0
  1358  00D1  3000               	movwf	((wait@ms))+1
  1359  00D2  00FA               	fcall	_wait
  1360  00D3  3181  2105  3180   	line	99
  1361                           	
  1362                           l819:	
  1363  00D6                     ;main.c: 99: 
  1364                           	movlb 2	; select bank2
  1365  00D6  0022               	bcf	(2161/8)^0100h,(2161)&7	;volatile
  1366  00D7  108E               	line	100
  1367                           	
  1368                           l821:	
  1369  00D8                     ;main.c: 100: void wait(int ms){
  1370                           	bcf	(2160/8)^0100h,(2160)&7	;volatile
  1371  00D8  100E               	line	101
  1372                           	
  1373                           l823:	
  1374  00D9                     ;main.c: 101:     waitOK = 0;
  1375                           	bsf	(2162/8)^0100h,(2162)&7	;volatile
  1376  00D9  150E               	line	102
  1377                           	
  1378                           l825:	
  1379  00DA                     ;main.c: 102:     T0CS = 0;
  1380                           	bsf	(2164/8)^0100h,(2164)&7	;volatile
  1381  00DA  160E               	line	103
  1382                           ;main.c: 103:     PSA = 1;
  1383                           	movlw	0FAh
  1384  00DB  30FA               	movwf	(wait@ms)
  1385  00DC  00F9               	movlw	0
  1386  00DD  3000               	movwf	((wait@ms))+1
  1387  00DE  00FA               	fcall	_wait
  1388  00DF  3181  2105  3180   	line	104
  1389                           	
  1390                           l827:	
  1391  00E2                     ;main.c: 104:     T0IF = 0;
  1392                           	movlb 2	; select bank2
  1393  00E2  0022               	bcf	(2162/8)^0100h,(2162)&7	;volatile
  1394  00E3  110E               	line	105
  1395                           	
  1396                           l829:	
  1397  00E4                     ;main.c: 105:     T0IE = 1;
  1398                           	bcf	(2164/8)^0100h,(2164)&7	;volatile
  1399  00E4  120E               	line	106
  1400                           	
  1401                           l831:	
  1402  00E5                     ;main.c: 106:     timebase = 0xAA;
  1403                           	bsf	(2148/8)^0100h,(2148)&7	;volatile
  1404  00E5  160C               	line	107
  1405                           	
  1406                           l833:	
  1407  00E6                     ;main.c: 107:     times = ms;
  1408                           	bsf	(2149/8)^0100h,(2149)&7	;volatile
  1409  00E6  168C               	line	108
  1410                           ;main.c: 108:     TMR0 = timebase;
  1411                           	movlw	0FAh
  1412  00E7  30FA               	movwf	(wait@ms)
  1413  00E8  00F9               	movlw	0
  1414  00E9  3000               	movwf	((wait@ms))+1
  1415  00EA  00FA               	fcall	_wait
  1416  00EB  3181  2105  3180   	line	109
  1417                           	
  1418                           l835:	
  1419  00EE                     ;main.c: 109:     while(!waitOK);
  1420                           	movlb 2	; select bank2
  1421  00EE  0022               	bcf	(2149/8)^0100h,(2149)&7	;volatile
  1422  00EF  128C               	line	110
  1423                           	
  1424                           l837:	
  1425  00F0                     ;main.c: 110: }
  1426                           	bcf	(2148/8)^0100h,(2148)&7	;volatile
  1427  00F0  120C               	line	111
  1428                           	movlw	0D0h
  1429  00F1  30D0               	movwf	(wait@ms)
  1430  00F2  00F9               	movlw	07h
  1431  00F3  3007               	movwf	((wait@ms))+1
  1432  00F4  00FA               	fcall	_wait
  1433  00F5  3181  2105  3180   	goto	l771
  1434  00F8  285A               	line	112
  1435                           	
  1436                           l86:	
  1437  00F9                     	line	113
  1438                           	goto	l771
  1439  00F9  285A               	line	114
  1440                           	
  1441                           l84:	
  1442  00FA                     	line	115
  1443                           	
  1444                           l839:	
  1445  00FA                     	movlw	0D0h
  1446  00FA  30D0               	movwf	(wait@ms)
  1447  00FB  00F9               	movlw	07h
  1448  00FC  3007               	movwf	((wait@ms))+1
  1449  00FD  00FA               	fcall	_wait
  1450  00FE  3181  2105  3180   	goto	l771
  1451  0101  285A               	line	116
  1452                           	
  1453                           l87:	
  1454  0102                     	goto	l771
  1455  0102  285A               	line	117
  1456                           	
  1457                           l88:	
  1458  0103                     	goto	l771
  1459  0103  285A               	
  1460                           l89:	
  1461  0104                     	line	118
  1462                           	
  1463                           l90:	
  1464  0104                     	global	start
  1465                           	ljmp	start
  1466  0104  2832               	opt stack 0
  1467                           GLOBAL	__end_of_main
  1468                           	__end_of_main:
  1469  0105                     	signat	_main,89
  1470                           	global	_wdt_init
  1471                           
  1472 ;; *************** function _wdt_init *****************
  1473 ;; Defined at:
  1474 ;;		line 119 in file "main.c"
  1475 ;; Parameters:    Size  Location     Type
  1476 ;;		None
  1477 ;; Auto vars:     Size  Location     Type
  1478 ;;		None
  1479 ;; Return value:  Size  Location     Type
  1480 ;;                  1    wreg      void 
  1481 ;; Registers used:
  1482 ;;		None
  1483 ;; Tracked objects:
  1484 ;;		On entry : 0/0
  1485 ;;		On exit  : 0/0
  1486 ;;		Unchanged: 0/0
  1487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1488 ;;      Params:         0       0       0       0
  1489 ;;      Locals:         0       0       0       0
  1490 ;;      Temps:          0       0       0       0
  1491 ;;      Totals:         0       0       0       0
  1492 ;;Total ram usage:        0 bytes
  1493 ;; Hardware stack levels used:    1
  1494 ;; Hardware stack levels required when called:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		_main
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1502                           	line	119
  1503                           global __ptext1
  1504                           __ptext1:	;psect for function _wdt_init
  1505  012F                     psect	text1
  1506                           	file	"main.c"
  1507                           	line	119
  1508                           	global	__size_of_wdt_init
  1509                           	__size_of_wdt_init	equ	__end_of_wdt_init-_wdt_init
  1510  0001                     	
  1511                           _wdt_init:	
  1512  012F                     ;incstack = 0
  1513                           	opt	stack 14
  1514                           ; Regs used in _wdt_init: []
  1515                           	line	121
  1516                           	
  1517                           l93:	
  1518  012F                     	return
  1519  012F  0008               	opt stack 0
  1520                           GLOBAL	__end_of_wdt_init
  1521                           	__end_of_wdt_init:
  1522  0130                     	signat	_wdt_init,89
  1523                           	global	_wait
  1524                           
  1525 ;; *************** function _wait *****************
  1526 ;; Defined at:
  1527 ;;		line 128 in file "main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;  ms              2    1[COMMON] int 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1541 ;;      Params:         2       0       0       0
  1542 ;;      Locals:         0       0       0       0
  1543 ;;      Temps:          0       0       0       0
  1544 ;;      Totals:         2       0       0       0
  1545 ;;Total ram usage:        2 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    1
  1548 ;; This function calls:
  1549 ;;		Nothing
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1555                           	line	128
  1556                           global __ptext2
  1557                           __ptext2:	;psect for function _wait
  1558  0105                     psect	text2
  1559                           	file	"main.c"
  1560                           	line	128
  1561                           	global	__size_of_wait
  1562                           	__size_of_wait	equ	__end_of_wait-_wait
  1563  001C                     	
  1564                           _wait:	
  1565  0105                     ;incstack = 0
  1566                           	opt	stack 14
  1567                           ; Regs used in _wait: [wreg+status,2+status,0]
  1568                           	line	129
  1569                           	
  1570                           l721:	
  1571  0105                     	clrf	(_waitOK)
  1572  0105  01F6               	clrf	(_waitOK+1)
  1573  0106  01F7               	line	130
  1574                           	
  1575                           l723:	
  1576  0107                     	movlb 1	; select bank1
  1577  0107  0021               	bcf	(1197/8)^080h,(1197)&7	;volatile
  1578  0108  1295               	line	131
  1579                           	
  1580                           l725:	
  1581  0109                     	bsf	(1195/8)^080h,(1195)&7	;volatile
  1582  0109  1595               	line	132
  1583                           	
  1584                           l727:	
  1585  010A                     	bcf	(90/8),(90)&7	;volatile
  1586  010A  110B               	line	133
  1587                           	
  1588                           l729:	
  1589  010B                     	bsf	(93/8),(93)&7	;volatile
  1590  010B  168B               	line	134
  1591                           	
  1592                           l731:	
  1593  010C                     	movlw	0AAh
  1594  010C  30AA               	movwf	(_timebase)
  1595  010D  00F4               	movlw	0
  1596  010E  3000               	movwf	((_timebase))+1
  1597  010F  00F5               	line	135
  1598                           	
  1599                           l733:	
  1600  0110                     	movf	(wait@ms+1),w
  1601  0110  087A               	movwf	(_times+1)
  1602  0111  00F3               	movf	(wait@ms),w
  1603  0112  0879               	movwf	(_times)
  1604  0113  00F2               	line	136
  1605                           	
  1606                           l735:	
  1607  0114                     	movf	(_timebase),w
  1608  0114  0874               	movlb 0	; select bank0
  1609  0115  0020               	movwf	(21)	;volatile
  1610  0116  0095               	line	137
  1611                           	goto	l737
  1612  0117  2919               	
  1613                           l103:	
  1614  0118                     	goto	l737
  1615  0118  2919               	
  1616                           l102:	
  1617  0119                     	
  1618                           l737:	
  1619  0119                     	movf	((_waitOK)),w
  1620  0119  0876               iorwf	((_waitOK+1)),w
  1621  011A  0477               	btfsc	status,2
  1622  011B  1903               	goto	u91
  1623  011C  291E               	goto	u90
  1624  011D  291F               u91:
  1625  011E                     	goto	l737
  1626  011E  2919               u90:
  1627  011F                     	goto	l105
  1628  011F  2920               	
  1629                           l104:	
  1630  0120                     	line	138
  1631                           	
  1632                           l105:	
  1633  0120                     	return
  1634  0120  0008               	opt stack 0
  1635                           GLOBAL	__end_of_wait
  1636                           	__end_of_wait:
  1637  0121                     	signat	_wait,4217
  1638                           	global	_getadc
  1639                           
  1640 ;; *************** function _getadc *****************
  1641 ;; Defined at:
  1642 ;;		line 122 in file "main.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  2    1[COMMON] unsigned int 
  1649 ;; Registers used:
  1650 ;;		wreg
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1656 ;;      Params:         2       0       0       0
  1657 ;;      Locals:         0       0       0       0
  1658 ;;      Temps:          0       0       0       0
  1659 ;;      Totals:         2       0       0       0
  1660 ;;Total ram usage:        2 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    1
  1663 ;; This function calls:
  1664 ;;		Nothing
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1670                           	line	122
  1671                           global __ptext3
  1672                           __ptext3:	;psect for function _getadc
  1673  0121                     psect	text3
  1674                           	file	"main.c"
  1675                           	line	122
  1676                           	global	__size_of_getadc
  1677                           	__size_of_getadc	equ	__end_of_getadc-_getadc
  1678  000E                     	
  1679                           _getadc:	
  1680  0121                     ;incstack = 0
  1681                           	opt	stack 14
  1682                           ; Regs used in _getadc: [wreg]
  1683                           	line	123
  1684                           	
  1685                           l715:	
  1686  0121                     	movlb 1	; select bank1
  1687  0121  0021               	bsf	(1257/8)^080h,(1257)&7	;volatile
  1688  0122  149D               	line	124
  1689                           	goto	l96
  1690  0123  2924               	
  1691                           l97:	
  1692  0124                     	
  1693                           l96:	
  1694  0124                     	btfsc	(1257/8)^080h,(1257)&7	;volatile
  1695  0124  189D               	goto	u81
  1696  0125  2927               	goto	u80
  1697  0126  2928               u81:
  1698  0127                     	goto	l96
  1699  0127  2924               u80:
  1700  0128                     	goto	l717
  1701  0128  2929               	
  1702                           l98:	
  1703  0129                     	line	125
  1704                           	
  1705                           l717:	
  1706  0129                     	movf	(156)^080h,w	;volatile
  1707  0129  081C               	movwf	(?_getadc+1)
  1708  012A  00FA               	movf	(155)^080h,w	;volatile
  1709  012B  081B               	movwf	(?_getadc)
  1710  012C  00F9               	goto	l99
  1711  012D  292E               	
  1712                           l719:	
  1713  012E                     	line	126
  1714                           	
  1715                           l99:	
  1716  012E                     	return
  1717  012E  0008               	opt stack 0
  1718                           GLOBAL	__end_of_getadc
  1719                           	__end_of_getadc:
  1720  012F                     	signat	_getadc,90
  1721                           	global	_isr
  1722                           
  1723 ;; *************** function _isr *****************
  1724 ;; Defined at:
  1725 ;;		line 5 in file "int.c"
  1726 ;; Parameters:    Size  Location     Type
  1727 ;;		None
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  1    wreg      void 
  1732 ;; Registers used:
  1733 ;;		wreg, status,2
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1739 ;;      Params:         0       0       0       0
  1740 ;;      Locals:         0       0       0       0
  1741 ;;      Temps:          1       0       0       0
  1742 ;;      Totals:         1       0       0       0
  1743 ;;Total ram usage:        1 bytes
  1744 ;; Hardware stack levels used:    1
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		Interrupt level 1
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           psect	intentry,class=CODE,delta=2
  1752                           global __pintentry
  1753                           __pintentry:
  1754  0004                     psect	intentry
  1755                           	file	"int.c"
  1756                           	line	5
  1757                           	global	__size_of_isr
  1758                           	__size_of_isr	equ	__end_of_isr-_isr
  1759  002E                     	
  1760                           _isr:	
  1761  0004                     ;incstack = 0
  1762                           	opt	stack 14
  1763                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  1764  0004  147E               ; Regs used in _isr: [wreg+status,2]
  1765                           psect	intentry
  1766                           	pagesel	$
  1767  0005  3180               	line	7
  1768                           	
  1769                           i1l699:	
  1770  0006                     ;int.c: 7:     if(ADIF){
  1771                           	movlb 0	; select bank0
  1772  0006  0020               	btfss	(142/8),(142)&7	;volatile
  1773  0007  1F11               	goto	u5_21
  1774  0008  280A               	goto	u5_20
  1775  0009  280B               u5_21:
  1776  000A                     	goto	i1l124
  1777  000A  280C               u5_20:
  1778  000B                     	line	8
  1779                           	
  1780                           i1l701:	
  1781  000B                     ;int.c: 8:         ADIF = 0;
  1782                           	bcf	(142/8),(142)&7	;volatile
  1783  000B  1311               	line	9
  1784                           ;int.c: 9:     }
  1785                           	
  1786                           i1l124:	
  1787  000C                     	line	11
  1788                           ;int.c: 10:     static int n = 0;;int.c: 11:     if(T0IF){
  1789                           	btfss	(90/8),(90)&7	;volatile
  1790  000C  1D0B               	goto	u6_21
  1791  000D  280F               	goto	u6_20
  1792  000E  2810               u6_21:
  1793  000F                     	goto	i1l130
  1794  000F  2830               u6_20:
  1795  0010                     	line	12
  1796                           	
  1797                           i1l703:	
  1798  0010                     ;int.c: 12:         if(n<times){
  1799                           	movf	(isr@n+1),w
  1800  0010  0871               	xorlw	80h
  1801  0011  3A80               	movwf	(??_isr+0)+0
  1802  0012  00F8               	movf	(_times+1),w
  1803  0013  0873               	xorlw	80h
  1804  0014  3A80               	subwf	(??_isr+0)+0,w
  1805  0015  0278               	skipz
  1806  0016  1D03               	goto	u7_25
  1807  0017  281A               	movf	(_times),w
  1808  0018  0872               	subwf	(isr@n),w
  1809  0019  0270               u7_25:
  1810  001A                     
  1811                           	skipnc
  1812  001A  1803               	goto	u7_21
  1813  001B  281D               	goto	u7_20
  1814  001C  281E               u7_21:
  1815  001D                     	goto	i1l711
  1816  001D  2828               u7_20:
  1817  001E                     	line	13
  1818                           	
  1819                           i1l705:	
  1820  001E                     ;int.c: 13:             n++;
  1821                           	movlw	01h
  1822  001E  3001               	addwf	(isr@n),f
  1823  001F  07F0               	movlw	0
  1824  0020  3000               	addwfc	(isr@n+1),f
  1825  0021  3DF1               	line	14
  1826                           	
  1827                           i1l707:	
  1828  0022                     ;int.c: 14:             T0IF = 0;
  1829                           	bcf	(90/8),(90)&7	;volatile
  1830  0022  110B               	line	15
  1831                           	
  1832                           i1l709:	
  1833  0023                     ;int.c: 15:             T0IE = 1;
  1834                           	bsf	(93/8),(93)&7	;volatile
  1835  0023  168B               	line	16
  1836                           ;int.c: 16:             TMR0 = timebase;
  1837                           	movf	(_timebase),w
  1838  0024  0874               	movlb 0	; select bank0
  1839  0025  0020               	movwf	(21)	;volatile
  1840  0026  0095               	line	17
  1841                           ;int.c: 17:         }
  1842                           	goto	i1l130
  1843  0027  2830               	line	18
  1844                           ;int.c: 18:         else{
  1845                           	
  1846                           i1l128:	
  1847  0028                     	line	19
  1848                           	
  1849                           i1l711:	
  1850  0028                     ;int.c: 19:             n = 0;
  1851                           	clrf	(isr@n)
  1852  0028  01F0               	clrf	(isr@n+1)
  1853  0029  01F1               	line	20
  1854                           	
  1855                           i1l713:	
  1856  002A                     ;int.c: 20:             waitOK = 1;
  1857                           	movlw	01h
  1858  002A  3001               	movwf	(_waitOK)
  1859  002B  00F6               	movlw	0
  1860  002C  3000               	movwf	((_waitOK))+1
  1861  002D  00F7               	goto	i1l130
  1862  002E  2830               	line	21
  1863                           ;int.c: 21:         }
  1864                           	
  1865                           i1l129:	
  1866  002F                     	goto	i1l130
  1867  002F  2830               	line	22
  1868                           ;int.c: 22:     }
  1869                           	
  1870                           i1l127:	
  1871  0030                     	line	23
  1872                           	
  1873                           i1l130:	
  1874  0030                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  1875  0030  107E               	retfie
  1876  0031  0009               	opt stack 0
  1877                           GLOBAL	__end_of_isr
  1878                           	__end_of_isr:
  1879  0032                     	signat	_isr,89
  1880                           global	___latbits
  1881                           ___latbits	equ	0
  1882  0000                     	global	btemp
  1883                           	btemp set 07Eh
  1884  007E                     
  1885                           	DABS	1,126,2	;btemp
  1886                           	global	int$flags
  1887                           	int$flags	set btemp
  1888  007E                     	global	wtemp0
  1889                           	wtemp0 set btemp+0
  1890  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_getadc
    _main->_wait

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1086
                             _getadc
                               _wait
                           _wdt_init
 ---------------------------------------------------------------------------------
 (1) _wdt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait                                                 2     0      2    1086
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _getadc                                               2     0      2       0
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getadc
   _wait
   _wdt_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      3       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0       D      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jul 25 14:46:14 2018

            __CFG_CP$OFF 0000                       l90 0104                       l83 005A  
                     l84 00FA                       l93 012F                       l85 00C0  
                     l86 00F9                       l87 0102                       l96 0124  
                     l88 0103                       l97 0124                       l89 0104  
                     l98 0129                       l99 012E                       u80 0128  
                     u81 0127                       u90 011F                       u91 011E  
            __CFG_LVP$ON 0000                      l102 0119                      l103 0118  
                    l104 0120                      l105 0120                      l721 0105  
                    l801 00AB                      l715 0121                      l731 010C  
                    l723 0107                      l811 00CA                      l803 00AD  
                    l717 0129                      l733 0110                      l725 0109  
                    l821 00D8                      l813 00CC                      l805 00B5  
                    l741 0041                      l719 012E                      l735 0114  
                    l727 010A                      l831 00E5                      l823 00D9  
                    l815 00CD                      l807 00B7                      l751 004D  
                    l743 0042                      l737 0119                      l729 010B  
                    l833 00E6                      l825 00DA                      l817 00CE  
                    l809 00C3                      l761 0052                      l753 004E  
                    l745 0044                      l835 00EE                      l827 00E2  
                    l819 00D6                      l771 005A                      l763 0053  
                    l755 004F                      l747 0045                      l739 003E  
                    l837 00F0                      l829 00E4                      l781 0079  
                    l773 0061                      l765 0055                      l757 0050  
                    l749 0049                      l791 008F                      l783 007B  
                    l775 006A                      l839 00FA                      l767 0056  
                    l759 0051                      l793 0097                      l785 0083  
                    l777 006F                      l769 0058                      l795 0099  
                    l787 0085                      l779 0072                      l797 00A1  
                    l789 008D                      l799 00A3                      _GIE 005F  
                    _RC3 0073                      u100 006A                      u101 0069  
                    u110 006F                      u111 006E                      _PSA 04AB  
                    _isr 0004             __CFG_BORV$LO 0000                     _ADIF 008E  
                   _ADFM 04F7                     ?_isr 0078                     _ADGO 04E9  
                   _ADON 04E8                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 04AD                     _LATA 010C                     _LATC 010E  
                   _TMR0 0015                     u5_20 000B                     u5_21 000A  
                   u6_20 0010                     u6_21 000F                     u7_20 001E  
                   u7_21 001D                     u7_25 001A             __CFG_WRT$OFF 0000  
                   _main 003E                     _vadc 007B                     _wait 0105  
                   btemp 007E                     isr@n 0070                     start 0032  
          __CFG_MCLRE$ON 0000                    ??_isr 0078            __CFG_PLLEN$ON 0000  
                  ?_main 0078            __CFG_WDTE$OFF 0000                    ?_wait 0079  
                  _ANSA2 0C62                    _ANSC3 0C73                    _LATA0 0860  
                  _LATA1 0861                    _LATC0 0870                    _LATA4 0864  
                  _LATC1 0871                    _LATA5 0865                    _LATC2 0872  
                  _LATC4 0874                    i1l130 0030                    i1l124 000C  
                  i1l127 0030                    i1l128 0028                    i1l129 002F  
                  i1l701 000B                    i1l711 0028                    i1l703 0010  
                  i1l713 002A                    i1l705 001E                    i1l707 0022  
                  i1l709 0023                    i1l699 0006                    _TRISA 008C  
                  _TRISC 008E                    _times 0072           __CFG_BOREN$OFF 0000  
                  status 0003                    wtemp0 007E          __initialization 0033  
           __end_of_main 0105             __end_of_wait 0121           __CFG_LPBOR$OFF 0000  
                 ??_main 007B                   ??_wait 007B                   _ADRESH 009C  
                 _ADRESL 009B           __CFG_ZCDDIS$ON 0000                   _TRISA2 0462  
                 _TRISC3 0473           __CFG_PWRTE$OFF 0000           __CFG_STVREN$ON 0000  
                 _getadc 0121                   _waitOK 0076                   wait@ms 0079  
       __end_of_wdt_init 0130  __end_of__initialization 003B           __pcstackCOMMON 0078  
             __pnvCOMMON 007B               __pmaintext 003E          __CFG_PPS1WAY$ON 0000  
             __pintentry 0004                  ?_getadc 0079                  _ADPREF0 04F0  
                _ADPREF1 04F1                ?_wdt_init 0078          __size_of_getadc 000E  
                __ptext1 012F                  __ptext2 0105                  __ptext3 0121  
           __size_of_isr 002E     end_of_initialization 003B               ??_wdt_init 0079  
       __CFG_FOSC$INTOSC 0000           __end_of_getadc 012F      start_initialization 0033  
            __end_of_isr 0032                 ??_getadc 007B              __pbssCOMMON 0070  
              ___latbits 0000        __size_of_wdt_init 0001               _ADCON0bits 009D  
             _ADCON1bits 009E            __size_of_main 00C7            __size_of_wait 001C  
               _timebase 0074                 int$flags 007E                 _wdt_init 012F  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
