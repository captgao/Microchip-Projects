

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Aug 06 22:45:58 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1703 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   120                           PORTC equ 0Eh ;# 
   121  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   122                           PIR1 equ 011h ;# 
   123  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   124                           PIR2 equ 012h ;# 
   125  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   126                           PIR3 equ 013h ;# 
   127  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   128                           TMR0 equ 015h ;# 
   129  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   130                           TMR1 equ 016h ;# 
   131  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   132                           TMR1L equ 016h ;# 
   133  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   134                           TMR1H equ 017h ;# 
   135  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   136                           T1CON equ 018h ;# 
   137  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   138                           T1GCON equ 019h ;# 
   139  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   140                           TMR2 equ 01Ah ;# 
   141  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   142                           PR2 equ 01Bh ;# 
   143  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   144                           T2CON equ 01Ch ;# 
   145  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   148                           TRISC equ 08Eh ;# 
   149  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   150                           PIE1 equ 091h ;# 
   151  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   152                           PIE2 equ 092h ;# 
   153  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   154                           PIE3 equ 093h ;# 
   155  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   156                           OPTION_REG equ 095h ;# 
   157  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   158                           PCON equ 096h ;# 
   159  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   160                           WDTCON equ 097h ;# 
   161  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   162                           OSCTUNE equ 098h ;# 
   163  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   164                           OSCCON equ 099h ;# 
   165  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   166                           OSCSTAT equ 09Ah ;# 
   167  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   168                           ADRES equ 09Bh ;# 
   169  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   170                           ADRESL equ 09Bh ;# 
   171  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   172                           ADRESH equ 09Ch ;# 
   173  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   174                           ADCON0 equ 09Dh ;# 
   175  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   176                           ADCON1 equ 09Eh ;# 
   177  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   178                           ADCON2 equ 09Fh ;# 
   179  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   182                           LATC equ 010Eh ;# 
   183  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   184                           BORCON equ 0116h ;# 
   185  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   186                           FVRCON equ 0117h ;# 
   187  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   188                           ZCD1CON equ 011Ch ;# 
   189  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   190                           ANSELA equ 018Ch ;# 
   191  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   192                           ANSELC equ 018Eh ;# 
   193  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   194                           PMADR equ 0191h ;# 
   195  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   196                           PMADRL equ 0191h ;# 
   197  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   198                           PMADRH equ 0192h ;# 
   199  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   200                           PMDAT equ 0193h ;# 
   201  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   202                           PMDATL equ 0193h ;# 
   203  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   204                           PMDATH equ 0194h ;# 
   205  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   206                           PMCON1 equ 0195h ;# 
   207  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   208                           PMCON2 equ 0196h ;# 
   209  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   210                           VREGCON equ 0197h ;# 
   211  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   212                           WPUA equ 020Ch ;# 
   213  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   214                           WPUC equ 020Eh ;# 
   215  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   216                           SSP1BUF equ 0211h ;# 
   217  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   218                           SSPBUF equ 0211h ;# 
   219  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   220                           SSP1ADD equ 0212h ;# 
   221  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   222                           SSPADD equ 0212h ;# 
   223  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   224                           SSP1MSK equ 0213h ;# 
   225  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   226                           SSPMSK equ 0213h ;# 
   227  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   228                           SSP1STAT equ 0214h ;# 
   229  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   230                           SSPSTAT equ 0214h ;# 
   231  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   232                           SSP1CON1 equ 0215h ;# 
   233  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   234                           SSPCON equ 0215h ;# 
   235  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   236                           SSPCON1 equ 0215h ;# 
   237  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   238                           SSP1CON equ 0215h ;# 
   239  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   240                           SSP1CON2 equ 0216h ;# 
   241  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   242                           SSPCON2 equ 0216h ;# 
   243  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   244                           SSP1CON3 equ 0217h ;# 
   245  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   246                           SSPCON3 equ 0217h ;# 
   247  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   248                           ODCONA equ 028Ch ;# 
   249  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   250                           ODCONC equ 028Eh ;# 
   251  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   252                           CCPR1 equ 0291h ;# 
   253  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   254                           CCPR1L equ 0291h ;# 
   255  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   256                           CCPR1H equ 0292h ;# 
   257  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   258                           CCP1CON equ 0293h ;# 
   259  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   260                           ECCP1CON equ 0293h ;# 
   261  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   262                           CCPR2 equ 0298h ;# 
   263  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   264                           CCPR2L equ 0298h ;# 
   265  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   266                           CCPR2H equ 0299h ;# 
   267  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   268                           CCP2CON equ 029Ah ;# 
   269  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   270                           ECCP2CON equ 029Ah ;# 
   271  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   272                           SLRCONA equ 030Ch ;# 
   273  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   274                           SLRCONC equ 030Eh ;# 
   275  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   276                           INLVLA equ 038Ch ;# 
   277  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   278                           INLVLC equ 038Eh ;# 
   279  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   280                           IOCAP equ 0391h ;# 
   281  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   282                           IOCAN equ 0392h ;# 
   283  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   284                           IOCAF equ 0393h ;# 
   285  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   286                           IOCCP equ 0397h ;# 
   287  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   288                           IOCCN equ 0398h ;# 
   289  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   290                           IOCCF equ 0399h ;# 
   291  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   292                           OPA1CON equ 0511h ;# 
   293  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   294                           OPA2CON equ 0515h ;# 
   295  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   296                           PPSLOCK equ 0E0Fh ;# 
   297  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   298                           INTPPS equ 0E10h ;# 
   299  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   300                           T0CKIPPS equ 0E11h ;# 
   301  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   302                           T1CKIPPS equ 0E12h ;# 
   303  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   304                           T1GPPS equ 0E13h ;# 
   305  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   306                           CCP1PPS equ 0E14h ;# 
   307  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   308                           CCP2PPS equ 0E15h ;# 
   309  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   310                           SSPCLKPPS equ 0E20h ;# 
   311  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   312                           SSPDATPPS equ 0E21h ;# 
   313  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   314                           SSPSSPPS equ 0E22h ;# 
   315  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   316                           RA0PPS equ 0E90h ;# 
   317  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   318                           RA1PPS equ 0E91h ;# 
   319  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   320                           RA2PPS equ 0E92h ;# 
   321  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   322                           RA4PPS equ 0E94h ;# 
   323  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   324                           RA5PPS equ 0E95h ;# 
   325  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   326                           RC0PPS equ 0EA0h ;# 
   327  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   328                           RC1PPS equ 0EA1h ;# 
   329  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   330                           RC2PPS equ 0EA2h ;# 
   331  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   332                           RC3PPS equ 0EA3h ;# 
   333  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   334                           RC4PPS equ 0EA4h ;# 
   335  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   336                           RC5PPS equ 0EA5h ;# 
   337  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   338                           ICDBK0H equ 0F9Eh ;# 
   339  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   340                           STATUS_SHAD equ 0FE4h ;# 
   341  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   342                           WREG_SHAD equ 0FE5h ;# 
   343  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   344                           BSR_SHAD equ 0FE6h ;# 
   345  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   346                           PCLATH_SHAD equ 0FE7h ;# 
   347  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   348                           FSR0L_SHAD equ 0FE8h ;# 
   349  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   350                           FSR0H_SHAD equ 0FE9h ;# 
   351  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   352                           FSR1L_SHAD equ 0FEAh ;# 
   353  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   354                           FSR1H_SHAD equ 0FEBh ;# 
   355  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   356                           STKPTR equ 0FEDh ;# 
   357  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   358                           TOSL equ 0FEEh ;# 
   359  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   360                           TOSH equ 0FEFh ;# 
   361  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   362                           INDF0 equ 00h ;# 
   363  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   364                           INDF1 equ 01h ;# 
   365  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   366                           PCL equ 02h ;# 
   367  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   368                           STATUS equ 03h ;# 
   369  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   370                           FSR0L equ 04h ;# 
   371  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   372                           FSR0H equ 05h ;# 
   373  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   374                           FSR1L equ 06h ;# 
   375  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   376                           FSR1H equ 07h ;# 
   377  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   378                           BSR equ 08h ;# 
   379  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   380                           WREG equ 09h ;# 
   381  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   382                           PCLATH equ 0Ah ;# 
   383  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   384                           INTCON equ 0Bh ;# 
   385  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   386                           PORTA equ 0Ch ;# 
   387  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   388                           PORTC equ 0Eh ;# 
   389  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   390                           PIR1 equ 011h ;# 
   391  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   392                           PIR2 equ 012h ;# 
   393  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   394                           PIR3 equ 013h ;# 
   395  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   396                           TMR0 equ 015h ;# 
   397  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   398                           TMR1 equ 016h ;# 
   399  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   400                           TMR1L equ 016h ;# 
   401  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   402                           TMR1H equ 017h ;# 
   403  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   404                           T1CON equ 018h ;# 
   405  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   406                           T1GCON equ 019h ;# 
   407  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   408                           TMR2 equ 01Ah ;# 
   409  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   410                           PR2 equ 01Bh ;# 
   411  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   412                           T2CON equ 01Ch ;# 
   413  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   414                           TRISA equ 08Ch ;# 
   415  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   416                           TRISC equ 08Eh ;# 
   417  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   418                           PIE1 equ 091h ;# 
   419  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   420                           PIE2 equ 092h ;# 
   421  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   422                           PIE3 equ 093h ;# 
   423  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   424                           OPTION_REG equ 095h ;# 
   425  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   426                           PCON equ 096h ;# 
   427  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   428                           WDTCON equ 097h ;# 
   429  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   430                           OSCTUNE equ 098h ;# 
   431  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   432                           OSCCON equ 099h ;# 
   433  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   434                           OSCSTAT equ 09Ah ;# 
   435  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   436                           ADRES equ 09Bh ;# 
   437  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   438                           ADRESL equ 09Bh ;# 
   439  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   440                           ADRESH equ 09Ch ;# 
   441  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   442                           ADCON0 equ 09Dh ;# 
   443  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   444                           ADCON1 equ 09Eh ;# 
   445  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   446                           ADCON2 equ 09Fh ;# 
   447  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   448                           LATA equ 010Ch ;# 
   449  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   450                           LATC equ 010Eh ;# 
   451  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   452                           BORCON equ 0116h ;# 
   453  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   454                           FVRCON equ 0117h ;# 
   455  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   456                           ZCD1CON equ 011Ch ;# 
   457  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   458                           ANSELA equ 018Ch ;# 
   459  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   460                           ANSELC equ 018Eh ;# 
   461  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   462                           PMADR equ 0191h ;# 
   463  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   464                           PMADRL equ 0191h ;# 
   465  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   466                           PMADRH equ 0192h ;# 
   467  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   468                           PMDAT equ 0193h ;# 
   469  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   470                           PMDATL equ 0193h ;# 
   471  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   472                           PMDATH equ 0194h ;# 
   473  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   474                           PMCON1 equ 0195h ;# 
   475  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   476                           PMCON2 equ 0196h ;# 
   477  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   478                           VREGCON equ 0197h ;# 
   479  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   480                           WPUA equ 020Ch ;# 
   481  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   482                           WPUC equ 020Eh ;# 
   483  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   484                           SSP1BUF equ 0211h ;# 
   485  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   486                           SSPBUF equ 0211h ;# 
   487  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   488                           SSP1ADD equ 0212h ;# 
   489  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   490                           SSPADD equ 0212h ;# 
   491  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   492                           SSP1MSK equ 0213h ;# 
   493  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   494                           SSPMSK equ 0213h ;# 
   495  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   496                           SSP1STAT equ 0214h ;# 
   497  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   498                           SSPSTAT equ 0214h ;# 
   499  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   500                           SSP1CON1 equ 0215h ;# 
   501  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   502                           SSPCON equ 0215h ;# 
   503  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   504                           SSPCON1 equ 0215h ;# 
   505  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   506                           SSP1CON equ 0215h ;# 
   507  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   508                           SSP1CON2 equ 0216h ;# 
   509  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   510                           SSPCON2 equ 0216h ;# 
   511  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   512                           SSP1CON3 equ 0217h ;# 
   513  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   514                           SSPCON3 equ 0217h ;# 
   515  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   516                           ODCONA equ 028Ch ;# 
   517  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   518                           ODCONC equ 028Eh ;# 
   519  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   520                           CCPR1 equ 0291h ;# 
   521  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   522                           CCPR1L equ 0291h ;# 
   523  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   524                           CCPR1H equ 0292h ;# 
   525  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   526                           CCP1CON equ 0293h ;# 
   527  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   528                           ECCP1CON equ 0293h ;# 
   529  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   530                           CCPR2 equ 0298h ;# 
   531  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   532                           CCPR2L equ 0298h ;# 
   533  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   534                           CCPR2H equ 0299h ;# 
   535  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   536                           CCP2CON equ 029Ah ;# 
   537  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   538                           ECCP2CON equ 029Ah ;# 
   539  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   540                           SLRCONA equ 030Ch ;# 
   541  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   542                           SLRCONC equ 030Eh ;# 
   543  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   544                           INLVLA equ 038Ch ;# 
   545  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   546                           INLVLC equ 038Eh ;# 
   547  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   548                           IOCAP equ 0391h ;# 
   549  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   550                           IOCAN equ 0392h ;# 
   551  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   552                           IOCAF equ 0393h ;# 
   553  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   554                           IOCCP equ 0397h ;# 
   555  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   556                           IOCCN equ 0398h ;# 
   557  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   558                           IOCCF equ 0399h ;# 
   559  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   560                           OPA1CON equ 0511h ;# 
   561  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   562                           OPA2CON equ 0515h ;# 
   563  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   564                           PPSLOCK equ 0E0Fh ;# 
   565  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   566                           INTPPS equ 0E10h ;# 
   567  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   568                           T0CKIPPS equ 0E11h ;# 
   569  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   570                           T1CKIPPS equ 0E12h ;# 
   571  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   572                           T1GPPS equ 0E13h ;# 
   573  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   574                           CCP1PPS equ 0E14h ;# 
   575  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   576                           CCP2PPS equ 0E15h ;# 
   577  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   578                           SSPCLKPPS equ 0E20h ;# 
   579  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   580                           SSPDATPPS equ 0E21h ;# 
   581  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   582                           SSPSSPPS equ 0E22h ;# 
   583  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   584                           RA0PPS equ 0E90h ;# 
   585  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   586                           RA1PPS equ 0E91h ;# 
   587  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   588                           RA2PPS equ 0E92h ;# 
   589  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   590                           RA4PPS equ 0E94h ;# 
   591  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   592                           RA5PPS equ 0E95h ;# 
   593  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   594                           RC0PPS equ 0EA0h ;# 
   595  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   596                           RC1PPS equ 0EA1h ;# 
   597  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   598                           RC2PPS equ 0EA2h ;# 
   599  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   600                           RC3PPS equ 0EA3h ;# 
   601  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   602                           RC4PPS equ 0EA4h ;# 
   603  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   604                           RC5PPS equ 0EA5h ;# 
   605  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   606                           ICDBK0H equ 0F9Eh ;# 
   607  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   608                           STATUS_SHAD equ 0FE4h ;# 
   609  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   610                           WREG_SHAD equ 0FE5h ;# 
   611  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   612                           BSR_SHAD equ 0FE6h ;# 
   613  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   614                           PCLATH_SHAD equ 0FE7h ;# 
   615  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   616                           FSR0L_SHAD equ 0FE8h ;# 
   617  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   618                           FSR0H_SHAD equ 0FE9h ;# 
   619  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   620                           FSR1L_SHAD equ 0FEAh ;# 
   621  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   622                           FSR1H_SHAD equ 0FEBh ;# 
   623  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   624                           STKPTR equ 0FEDh ;# 
   625  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   626                           TOSL equ 0FEEh ;# 
   627  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   628                           TOSH equ 0FEFh ;# 
   629  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   630                           INDF0 equ 00h ;# 
   631  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   632                           INDF1 equ 01h ;# 
   633  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   634                           PCL equ 02h ;# 
   635  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   636                           STATUS equ 03h ;# 
   637  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   638                           FSR0L equ 04h ;# 
   639  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   640                           FSR0H equ 05h ;# 
   641  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   642                           FSR1L equ 06h ;# 
   643  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   644                           FSR1H equ 07h ;# 
   645  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   646                           BSR equ 08h ;# 
   647  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   648                           WREG equ 09h ;# 
   649  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   650                           PCLATH equ 0Ah ;# 
   651  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   652                           INTCON equ 0Bh ;# 
   653  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   654                           PORTA equ 0Ch ;# 
   655  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   656                           PORTC equ 0Eh ;# 
   657  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   658                           PIR1 equ 011h ;# 
   659  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   660                           PIR2 equ 012h ;# 
   661  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   662                           PIR3 equ 013h ;# 
   663  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   664                           TMR0 equ 015h ;# 
   665  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   666                           TMR1 equ 016h ;# 
   667  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   668                           TMR1L equ 016h ;# 
   669  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   670                           TMR1H equ 017h ;# 
   671  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   672                           T1CON equ 018h ;# 
   673  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   674                           T1GCON equ 019h ;# 
   675  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   676                           TMR2 equ 01Ah ;# 
   677  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   678                           PR2 equ 01Bh ;# 
   679  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   680                           T2CON equ 01Ch ;# 
   681  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   682                           TRISA equ 08Ch ;# 
   683  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   684                           TRISC equ 08Eh ;# 
   685  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   686                           PIE1 equ 091h ;# 
   687  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   688                           PIE2 equ 092h ;# 
   689  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   690                           PIE3 equ 093h ;# 
   691  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   692                           OPTION_REG equ 095h ;# 
   693  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   694                           PCON equ 096h ;# 
   695  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   696                           WDTCON equ 097h ;# 
   697  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   698                           OSCTUNE equ 098h ;# 
   699  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   700                           OSCCON equ 099h ;# 
   701  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   702                           OSCSTAT equ 09Ah ;# 
   703  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   704                           ADRES equ 09Bh ;# 
   705  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   706                           ADRESL equ 09Bh ;# 
   707  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   708                           ADRESH equ 09Ch ;# 
   709  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   710                           ADCON0 equ 09Dh ;# 
   711  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   712                           ADCON1 equ 09Eh ;# 
   713  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   714                           ADCON2 equ 09Fh ;# 
   715  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   716                           LATA equ 010Ch ;# 
   717  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   718                           LATC equ 010Eh ;# 
   719  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   720                           BORCON equ 0116h ;# 
   721  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   722                           FVRCON equ 0117h ;# 
   723  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   724                           ZCD1CON equ 011Ch ;# 
   725  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   726                           ANSELA equ 018Ch ;# 
   727  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   728                           ANSELC equ 018Eh ;# 
   729  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   730                           PMADR equ 0191h ;# 
   731  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   732                           PMADRL equ 0191h ;# 
   733  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   734                           PMADRH equ 0192h ;# 
   735  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   736                           PMDAT equ 0193h ;# 
   737  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   738                           PMDATL equ 0193h ;# 
   739  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   740                           PMDATH equ 0194h ;# 
   741  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   742                           PMCON1 equ 0195h ;# 
   743  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   744                           PMCON2 equ 0196h ;# 
   745  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   746                           VREGCON equ 0197h ;# 
   747  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   748                           WPUA equ 020Ch ;# 
   749  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   750                           WPUC equ 020Eh ;# 
   751  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   752                           SSP1BUF equ 0211h ;# 
   753  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   754                           SSPBUF equ 0211h ;# 
   755  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   756                           SSP1ADD equ 0212h ;# 
   757  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   758                           SSPADD equ 0212h ;# 
   759  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   760                           SSP1MSK equ 0213h ;# 
   761  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   762                           SSPMSK equ 0213h ;# 
   763  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   764                           SSP1STAT equ 0214h ;# 
   765  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   766                           SSPSTAT equ 0214h ;# 
   767  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   768                           SSP1CON1 equ 0215h ;# 
   769  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   770                           SSPCON equ 0215h ;# 
   771  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   772                           SSPCON1 equ 0215h ;# 
   773  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   774                           SSP1CON equ 0215h ;# 
   775  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   776                           SSP1CON2 equ 0216h ;# 
   777  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   778                           SSPCON2 equ 0216h ;# 
   779  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   780                           SSP1CON3 equ 0217h ;# 
   781  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   782                           SSPCON3 equ 0217h ;# 
   783  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   784                           ODCONA equ 028Ch ;# 
   785  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   786                           ODCONC equ 028Eh ;# 
   787  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   788                           CCPR1 equ 0291h ;# 
   789  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   790                           CCPR1L equ 0291h ;# 
   791  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   792                           CCPR1H equ 0292h ;# 
   793  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   794                           CCP1CON equ 0293h ;# 
   795  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   796                           ECCP1CON equ 0293h ;# 
   797  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   798                           CCPR2 equ 0298h ;# 
   799  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   800                           CCPR2L equ 0298h ;# 
   801  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   802                           CCPR2H equ 0299h ;# 
   803  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   804                           CCP2CON equ 029Ah ;# 
   805  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   806                           ECCP2CON equ 029Ah ;# 
   807  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   808                           SLRCONA equ 030Ch ;# 
   809  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   810                           SLRCONC equ 030Eh ;# 
   811  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   812                           INLVLA equ 038Ch ;# 
   813  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   814                           INLVLC equ 038Eh ;# 
   815  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   816                           IOCAP equ 0391h ;# 
   817  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   818                           IOCAN equ 0392h ;# 
   819  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   820                           IOCAF equ 0393h ;# 
   821  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   822                           IOCCP equ 0397h ;# 
   823  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   824                           IOCCN equ 0398h ;# 
   825  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   826                           IOCCF equ 0399h ;# 
   827  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   828                           OPA1CON equ 0511h ;# 
   829  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   830                           OPA2CON equ 0515h ;# 
   831  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   832                           PPSLOCK equ 0E0Fh ;# 
   833  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   834                           INTPPS equ 0E10h ;# 
   835  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   836                           T0CKIPPS equ 0E11h ;# 
   837  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   838                           T1CKIPPS equ 0E12h ;# 
   839  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   840                           T1GPPS equ 0E13h ;# 
   841  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   842                           CCP1PPS equ 0E14h ;# 
   843  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   844                           CCP2PPS equ 0E15h ;# 
   845  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   846                           SSPCLKPPS equ 0E20h ;# 
   847  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   848                           SSPDATPPS equ 0E21h ;# 
   849  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   850                           SSPSSPPS equ 0E22h ;# 
   851  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   852                           RA0PPS equ 0E90h ;# 
   853  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   854                           RA1PPS equ 0E91h ;# 
   855  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   856                           RA2PPS equ 0E92h ;# 
   857  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   858                           RA4PPS equ 0E94h ;# 
   859  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   860                           RA5PPS equ 0E95h ;# 
   861  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   862                           RC0PPS equ 0EA0h ;# 
   863  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   864                           RC1PPS equ 0EA1h ;# 
   865  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   866                           RC2PPS equ 0EA2h ;# 
   867  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   868                           RC3PPS equ 0EA3h ;# 
   869  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   870                           RC4PPS equ 0EA4h ;# 
   871  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   872                           RC5PPS equ 0EA5h ;# 
   873  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   874                           ICDBK0H equ 0F9Eh ;# 
   875  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   876                           STATUS_SHAD equ 0FE4h ;# 
   877  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   878                           WREG_SHAD equ 0FE5h ;# 
   879  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   880                           BSR_SHAD equ 0FE6h ;# 
   881  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   882                           PCLATH_SHAD equ 0FE7h ;# 
   883  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   884                           FSR0L_SHAD equ 0FE8h ;# 
   885  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   886                           FSR0H_SHAD equ 0FE9h ;# 
   887  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   888                           FSR1L_SHAD equ 0FEAh ;# 
   889  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   890                           FSR1H_SHAD equ 0FEBh ;# 
   891  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   892                           STKPTR equ 0FEDh ;# 
   893  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   894                           TOSL equ 0FEEh ;# 
   895  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   896                           TOSH equ 0FEFh ;# 
   897  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   898                           INDF0 equ 00h ;# 
   899  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   900                           INDF1 equ 01h ;# 
   901  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   902                           PCL equ 02h ;# 
   903  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   904                           STATUS equ 03h ;# 
   905  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   906                           FSR0L equ 04h ;# 
   907  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   908                           FSR0H equ 05h ;# 
   909  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   910                           FSR1L equ 06h ;# 
   911  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   912                           FSR1H equ 07h ;# 
   913  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   914                           BSR equ 08h ;# 
   915  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   916                           WREG equ 09h ;# 
   917  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   918                           PCLATH equ 0Ah ;# 
   919  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   920                           INTCON equ 0Bh ;# 
   921  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   922                           PORTA equ 0Ch ;# 
   923  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   924                           PORTC equ 0Eh ;# 
   925  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   926                           PIR1 equ 011h ;# 
   927  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   928                           PIR2 equ 012h ;# 
   929  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   930                           PIR3 equ 013h ;# 
   931  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   932                           TMR0 equ 015h ;# 
   933  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   934                           TMR1 equ 016h ;# 
   935  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   936                           TMR1L equ 016h ;# 
   937  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   938                           TMR1H equ 017h ;# 
   939  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   940                           T1CON equ 018h ;# 
   941  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   942                           T1GCON equ 019h ;# 
   943  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   944                           TMR2 equ 01Ah ;# 
   945  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   946                           PR2 equ 01Bh ;# 
   947  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   948                           T2CON equ 01Ch ;# 
   949  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   950                           TRISA equ 08Ch ;# 
   951  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   952                           TRISC equ 08Eh ;# 
   953  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   954                           PIE1 equ 091h ;# 
   955  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   956                           PIE2 equ 092h ;# 
   957  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   958                           PIE3 equ 093h ;# 
   959  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   960                           OPTION_REG equ 095h ;# 
   961  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   962                           PCON equ 096h ;# 
   963  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   964                           WDTCON equ 097h ;# 
   965  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   966                           OSCTUNE equ 098h ;# 
   967  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   968                           OSCCON equ 099h ;# 
   969  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   970                           OSCSTAT equ 09Ah ;# 
   971  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   972                           ADRES equ 09Bh ;# 
   973  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   974                           ADRESL equ 09Bh ;# 
   975  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   976                           ADRESH equ 09Ch ;# 
   977  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   978                           ADCON0 equ 09Dh ;# 
   979  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   980                           ADCON1 equ 09Eh ;# 
   981  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   982                           ADCON2 equ 09Fh ;# 
   983  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   984                           LATA equ 010Ch ;# 
   985  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   986                           LATC equ 010Eh ;# 
   987  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   988                           BORCON equ 0116h ;# 
   989  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   990                           FVRCON equ 0117h ;# 
   991  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   992                           ZCD1CON equ 011Ch ;# 
   993  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   994                           ANSELA equ 018Ch ;# 
   995  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   996                           ANSELC equ 018Eh ;# 
   997  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   998                           PMADR equ 0191h ;# 
   999  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1000                           PMADRL equ 0191h ;# 
  1001  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1002                           PMADRH equ 0192h ;# 
  1003  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1004                           PMDAT equ 0193h ;# 
  1005  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1006                           PMDATL equ 0193h ;# 
  1007  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1008                           PMDATH equ 0194h ;# 
  1009  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1010                           PMCON1 equ 0195h ;# 
  1011  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1012                           PMCON2 equ 0196h ;# 
  1013  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1014                           VREGCON equ 0197h ;# 
  1015  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1016                           WPUA equ 020Ch ;# 
  1017  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1018                           WPUC equ 020Eh ;# 
  1019  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1020                           SSP1BUF equ 0211h ;# 
  1021  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1022                           SSPBUF equ 0211h ;# 
  1023  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1024                           SSP1ADD equ 0212h ;# 
  1025  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1026                           SSPADD equ 0212h ;# 
  1027  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1028                           SSP1MSK equ 0213h ;# 
  1029  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1030                           SSPMSK equ 0213h ;# 
  1031  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1032                           SSP1STAT equ 0214h ;# 
  1033  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1034                           SSPSTAT equ 0214h ;# 
  1035  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1036                           SSP1CON1 equ 0215h ;# 
  1037  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1038                           SSPCON equ 0215h ;# 
  1039  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1040                           SSPCON1 equ 0215h ;# 
  1041  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1042                           SSP1CON equ 0215h ;# 
  1043  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1044                           SSP1CON2 equ 0216h ;# 
  1045  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1046                           SSPCON2 equ 0216h ;# 
  1047  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1048                           SSP1CON3 equ 0217h ;# 
  1049  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1050                           SSPCON3 equ 0217h ;# 
  1051  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1052                           ODCONA equ 028Ch ;# 
  1053  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1054                           ODCONC equ 028Eh ;# 
  1055  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1056                           CCPR1 equ 0291h ;# 
  1057  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1058                           CCPR1L equ 0291h ;# 
  1059  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1060                           CCPR1H equ 0292h ;# 
  1061  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1062                           CCP1CON equ 0293h ;# 
  1063  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1064                           ECCP1CON equ 0293h ;# 
  1065  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1066                           CCPR2 equ 0298h ;# 
  1067  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1068                           CCPR2L equ 0298h ;# 
  1069  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1070                           CCPR2H equ 0299h ;# 
  1071  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1072                           CCP2CON equ 029Ah ;# 
  1073  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1074                           ECCP2CON equ 029Ah ;# 
  1075  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1076                           SLRCONA equ 030Ch ;# 
  1077  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1078                           SLRCONC equ 030Eh ;# 
  1079  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1080                           INLVLA equ 038Ch ;# 
  1081  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1082                           INLVLC equ 038Eh ;# 
  1083  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1084                           IOCAP equ 0391h ;# 
  1085  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1086                           IOCAN equ 0392h ;# 
  1087  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1088                           IOCAF equ 0393h ;# 
  1089  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1090                           IOCCP equ 0397h ;# 
  1091  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1092                           IOCCN equ 0398h ;# 
  1093  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1094                           IOCCF equ 0399h ;# 
  1095  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1096                           OPA1CON equ 0511h ;# 
  1097  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1098                           OPA2CON equ 0515h ;# 
  1099  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1100                           PPSLOCK equ 0E0Fh ;# 
  1101  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1102                           INTPPS equ 0E10h ;# 
  1103  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1104                           T0CKIPPS equ 0E11h ;# 
  1105  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1106                           T1CKIPPS equ 0E12h ;# 
  1107  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1108                           T1GPPS equ 0E13h ;# 
  1109  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1110                           CCP1PPS equ 0E14h ;# 
  1111  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1112                           CCP2PPS equ 0E15h ;# 
  1113  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1114                           SSPCLKPPS equ 0E20h ;# 
  1115  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1116                           SSPDATPPS equ 0E21h ;# 
  1117  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1118                           SSPSSPPS equ 0E22h ;# 
  1119  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1120                           RA0PPS equ 0E90h ;# 
  1121  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1122                           RA1PPS equ 0E91h ;# 
  1123  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1124                           RA2PPS equ 0E92h ;# 
  1125  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1126                           RA4PPS equ 0E94h ;# 
  1127  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1128                           RA5PPS equ 0E95h ;# 
  1129  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1130                           RC0PPS equ 0EA0h ;# 
  1131  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1132                           RC1PPS equ 0EA1h ;# 
  1133  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1134                           RC2PPS equ 0EA2h ;# 
  1135  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1136                           RC3PPS equ 0EA3h ;# 
  1137  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1138                           RC4PPS equ 0EA4h ;# 
  1139  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1140                           RC5PPS equ 0EA5h ;# 
  1141  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1142                           ICDBK0H equ 0F9Eh ;# 
  1143  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1144                           STATUS_SHAD equ 0FE4h ;# 
  1145  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1146                           WREG_SHAD equ 0FE5h ;# 
  1147  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1148                           BSR_SHAD equ 0FE6h ;# 
  1149  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1150                           PCLATH_SHAD equ 0FE7h ;# 
  1151  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1152                           FSR0L_SHAD equ 0FE8h ;# 
  1153  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1154                           FSR0H_SHAD equ 0FE9h ;# 
  1155  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1156                           FSR1L_SHAD equ 0FEAh ;# 
  1157  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1158                           FSR1H_SHAD equ 0FEBh ;# 
  1159  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1160                           STKPTR equ 0FEDh ;# 
  1161  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1162                           TOSL equ 0FEEh ;# 
  1163  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1164                           TOSH equ 0FEFh ;# 
  1165  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1166                           INDF0 equ 00h ;# 
  1167  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1168                           INDF1 equ 01h ;# 
  1169  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1170                           PCL equ 02h ;# 
  1171  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1172                           STATUS equ 03h ;# 
  1173  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1174                           FSR0L equ 04h ;# 
  1175  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1176                           FSR0H equ 05h ;# 
  1177  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1178                           FSR1L equ 06h ;# 
  1179  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1180                           FSR1H equ 07h ;# 
  1181  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1182                           BSR equ 08h ;# 
  1183  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1184                           WREG equ 09h ;# 
  1185  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1186                           PCLATH equ 0Ah ;# 
  1187  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1188                           INTCON equ 0Bh ;# 
  1189  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1190                           PORTA equ 0Ch ;# 
  1191  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1192                           PORTC equ 0Eh ;# 
  1193  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1194                           PIR1 equ 011h ;# 
  1195  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1196                           PIR2 equ 012h ;# 
  1197  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1198                           PIR3 equ 013h ;# 
  1199  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1200                           TMR0 equ 015h ;# 
  1201  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1202                           TMR1 equ 016h ;# 
  1203  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1204                           TMR1L equ 016h ;# 
  1205  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1206                           TMR1H equ 017h ;# 
  1207  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1208                           T1CON equ 018h ;# 
  1209  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1210                           T1GCON equ 019h ;# 
  1211  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1212                           TMR2 equ 01Ah ;# 
  1213  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1214                           PR2 equ 01Bh ;# 
  1215  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1216                           T2CON equ 01Ch ;# 
  1217  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1218                           TRISA equ 08Ch ;# 
  1219  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1220                           TRISC equ 08Eh ;# 
  1221  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1222                           PIE1 equ 091h ;# 
  1223  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1224                           PIE2 equ 092h ;# 
  1225  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1226                           PIE3 equ 093h ;# 
  1227  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1228                           OPTION_REG equ 095h ;# 
  1229  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1230                           PCON equ 096h ;# 
  1231  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1232                           WDTCON equ 097h ;# 
  1233  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1234                           OSCTUNE equ 098h ;# 
  1235  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1236                           OSCCON equ 099h ;# 
  1237  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1238                           OSCSTAT equ 09Ah ;# 
  1239  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1240                           ADRES equ 09Bh ;# 
  1241  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1242                           ADRESL equ 09Bh ;# 
  1243  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1244                           ADRESH equ 09Ch ;# 
  1245  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1246                           ADCON0 equ 09Dh ;# 
  1247  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1248                           ADCON1 equ 09Eh ;# 
  1249  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1250                           ADCON2 equ 09Fh ;# 
  1251  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1252                           LATA equ 010Ch ;# 
  1253  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1254                           LATC equ 010Eh ;# 
  1255  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1256                           BORCON equ 0116h ;# 
  1257  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1258                           FVRCON equ 0117h ;# 
  1259  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1260                           ZCD1CON equ 011Ch ;# 
  1261  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1262                           ANSELA equ 018Ch ;# 
  1263  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1264                           ANSELC equ 018Eh ;# 
  1265  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1266                           PMADR equ 0191h ;# 
  1267  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1268                           PMADRL equ 0191h ;# 
  1269  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1270                           PMADRH equ 0192h ;# 
  1271  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1272                           PMDAT equ 0193h ;# 
  1273  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1274                           PMDATL equ 0193h ;# 
  1275  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1276                           PMDATH equ 0194h ;# 
  1277  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1278                           PMCON1 equ 0195h ;# 
  1279  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1280                           PMCON2 equ 0196h ;# 
  1281  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1282                           VREGCON equ 0197h ;# 
  1283  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1284                           WPUA equ 020Ch ;# 
  1285  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1286                           WPUC equ 020Eh ;# 
  1287  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1288                           SSP1BUF equ 0211h ;# 
  1289  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1290                           SSPBUF equ 0211h ;# 
  1291  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1292                           SSP1ADD equ 0212h ;# 
  1293  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1294                           SSPADD equ 0212h ;# 
  1295  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1296                           SSP1MSK equ 0213h ;# 
  1297  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1298                           SSPMSK equ 0213h ;# 
  1299  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1300                           SSP1STAT equ 0214h ;# 
  1301  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1302                           SSPSTAT equ 0214h ;# 
  1303  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1304                           SSP1CON1 equ 0215h ;# 
  1305  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1306                           SSPCON equ 0215h ;# 
  1307  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1308                           SSPCON1 equ 0215h ;# 
  1309  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1310                           SSP1CON equ 0215h ;# 
  1311  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1312                           SSP1CON2 equ 0216h ;# 
  1313  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1314                           SSPCON2 equ 0216h ;# 
  1315  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1316                           SSP1CON3 equ 0217h ;# 
  1317  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1318                           SSPCON3 equ 0217h ;# 
  1319  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1320                           ODCONA equ 028Ch ;# 
  1321  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1322                           ODCONC equ 028Eh ;# 
  1323  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1324                           CCPR1 equ 0291h ;# 
  1325  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1326                           CCPR1L equ 0291h ;# 
  1327  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1328                           CCPR1H equ 0292h ;# 
  1329  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1330                           CCP1CON equ 0293h ;# 
  1331  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1332                           ECCP1CON equ 0293h ;# 
  1333  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1334                           CCPR2 equ 0298h ;# 
  1335  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1336                           CCPR2L equ 0298h ;# 
  1337  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1338                           CCPR2H equ 0299h ;# 
  1339  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1340                           CCP2CON equ 029Ah ;# 
  1341  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1342                           ECCP2CON equ 029Ah ;# 
  1343  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1344                           SLRCONA equ 030Ch ;# 
  1345  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1346                           SLRCONC equ 030Eh ;# 
  1347  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1348                           INLVLA equ 038Ch ;# 
  1349  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1350                           INLVLC equ 038Eh ;# 
  1351  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1352                           IOCAP equ 0391h ;# 
  1353  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1354                           IOCAN equ 0392h ;# 
  1355  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1356                           IOCAF equ 0393h ;# 
  1357  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1358                           IOCCP equ 0397h ;# 
  1359  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1360                           IOCCN equ 0398h ;# 
  1361  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1362                           IOCCF equ 0399h ;# 
  1363  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1364                           OPA1CON equ 0511h ;# 
  1365  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1366                           OPA2CON equ 0515h ;# 
  1367  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1368                           PPSLOCK equ 0E0Fh ;# 
  1369  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1370                           INTPPS equ 0E10h ;# 
  1371  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1372                           T0CKIPPS equ 0E11h ;# 
  1373  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1374                           T1CKIPPS equ 0E12h ;# 
  1375  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1376                           T1GPPS equ 0E13h ;# 
  1377  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1378                           CCP1PPS equ 0E14h ;# 
  1379  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1380                           CCP2PPS equ 0E15h ;# 
  1381  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1382                           SSPCLKPPS equ 0E20h ;# 
  1383  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1384                           SSPDATPPS equ 0E21h ;# 
  1385  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1386                           SSPSSPPS equ 0E22h ;# 
  1387  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1388                           RA0PPS equ 0E90h ;# 
  1389  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1390                           RA1PPS equ 0E91h ;# 
  1391  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1392                           RA2PPS equ 0E92h ;# 
  1393  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1394                           RA4PPS equ 0E94h ;# 
  1395  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1396                           RA5PPS equ 0E95h ;# 
  1397  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1398                           RC0PPS equ 0EA0h ;# 
  1399  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1400                           RC1PPS equ 0EA1h ;# 
  1401  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1402                           RC2PPS equ 0EA2h ;# 
  1403  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1404                           RC3PPS equ 0EA3h ;# 
  1405  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1406                           RC4PPS equ 0EA4h ;# 
  1407  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1408                           RC5PPS equ 0EA5h ;# 
  1409  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1410                           ICDBK0H equ 0F9Eh ;# 
  1411  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1412                           STATUS_SHAD equ 0FE4h ;# 
  1413  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1414                           WREG_SHAD equ 0FE5h ;# 
  1415  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1416                           BSR_SHAD equ 0FE6h ;# 
  1417  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1418                           PCLATH_SHAD equ 0FE7h ;# 
  1419  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1420                           FSR0L_SHAD equ 0FE8h ;# 
  1421  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1422                           FSR0H_SHAD equ 0FE9h ;# 
  1423  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1424                           FSR1L_SHAD equ 0FEAh ;# 
  1425  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1426                           FSR1H_SHAD equ 0FEBh ;# 
  1427  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1428                           STKPTR equ 0FEDh ;# 
  1429  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1430                           TOSL equ 0FEEh ;# 
  1431  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1432                           TOSH equ 0FEFh ;# 
  1433  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1434                           INDF0 equ 00h ;# 
  1435  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1436                           INDF1 equ 01h ;# 
  1437  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1438                           PCL equ 02h ;# 
  1439  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1440                           STATUS equ 03h ;# 
  1441  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1442                           FSR0L equ 04h ;# 
  1443  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1444                           FSR0H equ 05h ;# 
  1445  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1446                           FSR1L equ 06h ;# 
  1447  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1448                           FSR1H equ 07h ;# 
  1449  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1450                           BSR equ 08h ;# 
  1451  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1452                           WREG equ 09h ;# 
  1453  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1454                           PCLATH equ 0Ah ;# 
  1455  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1456                           INTCON equ 0Bh ;# 
  1457  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1458                           PORTA equ 0Ch ;# 
  1459  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1460                           PORTC equ 0Eh ;# 
  1461  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1462                           PIR1 equ 011h ;# 
  1463  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1464                           PIR2 equ 012h ;# 
  1465  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1466                           PIR3 equ 013h ;# 
  1467  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1468                           TMR0 equ 015h ;# 
  1469  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1470                           TMR1 equ 016h ;# 
  1471  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1472                           TMR1L equ 016h ;# 
  1473  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1474                           TMR1H equ 017h ;# 
  1475  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1476                           T1CON equ 018h ;# 
  1477  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1478                           T1GCON equ 019h ;# 
  1479  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1480                           TMR2 equ 01Ah ;# 
  1481  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1482                           PR2 equ 01Bh ;# 
  1483  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1484                           T2CON equ 01Ch ;# 
  1485  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1486                           TRISA equ 08Ch ;# 
  1487  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1488                           TRISC equ 08Eh ;# 
  1489  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1490                           PIE1 equ 091h ;# 
  1491  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1492                           PIE2 equ 092h ;# 
  1493  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1494                           PIE3 equ 093h ;# 
  1495  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1496                           OPTION_REG equ 095h ;# 
  1497  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1498                           PCON equ 096h ;# 
  1499  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1500                           WDTCON equ 097h ;# 
  1501  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1502                           OSCTUNE equ 098h ;# 
  1503  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1504                           OSCCON equ 099h ;# 
  1505  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1506                           OSCSTAT equ 09Ah ;# 
  1507  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1508                           ADRES equ 09Bh ;# 
  1509  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1510                           ADRESL equ 09Bh ;# 
  1511  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1512                           ADRESH equ 09Ch ;# 
  1513  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1514                           ADCON0 equ 09Dh ;# 
  1515  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1516                           ADCON1 equ 09Eh ;# 
  1517  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1518                           ADCON2 equ 09Fh ;# 
  1519  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1520                           LATA equ 010Ch ;# 
  1521  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1522                           LATC equ 010Eh ;# 
  1523  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1524                           BORCON equ 0116h ;# 
  1525  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1526                           FVRCON equ 0117h ;# 
  1527  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1528                           ZCD1CON equ 011Ch ;# 
  1529  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1530                           ANSELA equ 018Ch ;# 
  1531  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1532                           ANSELC equ 018Eh ;# 
  1533  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1534                           PMADR equ 0191h ;# 
  1535  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1536                           PMADRL equ 0191h ;# 
  1537  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1538                           PMADRH equ 0192h ;# 
  1539  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1540                           PMDAT equ 0193h ;# 
  1541  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1542                           PMDATL equ 0193h ;# 
  1543  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1544                           PMDATH equ 0194h ;# 
  1545  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1546                           PMCON1 equ 0195h ;# 
  1547  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1548                           PMCON2 equ 0196h ;# 
  1549  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1550                           VREGCON equ 0197h ;# 
  1551  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1552                           WPUA equ 020Ch ;# 
  1553  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1554                           WPUC equ 020Eh ;# 
  1555  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1556                           SSP1BUF equ 0211h ;# 
  1557  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1558                           SSPBUF equ 0211h ;# 
  1559  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1560                           SSP1ADD equ 0212h ;# 
  1561  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1562                           SSPADD equ 0212h ;# 
  1563  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1564                           SSP1MSK equ 0213h ;# 
  1565  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1566                           SSPMSK equ 0213h ;# 
  1567  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1568                           SSP1STAT equ 0214h ;# 
  1569  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1570                           SSPSTAT equ 0214h ;# 
  1571  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1572                           SSP1CON1 equ 0215h ;# 
  1573  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1574                           SSPCON equ 0215h ;# 
  1575  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1576                           SSPCON1 equ 0215h ;# 
  1577  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1578                           SSP1CON equ 0215h ;# 
  1579  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1580                           SSP1CON2 equ 0216h ;# 
  1581  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1582                           SSPCON2 equ 0216h ;# 
  1583  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1584                           SSP1CON3 equ 0217h ;# 
  1585  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1586                           SSPCON3 equ 0217h ;# 
  1587  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1588                           ODCONA equ 028Ch ;# 
  1589  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1590                           ODCONC equ 028Eh ;# 
  1591  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1592                           CCPR1 equ 0291h ;# 
  1593  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1594                           CCPR1L equ 0291h ;# 
  1595  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1596                           CCPR1H equ 0292h ;# 
  1597  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1598                           CCP1CON equ 0293h ;# 
  1599  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1600                           ECCP1CON equ 0293h ;# 
  1601  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1602                           CCPR2 equ 0298h ;# 
  1603  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1604                           CCPR2L equ 0298h ;# 
  1605  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1606                           CCPR2H equ 0299h ;# 
  1607  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1608                           CCP2CON equ 029Ah ;# 
  1609  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1610                           ECCP2CON equ 029Ah ;# 
  1611  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1612                           SLRCONA equ 030Ch ;# 
  1613  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1614                           SLRCONC equ 030Eh ;# 
  1615  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1616                           INLVLA equ 038Ch ;# 
  1617  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1618                           INLVLC equ 038Eh ;# 
  1619  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1620                           IOCAP equ 0391h ;# 
  1621  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1622                           IOCAN equ 0392h ;# 
  1623  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1624                           IOCAF equ 0393h ;# 
  1625  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1626                           IOCCP equ 0397h ;# 
  1627  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1628                           IOCCN equ 0398h ;# 
  1629  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1630                           IOCCF equ 0399h ;# 
  1631  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1632                           OPA1CON equ 0511h ;# 
  1633  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1634                           OPA2CON equ 0515h ;# 
  1635  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1636                           PPSLOCK equ 0E0Fh ;# 
  1637  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1638                           INTPPS equ 0E10h ;# 
  1639  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1640                           T0CKIPPS equ 0E11h ;# 
  1641  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1642                           T1CKIPPS equ 0E12h ;# 
  1643  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1644                           T1GPPS equ 0E13h ;# 
  1645  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1646                           CCP1PPS equ 0E14h ;# 
  1647  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1648                           CCP2PPS equ 0E15h ;# 
  1649  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1650                           SSPCLKPPS equ 0E20h ;# 
  1651  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1652                           SSPDATPPS equ 0E21h ;# 
  1653  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1654                           SSPSSPPS equ 0E22h ;# 
  1655  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1656                           RA0PPS equ 0E90h ;# 
  1657  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1658                           RA1PPS equ 0E91h ;# 
  1659  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1660                           RA2PPS equ 0E92h ;# 
  1661  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1662                           RA4PPS equ 0E94h ;# 
  1663  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1664                           RA5PPS equ 0E95h ;# 
  1665  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1666                           RC0PPS equ 0EA0h ;# 
  1667  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1668                           RC1PPS equ 0EA1h ;# 
  1669  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1670                           RC2PPS equ 0EA2h ;# 
  1671  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1672                           RC3PPS equ 0EA3h ;# 
  1673  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1674                           RC4PPS equ 0EA4h ;# 
  1675  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1676                           RC5PPS equ 0EA5h ;# 
  1677  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1678                           ICDBK0H equ 0F9Eh ;# 
  1679  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1680                           STATUS_SHAD equ 0FE4h ;# 
  1681  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1682                           WREG_SHAD equ 0FE5h ;# 
  1683  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1684                           BSR_SHAD equ 0FE6h ;# 
  1685  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1686                           PCLATH_SHAD equ 0FE7h ;# 
  1687  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1688                           FSR0L_SHAD equ 0FE8h ;# 
  1689  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1690                           FSR0H_SHAD equ 0FE9h ;# 
  1691  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1692                           FSR1L_SHAD equ 0FEAh ;# 
  1693  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1694                           FSR1H_SHAD equ 0FEBh ;# 
  1695  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1696                           STKPTR equ 0FEDh ;# 
  1697  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1698                           TOSL equ 0FEEh ;# 
  1699  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1700                           TOSH equ 0FEFh ;# 
  1701  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1702                           INDF0 equ 00h ;# 
  1703  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1704                           INDF1 equ 01h ;# 
  1705  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1706                           PCL equ 02h ;# 
  1707  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1708                           STATUS equ 03h ;# 
  1709  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1710                           FSR0L equ 04h ;# 
  1711  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1712                           FSR0H equ 05h ;# 
  1713  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1714                           FSR1L equ 06h ;# 
  1715  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1716                           FSR1H equ 07h ;# 
  1717  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1718                           BSR equ 08h ;# 
  1719  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1720                           WREG equ 09h ;# 
  1721  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1722                           PCLATH equ 0Ah ;# 
  1723  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1724                           INTCON equ 0Bh ;# 
  1725  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1726                           PORTA equ 0Ch ;# 
  1727  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1728                           PORTC equ 0Eh ;# 
  1729  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1730                           PIR1 equ 011h ;# 
  1731  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1732                           PIR2 equ 012h ;# 
  1733  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1734                           PIR3 equ 013h ;# 
  1735  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1736                           TMR0 equ 015h ;# 
  1737  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1738                           TMR1 equ 016h ;# 
  1739  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1740                           TMR1L equ 016h ;# 
  1741  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1742                           TMR1H equ 017h ;# 
  1743  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1744                           T1CON equ 018h ;# 
  1745  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1746                           T1GCON equ 019h ;# 
  1747  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1748                           TMR2 equ 01Ah ;# 
  1749  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1750                           PR2 equ 01Bh ;# 
  1751  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1752                           T2CON equ 01Ch ;# 
  1753  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1754                           TRISA equ 08Ch ;# 
  1755  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1756                           TRISC equ 08Eh ;# 
  1757  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1758                           PIE1 equ 091h ;# 
  1759  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1760                           PIE2 equ 092h ;# 
  1761  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1762                           PIE3 equ 093h ;# 
  1763  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1764                           OPTION_REG equ 095h ;# 
  1765  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1766                           PCON equ 096h ;# 
  1767  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1768                           WDTCON equ 097h ;# 
  1769  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1770                           OSCTUNE equ 098h ;# 
  1771  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1772                           OSCCON equ 099h ;# 
  1773  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1774                           OSCSTAT equ 09Ah ;# 
  1775  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1776                           ADRES equ 09Bh ;# 
  1777  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1778                           ADRESL equ 09Bh ;# 
  1779  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1780                           ADRESH equ 09Ch ;# 
  1781  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1782                           ADCON0 equ 09Dh ;# 
  1783  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1784                           ADCON1 equ 09Eh ;# 
  1785  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1786                           ADCON2 equ 09Fh ;# 
  1787  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1788                           LATA equ 010Ch ;# 
  1789  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1790                           LATC equ 010Eh ;# 
  1791  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1792                           BORCON equ 0116h ;# 
  1793  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1794                           FVRCON equ 0117h ;# 
  1795  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1796                           ZCD1CON equ 011Ch ;# 
  1797  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1798                           ANSELA equ 018Ch ;# 
  1799  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1800                           ANSELC equ 018Eh ;# 
  1801  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1802                           PMADR equ 0191h ;# 
  1803  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1804                           PMADRL equ 0191h ;# 
  1805  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1806                           PMADRH equ 0192h ;# 
  1807  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1808                           PMDAT equ 0193h ;# 
  1809  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1810                           PMDATL equ 0193h ;# 
  1811  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1812                           PMDATH equ 0194h ;# 
  1813  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1814                           PMCON1 equ 0195h ;# 
  1815  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1816                           PMCON2 equ 0196h ;# 
  1817  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1818                           VREGCON equ 0197h ;# 
  1819  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1820                           WPUA equ 020Ch ;# 
  1821  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1822                           WPUC equ 020Eh ;# 
  1823  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1824                           SSP1BUF equ 0211h ;# 
  1825  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1826                           SSPBUF equ 0211h ;# 
  1827  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1828                           SSP1ADD equ 0212h ;# 
  1829  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1830                           SSPADD equ 0212h ;# 
  1831  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1832                           SSP1MSK equ 0213h ;# 
  1833  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1834                           SSPMSK equ 0213h ;# 
  1835  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1836                           SSP1STAT equ 0214h ;# 
  1837  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1838                           SSPSTAT equ 0214h ;# 
  1839  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1840                           SSP1CON1 equ 0215h ;# 
  1841  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1842                           SSPCON equ 0215h ;# 
  1843  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1844                           SSPCON1 equ 0215h ;# 
  1845  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1846                           SSP1CON equ 0215h ;# 
  1847  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1848                           SSP1CON2 equ 0216h ;# 
  1849  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1850                           SSPCON2 equ 0216h ;# 
  1851  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1852                           SSP1CON3 equ 0217h ;# 
  1853  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1854                           SSPCON3 equ 0217h ;# 
  1855  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1856                           ODCONA equ 028Ch ;# 
  1857  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1858                           ODCONC equ 028Eh ;# 
  1859  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1860                           CCPR1 equ 0291h ;# 
  1861  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1862                           CCPR1L equ 0291h ;# 
  1863  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1864                           CCPR1H equ 0292h ;# 
  1865  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1866                           CCP1CON equ 0293h ;# 
  1867  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1868                           ECCP1CON equ 0293h ;# 
  1869  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1870                           CCPR2 equ 0298h ;# 
  1871  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1872                           CCPR2L equ 0298h ;# 
  1873  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1874                           CCPR2H equ 0299h ;# 
  1875  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1876                           CCP2CON equ 029Ah ;# 
  1877  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1878                           ECCP2CON equ 029Ah ;# 
  1879  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1880                           SLRCONA equ 030Ch ;# 
  1881  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1882                           SLRCONC equ 030Eh ;# 
  1883  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1884                           INLVLA equ 038Ch ;# 
  1885  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1886                           INLVLC equ 038Eh ;# 
  1887  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1888                           IOCAP equ 0391h ;# 
  1889  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1890                           IOCAN equ 0392h ;# 
  1891  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1892                           IOCAF equ 0393h ;# 
  1893  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1894                           IOCCP equ 0397h ;# 
  1895  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1896                           IOCCN equ 0398h ;# 
  1897  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1898                           IOCCF equ 0399h ;# 
  1899  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1900                           OPA1CON equ 0511h ;# 
  1901  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1902                           OPA2CON equ 0515h ;# 
  1903  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1904                           PPSLOCK equ 0E0Fh ;# 
  1905  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1906                           INTPPS equ 0E10h ;# 
  1907  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1908                           T0CKIPPS equ 0E11h ;# 
  1909  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1910                           T1CKIPPS equ 0E12h ;# 
  1911  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1912                           T1GPPS equ 0E13h ;# 
  1913  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1914                           CCP1PPS equ 0E14h ;# 
  1915  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1916                           CCP2PPS equ 0E15h ;# 
  1917  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1918                           SSPCLKPPS equ 0E20h ;# 
  1919  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1920                           SSPDATPPS equ 0E21h ;# 
  1921  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1922                           SSPSSPPS equ 0E22h ;# 
  1923  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1924                           RA0PPS equ 0E90h ;# 
  1925  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1926                           RA1PPS equ 0E91h ;# 
  1927  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1928                           RA2PPS equ 0E92h ;# 
  1929  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1930                           RA4PPS equ 0E94h ;# 
  1931  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1932                           RA5PPS equ 0E95h ;# 
  1933  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1934                           RC0PPS equ 0EA0h ;# 
  1935  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1936                           RC1PPS equ 0EA1h ;# 
  1937  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1938                           RC2PPS equ 0EA2h ;# 
  1939  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1940                           RC3PPS equ 0EA3h ;# 
  1941  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1942                           RC4PPS equ 0EA4h ;# 
  1943  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1944                           RC5PPS equ 0EA5h ;# 
  1945  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1946                           ICDBK0H equ 0F9Eh ;# 
  1947  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1948                           STATUS_SHAD equ 0FE4h ;# 
  1949  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1950                           WREG_SHAD equ 0FE5h ;# 
  1951  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1952                           BSR_SHAD equ 0FE6h ;# 
  1953  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1954                           PCLATH_SHAD equ 0FE7h ;# 
  1955  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1956                           FSR0L_SHAD equ 0FE8h ;# 
  1957  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1958                           FSR0H_SHAD equ 0FE9h ;# 
  1959  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1960                           FSR1L_SHAD equ 0FEAh ;# 
  1961  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1962                           FSR1H_SHAD equ 0FEBh ;# 
  1963  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1964                           STKPTR equ 0FEDh ;# 
  1965  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1966                           TOSL equ 0FEEh ;# 
  1967  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1968                           TOSH equ 0FEFh ;# 
  1969  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1970                           INDF0 equ 00h ;# 
  1971  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1972                           INDF1 equ 01h ;# 
  1973  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1974                           PCL equ 02h ;# 
  1975  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1976                           STATUS equ 03h ;# 
  1977  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1978                           FSR0L equ 04h ;# 
  1979  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1980                           FSR0H equ 05h ;# 
  1981  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1982                           FSR1L equ 06h ;# 
  1983  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1984                           FSR1H equ 07h ;# 
  1985  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1986                           BSR equ 08h ;# 
  1987  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1988                           WREG equ 09h ;# 
  1989  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1990                           PCLATH equ 0Ah ;# 
  1991  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1992                           INTCON equ 0Bh ;# 
  1993  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1994                           PORTA equ 0Ch ;# 
  1995  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1996                           PORTC equ 0Eh ;# 
  1997  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1998                           PIR1 equ 011h ;# 
  1999  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2000                           PIR2 equ 012h ;# 
  2001  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2002                           PIR3 equ 013h ;# 
  2003  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2004                           TMR0 equ 015h ;# 
  2005  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2006                           TMR1 equ 016h ;# 
  2007  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2008                           TMR1L equ 016h ;# 
  2009  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2010                           TMR1H equ 017h ;# 
  2011  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2012                           T1CON equ 018h ;# 
  2013  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2014                           T1GCON equ 019h ;# 
  2015  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2016                           TMR2 equ 01Ah ;# 
  2017  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2018                           PR2 equ 01Bh ;# 
  2019  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2020                           T2CON equ 01Ch ;# 
  2021  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2022                           TRISA equ 08Ch ;# 
  2023  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2024                           TRISC equ 08Eh ;# 
  2025  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2026                           PIE1 equ 091h ;# 
  2027  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2028                           PIE2 equ 092h ;# 
  2029  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2030                           PIE3 equ 093h ;# 
  2031  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2032                           OPTION_REG equ 095h ;# 
  2033  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2034                           PCON equ 096h ;# 
  2035  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2036                           WDTCON equ 097h ;# 
  2037  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2038                           OSCTUNE equ 098h ;# 
  2039  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2040                           OSCCON equ 099h ;# 
  2041  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2042                           OSCSTAT equ 09Ah ;# 
  2043  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2044                           ADRES equ 09Bh ;# 
  2045  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2046                           ADRESL equ 09Bh ;# 
  2047  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2048                           ADRESH equ 09Ch ;# 
  2049  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2050                           ADCON0 equ 09Dh ;# 
  2051  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2052                           ADCON1 equ 09Eh ;# 
  2053  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2054                           ADCON2 equ 09Fh ;# 
  2055  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2056                           LATA equ 010Ch ;# 
  2057  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2058                           LATC equ 010Eh ;# 
  2059  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2060                           BORCON equ 0116h ;# 
  2061  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2062                           FVRCON equ 0117h ;# 
  2063  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2064                           ZCD1CON equ 011Ch ;# 
  2065  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2066                           ANSELA equ 018Ch ;# 
  2067  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2068                           ANSELC equ 018Eh ;# 
  2069  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2070                           PMADR equ 0191h ;# 
  2071  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2072                           PMADRL equ 0191h ;# 
  2073  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2074                           PMADRH equ 0192h ;# 
  2075  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2076                           PMDAT equ 0193h ;# 
  2077  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2078                           PMDATL equ 0193h ;# 
  2079  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2080                           PMDATH equ 0194h ;# 
  2081  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2082                           PMCON1 equ 0195h ;# 
  2083  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2084                           PMCON2 equ 0196h ;# 
  2085  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2086                           VREGCON equ 0197h ;# 
  2087  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2088                           WPUA equ 020Ch ;# 
  2089  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2090                           WPUC equ 020Eh ;# 
  2091  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2092                           SSP1BUF equ 0211h ;# 
  2093  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2094                           SSPBUF equ 0211h ;# 
  2095  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2096                           SSP1ADD equ 0212h ;# 
  2097  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2098                           SSPADD equ 0212h ;# 
  2099  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2100                           SSP1MSK equ 0213h ;# 
  2101  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2102                           SSPMSK equ 0213h ;# 
  2103  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2104                           SSP1STAT equ 0214h ;# 
  2105  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2106                           SSPSTAT equ 0214h ;# 
  2107  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2108                           SSP1CON1 equ 0215h ;# 
  2109  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2110                           SSPCON equ 0215h ;# 
  2111  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2112                           SSPCON1 equ 0215h ;# 
  2113  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2114                           SSP1CON equ 0215h ;# 
  2115  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2116                           SSP1CON2 equ 0216h ;# 
  2117  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2118                           SSPCON2 equ 0216h ;# 
  2119  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2120                           SSP1CON3 equ 0217h ;# 
  2121  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2122                           SSPCON3 equ 0217h ;# 
  2123  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2124                           ODCONA equ 028Ch ;# 
  2125  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2126                           ODCONC equ 028Eh ;# 
  2127  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2128                           CCPR1 equ 0291h ;# 
  2129  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2130                           CCPR1L equ 0291h ;# 
  2131  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2132                           CCPR1H equ 0292h ;# 
  2133  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2134                           CCP1CON equ 0293h ;# 
  2135  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2136                           ECCP1CON equ 0293h ;# 
  2137  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2138                           CCPR2 equ 0298h ;# 
  2139  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2140                           CCPR2L equ 0298h ;# 
  2141  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2142                           CCPR2H equ 0299h ;# 
  2143  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2144                           CCP2CON equ 029Ah ;# 
  2145  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2146                           ECCP2CON equ 029Ah ;# 
  2147  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2148                           SLRCONA equ 030Ch ;# 
  2149  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2150                           SLRCONC equ 030Eh ;# 
  2151  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2152                           INLVLA equ 038Ch ;# 
  2153  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2154                           INLVLC equ 038Eh ;# 
  2155  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2156                           IOCAP equ 0391h ;# 
  2157  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2158                           IOCAN equ 0392h ;# 
  2159  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2160                           IOCAF equ 0393h ;# 
  2161  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2162                           IOCCP equ 0397h ;# 
  2163  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2164                           IOCCN equ 0398h ;# 
  2165  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2166                           IOCCF equ 0399h ;# 
  2167  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2168                           OPA1CON equ 0511h ;# 
  2169  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2170                           OPA2CON equ 0515h ;# 
  2171  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2172                           PPSLOCK equ 0E0Fh ;# 
  2173  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2174                           INTPPS equ 0E10h ;# 
  2175  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2176                           T0CKIPPS equ 0E11h ;# 
  2177  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2178                           T1CKIPPS equ 0E12h ;# 
  2179  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2180                           T1GPPS equ 0E13h ;# 
  2181  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2182                           CCP1PPS equ 0E14h ;# 
  2183  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2184                           CCP2PPS equ 0E15h ;# 
  2185  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2186                           SSPCLKPPS equ 0E20h ;# 
  2187  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2188                           SSPDATPPS equ 0E21h ;# 
  2189  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2190                           SSPSSPPS equ 0E22h ;# 
  2191  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2192                           RA0PPS equ 0E90h ;# 
  2193  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2194                           RA1PPS equ 0E91h ;# 
  2195  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2196                           RA2PPS equ 0E92h ;# 
  2197  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2198                           RA4PPS equ 0E94h ;# 
  2199  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2200                           RA5PPS equ 0E95h ;# 
  2201  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2202                           RC0PPS equ 0EA0h ;# 
  2203  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2204                           RC1PPS equ 0EA1h ;# 
  2205  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2206                           RC2PPS equ 0EA2h ;# 
  2207  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2208                           RC3PPS equ 0EA3h ;# 
  2209  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2210                           RC4PPS equ 0EA4h ;# 
  2211  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2212                           RC5PPS equ 0EA5h ;# 
  2213  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2214                           ICDBK0H equ 0F9Eh ;# 
  2215  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2216                           STATUS_SHAD equ 0FE4h ;# 
  2217  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2218                           WREG_SHAD equ 0FE5h ;# 
  2219  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2220                           BSR_SHAD equ 0FE6h ;# 
  2221  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2222                           PCLATH_SHAD equ 0FE7h ;# 
  2223  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2224                           FSR0L_SHAD equ 0FE8h ;# 
  2225  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2226                           FSR0H_SHAD equ 0FE9h ;# 
  2227  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2228                           FSR1L_SHAD equ 0FEAh ;# 
  2229  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2230                           FSR1H_SHAD equ 0FEBh ;# 
  2231  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2232                           STKPTR equ 0FEDh ;# 
  2233  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2234                           TOSL equ 0FEEh ;# 
  2235  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2236                           TOSH equ 0FEFh ;# 
  2237  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2238                           INDF0 equ 00h ;# 
  2239  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2240                           INDF1 equ 01h ;# 
  2241  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2242                           PCL equ 02h ;# 
  2243  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2244                           STATUS equ 03h ;# 
  2245  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2246                           FSR0L equ 04h ;# 
  2247  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2248                           FSR0H equ 05h ;# 
  2249  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2250                           FSR1L equ 06h ;# 
  2251  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2252                           FSR1H equ 07h ;# 
  2253  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2254                           BSR equ 08h ;# 
  2255  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2256                           WREG equ 09h ;# 
  2257  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2258                           PCLATH equ 0Ah ;# 
  2259  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2260                           INTCON equ 0Bh ;# 
  2261  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2262                           PORTA equ 0Ch ;# 
  2263  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2264                           PORTC equ 0Eh ;# 
  2265  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2266                           PIR1 equ 011h ;# 
  2267  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2268                           PIR2 equ 012h ;# 
  2269  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2270                           PIR3 equ 013h ;# 
  2271  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2272                           TMR0 equ 015h ;# 
  2273  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2274                           TMR1 equ 016h ;# 
  2275  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2276                           TMR1L equ 016h ;# 
  2277  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2278                           TMR1H equ 017h ;# 
  2279  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2280                           T1CON equ 018h ;# 
  2281  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2282                           T1GCON equ 019h ;# 
  2283  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2284                           TMR2 equ 01Ah ;# 
  2285  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2286                           PR2 equ 01Bh ;# 
  2287  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2288                           T2CON equ 01Ch ;# 
  2289  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2290                           TRISA equ 08Ch ;# 
  2291  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2292                           TRISC equ 08Eh ;# 
  2293  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2294                           PIE1 equ 091h ;# 
  2295  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2296                           PIE2 equ 092h ;# 
  2297  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2298                           PIE3 equ 093h ;# 
  2299  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2300                           OPTION_REG equ 095h ;# 
  2301  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2302                           PCON equ 096h ;# 
  2303  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2304                           WDTCON equ 097h ;# 
  2305  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2306                           OSCTUNE equ 098h ;# 
  2307  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2308                           OSCCON equ 099h ;# 
  2309  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2310                           OSCSTAT equ 09Ah ;# 
  2311  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2312                           ADRES equ 09Bh ;# 
  2313  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2314                           ADRESL equ 09Bh ;# 
  2315  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2316                           ADRESH equ 09Ch ;# 
  2317  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2318                           ADCON0 equ 09Dh ;# 
  2319  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2320                           ADCON1 equ 09Eh ;# 
  2321  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2322                           ADCON2 equ 09Fh ;# 
  2323  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2324                           LATA equ 010Ch ;# 
  2325  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2326                           LATC equ 010Eh ;# 
  2327  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2328                           BORCON equ 0116h ;# 
  2329  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2330                           FVRCON equ 0117h ;# 
  2331  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2332                           ZCD1CON equ 011Ch ;# 
  2333  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2334                           ANSELA equ 018Ch ;# 
  2335  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2336                           ANSELC equ 018Eh ;# 
  2337  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2338                           PMADR equ 0191h ;# 
  2339  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2340                           PMADRL equ 0191h ;# 
  2341  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2342                           PMADRH equ 0192h ;# 
  2343  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2344                           PMDAT equ 0193h ;# 
  2345  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2346                           PMDATL equ 0193h ;# 
  2347  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2348                           PMDATH equ 0194h ;# 
  2349  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2350                           PMCON1 equ 0195h ;# 
  2351  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2352                           PMCON2 equ 0196h ;# 
  2353  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2354                           VREGCON equ 0197h ;# 
  2355  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2356                           WPUA equ 020Ch ;# 
  2357  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2358                           WPUC equ 020Eh ;# 
  2359  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2360                           SSP1BUF equ 0211h ;# 
  2361  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2362                           SSPBUF equ 0211h ;# 
  2363  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2364                           SSP1ADD equ 0212h ;# 
  2365  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2366                           SSPADD equ 0212h ;# 
  2367  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2368                           SSP1MSK equ 0213h ;# 
  2369  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2370                           SSPMSK equ 0213h ;# 
  2371  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2372                           SSP1STAT equ 0214h ;# 
  2373  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2374                           SSPSTAT equ 0214h ;# 
  2375  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2376                           SSP1CON1 equ 0215h ;# 
  2377  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2378                           SSPCON equ 0215h ;# 
  2379  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2380                           SSPCON1 equ 0215h ;# 
  2381  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2382                           SSP1CON equ 0215h ;# 
  2383  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2384                           SSP1CON2 equ 0216h ;# 
  2385  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2386                           SSPCON2 equ 0216h ;# 
  2387  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2388                           SSP1CON3 equ 0217h ;# 
  2389  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2390                           SSPCON3 equ 0217h ;# 
  2391  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2392                           ODCONA equ 028Ch ;# 
  2393  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2394                           ODCONC equ 028Eh ;# 
  2395  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2396                           CCPR1 equ 0291h ;# 
  2397  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2398                           CCPR1L equ 0291h ;# 
  2399  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2400                           CCPR1H equ 0292h ;# 
  2401  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2402                           CCP1CON equ 0293h ;# 
  2403  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2404                           ECCP1CON equ 0293h ;# 
  2405  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2406                           CCPR2 equ 0298h ;# 
  2407  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2408                           CCPR2L equ 0298h ;# 
  2409  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2410                           CCPR2H equ 0299h ;# 
  2411  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2412                           CCP2CON equ 029Ah ;# 
  2413  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2414                           ECCP2CON equ 029Ah ;# 
  2415  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2416                           SLRCONA equ 030Ch ;# 
  2417  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2418                           SLRCONC equ 030Eh ;# 
  2419  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2420                           INLVLA equ 038Ch ;# 
  2421  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2422                           INLVLC equ 038Eh ;# 
  2423  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2424                           IOCAP equ 0391h ;# 
  2425  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2426                           IOCAN equ 0392h ;# 
  2427  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2428                           IOCAF equ 0393h ;# 
  2429  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2430                           IOCCP equ 0397h ;# 
  2431  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2432                           IOCCN equ 0398h ;# 
  2433  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2434                           IOCCF equ 0399h ;# 
  2435  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2436                           OPA1CON equ 0511h ;# 
  2437  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2438                           OPA2CON equ 0515h ;# 
  2439  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2440                           PPSLOCK equ 0E0Fh ;# 
  2441  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2442                           INTPPS equ 0E10h ;# 
  2443  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2444                           T0CKIPPS equ 0E11h ;# 
  2445  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2446                           T1CKIPPS equ 0E12h ;# 
  2447  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2448                           T1GPPS equ 0E13h ;# 
  2449  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2450                           CCP1PPS equ 0E14h ;# 
  2451  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2452                           CCP2PPS equ 0E15h ;# 
  2453  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2454                           SSPCLKPPS equ 0E20h ;# 
  2455  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2456                           SSPDATPPS equ 0E21h ;# 
  2457  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2458                           SSPSSPPS equ 0E22h ;# 
  2459  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2460                           RA0PPS equ 0E90h ;# 
  2461  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2462                           RA1PPS equ 0E91h ;# 
  2463  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2464                           RA2PPS equ 0E92h ;# 
  2465  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2466                           RA4PPS equ 0E94h ;# 
  2467  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2468                           RA5PPS equ 0E95h ;# 
  2469  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2470                           RC0PPS equ 0EA0h ;# 
  2471  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2472                           RC1PPS equ 0EA1h ;# 
  2473  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2474                           RC2PPS equ 0EA2h ;# 
  2475  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2476                           RC3PPS equ 0EA3h ;# 
  2477  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2478                           RC4PPS equ 0EA4h ;# 
  2479  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2480                           RC5PPS equ 0EA5h ;# 
  2481  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2482                           ICDBK0H equ 0F9Eh ;# 
  2483  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2484                           STATUS_SHAD equ 0FE4h ;# 
  2485  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2486                           WREG_SHAD equ 0FE5h ;# 
  2487  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2488                           BSR_SHAD equ 0FE6h ;# 
  2489  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2490                           PCLATH_SHAD equ 0FE7h ;# 
  2491  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2492                           FSR0L_SHAD equ 0FE8h ;# 
  2493  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2494                           FSR0H_SHAD equ 0FE9h ;# 
  2495  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2496                           FSR1L_SHAD equ 0FEAh ;# 
  2497  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2498                           FSR1H_SHAD equ 0FEBh ;# 
  2499  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2500                           STKPTR equ 0FEDh ;# 
  2501  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2502                           TOSL equ 0FEEh ;# 
  2503  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2504                           TOSH equ 0FEFh ;# 
  2505  0FEF                     	FNCALL	_main,_MTOUCH_Button_isPressed
  2506                           	FNCALL	_main,_MTOUCH_Service_Mainloop
  2507                           	FNCALL	_main,_SYSTEM_Initialize
  2508                           	FNCALL	_SYSTEM_Initialize,_MTOUCH_Initialize
  2509                           	FNCALL	_SYSTEM_Initialize,_OSCILLATOR_Initialize
  2510                           	FNCALL	_SYSTEM_Initialize,_PIN_MANAGER_Initialize
  2511                           	FNCALL	_SYSTEM_Initialize,_TMR2_Initialize
  2512                           	FNCALL	_SYSTEM_Initialize,_WDT_Initialize
  2513                           	FNCALL	_TMR2_Initialize,_TMR2_SetInterruptHandler
  2514                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Button_InitializeAll
  2515                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_InitializeAll
  2516                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_Sampled_ResetAll
  2517                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_Scan_Initialize
  2518                           	FNCALL	_MTOUCH_Sensor_InitializeAll,_MTOUCH_Sensor_Enable
  2519                           	FNCALL	_MTOUCH_Sensor_InitializeAll,_Sensor_Sampled_Reset
  2520                           	FNCALL	_MTOUCH_Sensor_Enable,___bmul
  2521                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Button_ServiceAll
  2522                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Sensor_SampleAll
  2523                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Sensor_Sampled_ResetAll
  2524                           	FNCALL	_MTOUCH_Sensor_Sampled_ResetAll,_Sensor_Sampled_Reset
  2525                           	FNCALL	_MTOUCH_Sensor_SampleAll,_Sensor_Service
  2526                           	FNCALL	_Sensor_Service,_Sensor_Acquisition
  2527                           	FNCALL	_Sensor_Service,_Sensor_DefaultCallback
  2528                           	FNCALL	_Sensor_Service,_Sensor_RawSample_Update
  2529                           	FNCALL	_Sensor_Service,_Sensor_setSampled
  2530                           	FNCALL	_Sensor_Service,___bmul
  2531                           	FNCALL	_Sensor_Acquisition,_Sensor_Acq_ExecutePacket
  2532                           	FNCALL	_Sensor_Acquisition,_Sensor_Scanfrequency_Evaluation
  2533                           	FNCALL	_Sensor_Acquisition,_Sensor_setActive
  2534                           	FNCALL	_Sensor_Acquisition,_Sensor_setInactive
  2535                           	FNCALL	_Sensor_Acquisition,_abs
  2536                           	FNCALL	_Sensor_Scanfrequency_Evaluation,_Sensor_Acq_ExecutePacket
  2537                           	FNCALL	_Sensor_Acq_ExecutePacket,_MTOUCH_Sensor_Scan_Initialize
  2538                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_LoadPeriodRegister
  2539                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_SetInterruptHandler
  2540                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_StartTimer
  2541                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_StopTimer
  2542                           	FNCALL	_MTOUCH_Button_ServiceAll,_Button_Service
  2543                           	FNCALL	_Button_Service,_Button_Deviation_Update
  2544                           	FNCALL	_Button_Service,_Button_Reading_Update
  2545                           	FNCALL	_Button_Service,_Button_State_Initializing
  2546                           	FNCALL	_Button_Service,_Button_State_NotPressed
  2547                           	FNCALL	_Button_Service,_Button_State_Pressed
  2548                           	FNCALL	_Button_Service,_MTOUCH_Sensor_isCalibrated
  2549                           	FNCALL	_Button_Service,_MTOUCH_Sensor_wasSampled
  2550                           	FNCALL	_MTOUCH_Sensor_wasSampled,___bmul
  2551                           	FNCALL	_Button_State_Pressed,_Button_DefaultCallback
  2552                           	FNCALL	_Button_State_NotPressed,_Button_Baseline_Update
  2553                           	FNCALL	_Button_State_NotPressed,_Button_DefaultCallback
  2554                           	FNCALL	_Button_State_Initializing,_Button_Baseline_Initialize
  2555                           	FNCALL	_Button_State_Initializing,_Button_Baseline_Update
  2556                           	FNCALL	_Button_Baseline_Initialize,_MTOUCH_Sensor_RawSample_Get
  2557                           	FNCALL	_Button_Reading_Update,_MTOUCH_Sensor_RawSample_Get
  2558                           	FNCALL	_MTOUCH_Sensor_RawSample_Get,___bmul
  2559                           	FNROOT	_main
  2560                           	FNCALL	_INTERRUPT_InterruptManager,_TMR2_ISR
  2561                           	FNCALL	_TMR2_ISR,_Sensor_Acq_ExecuteScan
  2562                           	FNCALL	_TMR2_ISR,_TMR2_DefaultInterruptHandler
  2563                           	FNCALL	_Sensor_Acq_ExecuteScan,_MTOUCH_CVD_ScanA_0
  2564                           	FNCALL	_Sensor_Acq_ExecuteScan,_MTOUCH_CVD_ScanB_0
  2565                           	FNCALL	_Sensor_Acq_ExecuteScan,i1___bmul
  2566                           	FNCALL	_Sensor_Acq_ExecuteScan,i1_abs
  2567                           	FNCALL	intlevel1,_INTERRUPT_InterruptManager
  2568                           	global	intlevel1
  2569                           	FNROOT	intlevel1
  2570                           	global	_Button_StateMachine
  2571                           	global	_callback_notPressed
  2572                           	global	_callback_pressed
  2573                           	global	_callback_sampled
  2574                           	global	_sample_period
  2575                           	global	_mtouch_button
  2576                           	global	_mtouch_sensor
  2577                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  2578                           global __pidataBANK0
  2579                           __pidataBANK0:
  2580  05AA                     	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2581                           	line	116
  2582                           
  2583                           ;initializer for _Button_StateMachine
  2584                           	retlw	low(_Button_State_Initializing)
  2585  05AA  34EB               	retlw	high(_Button_State_Initializing)
  2586  05AB  3403               
  2587                           	retlw	low(_Button_State_NotPressed)
  2588  05AC  3476               	retlw	high(_Button_State_NotPressed)
  2589  05AD  3401               
  2590                           	retlw	low(_Button_State_Pressed)
  2591  05AE  34AC               	retlw	high(_Button_State_Pressed)
  2592  05AF  3404               
  2593                           	line	108
  2594                           
  2595                           ;initializer for _callback_notPressed
  2596                           	retlw	low(_Button_DefaultCallback)
  2597  05B0  34DE               	retlw	high(_Button_DefaultCallback)
  2598  05B1  3407               
  2599                           	line	107
  2600                           
  2601                           ;initializer for _callback_pressed
  2602                           	retlw	low(_Button_DefaultCallback)
  2603  05B2  34DE               	retlw	high(_Button_DefaultCallback)
  2604  05B3  3407               
  2605                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2606                           	line	77
  2607                           
  2608                           ;initializer for _callback_sampled
  2609                           	retlw	low(_Sensor_DefaultCallback)
  2610  05B4  34DD               	retlw	high(_Sensor_DefaultCallback)
  2611  05B5  3407               
  2612                           	line	88
  2613                           
  2614                           ;initializer for _sample_period
  2615                           	retlw	0C8h
  2616  05B6  34C8               	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2617                           	line	74
  2618                           
  2619                           ;initializer for _mtouch_button
  2620                           	retlw	low(0)
  2621  05B7  3400               	retlw	low(0)
  2622  05B8  3400               	retlw	low(0)
  2623  05B9  3400               	retlw	low(0)
  2624  05BA  3400               	retlw	high(0)
  2625  05BB  3400               
  2626                           	retlw	low(0)
  2627  05BC  3400               	retlw	high(0)
  2628  05BD  3400               	retlw	low highword(0)
  2629  05BE  3400               	retlw	high highword(0)
  2630  05BF  3400               
  2631                           	retlw	low(0)
  2632  05C0  3400               	retlw	low(0)
  2633  05C1  3400               	retlw	high(0)
  2634  05C2  3400               
  2635                           	retlw	low(0)
  2636  05C3  3400               	retlw	high(0)
  2637  05C4  3400               
  2638                           	retlw	064h
  2639  05C5  3464               	retlw	01h
  2640  05C6  3401               	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2641                           	line	97
  2642                           
  2643                           ;initializer for _mtouch_sensor
  2644                           	retlw	low(0)
  2645  05C7  3400               	retlw	low(_MTOUCH_CVD_ScanA_0)
  2646  05C8  34F4               	retlw	high(_MTOUCH_CVD_ScanA_0)
  2647  05C9  3405               
  2648                           	retlw	low(_MTOUCH_CVD_ScanB_0)
  2649  05CA  34D0               	retlw	high(_MTOUCH_CVD_ScanB_0)
  2650  05CB  3405               
  2651                           	retlw	020h
  2652  05CC  3420               	retlw	low(0)
  2653  05CD  3400               	retlw	high(0)
  2654  05CE  3400               
  2655                           	retlw	low(0)
  2656  05CF  3400               	global	Sensor_Scanfrequency_Evaluation@frequency_hop
  2657                           psect	stringtext1,class=STRCODE,delta=2,noexec
  2658                           global __pstringtext1
  2659                           __pstringtext1:
  2660  07B6                     	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2661                           	line	338
  2662                           Sensor_Scanfrequency_Evaluation@frequency_hop:
  2663  07B6                     	retlw	03h
  2664  07B6  3403               	retlw	0Dh
  2665  07B7  340D               	retlw	0Eh
  2666  07B8  340E               	retlw	014h
  2667  07B9  3414               	retlw	0Dh
  2668  07BA  340D               	global __end_ofSensor_Scanfrequency_Evaluation@frequency_hop
  2669                           __end_ofSensor_Scanfrequency_Evaluation@frequency_hop:
  2670  07BB                     	global	Sensor_Scanfrequency_Evaluation@frequency_hop
  2671                           	global	Sensor_Acq_ExecuteScan@last_b
  2672                           	global	Sensor_Acq_ExecuteScan@last_a
  2673                           	global	_packet_counter
  2674                           	global	_currentScannSensor
  2675                           	global	_packet_noise
  2676                           	global	_packet_sample
  2677                           	global	_sensor_globalFlags
  2678                           	global	_TMR2_InterruptHandler
  2679                           psect	nvBANK0,class=BANK0,space=1,noexec
  2680                           global __pnvBANK0
  2681                           __pnvBANK0:
  2682  0068                     _TMR2_InterruptHandler:
  2683  0068                            ds      2
  2684  0068                     
  2685                           	global	_T2CONbits
  2686                           _T2CONbits	set	0x1C
  2687  001C                     	global	_T2CON
  2688                           _T2CON	set	0x1C
  2689  001C                     	global	_TMR2
  2690                           _TMR2	set	0x1A
  2691  001A                     	global	_PR2
  2692                           _PR2	set	0x1B
  2693  001B                     	global	_PIR1bits
  2694                           _PIR1bits	set	0x11
  2695  0011                     	global	_INTCONbits
  2696                           _INTCONbits	set	0xB
  2697  000B                     	global	_GIE
  2698                           _GIE	set	0x5F
  2699  005F                     	global	_ADRES
  2700                           _ADRES	set	0x9B
  2701  009B                     	global	_ADCON2
  2702                           _ADCON2	set	0x9F
  2703  009F                     	global	_ADCON1
  2704                           _ADCON1	set	0x9E
  2705  009E                     	global	_ADCON0
  2706                           _ADCON0	set	0x9D
  2707  009D                     	global	_TRISCbits
  2708                           _TRISCbits	set	0x8E
  2709  008E                     	global	_OPTION_REGbits
  2710                           _OPTION_REGbits	set	0x95
  2711  0095                     	global	_TRISC
  2712                           _TRISC	set	0x8E
  2713  008E                     	global	_TRISA
  2714                           _TRISA	set	0x8C
  2715  008C                     	global	_PIE1bits
  2716                           _PIE1bits	set	0x91
  2717  0091                     	global	_WDTCON
  2718                           _WDTCON	set	0x97
  2719  0097                     	global	_OSCTUNE
  2720                           _OSCTUNE	set	0x98
  2721  0098                     	global	_OSCSTAT
  2722                           _OSCSTAT	set	0x9A
  2723  009A                     	global	_OSCCON
  2724                           _OSCCON	set	0x99
  2725  0099                     	global	_LATCbits
  2726                           _LATCbits	set	0x10E
  2727  010E                     	global	_LATC
  2728                           _LATC	set	0x10E
  2729  010E                     	global	_LATA
  2730                           _LATA	set	0x10C
  2731  010C                     	global	_BORCON
  2732                           _BORCON	set	0x116
  2733  0116                     	global	_ANSELCbits
  2734                           _ANSELCbits	set	0x18E
  2735  018E                     	global	_ANSELA
  2736                           _ANSELA	set	0x18C
  2737  018C                     	global	_ANSELC
  2738                           _ANSELC	set	0x18E
  2739  018E                     	global	_WPUCbits
  2740                           _WPUCbits	set	0x20E
  2741  020E                     	global	_WPUC
  2742                           _WPUC	set	0x20E
  2743  020E                     	global	_WPUA
  2744                           _WPUA	set	0x20C
  2745  020C                     	global	_ODCONC
  2746                           _ODCONC	set	0x28E
  2747  028E                     	global	_ODCONA
  2748                           _ODCONA	set	0x28C
  2749  028C                     ; #config settings
  2750                           global __CFG_FOSC$INTOSC
  2751                           __CFG_FOSC$INTOSC equ 0x0
  2752  0000                     global __CFG_WDTE$OFF
  2753                           __CFG_WDTE$OFF equ 0x0
  2754  0000                     global __CFG_PWRTE$OFF
  2755                           __CFG_PWRTE$OFF equ 0x0
  2756  0000                     global __CFG_MCLRE$ON
  2757                           __CFG_MCLRE$ON equ 0x0
  2758  0000                     global __CFG_CP$OFF
  2759                           __CFG_CP$OFF equ 0x0
  2760  0000                     global __CFG_BOREN$OFF
  2761                           __CFG_BOREN$OFF equ 0x0
  2762  0000                     global __CFG_CLKOUTEN$OFF
  2763                           __CFG_CLKOUTEN$OFF equ 0x0
  2764  0000                     global __CFG_WRT$OFF
  2765                           __CFG_WRT$OFF equ 0x0
  2766  0000                     global __CFG_PPS1WAY$ON
  2767                           __CFG_PPS1WAY$ON equ 0x0
  2768  0000                     global __CFG_ZCDDIS$ON
  2769                           __CFG_ZCDDIS$ON equ 0x0
  2770  0000                     global __CFG_PLLEN$ON
  2771                           __CFG_PLLEN$ON equ 0x0
  2772  0000                     global __CFG_STVREN$ON
  2773                           __CFG_STVREN$ON equ 0x0
  2774  0000                     global __CFG_BORV$LO
  2775                           __CFG_BORV$LO equ 0x0
  2776  0000                     global __CFG_LPBOR$OFF
  2777                           __CFG_LPBOR$OFF equ 0x0
  2778  0000                     global __CFG_LVP$ON
  2779                           __CFG_LVP$ON equ 0x0
  2780  0000                     	file	"C:\Users\zhgao\AppData\Local\Temp\s4g4."
  2781                           	line	#
  2782                           psect cinit,class=CODE,delta=2
  2783                           global start_initialization
  2784                           start_initialization:
  2785  001E                     
  2786                           global __initialization
  2787                           __initialization:
  2788  001E                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2789                           global __pbssCOMMON
  2790                           __pbssCOMMON:
  2791  0078                     Sensor_Acq_ExecuteScan@last_b:
  2792  0078                            ds      2
  2793  0078                     
  2794                           Sensor_Acq_ExecuteScan@last_a:
  2795  007A                            ds      2
  2796  007A                     
  2797                           _packet_counter:
  2798  007C                            ds      1
  2799  007C                     
  2800                           _currentScannSensor:
  2801  007D                            ds      1
  2802  007D                     
  2803                           psect	bssBANK0,class=BANK0,space=1,noexec
  2804                           global __pbssBANK0
  2805                           __pbssBANK0:
  2806  0063                     _packet_noise:
  2807  0063                            ds      2
  2808  0063                     
  2809                           _packet_sample:
  2810  0065                            ds      2
  2811  0065                     
  2812                           _sensor_globalFlags:
  2813  0067                            ds      1
  2814  0067                     
  2815                           psect	dataBANK0,class=BANK0,space=1,noexec
  2816                           global __pdataBANK0
  2817                           __pdataBANK0:
  2818  0020                     	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2819                           	line	116
  2820                           _Button_StateMachine:
  2821  0020                            ds      6
  2822  0020                     
  2823                           psect	dataBANK0
  2824                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2825                           	line	108
  2826                           _callback_notPressed:
  2827  0026                            ds      2
  2828  0026                     
  2829                           psect	dataBANK0
  2830                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2831                           	line	107
  2832                           _callback_pressed:
  2833  0028                            ds      2
  2834  0028                     
  2835                           psect	dataBANK0
  2836                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2837                           	line	77
  2838                           _callback_sampled:
  2839  002A                            ds      2
  2840  002A                     
  2841                           psect	dataBANK0
  2842                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2843                           	line	88
  2844                           _sample_period:
  2845  002C                            ds      1
  2846  002C                     
  2847                           psect	dataBANK0
  2848                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2849                           	line	74
  2850                           _mtouch_button:
  2851  002D                            ds      16
  2852  002D                     
  2853                           psect	dataBANK0
  2854                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2855                           	line	97
  2856                           _mtouch_sensor:
  2857  003D                            ds      9
  2858  003D                     
  2859                           	file	"C:\Users\zhgao\AppData\Local\Temp\s4g4."
  2860                           	line	#
  2861                           psect inittext,class=CODE,delta=2
  2862                           global init_ram,btemp
  2863                           init_ram:
  2864  07AA                     	movwf btemp,f
  2865  07AA  00FE               initloop:
  2866  07AB                     	moviw fsr0++
  2867  07AB  0012               	movwi fsr1++
  2868  07AC  001E               	decfsz btemp
  2869  07AD  0BFE               	goto initloop
  2870  07AE  2FAB               	retlw 0
  2871  07AF  3400               ; Initialize objects allocated to BANK0
  2872                           	global __pidataBANK0,__pdataBANK0
  2873                           psect cinit,class=CODE,delta=2,merge=1
  2874                           	movlw low(__pidataBANK0)
  2875  001E  30AA               	movwf fsr0l
  2876  001F  0084               	movlw high(__pidataBANK0)|80h
  2877  0020  3085               	movwf fsr0h
  2878  0021  0085               	movlw low(__pdataBANK0)
  2879  0022  3020               	movwf fsr1l
  2880  0023  0086               	movlw high(__pdataBANK0)
  2881  0024  3000               	movwf fsr1h
  2882  0025  0087               	movlw 026h
  2883  0026  3026               	fcall init_ram
  2884  0027  3187  27AA  3180   	line	#
  2885                           ; Clear objects allocated to COMMON
  2886                           psect cinit,class=CODE,delta=2,merge=1
  2887                           	global __pbssCOMMON
  2888                           	clrf	((__pbssCOMMON)+0)&07Fh
  2889  002A  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
  2890  002B  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
  2891  002C  01FA               	clrf	((__pbssCOMMON)+3)&07Fh
  2892  002D  01FB               	clrf	((__pbssCOMMON)+4)&07Fh
  2893  002E  01FC               	clrf	((__pbssCOMMON)+5)&07Fh
  2894  002F  01FD               ; Clear objects allocated to BANK0
  2895                           psect cinit,class=CODE,delta=2,merge=1
  2896                           	global __pbssBANK0
  2897                           	clrf	((__pbssBANK0)+0)&07Fh
  2898  0030  01E3               	clrf	((__pbssBANK0)+1)&07Fh
  2899  0031  01E4               	clrf	((__pbssBANK0)+2)&07Fh
  2900  0032  01E5               	clrf	((__pbssBANK0)+3)&07Fh
  2901  0033  01E6               	clrf	((__pbssBANK0)+4)&07Fh
  2902  0034  01E7               psect cinit,class=CODE,delta=2,merge=1
  2903                           global end_of_initialization,__end_of__initialization
  2904                           
  2905                           ;End of C runtime variable initialization code
  2906                           
  2907                           end_of_initialization:
  2908  0035                     __end_of__initialization:
  2909  0035                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2910  0035  107E               movlb 0
  2911  0036  0020               ljmp _main	;jump to C main() function
  2912  0037  2E18               psect	cstackCOMMON,class=COMMON,space=1,noexec
  2913                           global __pcstackCOMMON
  2914                           __pcstackCOMMON:
  2915  0070                     ?_PIN_MANAGER_Initialize:	; 1 bytes @ 0x0
  2916  0070                     ?_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2917  0070                     ?_WDT_Initialize:	; 1 bytes @ 0x0
  2918  0070                     ?_TMR2_Initialize:	; 1 bytes @ 0x0
  2919  0070                     ?_MTOUCH_Initialize:	; 1 bytes @ 0x0
  2920  0070                     ?_TMR2_ISR:	; 1 bytes @ 0x0
  2921  0070                     ?_TMR2_DefaultInterruptHandler:	; 1 bytes @ 0x0
  2922  0070                     ??_TMR2_DefaultInterruptHandler:	; 1 bytes @ 0x0
  2923  0070                     ?_MTOUCH_Sensor_InitializeAll:	; 1 bytes @ 0x0
  2924  0070                     ?_MTOUCH_Button_InitializeAll:	; 1 bytes @ 0x0
  2925  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	; 1 bytes @ 0x0
  2926  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	; 1 bytes @ 0x0
  2927  0070                     ?_MTOUCH_Sensor_SampleAll:	; 1 bytes @ 0x0
  2928  0070                     ?_MTOUCH_Button_ServiceAll:	; 1 bytes @ 0x0
  2929  0070                     ?_MTOUCH_CVD_ScanA_0:	; 1 bytes @ 0x0
  2930  0070                     ??_MTOUCH_CVD_ScanA_0:	; 1 bytes @ 0x0
  2931  0070                     ?_MTOUCH_CVD_ScanB_0:	; 1 bytes @ 0x0
  2932  0070                     ??_MTOUCH_CVD_ScanB_0:	; 1 bytes @ 0x0
  2933  0070                     ?_MTOUCH_Sensor_Enable:	; 1 bytes @ 0x0
  2934  0070                     ?_Sensor_Sampled_Reset:	; 1 bytes @ 0x0
  2935  0070                     ?_Sensor_Service:	; 1 bytes @ 0x0
  2936  0070                     ?_Sensor_Acquisition:	; 1 bytes @ 0x0
  2937  0070                     ?_Sensor_RawSample_Update:	; 1 bytes @ 0x0
  2938  0070                     ?_Sensor_setSampled:	; 1 bytes @ 0x0
  2939  0070                     ?_Sensor_Acq_ExecutePacket:	; 1 bytes @ 0x0
  2940  0070                     ?_Sensor_setActive:	; 1 bytes @ 0x0
  2941  0070                     ?_Sensor_Scanfrequency_Evaluation:	; 1 bytes @ 0x0
  2942  0070                     ?_Sensor_setInactive:	; 1 bytes @ 0x0
  2943  0070                     ?_Sensor_Acq_ExecuteScan:	; 1 bytes @ 0x0
  2944  0070                     ?_Button_Service:	; 1 bytes @ 0x0
  2945  0070                     ?_Button_Reading_Update:	; 1 bytes @ 0x0
  2946  0070                     ?_Button_Deviation_Update:	; 1 bytes @ 0x0
  2947  0070                     ?_Button_Baseline_Initialize:	; 1 bytes @ 0x0
  2948  0070                     ?_Button_Baseline_Update:	; 1 bytes @ 0x0
  2949  0070                     ?_SYSTEM_Initialize:	; 1 bytes @ 0x0
  2950  0070                     ?_INTERRUPT_InterruptManager:	; 1 bytes @ 0x0
  2951  0070                     ?_TMR2_StartTimer:	; 1 bytes @ 0x0
  2952  0070                     ?_TMR2_StopTimer:	; 1 bytes @ 0x0
  2953  0070                     ?_TMR2_LoadPeriodRegister:	; 1 bytes @ 0x0
  2954  0070                     ?_MTOUCH_Service_Mainloop:	; 1 bytes @ 0x0
  2955  0070                     ?_MTOUCH_Sensor_isCalibrated:	; 1 bytes @ 0x0
  2956  0070                     ?_MTOUCH_Sensor_wasSampled:	; 1 bytes @ 0x0
  2957  0070                     ?_MTOUCH_Button_isPressed:	; 1 bytes @ 0x0
  2958  0070                     ?_main:	; 1 bytes @ 0x0
  2959  0070                     ?i1___bmul:	; 1 bytes @ 0x0
  2960  0070                     	global	?i1_abs
  2961                           ?i1_abs:	; 2 bytes @ 0x0
  2962  0070                     MTOUCH_Sensor_isCalibrated@sensor:	; 1 bytes @ 0x0
  2963  0070                     	global	i1___bmul@multiplicand
  2964                           i1___bmul@multiplicand:	; 1 bytes @ 0x0
  2965  0070                     	global	i1abs@a
  2966                           i1abs@a:	; 2 bytes @ 0x0
  2967  0070                     	ds	1
  2968  0070                     ??i1___bmul:	; 1 bytes @ 0x1
  2969  0071                     	ds	1
  2970  0071                     ??i1_abs:	; 1 bytes @ 0x2
  2971  0072                     	global	i1___bmul@multiplier
  2972                           i1___bmul@multiplier:	; 1 bytes @ 0x2
  2973  0072                     	ds	1
  2974  0072                     	global	i1___bmul@product
  2975                           i1___bmul@product:	; 1 bytes @ 0x3
  2976  0073                     	ds	1
  2977  0073                     ??_Sensor_Acq_ExecuteScan:	; 1 bytes @ 0x4
  2978  0074                     	ds	2
  2979  0074                     	global	Sensor_Acq_ExecuteScan@result
  2980                           Sensor_Acq_ExecuteScan@result:	; 2 bytes @ 0x6
  2981  0076                     	ds	2
  2982  0076                     ??_TMR2_ISR:	; 1 bytes @ 0x8
  2983  0078                     ??_INTERRUPT_InterruptManager:	; 1 bytes @ 0x8
  2984  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2985                           global __pcstackBANK0
  2986                           __pcstackBANK0:
  2987  0046                     ??_PIN_MANAGER_Initialize:	; 1 bytes @ 0x0
  2988  0046                     ??_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2989  0046                     ??_WDT_Initialize:	; 1 bytes @ 0x0
  2990  0046                     ?_TMR2_SetInterruptHandler:	; 1 bytes @ 0x0
  2991  0046                     ??_MTOUCH_Button_InitializeAll:	; 1 bytes @ 0x0
  2992  0046                     ??_MTOUCH_Sensor_Scan_Initialize:	; 1 bytes @ 0x0
  2993  0046                     ?_Sensor_DefaultCallback:	; 1 bytes @ 0x0
  2994  0046                     ??_Sensor_Sampled_Reset:	; 1 bytes @ 0x0
  2995  0046                     ??_Sensor_RawSample_Update:	; 1 bytes @ 0x0
  2996  0046                     ??_Sensor_setSampled:	; 1 bytes @ 0x0
  2997  0046                     ??_Sensor_setActive:	; 1 bytes @ 0x0
  2998  0046                     ??_Sensor_setInactive:	; 1 bytes @ 0x0
  2999  0046                     ?_Button_DefaultCallback:	; 1 bytes @ 0x0
  3000  0046                     ??_Button_Deviation_Update:	; 1 bytes @ 0x0
  3001  0046                     ??_Button_Baseline_Update:	; 1 bytes @ 0x0
  3002  0046                     ??_TMR2_StartTimer:	; 1 bytes @ 0x0
  3003  0046                     ??_TMR2_StopTimer:	; 1 bytes @ 0x0
  3004  0046                     ??_TMR2_LoadPeriodRegister:	; 1 bytes @ 0x0
  3005  0046                     ??_MTOUCH_Sensor_isCalibrated:	; 1 bytes @ 0x0
  3006  0046                     ??_MTOUCH_Button_isPressed:	; 1 bytes @ 0x0
  3007  0046                     ?___bmul:	; 1 bytes @ 0x0
  3008  0046                     	global	?_abs
  3009                           ?_abs:	; 2 bytes @ 0x0
  3010  0046                     	global	TMR2_LoadPeriodRegister@periodVal
  3011                           TMR2_LoadPeriodRegister@periodVal:	; 1 bytes @ 0x0
  3012  0046                     	global	Sensor_RawSample_Update@sensor
  3013                           Sensor_RawSample_Update@sensor:	; 1 bytes @ 0x0
  3014  0046                     	global	Sensor_DefaultCallback@sensor
  3015                           Sensor_DefaultCallback@sensor:	; 1 bytes @ 0x0
  3016  0046                     	global	Sensor_setActive@sensor
  3017                           Sensor_setActive@sensor:	; 1 bytes @ 0x0
  3018  0046                     	global	Sensor_setInactive@sensor
  3019                           Sensor_setInactive@sensor:	; 1 bytes @ 0x0
  3020  0046                     	global	Sensor_Sampled_Reset@sensor
  3021                           Sensor_Sampled_Reset@sensor:	; 1 bytes @ 0x0
  3022  0046                     	global	Sensor_setSampled@sensor
  3023                           Sensor_setSampled@sensor:	; 1 bytes @ 0x0
  3024  0046                     	global	Button_DefaultCallback@button
  3025                           Button_DefaultCallback@button:	; 1 bytes @ 0x0
  3026  0046                     	global	___bmul@multiplicand
  3027                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  3028  0046                     	global	TMR2_SetInterruptHandler@InterruptHandler
  3029                           TMR2_SetInterruptHandler@InterruptHandler:	; 2 bytes @ 0x0
  3030  0046                     	global	abs@a
  3031                           abs@a:	; 2 bytes @ 0x0
  3032  0046                     	ds	1
  3033  0046                     ??_MTOUCH_Sensor_Sampled_ResetAll:	; 1 bytes @ 0x1
  3034  0047                     ??_Sensor_DefaultCallback:	; 1 bytes @ 0x1
  3035  0047                     ??_Button_DefaultCallback:	; 1 bytes @ 0x1
  3036  0047                     ??___bmul:	; 1 bytes @ 0x1
  3037  0047                     	global	MTOUCH_Button_isPressed@name
  3038                           MTOUCH_Button_isPressed@name:	; 1 bytes @ 0x1
  3039  0047                     	ds	1
  3040  0047                     ??_TMR2_Initialize:	; 1 bytes @ 0x2
  3041  0048                     ??_TMR2_SetInterruptHandler:	; 1 bytes @ 0x2
  3042  0048                     ??_Sensor_Acq_ExecutePacket:	; 1 bytes @ 0x2
  3043  0048                     ??_abs:	; 1 bytes @ 0x2
  3044  0048                     	global	___bmul@product
  3045                           ___bmul@product:	; 1 bytes @ 0x2
  3046  0048                     	ds	1
  3047  0048                     	global	Sensor_Acq_ExecutePacket@ADCON0_temp
  3048                           Sensor_Acq_ExecutePacket@ADCON0_temp:	; 1 bytes @ 0x3
  3049  0049                     	global	___bmul@multiplier
  3050                           ___bmul@multiplier:	; 1 bytes @ 0x3
  3051  0049                     	ds	1
  3052  0049                     ??_MTOUCH_Sensor_Enable:	; 1 bytes @ 0x4
  3053  004A                     ??_MTOUCH_Sensor_wasSampled:	; 1 bytes @ 0x4
  3054  004A                     	global	?_MTOUCH_Sensor_RawSample_Get
  3055                           ?_MTOUCH_Sensor_RawSample_Get:	; 2 bytes @ 0x4
  3056  004A                     	global	Sensor_Acq_ExecutePacket@ADCON1_temp
  3057                           Sensor_Acq_ExecutePacket@ADCON1_temp:	; 1 bytes @ 0x4
  3058  004A                     	ds	1
  3059  004A                     	global	Sensor_Acq_ExecutePacket@ADCON2_temp
  3060                           Sensor_Acq_ExecutePacket@ADCON2_temp:	; 1 bytes @ 0x5
  3061  004B                     	global	MTOUCH_Sensor_Enable@sensor
  3062                           MTOUCH_Sensor_Enable@sensor:	; 1 bytes @ 0x5
  3063  004B                     	global	MTOUCH_Sensor_wasSampled@sensor
  3064                           MTOUCH_Sensor_wasSampled@sensor:	; 1 bytes @ 0x5
  3065  004B                     	ds	1
  3066  004B                     ??_MTOUCH_Initialize:	; 1 bytes @ 0x6
  3067  004C                     ??_MTOUCH_Sensor_InitializeAll:	; 1 bytes @ 0x6
  3068  004C                     ??_SYSTEM_Initialize:	; 1 bytes @ 0x6
  3069  004C                     ??_MTOUCH_Sensor_RawSample_Get:	; 1 bytes @ 0x6
  3070  004C                     	global	Sensor_Acq_ExecutePacket@error
  3071                           Sensor_Acq_ExecutePacket@error:	; 1 bytes @ 0x6
  3072  004C                     	global	Button_Baseline_Update@button
  3073                           Button_Baseline_Update@button:	; 1 bytes @ 0x6
  3074  004C                     	ds	1
  3075  004C                     	global	Sensor_Acq_ExecutePacket@sensor
  3076                           Sensor_Acq_ExecutePacket@sensor:	; 1 bytes @ 0x7
  3077  004D                     	global	MTOUCH_Sensor_RawSample_Get@name
  3078                           MTOUCH_Sensor_RawSample_Get@name:	; 1 bytes @ 0x7
  3079  004D                     	ds	1
  3080  004D                     ??_Sensor_Scanfrequency_Evaluation:	; 1 bytes @ 0x8
  3081  004E                     ??_Button_Reading_Update:	; 1 bytes @ 0x8
  3082  004E                     ??_Button_Baseline_Initialize:	; 1 bytes @ 0x8
  3083  004E                     	ds	2
  3084  004E                     	global	Button_Deviation_Update@button
  3085                           Button_Deviation_Update@button:	; 1 bytes @ 0xA
  3086  0050                     	global	Button_Reading_Update@button
  3087                           Button_Reading_Update@button:	; 1 bytes @ 0xA
  3088  0050                     	global	Sensor_Scanfrequency_Evaluation@packet_noise_Max
  3089                           Sensor_Scanfrequency_Evaluation@packet_noise_Max:	; 2 bytes @ 0xA
  3090  0050                     	ds	1
  3091  0050                     	global	Button_Deviation_Update@deviation
  3092                           Button_Deviation_Update@deviation:	; 4 bytes @ 0xB
  3093  0051                     	ds	1
  3094  0051                     	global	Button_Baseline_Initialize@button
  3095                           Button_Baseline_Initialize@button:	; 1 bytes @ 0xC
  3096  0052                     	global	Sensor_Scanfrequency_Evaluation@best_packet_sample
  3097                           Sensor_Scanfrequency_Evaluation@best_packet_sample:	; 2 bytes @ 0xC
  3098  0052                     	ds	1
  3099  0052                     ?_Button_State_Initializing:	; 1 bytes @ 0xD
  3100  0053                     ?_Button_State_NotPressed:	; 1 bytes @ 0xD
  3101  0053                     ?_Button_State_Pressed:	; 1 bytes @ 0xD
  3102  0053                     	global	Button_State_Initializing@button
  3103                           Button_State_Initializing@button:	; 1 bytes @ 0xD
  3104  0053                     	global	Button_State_NotPressed@button
  3105                           Button_State_NotPressed@button:	; 1 bytes @ 0xD
  3106  0053                     	global	Button_State_Pressed@button
  3107                           Button_State_Pressed@button:	; 1 bytes @ 0xD
  3108  0053                     	ds	1
  3109  0053                     ??_Button_State_Initializing:	; 1 bytes @ 0xE
  3110  0054                     ??_Button_State_NotPressed:	; 1 bytes @ 0xE
  3111  0054                     ??_Button_State_Pressed:	; 1 bytes @ 0xE
  3112  0054                     	global	Sensor_Scanfrequency_Evaluation@sensor
  3113                           Sensor_Scanfrequency_Evaluation@sensor:	; 1 bytes @ 0xE
  3114  0054                     	ds	1
  3115  0054                     	global	Sensor_Scanfrequency_Evaluation@best_sample_period
  3116                           Sensor_Scanfrequency_Evaluation@best_sample_period:	; 1 bytes @ 0xF
  3117  0055                     	ds	1
  3118  0055                     	global	Sensor_Scanfrequency_Evaluation@retry
  3119                           Sensor_Scanfrequency_Evaluation@retry:	; 1 bytes @ 0x10
  3120  0056                     	ds	1
  3121  0056                     	global	Sensor_Scanfrequency_Evaluation@i
  3122                           Sensor_Scanfrequency_Evaluation@i:	; 1 bytes @ 0x11
  3123  0057                     	ds	1
  3124  0057                     ??_Sensor_Acquisition:	; 1 bytes @ 0x12
  3125  0058                     ??_Button_Service:	; 1 bytes @ 0x12
  3126  0058                     	ds	2
  3127  0058                     	global	Button_Service@name
  3128                           Button_Service@name:	; 1 bytes @ 0x14
  3129  005A                     	ds	1
  3130  005A                     	global	Button_Service@button
  3131                           Button_Service@button:	; 1 bytes @ 0x15
  3132  005B                     	ds	1
  3133  005B                     ??_MTOUCH_Button_ServiceAll:	; 1 bytes @ 0x16
  3134  005C                     	global	Sensor_Acquisition@retry
  3135                           Sensor_Acquisition@retry:	; 1 bytes @ 0x16
  3136  005C                     	ds	1
  3137  005C                     	global	Sensor_Acquisition@sensor
  3138                           Sensor_Acquisition@sensor:	; 1 bytes @ 0x17
  3139  005D                     	ds	1
  3140  005D                     ??_Sensor_Service:	; 1 bytes @ 0x18
  3141  005E                     	ds	2
  3142  005E                     	global	Sensor_Service@error
  3143                           Sensor_Service@error:	; 1 bytes @ 0x1A
  3144  0060                     	ds	1
  3145  0060                     	global	Sensor_Service@name
  3146                           Sensor_Service@name:	; 1 bytes @ 0x1B
  3147  0061                     	ds	1
  3148  0061                     	global	Sensor_Service@sensor
  3149                           Sensor_Service@sensor:	; 1 bytes @ 0x1C
  3150  0062                     	ds	1
  3151  0062                     ??_MTOUCH_Sensor_SampleAll:	; 1 bytes @ 0x1D
  3152  0063                     ??_MTOUCH_Service_Mainloop:	; 1 bytes @ 0x1D
  3153  0063                     ??_main:	; 1 bytes @ 0x1D
  3154  0063                     ;!
  3155                           ;!Data Sizes:
  3156                           ;!    Strings     0
  3157                           ;!    Constant    5
  3158                           ;!    Data        38
  3159                           ;!    BSS         11
  3160                           ;!    Persistent  2
  3161                           ;!    Stack       0
  3162                           ;!
  3163                           ;!Auto Spaces:
  3164                           ;!    Space          Size  Autos    Used
  3165                           ;!    COMMON           14      8      14
  3166                           ;!    BANK0            80     29      74
  3167                           ;!    BANK1            80      0       0
  3168                           ;!    BANK2            80      0       0
  3169                           
  3170                           ;!
  3171                           ;!Pointer List with Targets:
  3172                           ;!
  3173                           ;!    Sensor_Scanfrequency_Evaluation@sensor.scanB	const PTR FTN()void  size(2) Largest 
                                 target is 0
  3174                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3175                           ;!
  3176                           ;!    Sensor_Scanfrequency_Evaluation@sensor.scanA	const PTR FTN()void  size(2) Largest 
                                 target is 0
  3177                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3178                           ;!
  3179                           ;!    Button_Service$1529$0	PTR struct . size(1) Largest target is 16
  3180                           ;!		 -> mtouch_button(BANK0[16]), 
  3181                           ;!
  3182                           ;!    Button_Service$1529	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
  3183                           ;!		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 
                                 
  3184                           ;!
  3185                           ;!    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
  3186                           ;!		 -> mtouch_button(BANK0[16]), 
  3187                           ;!
  3188                           ;!    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
  3189                           ;!		 -> mtouch_button(BANK0[16]), 
  3190                           ;!
  3191                           ;!    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
  3192                           ;!		 -> mtouch_button(BANK0[16]), 
  3193                           ;!
  3194                           ;!    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
  3195                           ;!		 -> mtouch_button(BANK0[16]), 
  3196                           ;!
  3197                           ;!    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
  3198                           ;!		 -> mtouch_button(BANK0[16]), 
  3199                           ;!
  3200                           ;!    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
  3201                           ;!		 -> mtouch_button(BANK0[16]), 
  3202                           ;!
  3203                           ;!    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
  3204                           ;!		 -> mtouch_button(BANK0[16]), 
  3205                           ;!
  3206                           ;!    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
  3207                           ;!		 -> mtouch_button(BANK0[16]), 
  3208                           ;!
  3209                           ;!    Button_Service@button	PTR struct . size(1) Largest target is 16
  3210                           ;!		 -> mtouch_button(BANK0[16]), 
  3211                           ;!
  3212                           ;!    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
  3213                           ;!		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 
                                 
  3214                           ;!
  3215                           ;!    callback_notPressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
  3216                           ;!		 -> Button_DefaultCallback(), 
  3217                           ;!
  3218                           ;!    callback_pressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
  3219                           ;!		 -> Button_DefaultCallback(), 
  3220                           ;!
  3221                           ;!    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3222                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3223                           ;!
  3224                           ;!    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3225                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3226                           ;!
  3227                           ;!    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
  3228                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3229                           ;!
  3230                           ;!    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
                                 
  3231                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3232                           ;!
  3233                           ;!    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
                                 
  3234                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3235                           ;!
  3236                           ;!    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
  3237                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3238                           ;!
  3239                           ;!    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3240                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3241                           ;!
  3242                           ;!    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3243                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3244                           ;!
  3245                           ;!    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 9
  3246                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3247                           ;!
  3248                           ;!    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3249                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3250                           ;!
  3251                           ;!    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3252                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3253                           ;!
  3254                           ;!    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 9
  3255                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3256                           ;!
  3257                           ;!    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3258                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3259                           ;!
  3260                           ;!    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3261                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3262                           ;!
  3263                           ;!    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target i
                                 s 1
  3264                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3265                           ;!
  3266                           ;!    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target i
                                 s 1
  3267                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3268                           ;!
  3269                           ;!    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
  3270                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3271                           ;!
  3272                           ;!    Sensor_Scanfrequency_Evaluation@sensor	PTR struct . size(1) Largest target is 9
  3273                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3274                           ;!
  3275                           ;!    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target 
                                 is 1
  3276                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3277                           ;!
  3278                           ;!    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target 
                                 is 1
  3279                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3280                           ;!
  3281                           ;!    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 9
  3282                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3283                           ;!
  3284                           ;!    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3285                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3286                           ;!
  3287                           ;!    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3288                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3289                           ;!
  3290                           ;!    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 9
  3291                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3292                           ;!
  3293                           ;!    Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
  3294                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3295                           ;!
  3296                           ;!    S358$scanB	const PTR FTN()void  size(2) Largest target is 1
  3297                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3298                           ;!
  3299                           ;!    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3300                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3301                           ;!
  3302                           ;!    S358$scanA	const PTR FTN()void  size(2) Largest target is 1
  3303                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3304                           ;!
  3305                           ;!    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3306                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3307                           ;!
  3308                           ;!    callback_sampled	PTR FTN(enum E2110,)void  size(2) Largest target is 1
  3309                           ;!		 -> Sensor_DefaultCallback(), 
  3310                           ;!
  3311                           ;!    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is
                                  1
  3312                           ;!		 -> Sensor_Acq_ExecuteScan(), TMR2_DefaultInterruptHandler(), 
  3313                           ;!
  3314                           ;!    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
  3315                           ;!		 -> Sensor_Acq_ExecuteScan(), Absolute function(), TMR2_DefaultInterruptHandler(), 

  3316                           ;!
  3317                           
  3318                           
  3319                           ;!
  3320                           ;!Critical Paths under _main in COMMON
  3321                           ;!
  3322                           ;!    None.
  3323                           ;!
  3324                           ;!Critical Paths under _INTERRUPT_InterruptManager in COMMON
  3325                           ;!
  3326                           ;!    _TMR2_ISR->_Sensor_Acq_ExecuteScan
  3327                           ;!    _Sensor_Acq_ExecuteScan->i1___bmul
  3328                           ;!    _Sensor_Acq_ExecuteScan->i1_abs
  3329                           ;!
  3330                           ;!Critical Paths under _main in BANK0
  3331                           ;!
  3332                           ;!    _TMR2_Initialize->_TMR2_SetInterruptHandler
  3333                           ;!    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Enable
  3334                           ;!    _MTOUCH_Sensor_Enable->___bmul
  3335                           ;!    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
  3336                           ;!    _MTOUCH_Sensor_SampleAll->_Sensor_Service
  3337                           ;!    _Sensor_Service->_Sensor_Acquisition
  3338                           ;!    _Sensor_Acquisition->_Sensor_Scanfrequency_Evaluation
  3339                           ;!    _Sensor_Scanfrequency_Evaluation->_Sensor_Acq_ExecutePacket
  3340                           ;!    _Sensor_Acq_ExecutePacket->_TMR2_SetInterruptHandler
  3341                           ;!    _MTOUCH_Button_ServiceAll->_Button_Service
  3342                           ;!    _Button_Service->_Button_State_Initializing
  3343                           ;!    _MTOUCH_Sensor_wasSampled->___bmul
  3344                           ;!    _Button_State_Initializing->_Button_Baseline_Initialize
  3345                           ;!    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
  3346                           ;!    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
  3347                           ;!    _MTOUCH_Sensor_RawSample_Get->___bmul
  3348                           ;!
  3349                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK0
  3350                           ;!
  3351                           ;!    None.
  3352                           ;!
  3353                           ;!Critical Paths under _main in BANK1
  3354                           ;!
  3355                           ;!    None.
  3356                           ;!
  3357                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK1
  3358                           ;!
  3359                           ;!    None.
  3360                           ;!
  3361                           ;!Critical Paths under _main in BANK2
  3362                           ;!
  3363                           ;!    None.
  3364                           ;!
  3365                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK2
  3366                           ;!
  3367                           ;!    None.
  3368                           
  3369 ;;
  3370 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3371 ;;
  3372                           
  3373                           ;!
  3374                           ;!Call Graph Tables:
  3375                           ;!
  3376                           ;! ---------------------------------------------------------------------------------
  3377                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3378                           ;! ---------------------------------------------------------------------------------
  3379                           ;! (0) _main                                                 0     0      0    6122
  3380                           ;!            _MTOUCH_Button_isPressed
  3381                           ;!            _MTOUCH_Service_Mainloop
  3382                           ;!                  _SYSTEM_Initialize
  3383                           ;! ---------------------------------------------------------------------------------
  3384                           ;! (1) _SYSTEM_Initialize                                    0     0      0     653
  3385                           ;!                  _MTOUCH_Initialize
  3386                           ;!              _OSCILLATOR_Initialize
  3387                           ;!             _PIN_MANAGER_Initialize
  3388                           ;!                    _TMR2_Initialize
  3389                           ;!                     _WDT_Initialize
  3390                           ;! ---------------------------------------------------------------------------------
  3391                           ;! (2) _WDT_Initialize                                       0     0      0       0
  3392                           ;! ---------------------------------------------------------------------------------
  3393                           ;! (2) _TMR2_Initialize                                      0     0      0     174
  3394                           ;!           _TMR2_SetInterruptHandler
  3395                           ;! ---------------------------------------------------------------------------------
  3396                           ;! (2) _PIN_MANAGER_Initialize                               0     0      0       0
  3397                           ;! ---------------------------------------------------------------------------------
  3398                           ;! (2) _OSCILLATOR_Initialize                                0     0      0       0
  3399                           ;! ---------------------------------------------------------------------------------
  3400                           ;! (2) _MTOUCH_Initialize                                    0     0      0     479
  3401                           ;!        _MTOUCH_Button_InitializeAll
  3402                           ;!        _MTOUCH_Sensor_InitializeAll
  3403                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3404                           ;!      _MTOUCH_Sensor_Scan_Initialize
  3405                           ;! ---------------------------------------------------------------------------------
  3406                           ;! (3) _MTOUCH_Sensor_InitializeAll                          0     0      0     391
  3407                           ;!               _MTOUCH_Sensor_Enable
  3408                           ;!               _Sensor_Sampled_Reset
  3409                           ;! ---------------------------------------------------------------------------------
  3410                           ;! (4) _MTOUCH_Sensor_Enable                                 2     2      0     303
  3411                           ;!                                              4 BANK0      2     2      0
  3412                           ;!                             ___bmul
  3413                           ;! ---------------------------------------------------------------------------------
  3414                           ;! (3) _MTOUCH_Button_InitializeAll                          0     0      0       0
  3415                           ;! ---------------------------------------------------------------------------------
  3416                           ;! (1) _MTOUCH_Service_Mainloop                              0     0      0    5447
  3417                           ;!           _MTOUCH_Button_ServiceAll
  3418                           ;!            _MTOUCH_Sensor_SampleAll
  3419                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3420                           ;! ---------------------------------------------------------------------------------
  3421                           ;! (3) _MTOUCH_Sensor_Sampled_ResetAll                       0     0      0      88
  3422                           ;!               _Sensor_Sampled_Reset
  3423                           ;! ---------------------------------------------------------------------------------
  3424                           ;! (4) _Sensor_Sampled_Reset                                 1     1      0      88
  3425                           ;!                                              0 BANK0      1     1      0
  3426                           ;! ---------------------------------------------------------------------------------
  3427                           ;! (2) _MTOUCH_Sensor_SampleAll                              0     0      0    2214
  3428                           ;!                     _Sensor_Service
  3429                           ;! ---------------------------------------------------------------------------------
  3430                           ;! (3) _Sensor_Service                                       5     5      0    2214
  3431                           ;!                                             24 BANK0      5     5      0
  3432                           ;!                 _Sensor_Acquisition
  3433                           ;!             _Sensor_DefaultCallback *
  3434                           ;!            _Sensor_RawSample_Update
  3435                           ;!                  _Sensor_setSampled
  3436                           ;!                             ___bmul
  3437                           ;! ---------------------------------------------------------------------------------
  3438                           ;! (4) _Sensor_setSampled                                    1     1      0      55
  3439                           ;!                                              0 BANK0      1     1      0
  3440                           ;! ---------------------------------------------------------------------------------
  3441                           ;! (4) _Sensor_RawSample_Update                              1     1      0      77
  3442                           ;!                                              0 BANK0      1     1      0
  3443                           ;! ---------------------------------------------------------------------------------
  3444                           ;! (4) _Sensor_DefaultCallback                               1     0      1      53
  3445                           ;!                                              0 BANK0      1     0      1
  3446                           ;! ---------------------------------------------------------------------------------
  3447                           ;! (4) _Sensor_Acquisition                                   6     6      0    1608
  3448                           ;!                                             18 BANK0      6     6      0
  3449                           ;!           _Sensor_Acq_ExecutePacket
  3450                           ;!    _Sensor_Scanfrequency_Evaluation
  3451                           ;!                   _Sensor_setActive
  3452                           ;!                 _Sensor_setInactive
  3453                           ;!                                _abs
  3454                           ;! ---------------------------------------------------------------------------------
  3455                           ;! (5) _abs                                                  4     2      2     292
  3456                           ;!                                              0 BANK0      4     2      2
  3457                           ;! ---------------------------------------------------------------------------------
  3458                           ;! (5) _Sensor_setInactive                                   1     1      0      55
  3459                           ;!                                              0 BANK0      1     1      0
  3460                           ;! ---------------------------------------------------------------------------------
  3461                           ;! (5) _Sensor_setActive                                     1     1      0      55
  3462                           ;!                                              0 BANK0      1     1      0
  3463                           ;! ---------------------------------------------------------------------------------
  3464                           ;! (5) _Sensor_Scanfrequency_Evaluation                     10    10      0     618
  3465                           ;!                                              8 BANK0     10    10      0
  3466                           ;!           _Sensor_Acq_ExecutePacket
  3467                           ;! ---------------------------------------------------------------------------------
  3468                           ;! (6) _Sensor_Acq_ExecutePacket                             6     6      0     399
  3469                           ;!                                              2 BANK0      6     6      0
  3470                           ;!      _MTOUCH_Sensor_Scan_Initialize
  3471                           ;!            _TMR2_LoadPeriodRegister
  3472                           ;!           _TMR2_SetInterruptHandler
  3473                           ;!                    _TMR2_StartTimer
  3474                           ;!                     _TMR2_StopTimer
  3475                           ;! ---------------------------------------------------------------------------------
  3476                           ;! (7) _TMR2_StopTimer                                       0     0      0       0
  3477                           ;! ---------------------------------------------------------------------------------
  3478                           ;! (7) _TMR2_StartTimer                                      0     0      0       0
  3479                           ;! ---------------------------------------------------------------------------------
  3480                           ;! (3) _TMR2_SetInterruptHandler                             2     0      2     174
  3481                           ;!                                              0 BANK0      2     0      2
  3482                           ;! ---------------------------------------------------------------------------------
  3483                           ;! (7) _TMR2_LoadPeriodRegister                              1     1      0      22
  3484                           ;!                                              0 BANK0      1     1      0
  3485                           ;! ---------------------------------------------------------------------------------
  3486                           ;! (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
  3487                           ;! ---------------------------------------------------------------------------------
  3488                           ;! (2) _MTOUCH_Button_ServiceAll                             0     0      0    3145
  3489                           ;!                     _Button_Service
  3490                           ;! ---------------------------------------------------------------------------------
  3491                           ;! (3) _Button_Service                                       4     4      0    3145
  3492                           ;!                                             18 BANK0      4     4      0
  3493                           ;!            _Button_Deviation_Update
  3494                           ;!              _Button_Reading_Update
  3495                           ;!          _Button_State_Initializing *
  3496                           ;!            _Button_State_NotPressed *
  3497                           ;!               _Button_State_Pressed *
  3498                           ;!         _MTOUCH_Sensor_isCalibrated
  3499                           ;!           _MTOUCH_Sensor_wasSampled
  3500                           ;! ---------------------------------------------------------------------------------
  3501                           ;! (4) _MTOUCH_Sensor_wasSampled                             2     2      0     303
  3502                           ;!                                              4 BANK0      2     2      0
  3503                           ;!                             ___bmul
  3504                           ;! ---------------------------------------------------------------------------------
  3505                           ;! (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
  3506                           ;! ---------------------------------------------------------------------------------
  3507                           ;! (4) _Button_State_Pressed                                 3     2      1     366
  3508                           ;!                                             13 BANK0      3     2      1
  3509                           ;!             _Button_DefaultCallback *
  3510                           ;! ---------------------------------------------------------------------------------
  3511                           ;! (4) _Button_State_NotPressed                              3     2      1     727
  3512                           ;!                                             13 BANK0      3     2      1
  3513                           ;!             _Button_Baseline_Update
  3514                           ;!             _Button_DefaultCallback *
  3515                           ;! ---------------------------------------------------------------------------------
  3516                           ;! (5) _Button_DefaultCallback                               1     0      1     159
  3517                           ;!                                              0 BANK0      1     0      1
  3518                           ;! ---------------------------------------------------------------------------------
  3519                           ;! (4) _Button_State_Initializing                            5     4      1     869
  3520                           ;!                                             13 BANK0      5     4      1
  3521                           ;!         _Button_Baseline_Initialize
  3522                           ;!             _Button_Baseline_Update
  3523                           ;! ---------------------------------------------------------------------------------
  3524                           ;! (5) _Button_Baseline_Update                               7     7      0     260
  3525                           ;!                                              0 BANK0      7     7      0
  3526                           ;! ---------------------------------------------------------------------------------
  3527                           ;! (5) _Button_Baseline_Initialize                           5     5      0     411
  3528                           ;!                                              8 BANK0      5     5      0
  3529                           ;!        _MTOUCH_Sensor_RawSample_Get
  3530                           ;! ---------------------------------------------------------------------------------
  3531                           ;! (4) _Button_Reading_Update                                3     3      0     512
  3532                           ;!                                              8 BANK0      3     3      0
  3533                           ;!        _MTOUCH_Sensor_RawSample_Get
  3534                           ;! ---------------------------------------------------------------------------------
  3535                           ;! (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     303
  3536                           ;!                                              4 BANK0      4     2      2
  3537                           ;!                             ___bmul
  3538                           ;! ---------------------------------------------------------------------------------
  3539                           ;! (5) ___bmul                                               4     3      1     281
  3540                           ;!                                              0 BANK0      4     3      1
  3541                           ;! ---------------------------------------------------------------------------------
  3542                           ;! (4) _Button_Deviation_Update                             15    15      0     213
  3543                           ;!                                              0 BANK0     15    15      0
  3544                           ;! ---------------------------------------------------------------------------------
  3545                           ;! (1) _MTOUCH_Button_isPressed                              2     2      0      22
  3546                           ;!                                              0 BANK0      2     2      0
  3547                           ;! ---------------------------------------------------------------------------------
  3548                           ;! Estimated maximum stack depth 7
  3549                           ;! ---------------------------------------------------------------------------------
  3550                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3551                           ;! ---------------------------------------------------------------------------------
  3552                           ;! (8) _INTERRUPT_InterruptManager                           0     0      0     409
  3553                           ;!                           _TMR2_ISR
  3554                           ;! ---------------------------------------------------------------------------------
  3555                           ;! (9) _TMR2_ISR                                             0     0      0     409
  3556                           ;!                   Absolute function *
  3557                           ;!             _Sensor_Acq_ExecuteScan *
  3558                           ;!       _TMR2_DefaultInterruptHandler *
  3559                           ;! ---------------------------------------------------------------------------------
  3560                           ;! (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
  3561                           ;! ---------------------------------------------------------------------------------
  3562                           ;! (10) _Sensor_Acq_ExecuteScan                              4     4      0     409
  3563                           ;!                                              4 COMMON     4     4      0
  3564                           ;!                 _MTOUCH_CVD_ScanA_0
  3565                           ;!                 _MTOUCH_CVD_ScanB_0
  3566                           ;!                           i1___bmul
  3567                           ;!                              i1_abs
  3568                           ;! ---------------------------------------------------------------------------------
  3569                           ;! (11) i1_abs                                               4     2      2     144
  3570                           ;!                                              0 COMMON     4     2      2
  3571                           ;! ---------------------------------------------------------------------------------
  3572                           ;! (11) i1___bmul                                            4     3      1      87
  3573                           ;!                                              0 COMMON     4     3      1
  3574                           ;! ---------------------------------------------------------------------------------
  3575                           ;! (11) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
  3576                           ;! ---------------------------------------------------------------------------------
  3577                           ;! (11) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
  3578                           ;! ---------------------------------------------------------------------------------
  3579                           ;! (10) Absolute function(Fake)                              0     0      0       0
  3580                           ;! ---------------------------------------------------------------------------------
  3581                           ;! Estimated maximum stack depth 11
  3582                           ;! ---------------------------------------------------------------------------------
  3583                           ;!
  3584                           ;! Call Graph Graphs:
  3585                           ;!
  3586                           ;! _main (ROOT)
  3587                           ;!   _MTOUCH_Button_isPressed
  3588                           ;!   _MTOUCH_Service_Mainloop
  3589                           ;!     _MTOUCH_Button_ServiceAll
  3590                           ;!       _Button_Service
  3591                           ;!         _Button_Deviation_Update
  3592                           ;!         _Button_Reading_Update
  3593                           ;!           _MTOUCH_Sensor_RawSample_Get
  3594                           ;!             ___bmul
  3595                           ;!         _Button_State_Initializing *
  3596                           ;!           _Button_Baseline_Initialize
  3597                           ;!             _MTOUCH_Sensor_RawSample_Get
  3598                           ;!               ___bmul
  3599                           ;!           _Button_Baseline_Update
  3600                           ;!         _Button_State_NotPressed *
  3601                           ;!           _Button_Baseline_Update
  3602                           ;!           _Button_DefaultCallback *
  3603                           ;!         _Button_State_Pressed *
  3604                           ;!           _Button_DefaultCallback *
  3605                           ;!         _MTOUCH_Sensor_isCalibrated *
  3606                           ;!         _MTOUCH_Sensor_wasSampled *
  3607                           ;!           ___bmul
  3608                           ;!     _MTOUCH_Sensor_SampleAll
  3609                           ;!       _Sensor_Service
  3610                           ;!         _Sensor_Acquisition
  3611                           ;!           _Sensor_Acq_ExecutePacket
  3612                           ;!             _MTOUCH_Sensor_Scan_Initialize
  3613                           ;!             _TMR2_LoadPeriodRegister
  3614                           ;!             _TMR2_SetInterruptHandler
  3615                           ;!             _TMR2_StartTimer
  3616                           ;!             _TMR2_StopTimer
  3617                           ;!           _Sensor_Scanfrequency_Evaluation
  3618                           ;!             _Sensor_Acq_ExecutePacket
  3619                           ;!               _MTOUCH_Sensor_Scan_Initialize
  3620                           ;!               _TMR2_LoadPeriodRegister
  3621                           ;!               _TMR2_SetInterruptHandler
  3622                           ;!               _TMR2_StartTimer
  3623                           ;!               _TMR2_StopTimer
  3624                           ;!           _Sensor_setActive
  3625                           ;!           _Sensor_setInactive
  3626                           ;!           _abs
  3627                           ;!         _Sensor_DefaultCallback *
  3628                           ;!         _Sensor_RawSample_Update *
  3629                           ;!         _Sensor_setSampled *
  3630                           ;!         ___bmul *
  3631                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3632                           ;!       _Sensor_Sampled_Reset
  3633                           ;!   _SYSTEM_Initialize
  3634                           ;!     _MTOUCH_Initialize
  3635                           ;!       _MTOUCH_Button_InitializeAll
  3636                           ;!       _MTOUCH_Sensor_InitializeAll
  3637                           ;!         _MTOUCH_Sensor_Enable
  3638                           ;!           ___bmul
  3639                           ;!         _Sensor_Sampled_Reset
  3640                           ;!       _MTOUCH_Sensor_Sampled_ResetAll
  3641                           ;!         _Sensor_Sampled_Reset
  3642                           ;!       _MTOUCH_Sensor_Scan_Initialize
  3643                           ;!     _OSCILLATOR_Initialize
  3644                           ;!     _PIN_MANAGER_Initialize
  3645                           ;!     _TMR2_Initialize
  3646                           ;!       _TMR2_SetInterruptHandler
  3647                           ;!     _WDT_Initialize
  3648                           ;!
  3649                           ;! _INTERRUPT_InterruptManager (ROOT)
  3650                           ;!   _TMR2_ISR
  3651                           ;!     Absolute function(Fake) *
  3652                           ;!     _Sensor_Acq_ExecuteScan *
  3653                           ;!       _MTOUCH_CVD_ScanA_0
  3654                           ;!       _MTOUCH_CVD_ScanB_0
  3655                           ;!       i1___bmul
  3656                           ;!       i1_abs
  3657                           ;!     _TMR2_DefaultInterruptHandler *
  3658                           ;!
  3659                           
  3660                           ;! Address spaces:
  3661                           
  3662                           ;!Name               Size   Autos  Total    Cost      Usage
  3663                           ;!BIGRAM              F0      0       0       0        0.0%
  3664                           ;!NULL                 0      0       0       0        0.0%
  3665                           ;!CODE                 0      0       0       0        0.0%
  3666                           ;!BITCOMMON            E      0       0       1        0.0%
  3667                           ;!BITSFR0              0      0       0       1        0.0%
  3668                           ;!SFR0                 0      0       0       1        0.0%
  3669                           ;!COMMON               E      8       E       2      100.0%
  3670                           ;!BITSFR1              0      0       0       2        0.0%
  3671                           ;!SFR1                 0      0       0       2        0.0%
  3672                           ;!BITSFR2              0      0       0       3        0.0%
  3673                           ;!SFR2                 0      0       0       3        0.0%
  3674                           ;!STACK                0      0       0       3        0.0%
  3675                           ;!BITSFR3              0      0       0       4        0.0%
  3676                           ;!SFR3                 0      0       0       4        0.0%
  3677                           ;!ABS                  0      0      58       4        0.0%
  3678                           ;!BITBANK0            50      0       0       5        0.0%
  3679                           ;!BITSFR4              0      0       0       5        0.0%
  3680                           ;!SFR4                 0      0       0       5        0.0%
  3681                           ;!BANK0               50     1D      4A       6       92.5%
  3682                           ;!BITSFR5              0      0       0       6        0.0%
  3683                           ;!SFR5                 0      0       0       6        0.0%
  3684                           ;!BITBANK1            50      0       0       7        0.0%
  3685                           ;!BITSFR6              0      0       0       7        0.0%
  3686                           ;!SFR6                 0      0       0       7        0.0%
  3687                           ;!BANK1               50      0       0       8        0.0%
  3688                           ;!BITSFR7              0      0       0       8        0.0%
  3689                           ;!SFR7                 0      0       0       8        0.0%
  3690                           ;!BITBANK2            50      0       0       9        0.0%
  3691                           ;!BITSFR8              0      0       0       9        0.0%
  3692                           ;!SFR8                 0      0       0       9        0.0%
  3693                           ;!BANK2               50      0       0      10        0.0%
  3694                           ;!BITSFR9              0      0       0      10        0.0%
  3695                           ;!SFR9                 0      0       0      10        0.0%
  3696                           ;!BITSFR10             0      0       0      11        0.0%
  3697                           ;!SFR10                0      0       0      11        0.0%
  3698                           ;!DATA                 0      0      58      11        0.0%
  3699                           ;!BITSFR11             0      0       0      12        0.0%
  3700                           ;!SFR11                0      0       0      12        0.0%
  3701                           ;!BITSFR12             0      0       0      13        0.0%
  3702                           ;!SFR12                0      0       0      13        0.0%
  3703                           ;!BITSFR13             0      0       0      14        0.0%
  3704                           ;!SFR13                0      0       0      14        0.0%
  3705                           ;!BITSFR14             0      0       0      15        0.0%
  3706                           ;!SFR14                0      0       0      15        0.0%
  3707                           ;!BITSFR15             0      0       0      16        0.0%
  3708                           ;!SFR15                0      0       0      16        0.0%
  3709                           ;!BITSFR16             0      0       0      17        0.0%
  3710                           ;!SFR16                0      0       0      17        0.0%
  3711                           ;!BITSFR17             0      0       0      18        0.0%
  3712                           ;!SFR17                0      0       0      18        0.0%
  3713                           ;!BITSFR18             0      0       0      19        0.0%
  3714                           ;!SFR18                0      0       0      19        0.0%
  3715                           ;!BITSFR19             0      0       0      20        0.0%
  3716                           ;!SFR19                0      0       0      20        0.0%
  3717                           ;!BITSFR20             0      0       0      21        0.0%
  3718                           ;!SFR20                0      0       0      21        0.0%
  3719                           ;!BITSFR21             0      0       0      22        0.0%
  3720                           ;!SFR21                0      0       0      22        0.0%
  3721                           ;!BITSFR22             0      0       0      23        0.0%
  3722                           ;!SFR22                0      0       0      23        0.0%
  3723                           ;!BITSFR23             0      0       0      24        0.0%
  3724                           ;!SFR23                0      0       0      24        0.0%
  3725                           ;!BITSFR24             0      0       0      25        0.0%
  3726                           ;!SFR24                0      0       0      25        0.0%
  3727                           ;!BITSFR25             0      0       0      26        0.0%
  3728                           ;!SFR25                0      0       0      26        0.0%
  3729                           ;!BITSFR26             0      0       0      27        0.0%
  3730                           ;!SFR26                0      0       0      27        0.0%
  3731                           ;!BITSFR27             0      0       0      28        0.0%
  3732                           ;!SFR27                0      0       0      28        0.0%
  3733                           ;!BITSFR28             0      0       0      29        0.0%
  3734                           ;!SFR28                0      0       0      29        0.0%
  3735                           ;!BITSFR29             0      0       0      30        0.0%
  3736                           ;!SFR29                0      0       0      30        0.0%
  3737                           ;!BITSFR30             0      0       0      31        0.0%
  3738                           ;!SFR30                0      0       0      31        0.0%
  3739                           ;!BITSFR31             0      0       0      32        0.0%
  3740                           ;!SFR31                0      0       0      32        0.0%
  3741                           
  3742                           	global	_main
  3743                           
  3744 ;; *************** function _main *****************
  3745 ;; Defined at:
  3746 ;;		line 50 in file "main.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : B1F/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3760 ;;      Params:         0       0       0       0
  3761 ;;      Locals:         0       0       0       0
  3762 ;;      Temps:          0       0       0       0
  3763 ;;      Totals:         0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels required when called:   11
  3766 ;; This function calls:
  3767 ;;		_MTOUCH_Button_isPressed
  3768 ;;		_MTOUCH_Service_Mainloop
  3769 ;;		_SYSTEM_Initialize
  3770 ;; This function is called by:
  3771 ;;		Startup code after reset
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3775                           	file	"main.c"
  3776                           	line	50
  3777                           global __pmaintext
  3778                           __pmaintext:	;psect for function _main
  3779  0618                     psect	maintext
  3780                           	file	"main.c"
  3781                           	line	50
  3782                           	global	__size_of_main
  3783                           	__size_of_main	equ	__end_of_main-_main
  3784  001D                     	
  3785                           _main:	
  3786  0618                     ;incstack = 0
  3787                           	opt	stack 5
  3788                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3789                           	line	53
  3790                           	
  3791                           l1992:	
  3792  0618                     ;main.c: 53:     SYSTEM_Initialize();
  3793                           	fcall	_SYSTEM_Initialize
  3794  0618  3187  2723  3186   	line	59
  3795                           	
  3796                           l1994:	
  3797  061B                     ;main.c: 59:     (INTCONbits.GIE = 1);
  3798                           	bsf	(11),7	;volatile
  3799  061B  178B               	line	62
  3800                           	
  3801                           l1996:	
  3802  061C                     ;main.c: 62:     (INTCONbits.PEIE = 1);
  3803                           	bsf	(11),6	;volatile
  3804  061C  170B               	goto	l1998
  3805  061D  2E1E               	line	70
  3806                           ;main.c: 70:     while (1)
  3807                           	
  3808                           l501:	
  3809  061E                     	line	73
  3810                           	
  3811                           l1998:	
  3812  061E                     ;main.c: 71:     {;main.c: 73:      MTOUCH_Service_Mainloop();
  3813                           	fcall	_MTOUCH_Service_Mainloop
  3814  061E  3187  276E  3186   	line	75
  3815                           	
  3816                           l2000:	
  3817  0621                     ;main.c: 75:             if(MTOUCH_Button_isPressed(Button0))
  3818                           	movlw	low(0)
  3819  0621  3000               	fcall	_MTOUCH_Button_isPressed
  3820  0622  3186  26BB  3186   	xorlw	low(0)&0ffh
  3821  0625  3A00               	skipnz
  3822  0626  1903               	goto	u1141
  3823  0627  2E29               	goto	u1140
  3824  0628  2E2A               u1141:
  3825  0629                     	goto	l506
  3826  0629  2E2E               u1140:
  3827  062A                     	line	76
  3828                           ;main.c: 76:                 do { LATCbits.LATC5 = 1; } while(0);
  3829                           	
  3830                           l503:	
  3831  062A                     	movlb 2	; select bank2
  3832  062A  0022               	bsf	(270)^0100h,5	;volatile
  3833  062B  168E               	goto	l1998
  3834  062C  2E1E               	
  3835                           l504:	
  3836  062D                     	goto	l1998
  3837  062D  2E1E               	line	77
  3838                           ;main.c: 77:             else
  3839                           	
  3840                           l502:	
  3841  062E                     	line	78
  3842                           ;main.c: 78:                 do { LATCbits.LATC5 = 0; } while(0);
  3843                           	
  3844                           l506:	
  3845  062E                     	movlb 2	; select bank2
  3846  062E  0022               	bcf	(270)^0100h,5	;volatile
  3847  062F  128E               	goto	l1998
  3848  0630  2E1E               	
  3849                           l507:	
  3850  0631                     	goto	l1998
  3851  0631  2E1E               	
  3852                           l505:	
  3853  0632                     	goto	l1998
  3854  0632  2E1E               	line	81
  3855                           ;main.c: 81: }
  3856                           	
  3857                           l508:	
  3858  0633                     	goto	l1998
  3859  0633  2E1E               	
  3860                           l509:	
  3861  0634                     	line	82
  3862                           	
  3863                           l510:	
  3864  0634                     	global	start
  3865                           	ljmp	start
  3866  0634  281D               	opt stack 0
  3867                           GLOBAL	__end_of_main
  3868                           	__end_of_main:
  3869  0635                     	signat	_main,89
  3870                           	global	_SYSTEM_Initialize
  3871                           
  3872 ;; *************** function _SYSTEM_Initialize *****************
  3873 ;; Defined at:
  3874 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3875 ;; Parameters:    Size  Location     Type
  3876 ;;		None
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;		None
  3879 ;; Return value:  Size  Location     Type
  3880 ;;                  1    wreg      void 
  3881 ;; Registers used:
  3882 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3883 ;; Tracked objects:
  3884 ;;		On entry : 0/0
  3885 ;;		On exit  : 0/0
  3886 ;;		Unchanged: 0/0
  3887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3888 ;;      Params:         0       0       0       0
  3889 ;;      Locals:         0       0       0       0
  3890 ;;      Temps:          0       0       0       0
  3891 ;;      Totals:         0       0       0       0
  3892 ;;Total ram usage:        0 bytes
  3893 ;; Hardware stack levels used:    1
  3894 ;; Hardware stack levels required when called:    8
  3895 ;; This function calls:
  3896 ;;		_MTOUCH_Initialize
  3897 ;;		_OSCILLATOR_Initialize
  3898 ;;		_PIN_MANAGER_Initialize
  3899 ;;		_TMR2_Initialize
  3900 ;;		_WDT_Initialize
  3901 ;; This function is called by:
  3902 ;;		_main
  3903 ;; This function uses a non-reentrant model
  3904 ;;
  3905                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3906                           	file	"mcc_generated_files/mcc.c"
  3907                           	line	50
  3908                           global __ptext1
  3909                           __ptext1:	;psect for function _SYSTEM_Initialize
  3910  0723                     psect	text1
  3911                           	file	"mcc_generated_files/mcc.c"
  3912                           	line	50
  3913                           	global	__size_of_SYSTEM_Initialize
  3914                           	__size_of_SYSTEM_Initialize	equ	__end_of_SYSTEM_Initialize-_SYSTEM_Initialize
  3915  0010                     	
  3916                           _SYSTEM_Initialize:	
  3917  0723                     ;incstack = 0
  3918                           	opt	stack 7
  3919                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3920                           	line	53
  3921                           	
  3922                           l1936:	
  3923  0723                     ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3924                           	fcall	_PIN_MANAGER_Initialize
  3925  0723  3186  26D3  3187   	line	54
  3926                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3927                           	fcall	_OSCILLATOR_Initialize
  3928  0726  3187  2782  3187   	line	55
  3929                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3930                           	fcall	_WDT_Initialize
  3931  0729  3187  27CF  3187   	line	56
  3932                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3933                           	fcall	_TMR2_Initialize
  3934  072C  3186  26FE  3187   	line	57
  3935                           	
  3936                           l1938:	
  3937  072F                     ;mcc_generated_files/mcc.c: 57:     MTOUCH_Initialize();
  3938                           	fcall	_MTOUCH_Initialize
  3939  072F  3187  2761  3187   	line	58
  3940                           	
  3941                           l23:	
  3942  0732                     	return
  3943  0732  0008               	opt stack 0
  3944                           GLOBAL	__end_of_SYSTEM_Initialize
  3945                           	__end_of_SYSTEM_Initialize:
  3946  0733                     	signat	_SYSTEM_Initialize,89
  3947                           	global	_WDT_Initialize
  3948                           
  3949 ;; *************** function _WDT_Initialize *****************
  3950 ;; Defined at:
  3951 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3965 ;;      Params:         0       0       0       0
  3966 ;;      Locals:         0       0       0       0
  3967 ;;      Temps:          0       0       0       0
  3968 ;;      Totals:         0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; Hardware stack levels required when called:    4
  3972 ;; This function calls:
  3973 ;;		Nothing
  3974 ;; This function is called by:
  3975 ;;		_SYSTEM_Initialize
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3979                           	line	72
  3980                           global __ptext2
  3981                           __ptext2:	;psect for function _WDT_Initialize
  3982  07CF                     psect	text2
  3983                           	file	"mcc_generated_files/mcc.c"
  3984                           	line	72
  3985                           	global	__size_of_WDT_Initialize
  3986                           	__size_of_WDT_Initialize	equ	__end_of_WDT_Initialize-_WDT_Initialize
  3987  0004                     	
  3988                           _WDT_Initialize:	
  3989  07CF                     ;incstack = 0
  3990                           	opt	stack 10
  3991                           ; Regs used in _WDT_Initialize: [wreg]
  3992                           	line	75
  3993                           	
  3994                           l1864:	
  3995  07CF                     ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  3996                           	movlw	low(016h)
  3997  07CF  3016               	movlb 1	; select bank1
  3998  07D0  0021               	movwf	(151)^080h	;volatile
  3999  07D1  0097               	line	76
  4000                           	
  4001                           l29:	
  4002  07D2                     	return
  4003  07D2  0008               	opt stack 0
  4004                           GLOBAL	__end_of_WDT_Initialize
  4005                           	__end_of_WDT_Initialize:
  4006  07D3                     	signat	_WDT_Initialize,89
  4007                           	global	_TMR2_Initialize
  4008                           
  4009 ;; *************** function _TMR2_Initialize *****************
  4010 ;; Defined at:
  4011 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;		None
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;		None
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2, status,0, pclath, cstack
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4025 ;;      Params:         0       0       0       0
  4026 ;;      Locals:         0       0       0       0
  4027 ;;      Temps:          0       0       0       0
  4028 ;;      Totals:         0       0       0       0
  4029 ;;Total ram usage:        0 bytes
  4030 ;; Hardware stack levels used:    1
  4031 ;; Hardware stack levels required when called:    5
  4032 ;; This function calls:
  4033 ;;		_TMR2_SetInterruptHandler
  4034 ;; This function is called by:
  4035 ;;		_SYSTEM_Initialize
  4036 ;; This function uses a non-reentrant model
  4037 ;;
  4038                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4039                           	file	"mcc_generated_files/tmr2.c"
  4040                           	line	64
  4041                           global __ptext3
  4042                           __ptext3:	;psect for function _TMR2_Initialize
  4043  06FE                     psect	text3
  4044                           	file	"mcc_generated_files/tmr2.c"
  4045                           	line	64
  4046                           	global	__size_of_TMR2_Initialize
  4047                           	__size_of_TMR2_Initialize	equ	__end_of_TMR2_Initialize-_TMR2_Initialize
  4048  0013                     	
  4049                           _TMR2_Initialize:	
  4050  06FE                     ;incstack = 0
  4051                           	opt	stack 9
  4052                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4053                           	line	69
  4054                           	
  4055                           l1866:	
  4056  06FE                     ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
  4057                           	movlw	low(0FFh)
  4058  06FE  30FF               	movlb 0	; select bank0
  4059  06FF  0020               	movwf	(27)	;volatile
  4060  0700  009B               	line	72
  4061                           	
  4062                           l1868:	
  4063  0701                     ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  4064                           	clrf	(26)	;volatile
  4065  0701  019A               	line	75
  4066                           	
  4067                           l1870:	
  4068  0702                     ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  4069                           	bcf	(17),1	;volatile
  4070  0702  1091               	line	78
  4071                           	
  4072                           l1872:	
  4073  0703                     ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  4074                           	movlb 1	; select bank1
  4075  0703  0021               	bsf	(145)^080h,1	;volatile
  4076  0704  1491               	line	81
  4077                           	
  4078                           l1874:	
  4079  0705                     ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
                                 er);
  4080                           	movlw	low(_TMR2_DefaultInterruptHandler)
  4081  0705  30DF               	movlb 0	; select bank0
  4082  0706  0020               	movwf	(TMR2_SetInterruptHandler@InterruptHandler)
  4083  0707  00C6               	movlw	high(_TMR2_DefaultInterruptHandler)
  4084  0708  3007               	movwf	((TMR2_SetInterruptHandler@InterruptHandler))+1
  4085  0709  00C7               	fcall	_TMR2_SetInterruptHandler
  4086  070A  3187  27B0  3186   	line	84
  4087                           	
  4088                           l1876:	
  4089  070D                     ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x04;
  4090                           	movlw	low(04h)
  4091  070D  3004               	movlb 0	; select bank0
  4092  070E  0020               	movwf	(28)	;volatile
  4093  070F  009C               	line	85
  4094                           	
  4095                           l95:	
  4096  0710                     	return
  4097  0710  0008               	opt stack 0
  4098                           GLOBAL	__end_of_TMR2_Initialize
  4099                           	__end_of_TMR2_Initialize:
  4100  0711                     	signat	_TMR2_Initialize,89
  4101                           	global	_PIN_MANAGER_Initialize
  4102                           
  4103 ;; *************** function _PIN_MANAGER_Initialize *****************
  4104 ;; Defined at:
  4105 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;		None
  4108 ;; Auto vars:     Size  Location     Type
  4109 ;;		None
  4110 ;; Return value:  Size  Location     Type
  4111 ;;                  1    wreg      void 
  4112 ;; Registers used:
  4113 ;;		wreg, status,2
  4114 ;; Tracked objects:
  4115 ;;		On entry : 0/0
  4116 ;;		On exit  : 0/0
  4117 ;;		Unchanged: 0/0
  4118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4119 ;;      Params:         0       0       0       0
  4120 ;;      Locals:         0       0       0       0
  4121 ;;      Temps:          0       0       0       0
  4122 ;;      Totals:         0       0       0       0
  4123 ;;Total ram usage:        0 bytes
  4124 ;; Hardware stack levels used:    1
  4125 ;; Hardware stack levels required when called:    4
  4126 ;; This function calls:
  4127 ;;		Nothing
  4128 ;; This function is called by:
  4129 ;;		_SYSTEM_Initialize
  4130 ;; This function uses a non-reentrant model
  4131 ;;
  4132                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4133                           	file	"mcc_generated_files/pin_manager.c"
  4134                           	line	57
  4135                           global __ptext4
  4136                           __ptext4:	;psect for function _PIN_MANAGER_Initialize
  4137  06D3                     psect	text4
  4138                           	file	"mcc_generated_files/pin_manager.c"
  4139                           	line	57
  4140                           	global	__size_of_PIN_MANAGER_Initialize
  4141                           	__size_of_PIN_MANAGER_Initialize	equ	__end_of_PIN_MANAGER_Initialize-_PIN_MANAGER_Initi
                                 alize
  4142  0016                     	
  4143                           _PIN_MANAGER_Initialize:	
  4144  06D3                     ;incstack = 0
  4145                           	opt	stack 10
  4146                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4147                           	line	62
  4148                           	
  4149                           l1844:	
  4150  06D3                     ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4151                           	movlb 2	; select bank2
  4152  06D3  0022               	clrf	(268)^0100h	;volatile
  4153  06D4  018C               	line	63
  4154                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  4155                           	clrf	(270)^0100h	;volatile
  4156  06D5  018E               	line	68
  4157                           	
  4158                           l1846:	
  4159  06D6                     ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4160                           	movlw	low(037h)
  4161  06D6  3037               	movlb 1	; select bank1
  4162  06D7  0021               	movwf	(140)^080h	;volatile
  4163  06D8  008C               	line	69
  4164                           	
  4165                           l1848:	
  4166  06D9                     ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1F;
  4167                           	movlw	low(01Fh)
  4168  06D9  301F               	movwf	(142)^080h	;volatile
  4169  06DA  008E               	line	74
  4170                           	
  4171                           l1850:	
  4172  06DB                     ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x1F;
  4173                           	movlw	low(01Fh)
  4174  06DB  301F               	movlb 3	; select bank3
  4175  06DC  0023               	movwf	(398)^0180h	;volatile
  4176  06DD  008E               	line	75
  4177                           	
  4178                           l1852:	
  4179  06DE                     ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x17;
  4180                           	movlw	low(017h)
  4181  06DE  3017               	movwf	(396)^0180h	;volatile
  4182  06DF  008C               	line	80
  4183                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4184                           	movlb 4	; select bank4
  4185  06E0  0024               	clrf	(524)^0200h	;volatile
  4186  06E1  018C               	line	81
  4187                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  4188                           	clrf	(526)^0200h	;volatile
  4189  06E2  018E               	line	82
  4190                           	
  4191                           l1854:	
  4192  06E3                     ;mcc_generated_files/pin_manager.c: 82:     OPTION_REGbits.nWPUEN = 1;
  4193                           	movlb 1	; select bank1
  4194  06E3  0021               	bsf	(149)^080h,7	;volatile
  4195  06E4  1795               	line	87
  4196                           ;mcc_generated_files/pin_manager.c: 87:     ODCONA = 0x00;
  4197                           	movlb 5	; select bank5
  4198  06E5  0025               	clrf	(652)^0280h	;volatile
  4199  06E6  018C               	line	88
  4200                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
  4201                           	clrf	(654)^0280h	;volatile
  4202  06E7  018E               	line	96
  4203                           	
  4204                           l71:	
  4205  06E8                     	return
  4206  06E8  0008               	opt stack 0
  4207                           GLOBAL	__end_of_PIN_MANAGER_Initialize
  4208                           	__end_of_PIN_MANAGER_Initialize:
  4209  06E9                     	signat	_PIN_MANAGER_Initialize,89
  4210                           	global	_OSCILLATOR_Initialize
  4211                           
  4212 ;; *************** function _OSCILLATOR_Initialize *****************
  4213 ;; Defined at:
  4214 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;		None
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;		None
  4219 ;; Return value:  Size  Location     Type
  4220 ;;                  1    wreg      void 
  4221 ;; Registers used:
  4222 ;;		wreg, status,2
  4223 ;; Tracked objects:
  4224 ;;		On entry : 0/0
  4225 ;;		On exit  : 0/0
  4226 ;;		Unchanged: 0/0
  4227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4228 ;;      Params:         0       0       0       0
  4229 ;;      Locals:         0       0       0       0
  4230 ;;      Temps:          0       0       0       0
  4231 ;;      Totals:         0       0       0       0
  4232 ;;Total ram usage:        0 bytes
  4233 ;; Hardware stack levels used:    1
  4234 ;; Hardware stack levels required when called:    4
  4235 ;; This function calls:
  4236 ;;		Nothing
  4237 ;; This function is called by:
  4238 ;;		_SYSTEM_Initialize
  4239 ;; This function uses a non-reentrant model
  4240 ;;
  4241                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4242                           	file	"mcc_generated_files/mcc.c"
  4243                           	line	60
  4244                           global __ptext5
  4245                           __ptext5:	;psect for function _OSCILLATOR_Initialize
  4246  0782                     psect	text5
  4247                           	file	"mcc_generated_files/mcc.c"
  4248                           	line	60
  4249                           	global	__size_of_OSCILLATOR_Initialize
  4250                           	__size_of_OSCILLATOR_Initialize	equ	__end_of_OSCILLATOR_Initialize-_OSCILLATOR_Initiali
                                 ze
  4251  0008                     	
  4252                           _OSCILLATOR_Initialize:	
  4253  0782                     ;incstack = 0
  4254                           	opt	stack 10
  4255                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4256                           	line	63
  4257                           	
  4258                           l1856:	
  4259  0782                     ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x78;
  4260                           	movlw	low(078h)
  4261  0782  3078               	movlb 1	; select bank1
  4262  0783  0021               	movwf	(153)^080h	;volatile
  4263  0784  0099               	line	65
  4264                           	
  4265                           l1858:	
  4266  0785                     ;mcc_generated_files/mcc.c: 65:     OSCSTAT = 0x00;
  4267                           	clrf	(154)^080h	;volatile
  4268  0785  019A               	line	67
  4269                           	
  4270                           l1860:	
  4271  0786                     ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4272                           	clrf	(152)^080h	;volatile
  4273  0786  0198               	line	69
  4274                           	
  4275                           l1862:	
  4276  0787                     ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  4277                           	movlb 2	; select bank2
  4278  0787  0022               	clrf	(278)^0100h	;volatile
  4279  0788  0196               	line	70
  4280                           	
  4281                           l26:	
  4282  0789                     	return
  4283  0789  0008               	opt stack 0
  4284                           GLOBAL	__end_of_OSCILLATOR_Initialize
  4285                           	__end_of_OSCILLATOR_Initialize:
  4286  078A                     	signat	_OSCILLATOR_Initialize,89
  4287                           	global	_MTOUCH_Initialize
  4288                           
  4289 ;; *************** function _MTOUCH_Initialize *****************
  4290 ;; Defined at:
  4291 ;;		line 49 in file "mcc_generated_files/mtouch/mtouch.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;		None
  4294 ;; Auto vars:     Size  Location     Type
  4295 ;;		None
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4305 ;;      Params:         0       0       0       0
  4306 ;;      Locals:         0       0       0       0
  4307 ;;      Temps:          0       0       0       0
  4308 ;;      Totals:         0       0       0       0
  4309 ;;Total ram usage:        0 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    7
  4312 ;; This function calls:
  4313 ;;		_MTOUCH_Button_InitializeAll
  4314 ;;		_MTOUCH_Sensor_InitializeAll
  4315 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4316 ;;		_MTOUCH_Sensor_Scan_Initialize
  4317 ;; This function is called by:
  4318 ;;		_SYSTEM_Initialize
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4322                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4323                           	line	49
  4324                           global __ptext6
  4325                           __ptext6:	;psect for function _MTOUCH_Initialize
  4326  0761                     psect	text6
  4327                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4328                           	line	49
  4329                           	global	__size_of_MTOUCH_Initialize
  4330                           	__size_of_MTOUCH_Initialize	equ	__end_of_MTOUCH_Initialize-_MTOUCH_Initialize
  4331  000D                     	
  4332                           _MTOUCH_Initialize:	
  4333  0761                     ;incstack = 0
  4334                           	opt	stack 7
  4335                           ; Regs used in _MTOUCH_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4336                           	line	51
  4337                           	
  4338                           l1878:	
  4339  0761                     ;mcc_generated_files/mtouch/mtouch.c: 51:     MTOUCH_Sensor_InitializeAll();
  4340                           	fcall	_MTOUCH_Sensor_InitializeAll
  4341  0761  3187  2743  3187   	line	52
  4342                           	
  4343                           l1880:	
  4344  0764                     ;mcc_generated_files/mtouch/mtouch.c: 52:         MTOUCH_Button_InitializeAll();
  4345                           	fcall	_MTOUCH_Button_InitializeAll
  4346  0764  3187  27DC  3187   	line	53
  4347                           	
  4348                           l1882:	
  4349  0767                     ;mcc_generated_files/mtouch/mtouch.c: 53:     MTOUCH_Sensor_Sampled_ResetAll();
  4350                           	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4351  0767  3187  27BB  3187   	line	54
  4352                           	
  4353                           l1884:	
  4354  076A                     ;mcc_generated_files/mtouch/mtouch.c: 54:     MTOUCH_Sensor_Scan_Initialize();
  4355                           	fcall	_MTOUCH_Sensor_Scan_Initialize
  4356  076A  3187  2779  3187   	line	55
  4357                           	
  4358                           l137:	
  4359  076D                     	return
  4360  076D  0008               	opt stack 0
  4361                           GLOBAL	__end_of_MTOUCH_Initialize
  4362                           	__end_of_MTOUCH_Initialize:
  4363  076E                     	signat	_MTOUCH_Initialize,89
  4364                           	global	_MTOUCH_Sensor_InitializeAll
  4365                           
  4366 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  4367 ;; Defined at:
  4368 ;;		line 112 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4369 ;; Parameters:    Size  Location     Type
  4370 ;;		None
  4371 ;; Auto vars:     Size  Location     Type
  4372 ;;		None
  4373 ;; Return value:  Size  Location     Type
  4374 ;;                  1    wreg      void 
  4375 ;; Registers used:
  4376 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4377 ;; Tracked objects:
  4378 ;;		On entry : 0/0
  4379 ;;		On exit  : 0/0
  4380 ;;		Unchanged: 0/0
  4381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4382 ;;      Params:         0       0       0       0
  4383 ;;      Locals:         0       0       0       0
  4384 ;;      Temps:          0       0       0       0
  4385 ;;      Totals:         0       0       0       0
  4386 ;;Total ram usage:        0 bytes
  4387 ;; Hardware stack levels used:    1
  4388 ;; Hardware stack levels required when called:    6
  4389 ;; This function calls:
  4390 ;;		_MTOUCH_Sensor_Enable
  4391 ;;		_Sensor_Sampled_Reset
  4392 ;; This function is called by:
  4393 ;;		_MTOUCH_Initialize
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4397                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4398                           	line	112
  4399                           global __ptext7
  4400                           __ptext7:	;psect for function _MTOUCH_Sensor_InitializeAll
  4401  0743                     psect	text7
  4402                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4403                           	line	112
  4404                           	global	__size_of_MTOUCH_Sensor_InitializeAll
  4405                           	__size_of_MTOUCH_Sensor_InitializeAll	equ	__end_of_MTOUCH_Sensor_InitializeAll-_MTOUCH_
                                 Sensor_InitializeAll
  4406  000F                     	
  4407                           _MTOUCH_Sensor_InitializeAll:	
  4408  0743                     ;incstack = 0
  4409                           	opt	stack 7
  4410                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
                                 cstack]
  4411                           	line	114
  4412                           	
  4413                           l1776:	
  4414  0743                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 114:     WPUCbits.WPUC1 = 0;
  4415                           	movlb 4	; select bank4
  4416  0743  0024               	bcf	(526)^0200h,1	;volatile
  4417  0744  108E               	line	115
  4418                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 115:     ANSELCbits.ANSC1 = 0;
  4419                           	movlb 3	; select bank3
  4420  0745  0023               	bcf	(398)^0180h,1	;volatile
  4421  0746  108E               	line	116
  4422                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 116:     TRISCbits.TRISC1 = 0;
  4423                           	movlb 1	; select bank1
  4424  0747  0021               	bcf	(142)^080h,1	;volatile
  4425  0748  108E               	line	117
  4426                           	
  4427                           l1778:	
  4428  0749                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 117:     MTOUCH_Sensor_Enable(0);
  4429                           	movlw	low(0)
  4430  0749  3000               	fcall	_MTOUCH_Sensor_Enable
  4431  074A  3187  2733  3187   	line	118
  4432                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 118:     Sensor_Sampled_Reset(&mtouch_senso
                                 r[0]);
  4433                           	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  4434  074D  303D               	fcall	_Sensor_Sampled_Reset
  4435  074E  3187  278A  3187   	line	119
  4436                           	
  4437                           l220:	
  4438  0751                     	return
  4439  0751  0008               	opt stack 0
  4440                           GLOBAL	__end_of_MTOUCH_Sensor_InitializeAll
  4441                           	__end_of_MTOUCH_Sensor_InitializeAll:
  4442  0752                     	signat	_MTOUCH_Sensor_InitializeAll,89
  4443                           	global	_MTOUCH_Sensor_Enable
  4444                           
  4445 ;; *************** function _MTOUCH_Sensor_Enable *****************
  4446 ;; Defined at:
  4447 ;;		line 444 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4448 ;; Parameters:    Size  Location     Type
  4449 ;;  sensor          1    wreg     enum E2110
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  sensor          1    5[BANK0 ] enum E2110
  4452 ;; Return value:  Size  Location     Type
  4453 ;;                  1    wreg      void 
  4454 ;; Registers used:
  4455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4456 ;; Tracked objects:
  4457 ;;		On entry : 0/0
  4458 ;;		On exit  : 0/0
  4459 ;;		Unchanged: 0/0
  4460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4461 ;;      Params:         0       0       0       0
  4462 ;;      Locals:         0       1       0       0
  4463 ;;      Temps:          0       1       0       0
  4464 ;;      Totals:         0       2       0       0
  4465 ;;Total ram usage:        2 bytes
  4466 ;; Hardware stack levels used:    1
  4467 ;; Hardware stack levels required when called:    5
  4468 ;; This function calls:
  4469 ;;		___bmul
  4470 ;; This function is called by:
  4471 ;;		_MTOUCH_Sensor_InitializeAll
  4472 ;; This function uses a non-reentrant model
  4473 ;;
  4474                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4475                           	line	444
  4476                           global __ptext8
  4477                           __ptext8:	;psect for function _MTOUCH_Sensor_Enable
  4478  0733                     psect	text8
  4479                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4480                           	line	444
  4481                           	global	__size_of_MTOUCH_Sensor_Enable
  4482                           	__size_of_MTOUCH_Sensor_Enable	equ	__end_of_MTOUCH_Sensor_Enable-_MTOUCH_Sensor_Enable

  4483  0010                     	
  4484                           _MTOUCH_Sensor_Enable:	
  4485  0733                     ;incstack = 0
  4486                           	opt	stack 7
  4487                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
                                 
  4488                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  4489                           	movlb 0	; select bank0
  4490  0733  0020               	movwf	(MTOUCH_Sensor_Enable@sensor)
  4491  0734  00CB               	line	447
  4492                           	
  4493                           l1660:	
  4494  0735                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 444: void MTOUCH_Sensor_Enable(enum mtouch_
                                 sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 445: {;mcc_generated_fi
                                 les/mtouch/mtouch_sensor.c: 447:     mtouch_sensor[sensor].enabled = 1;
  4495                           	movlw	low(09h)
  4496  0735  3009               	movwf	(??_MTOUCH_Sensor_Enable+0)+0
  4497  0736  00CA               	movf	(??_MTOUCH_Sensor_Enable+0)+0,w
  4498  0737  084A               	movwf	(___bmul@multiplicand)
  4499  0738  00C6               	movf	(MTOUCH_Sensor_Enable@sensor),w
  4500  0739  084B               	fcall	___bmul
  4501  073A  3186  2688  3187   	addlw	08h
  4502  073D  3E08               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  4503  073E  3E3D               	movwf	fsr1l
  4504  073F  0086               	clrf fsr1h	
  4505  0740  0187               	
  4506                           	bsf	indf1,0
  4507  0741  1401               	line	448
  4508                           	
  4509                           l309:	
  4510  0742                     	return
  4511  0742  0008               	opt stack 0
  4512                           GLOBAL	__end_of_MTOUCH_Sensor_Enable
  4513                           	__end_of_MTOUCH_Sensor_Enable:
  4514  0743                     	signat	_MTOUCH_Sensor_Enable,4217
  4515                           	global	_MTOUCH_Button_InitializeAll
  4516                           
  4517 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  4518 ;; Defined at:
  4519 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4520 ;; Parameters:    Size  Location     Type
  4521 ;;		None
  4522 ;; Auto vars:     Size  Location     Type
  4523 ;;		None
  4524 ;; Return value:  Size  Location     Type
  4525 ;;                  1    wreg      void 
  4526 ;; Registers used:
  4527 ;;		None
  4528 ;; Tracked objects:
  4529 ;;		On entry : 0/0
  4530 ;;		On exit  : 0/0
  4531 ;;		Unchanged: 0/0
  4532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4533 ;;      Params:         0       0       0       0
  4534 ;;      Locals:         0       0       0       0
  4535 ;;      Temps:          0       0       0       0
  4536 ;;      Totals:         0       0       0       0
  4537 ;;Total ram usage:        0 bytes
  4538 ;; Hardware stack levels used:    1
  4539 ;; Hardware stack levels required when called:    4
  4540 ;; This function calls:
  4541 ;;		Nothing
  4542 ;; This function is called by:
  4543 ;;		_MTOUCH_Initialize
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4547                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  4548                           	line	130
  4549                           global __ptext9
  4550                           __ptext9:	;psect for function _MTOUCH_Button_InitializeAll
  4551  07DC                     psect	text9
  4552                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  4553                           	line	130
  4554                           	global	__size_of_MTOUCH_Button_InitializeAll
  4555                           	__size_of_MTOUCH_Button_InitializeAll	equ	__end_of_MTOUCH_Button_InitializeAll-_MTOUCH_
                                 Button_InitializeAll
  4556  0001                     	
  4557                           _MTOUCH_Button_InitializeAll:	
  4558  07DC                     ;incstack = 0
  4559                           	opt	stack 9
  4560                           ; Regs used in _MTOUCH_Button_InitializeAll: []
  4561                           	line	133
  4562                           	
  4563                           l391:	
  4564  07DC                     	return
  4565  07DC  0008               	opt stack 0
  4566                           GLOBAL	__end_of_MTOUCH_Button_InitializeAll
  4567                           	__end_of_MTOUCH_Button_InitializeAll:
  4568  07DD                     	signat	_MTOUCH_Button_InitializeAll,89
  4569                           	global	_MTOUCH_Service_Mainloop
  4570                           
  4571 ;; *************** function _MTOUCH_Service_Mainloop *****************
  4572 ;; Defined at:
  4573 ;;		line 63 in file "mcc_generated_files/mtouch/mtouch.c"
  4574 ;; Parameters:    Size  Location     Type
  4575 ;;		None
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;		None
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  1    wreg      _Bool 
  4580 ;; Registers used:
  4581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4587 ;;      Params:         0       0       0       0
  4588 ;;      Locals:         0       0       0       0
  4589 ;;      Temps:          0       0       0       0
  4590 ;;      Totals:         0       0       0       0
  4591 ;;Total ram usage:        0 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; Hardware stack levels required when called:   10
  4594 ;; This function calls:
  4595 ;;		_MTOUCH_Button_ServiceAll
  4596 ;;		_MTOUCH_Sensor_SampleAll
  4597 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4598 ;; This function is called by:
  4599 ;;		_main
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4603                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4604                           	line	63
  4605                           global __ptext10
  4606                           __ptext10:	;psect for function _MTOUCH_Service_Mainloop
  4607  076E                     psect	text10
  4608                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4609                           	line	63
  4610                           	global	__size_of_MTOUCH_Service_Mainloop
  4611                           	__size_of_MTOUCH_Service_Mainloop	equ	__end_of_MTOUCH_Service_Mainloop-_MTOUCH_Service_
                                 Mainloop
  4612  000B                     	
  4613                           _MTOUCH_Service_Mainloop:	
  4614  076E                     ;incstack = 0
  4615                           	opt	stack 5
  4616                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4617                           	line	65
  4618                           	
  4619                           l1946:	
  4620  076E                     ;mcc_generated_files/mtouch/mtouch.c: 65:     MTOUCH_Sensor_SampleAll();
  4621                           	fcall	_MTOUCH_Sensor_SampleAll
  4622  076E  3187  27C0  3187   	line	66
  4623                           	
  4624                           l1948:	
  4625  0771                     ;mcc_generated_files/mtouch/mtouch.c: 66:     MTOUCH_Button_ServiceAll();
  4626                           	fcall	_MTOUCH_Button_ServiceAll
  4627  0771  3187  27CA  3187   	line	67
  4628                           	
  4629                           l1950:	
  4630  0774                     ;mcc_generated_files/mtouch/mtouch.c: 67:     MTOUCH_Sensor_Sampled_ResetAll();
  4631                           	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4632  0774  3187  27BB  3187   	goto	l140
  4633  0777  2F78               	line	68
  4634                           	
  4635                           l1952:	
  4636  0778                     	line	69
  4637                           ;mcc_generated_files/mtouch/mtouch.c: 68:     return 1;;	Return value of _MTOUCH_Service
                                 _Mainloop is never used
  4638                           	
  4639                           l140:	
  4640  0778                     	return
  4641  0778  0008               	opt stack 0
  4642                           GLOBAL	__end_of_MTOUCH_Service_Mainloop
  4643                           	__end_of_MTOUCH_Service_Mainloop:
  4644  0779                     	signat	_MTOUCH_Service_Mainloop,89
  4645                           	global	_MTOUCH_Sensor_Sampled_ResetAll
  4646                           
  4647 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  4648 ;; Defined at:
  4649 ;;		line 504 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;		None
  4652 ;; Auto vars:     Size  Location     Type
  4653 ;;		None
  4654 ;; Return value:  Size  Location     Type
  4655 ;;                  1    wreg      void 
  4656 ;; Registers used:
  4657 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4658 ;; Tracked objects:
  4659 ;;		On entry : 0/0
  4660 ;;		On exit  : 0/0
  4661 ;;		Unchanged: 0/0
  4662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4663 ;;      Params:         0       0       0       0
  4664 ;;      Locals:         0       0       0       0
  4665 ;;      Temps:          0       0       0       0
  4666 ;;      Totals:         0       0       0       0
  4667 ;;Total ram usage:        0 bytes
  4668 ;; Hardware stack levels used:    1
  4669 ;; Hardware stack levels required when called:    5
  4670 ;; This function calls:
  4671 ;;		_Sensor_Sampled_Reset
  4672 ;; This function is called by:
  4673 ;;		_MTOUCH_Initialize
  4674 ;;		_MTOUCH_Service_Mainloop
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4678                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4679                           	line	504
  4680                           global __ptext11
  4681                           __ptext11:	;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  4682  07BB                     psect	text11
  4683                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4684                           	line	504
  4685                           	global	__size_of_MTOUCH_Sensor_Sampled_ResetAll
  4686                           	__size_of_MTOUCH_Sensor_Sampled_ResetAll	equ	__end_of_MTOUCH_Sensor_Sampled_ResetAll-_M
                                 TOUCH_Sensor_Sampled_ResetAll
  4687  0005                     	
  4688                           _MTOUCH_Sensor_Sampled_ResetAll:	
  4689  07BB                     ;incstack = 0
  4690                           	opt	stack 8
  4691                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
                                 th+cstack]
  4692                           	line	506
  4693                           	
  4694                           l1780:	
  4695  07BB                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 506:         Sensor_Sampled_Reset(&mtouch_s
                                 ensor[0]);
  4696                           	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  4697  07BB  303D               	fcall	_Sensor_Sampled_Reset
  4698  07BC  3187  278A  3187   	line	507
  4699                           	
  4700                           l333:	
  4701  07BF                     	return
  4702  07BF  0008               	opt stack 0
  4703                           GLOBAL	__end_of_MTOUCH_Sensor_Sampled_ResetAll
  4704                           	__end_of_MTOUCH_Sensor_Sampled_ResetAll:
  4705  07C0                     	signat	_MTOUCH_Sensor_Sampled_ResetAll,89
  4706                           	global	_Sensor_Sampled_Reset
  4707                           
  4708 ;; *************** function _Sensor_Sampled_Reset *****************
  4709 ;; Defined at:
  4710 ;;		line 515 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  sensor          1    wreg     PTR struct .
  4713 ;;		 -> mtouch_sensor(9), 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  sensor          1    0[BANK0 ] PTR struct .
  4716 ;;		 -> mtouch_sensor(9), 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  1    wreg      void 
  4719 ;; Registers used:
  4720 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4726 ;;      Params:         0       0       0       0
  4727 ;;      Locals:         0       1       0       0
  4728 ;;      Temps:          0       0       0       0
  4729 ;;      Totals:         0       1       0       0
  4730 ;;Total ram usage:        1 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    4
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_MTOUCH_Sensor_InitializeAll
  4737 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           psect	text12,local,class=CODE,delta=2,merge=1,inline,group=0
  4741                           	line	515
  4742                           global __ptext12
  4743                           __ptext12:	;psect for function _Sensor_Sampled_Reset
  4744  078A                     psect	text12
  4745                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4746                           	line	515
  4747                           	global	__size_of_Sensor_Sampled_Reset
  4748                           	__size_of_Sensor_Sampled_Reset	equ	__end_of_Sensor_Sampled_Reset-_Sensor_Sampled_Reset

  4749  0008                     	
  4750                           _Sensor_Sampled_Reset:	
  4751  078A                     ;incstack = 0
  4752                           	opt	stack 8
  4753                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4754                           ;Sensor_Sampled_Reset@sensor stored from wreg
  4755                           	movlb 0	; select bank0
  4756  078A  0020               	movwf	(Sensor_Sampled_Reset@sensor)
  4757  078B  00C6               	line	517
  4758                           	
  4759                           l1662:	
  4760  078C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 515: static __attribute__((inline)) void Se
                                 nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 516: {;mcc_generated_files/mtouch/mtouch_sensor.c: 517:     sensor->sampled = 0;
  4761                           	movf	(Sensor_Sampled_Reset@sensor),w
  4762  078C  0846               	addlw	08h
  4763  078D  3E08               	movwf	fsr1l
  4764  078E  0086               	clrf fsr1h	
  4765  078F  0187               	
  4766                           	bcf	indf1,1
  4767  0790  1081               	line	518
  4768                           	
  4769                           l339:	
  4770  0791                     	return
  4771  0791  0008               	opt stack 0
  4772                           GLOBAL	__end_of_Sensor_Sampled_Reset
  4773                           	__end_of_Sensor_Sampled_Reset:
  4774  0792                     	signat	_Sensor_Sampled_Reset,4217
  4775                           	global	_MTOUCH_Sensor_SampleAll
  4776                           
  4777 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4778 ;; Defined at:
  4779 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4793 ;;      Params:         0       0       0       0
  4794 ;;      Locals:         0       0       0       0
  4795 ;;      Temps:          0       0       0       0
  4796 ;;      Totals:         0       0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    9
  4800 ;; This function calls:
  4801 ;;		_Sensor_Service
  4802 ;; This function is called by:
  4803 ;;		_MTOUCH_Service_Mainloop
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4807                           	line	143
  4808                           global __ptext13
  4809                           __ptext13:	;psect for function _MTOUCH_Sensor_SampleAll
  4810  07C0                     psect	text13
  4811                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4812                           	line	143
  4813                           	global	__size_of_MTOUCH_Sensor_SampleAll
  4814                           	__size_of_MTOUCH_Sensor_SampleAll	equ	__end_of_MTOUCH_Sensor_SampleAll-_MTOUCH_Sensor_S
                                 ampleAll
  4815  0005                     	
  4816                           _MTOUCH_Sensor_SampleAll:	
  4817  07C0                     ;incstack = 0
  4818                           	opt	stack 5
  4819                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4820                           	line	145
  4821                           	
  4822                           l1886:	
  4823  07C0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 145:     Sensor_Service(0);
  4824                           	movlw	low(0)
  4825  07C0  3000               	fcall	_Sensor_Service
  4826  07C1  3185  253F  3187   	line	146
  4827                           	
  4828                           l226:	
  4829  07C4                     	return
  4830  07C4  0008               	opt stack 0
  4831                           GLOBAL	__end_of_MTOUCH_Sensor_SampleAll
  4832                           	__end_of_MTOUCH_Sensor_SampleAll:
  4833  07C5                     	signat	_MTOUCH_Sensor_SampleAll,89
  4834                           	global	_Sensor_Service
  4835                           
  4836 ;; *************** function _Sensor_Service *****************
  4837 ;; Defined at:
  4838 ;;		line 154 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4839 ;; Parameters:    Size  Location     Type
  4840 ;;  name            1    wreg     enum E2110
  4841 ;; Auto vars:     Size  Location     Type
  4842 ;;  name            1   27[BANK0 ] enum E2110
  4843 ;;  sensor          1   28[BANK0 ] PTR struct .
  4844 ;;		 -> mtouch_sensor(9), 
  4845 ;;  error           1   26[BANK0 ] enum E2112
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      enum E2112
  4848 ;; Registers used:
  4849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4855 ;;      Params:         0       0       0       0
  4856 ;;      Locals:         0       3       0       0
  4857 ;;      Temps:          0       2       0       0
  4858 ;;      Totals:         0       5       0       0
  4859 ;;Total ram usage:        5 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; Hardware stack levels required when called:    8
  4862 ;; This function calls:
  4863 ;;		_Sensor_Acquisition
  4864 ;;		_Sensor_DefaultCallback
  4865 ;;		_Sensor_RawSample_Update
  4866 ;;		_Sensor_setSampled
  4867 ;;		___bmul
  4868 ;; This function is called by:
  4869 ;;		_MTOUCH_Sensor_SampleAll
  4870 ;; This function uses a non-reentrant model
  4871 ;;
  4872                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4873                           	line	154
  4874                           global __ptext14
  4875                           __ptext14:	;psect for function _Sensor_Service
  4876  053F                     psect	text14
  4877                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4878                           	line	154
  4879                           	global	__size_of_Sensor_Service
  4880                           	__size_of_Sensor_Service	equ	__end_of_Sensor_Service-_Sensor_Service
  4881  003F                     	
  4882                           _Sensor_Service:	
  4883  053F                     ;incstack = 0
  4884                           	opt	stack 5
  4885                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4886                           ;Sensor_Service@name stored from wreg
  4887                           	movlb 0	; select bank0
  4888  053F  0020               	movwf	(Sensor_Service@name)
  4889  0540  00E1               	line	156
  4890                           	
  4891                           l1782:	
  4892  0541                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 154: static enum mtouch_sensor_error Sensor
                                 _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 155:
                                  {;mcc_generated_files/mtouch/mtouch_sensor.c: 156:     mtouch_sensor_t* sensor = &mtouc
                                 h_sensor[name];
  4893                           	movlw	low(09h)
  4894  0541  3009               	movwf	(??_Sensor_Service+0)+0
  4895  0542  00DE               	movf	(??_Sensor_Service+0)+0,w
  4896  0543  085E               	movwf	(___bmul@multiplicand)
  4897  0544  00C6               	movf	(Sensor_Service@name),w
  4898  0545  0861               	fcall	___bmul
  4899  0546  3186  2688  3185   	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  4900  0549  3E3D               	movlb 0	; select bank0
  4901  054A  0020               	movwf	(??_Sensor_Service+1)+0
  4902  054B  00DF               	movf	(??_Sensor_Service+1)+0,w
  4903  054C  085F               	movwf	(Sensor_Service@sensor)
  4904  054D  00E2               	line	157
  4905                           	
  4906                           l1784:	
  4907  054E                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 157:     enum mtouch_sensor_error error = S
                                 ensor_Acquisition(sensor);
  4908                           	movf	(Sensor_Service@sensor),w
  4909  054E  0862               	fcall	_Sensor_Acquisition
  4910  054F  3184  244D  3185   	movlb 0	; select bank0
  4911  0552  0020               	movwf	(??_Sensor_Service+0)+0
  4912  0553  00DE               	movf	(??_Sensor_Service+0)+0,w
  4913  0554  085E               	movwf	(Sensor_Service@error)
  4914  0555  00E0               	line	160
  4915                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 160:     switch(error)
  4916                           	goto	l1792
  4917  0556  2D6D               	line	162
  4918                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 162:         case MTOUCH_SENSOR_ERROR_none:
  4919                           	
  4920                           l230:	
  4921  0557                     	line	164
  4922                           	
  4923                           l1786:	
  4924  0557                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 163:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 164:             Sensor_RawSample_Update(sensor);
  4925                           	movf	(Sensor_Service@sensor),w
  4926  0557  0862               	fcall	_Sensor_RawSample_Update
  4927  0558  3186  2652  3185   	line	165
  4928                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 165:             Sensor_setSampled(sensor);
                                 
  4929                           	movlb 0	; select bank0
  4930  055B  0020               	movf	(Sensor_Service@sensor),w
  4931  055C  0862               	fcall	_Sensor_setSampled
  4932  055D  3187  2792  3185   	line	166
  4933                           	
  4934                           l1788:	
  4935  0560                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 166:             callback_sampled(name);
  4936                           	movlb 0	; select bank0
  4937  0560  0020               	movf	(Sensor_Service@name),w
  4938  0561  0861               	movwf	(??_Sensor_Service+0)+0
  4939  0562  00DE               	movf	(??_Sensor_Service+0)+0,w
  4940  0563  085E               	movwf	(Sensor_DefaultCallback@sensor)
  4941  0564  00C6               	movf	(_callback_sampled+1),w
  4942  0565  082B               	movwf	pclath
  4943  0566  008A               	movf	(_callback_sampled),w
  4944  0567  082A               	callw
  4945  0568  000A               	pagesel	$
  4946  0569  3185               	line	168
  4947                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 167:         };mcc_generated_files/mtouch/m
                                 touch_sensor.c: 168:         break;
  4948                           	goto	l233
  4949  056A  2D7D               	line	170
  4950                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 170:         default: break;
  4951                           	
  4952                           l232:	
  4953  056B                     	goto	l233
  4954  056B  2D7D               	line	171
  4955                           	
  4956                           l1790:	
  4957  056C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 171:     }
  4958                           	goto	l233
  4959  056C  2D7D               	
  4960                           l229:	
  4961  056D                     	
  4962                           l1792:	
  4963  056D                     	movlb 0	; select bank0
  4964  056D  0020               	movf	(Sensor_Service@error),w
  4965  056E  0860               	movwf	(??_Sensor_Service+0)+0
  4966  056F  00DE               	clrf	(??_Sensor_Service+0)+0+1
  4967  0570  01DF               	btfsc	(??_Sensor_Service+0)+0,7
  4968  0571  1BDE               	decf	(??_Sensor_Service+0)+0+1,f
  4969  0572  03DF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4970                           ; Switch size 1, requested type "space"
  4971                           ; Number of cases is 1, Range of values is 0 to 0
  4972                           ; switch strategies available:
  4973                           ; Name         Instructions Cycles
  4974                           ; simple_byte            4     3 (average)
  4975                           ; direct_byte            8     6 (fixed)
  4976                           ; jumptable            260     6 (fixed)
  4977                           ;	Chosen strategy is simple_byte
  4978                           
  4979                           	movf 1+(??_Sensor_Service+0)+0,w
  4980  0573  085F               	opt asmopt_push
  4981                           	opt asmopt_off
  4982                           	xorlw	0^0	; case 0
  4983  0574  3A00               	skipnz
  4984  0575  1903               	goto	l2042
  4985  0576  2D78               	goto	l233
  4986  0577  2D7D               	opt asmopt_pop
  4987                           	
  4988                           l2042:	
  4989  0578                     ; Switch size 1, requested type "space"
  4990                           ; Number of cases is 1, Range of values is 0 to 0
  4991                           ; switch strategies available:
  4992                           ; Name         Instructions Cycles
  4993                           ; simple_byte            4     3 (average)
  4994                           ; direct_byte            8     6 (fixed)
  4995                           ; jumptable            260     6 (fixed)
  4996                           ;	Chosen strategy is simple_byte
  4997                           
  4998                           	movf 0+(??_Sensor_Service+0)+0,w
  4999  0578  085E               	opt asmopt_push
  5000                           	opt asmopt_off
  5001                           	xorlw	0^0	; case 0
  5002  0579  3A00               	skipnz
  5003  057A  1903               	goto	l1786
  5004  057B  2D57               	goto	l233
  5005  057C  2D7D               	opt asmopt_pop
  5006                           
  5007                           	
  5008                           l231:	
  5009  057D                     	line	174
  5010                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 173:     return error;;	Return value of _Se
                                 nsor_Service is never used
  5011                           	
  5012                           l233:	
  5013  057D                     	return
  5014  057D  0008               	opt stack 0
  5015                           GLOBAL	__end_of_Sensor_Service
  5016                           	__end_of_Sensor_Service:
  5017  057E                     	signat	_Sensor_Service,4217
  5018                           	global	_Sensor_setSampled
  5019                           
  5020 ;; *************** function _Sensor_setSampled *****************
  5021 ;; Defined at:
  5022 ;;		line 520 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;  sensor          1    wreg     PTR struct .
  5025 ;;		 -> mtouch_sensor(9), 
  5026 ;; Auto vars:     Size  Location     Type
  5027 ;;  sensor          1    0[BANK0 ] PTR struct .
  5028 ;;		 -> mtouch_sensor(9), 
  5029 ;; Return value:  Size  Location     Type
  5030 ;;                  1    wreg      void 
  5031 ;; Registers used:
  5032 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5033 ;; Tracked objects:
  5034 ;;		On entry : 0/0
  5035 ;;		On exit  : 0/0
  5036 ;;		Unchanged: 0/0
  5037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5038 ;;      Params:         0       0       0       0
  5039 ;;      Locals:         0       1       0       0
  5040 ;;      Temps:          0       0       0       0
  5041 ;;      Totals:         0       1       0       0
  5042 ;;Total ram usage:        1 bytes
  5043 ;; Hardware stack levels used:    1
  5044 ;; Hardware stack levels required when called:    4
  5045 ;; This function calls:
  5046 ;;		Nothing
  5047 ;; This function is called by:
  5048 ;;		_Sensor_Service
  5049 ;; This function uses a non-reentrant model
  5050 ;;
  5051                           psect	text15,local,class=CODE,delta=2,merge=1,inline,group=0
  5052                           	line	520
  5053                           global __ptext15
  5054                           __ptext15:	;psect for function _Sensor_setSampled
  5055  0792                     psect	text15
  5056                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5057                           	line	520
  5058                           	global	__size_of_Sensor_setSampled
  5059                           	__size_of_Sensor_setSampled	equ	__end_of_Sensor_setSampled-_Sensor_setSampled
  5060  0008                     	
  5061                           _Sensor_setSampled:	
  5062  0792                     ;incstack = 0
  5063                           	opt	stack 8
  5064                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5065                           ;Sensor_setSampled@sensor stored from wreg
  5066                           	movlb 0	; select bank0
  5067  0792  0020               	movwf	(Sensor_setSampled@sensor)
  5068  0793  00C6               	line	522
  5069                           	
  5070                           l1700:	
  5071  0794                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 520: static __attribute__((inline)) void Se
                                 nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 521
                                 : {;mcc_generated_files/mtouch/mtouch_sensor.c: 522:     sensor->sampled = 1;
  5072                           	movf	(Sensor_setSampled@sensor),w
  5073  0794  0846               	addlw	08h
  5074  0795  3E08               	movwf	fsr1l
  5075  0796  0086               	clrf fsr1h	
  5076  0797  0187               	
  5077                           	bsf	indf1,1
  5078  0798  1481               	line	523
  5079                           	
  5080                           l342:	
  5081  0799                     	return
  5082  0799  0008               	opt stack 0
  5083                           GLOBAL	__end_of_Sensor_setSampled
  5084                           	__end_of_Sensor_setSampled:
  5085  079A                     	signat	_Sensor_setSampled,4217
  5086                           	global	_Sensor_RawSample_Update
  5087                           
  5088 ;; *************** function _Sensor_RawSample_Update *****************
  5089 ;; Defined at:
  5090 ;;		line 399 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  sensor          1    wreg     PTR struct .
  5093 ;;		 -> mtouch_sensor(9), 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  sensor          1    0[BANK0 ] PTR struct .
  5096 ;;		 -> mtouch_sensor(9), 
  5097 ;; Return value:  Size  Location     Type
  5098 ;;                  1    wreg      void 
  5099 ;; Registers used:
  5100 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5101 ;; Tracked objects:
  5102 ;;		On entry : 0/0
  5103 ;;		On exit  : 0/0
  5104 ;;		Unchanged: 0/0
  5105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5106 ;;      Params:         0       0       0       0
  5107 ;;      Locals:         0       1       0       0
  5108 ;;      Temps:          0       0       0       0
  5109 ;;      Totals:         0       1       0       0
  5110 ;;Total ram usage:        1 bytes
  5111 ;; Hardware stack levels used:    1
  5112 ;; Hardware stack levels required when called:    4
  5113 ;; This function calls:
  5114 ;;		Nothing
  5115 ;; This function is called by:
  5116 ;;		_Sensor_Service
  5117 ;; This function uses a non-reentrant model
  5118 ;;
  5119                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5120                           	line	399
  5121                           global __ptext16
  5122                           __ptext16:	;psect for function _Sensor_RawSample_Update
  5123  0652                     psect	text16
  5124                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5125                           	line	399
  5126                           	global	__size_of_Sensor_RawSample_Update
  5127                           	__size_of_Sensor_RawSample_Update	equ	__end_of_Sensor_RawSample_Update-_Sensor_RawSampl
                                 e_Update
  5128  001B                     	
  5129                           _Sensor_RawSample_Update:	
  5130  0652                     ;incstack = 0
  5131                           	opt	stack 8
  5132                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  5133                           ;Sensor_RawSample_Update@sensor stored from wreg
  5134                           	movlb 0	; select bank0
  5135  0652  0020               	movwf	(Sensor_RawSample_Update@sensor)
  5136  0653  00C6               	line	401
  5137                           	
  5138                           l1690:	
  5139  0654                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 399: static void Sensor_RawSample_Update(mt
                                 ouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 400: {;mcc_generated_
                                 files/mtouch/mtouch_sensor.c: 401:     if (INTCONbits.GIE == (uint8_t)1)
  5140                           	btfss	(11),7	;volatile
  5141  0654  1F8B               	goto	u801
  5142  0655  2E57               	goto	u800
  5143  0656  2E58               u801:
  5144  0657                     	goto	l1698
  5145  0657  2E63               u800:
  5146  0658                     	line	403
  5147                           	
  5148                           l1692:	
  5149  0658                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 402:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 403:         INTCONbits.GIE = (uint8_t)0;
  5150                           	bcf	(11),7	;volatile
  5151  0658  138B               	line	404
  5152                           	
  5153                           l1694:	
  5154  0659                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:         sensor->rawSample = packet_sam
                                 ple;
  5155                           	movf	(Sensor_RawSample_Update@sensor),w
  5156  0659  0846               	addlw	06h
  5157  065A  3E06               	movwf	fsr1l
  5158  065B  0086               	clrf fsr1h	
  5159  065C  0187               	
  5160                           	movf	(_packet_sample),w
  5161  065D  0865               	movwi	[0]fsr1
  5162  065E  3FC0               	movf	(_packet_sample+1),w
  5163  065F  0866               	movwi	[1]fsr1
  5164  0660  3FC1               	line	405
  5165                           	
  5166                           l1696:	
  5167  0661                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:         INTCONbits.GIE = (uint8_t)1;
  5168                           	bsf	(11),7	;volatile
  5169  0661  178B               	line	406
  5170                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 406:     }
  5171                           	goto	l297
  5172  0662  2E6C               	line	407
  5173                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 407:     else
  5174                           	
  5175                           l295:	
  5176  0663                     	line	409
  5177                           	
  5178                           l1698:	
  5179  0663                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 408:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 409:         sensor->rawSample = packet_sample;
  5180                           	movf	(Sensor_RawSample_Update@sensor),w
  5181  0663  0846               	addlw	06h
  5182  0664  3E06               	movwf	fsr1l
  5183  0665  0086               	clrf fsr1h	
  5184  0666  0187               	
  5185                           	movf	(_packet_sample),w
  5186  0667  0865               	movwi	[0]fsr1
  5187  0668  3FC0               	movf	(_packet_sample+1),w
  5188  0669  0866               	movwi	[1]fsr1
  5189  066A  3FC1               	goto	l297
  5190  066B  2E6C               	line	410
  5191                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 410:     }
  5192                           	
  5193                           l296:	
  5194  066C                     	line	411
  5195                           	
  5196                           l297:	
  5197  066C                     	return
  5198  066C  0008               	opt stack 0
  5199                           GLOBAL	__end_of_Sensor_RawSample_Update
  5200                           	__end_of_Sensor_RawSample_Update:
  5201  066D                     	signat	_Sensor_RawSample_Update,4217
  5202                           	global	_Sensor_DefaultCallback
  5203                           
  5204 ;; *************** function _Sensor_DefaultCallback *****************
  5205 ;; Defined at:
  5206 ;;		line 419 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  sensor          1    0[BANK0 ] enum E2110
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;		None
  5211 ;; Return value:  Size  Location     Type
  5212 ;;                  1    wreg      void 
  5213 ;; Registers used:
  5214 ;;		None
  5215 ;; Tracked objects:
  5216 ;;		On entry : 0/0
  5217 ;;		On exit  : 0/0
  5218 ;;		Unchanged: 0/0
  5219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5220 ;;      Params:         0       1       0       0
  5221 ;;      Locals:         0       0       0       0
  5222 ;;      Temps:          0       0       0       0
  5223 ;;      Totals:         0       1       0       0
  5224 ;;Total ram usage:        1 bytes
  5225 ;; Hardware stack levels used:    1
  5226 ;; Hardware stack levels required when called:    4
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_Sensor_Service
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5234                           	line	419
  5235                           global __ptext17
  5236                           __ptext17:	;psect for function _Sensor_DefaultCallback
  5237  07DD                     psect	text17
  5238                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5239                           	line	419
  5240                           	global	__size_of_Sensor_DefaultCallback
  5241                           	__size_of_Sensor_DefaultCallback	equ	__end_of_Sensor_DefaultCallback-_Sensor_DefaultCal
                                 lback
  5242  0001                     	
  5243                           _Sensor_DefaultCallback:	
  5244  07DD                     ;incstack = 0
  5245                           	opt	stack 8
  5246                           ; Regs used in _Sensor_DefaultCallback: []
  5247                           	
  5248                           l300:	
  5249  07DD                     	return
  5250  07DD  0008               	opt stack 0
  5251                           GLOBAL	__end_of_Sensor_DefaultCallback
  5252                           	__end_of_Sensor_DefaultCallback:
  5253  07DE                     	signat	_Sensor_DefaultCallback,4217
  5254                           	global	_Sensor_Acquisition
  5255                           
  5256 ;; *************** function _Sensor_Acquisition *****************
  5257 ;; Defined at:
  5258 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5259 ;; Parameters:    Size  Location     Type
  5260 ;;  sensor          1    wreg     PTR struct .
  5261 ;;		 -> mtouch_sensor(9), 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  sensor          1   23[BANK0 ] PTR struct .
  5264 ;;		 -> mtouch_sensor(9), 
  5265 ;;  retry           1   22[BANK0 ] unsigned char 
  5266 ;; Return value:  Size  Location     Type
  5267 ;;                  1    wreg      enum E2112
  5268 ;; Registers used:
  5269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5270 ;; Tracked objects:
  5271 ;;		On entry : 0/0
  5272 ;;		On exit  : 0/0
  5273 ;;		Unchanged: 0/0
  5274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5275 ;;      Params:         0       0       0       0
  5276 ;;      Locals:         0       2       0       0
  5277 ;;      Temps:          0       4       0       0
  5278 ;;      Totals:         0       6       0       0
  5279 ;;Total ram usage:        6 bytes
  5280 ;; Hardware stack levels used:    1
  5281 ;; Hardware stack levels required when called:    7
  5282 ;; This function calls:
  5283 ;;		_Sensor_Acq_ExecutePacket
  5284 ;;		_Sensor_Scanfrequency_Evaluation
  5285 ;;		_Sensor_setActive
  5286 ;;		_Sensor_setInactive
  5287 ;;		_abs
  5288 ;; This function is called by:
  5289 ;;		_Sensor_Service
  5290 ;; This function uses a non-reentrant model
  5291 ;;
  5292                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5293                           	line	187
  5294                           global __ptext18
  5295                           __ptext18:	;psect for function _Sensor_Acquisition
  5296  044D                     psect	text18
  5297                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5298                           	line	187
  5299                           	global	__size_of_Sensor_Acquisition
  5300                           	__size_of_Sensor_Acquisition	equ	__end_of_Sensor_Acquisition-_Sensor_Acquisition
  5301  005F                     	
  5302                           _Sensor_Acquisition:	
  5303  044D                     ;incstack = 0
  5304                           	opt	stack 5
  5305                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5306                           ;Sensor_Acquisition@sensor stored from wreg
  5307                           	movlb 0	; select bank0
  5308  044D  0020               	movwf	(Sensor_Acquisition@sensor)
  5309  044E  00DD               	line	190
  5310                           	
  5311                           l1664:	
  5312  044F                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 187: static enum mtouch_sensor_error Sensor
                                 _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 188: {
                                 ;mcc_generated_files/mtouch/mtouch_sensor.c: 190:     uint8_t retry = (uint8_t)5;
  5313                           	movlw	low(05h)
  5314  044F  3005               	movwf	(??_Sensor_Acquisition+0)+0
  5315  0450  00D8               	movf	(??_Sensor_Acquisition+0)+0,w
  5316  0451  0858               	movwf	(Sensor_Acquisition@retry)
  5317  0452  00DC               	line	193
  5318                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:     while(Sensor_Acq_ExecutePacket(sen
                                 sor))
  5319                           	goto	l1672
  5320  0453  2C60               	
  5321                           l241:	
  5322  0454                     	line	195
  5323                           	
  5324                           l1666:	
  5325  0454                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 195:         retry--;
  5326                           	movlw	01h
  5327  0454  3001               	movlb 0	; select bank0
  5328  0455  0020               	subwf	(Sensor_Acquisition@retry),f
  5329  0456  02DC               	line	196
  5330                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 196:         if(retry == 0)
  5331                           	movf	((Sensor_Acquisition@retry)),w
  5332  0457  085C               	btfss	status,2
  5333  0458  1D03               	goto	u771
  5334  0459  2C5B               	goto	u770
  5335  045A  2C5C               u771:
  5336  045B                     	goto	l1672
  5337  045B  2C60               u770:
  5338  045C                     	line	198
  5339                           	
  5340                           l1668:	
  5341  045C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 197:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 198:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  5342                           	movlw	low(-4)
  5343  045C  30FC               	goto	l243
  5344  045D  2CAB               	
  5345                           l1670:	
  5346  045E                     	goto	l243
  5347  045E  2CAB               	line	199
  5348                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 199:         }
  5349                           	
  5350                           l242:	
  5351  045F                     	goto	l1672
  5352  045F  2C60               	line	200
  5353                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 200:     }
  5354                           	
  5355                           l240:	
  5356  0460                     	line	193
  5357                           	
  5358                           l1672:	
  5359  0460                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:     while(Sensor_Acq_ExecutePacket(sen
                                 sor))
  5360                           	movf	(Sensor_Acquisition@sensor),w
  5361  0460  085D               	fcall	_Sensor_Acq_ExecutePacket
  5362  0461  3183  2383  3184   	xorlw	low(0)&0ffh
  5363  0464  3A00               	skipz
  5364  0465  1D03               	goto	u781
  5365  0466  2C68               	goto	u780
  5366  0467  2C69               u781:
  5367  0468                     	goto	l1666
  5368  0468  2C54               u780:
  5369  0469                     	goto	l1674
  5370  0469  2C6A               	
  5371                           l244:	
  5372  046A                     	line	202
  5373                           	
  5374                           l1674:	
  5375  046A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     if((mtouch_sensor_packetsample_t)a
                                 bs(packet_sample - sensor->rawSample) > (mtouch_sensor_packetsample_t)(sensor->oversampl
                                 ing)<<2)
  5376                           	movlb 0	; select bank0
  5377  046A  0020               	movf	(Sensor_Acquisition@sensor),w
  5378  046B  085D               	addlw	06h
  5379  046C  3E06               	movwf	fsr1l
  5380  046D  0086               	clrf fsr1h	
  5381  046E  0187               	
  5382                           	moviw	[0]fsr1
  5383  046F  3F40               	movwf	(??_Sensor_Acquisition+0)+0
  5384  0470  00D8               	moviw	[1]fsr1
  5385  0471  3F41               	movwf	(??_Sensor_Acquisition+0)+0+1
  5386  0472  00D9               	comf	(??_Sensor_Acquisition+0)+0,f
  5387  0473  09D8               	comf	(??_Sensor_Acquisition+0)+1,f
  5388  0474  09D9               	incf	(??_Sensor_Acquisition+0)+0,f
  5389  0475  0AD8               	skipnz
  5390  0476  1903               	incf	(??_Sensor_Acquisition+0)+1,f
  5391  0477  0AD9               	movf	(_packet_sample),w
  5392  0478  0865               	addwf	0+(??_Sensor_Acquisition+0)+0,w
  5393  0479  0758               	movwf	(abs@a)
  5394  047A  00C6               	movf	(_packet_sample+1),w
  5395  047B  0866               	addwfc	1+(??_Sensor_Acquisition+0)+0,w
  5396  047C  3D59               	movwf	1+(abs@a)
  5397  047D  00C7               	fcall	_abs
  5398  047E  3186  2635  3184   	movlb 0	; select bank0
  5399  0481  0020               	movf	(Sensor_Acquisition@sensor),w
  5400  0482  085D               	addlw	05h
  5401  0483  3E05               	movwf	fsr1l
  5402  0484  0086               	clrf fsr1h	
  5403  0485  0187               	
  5404                           	movf	indf1,w
  5405  0486  0801               	movwf	(??_Sensor_Acquisition+2)+0
  5406  0487  00DA               	clrf	(??_Sensor_Acquisition+2)+0+1
  5407  0488  01DB               	lslf	(??_Sensor_Acquisition+2)+0,f
  5408  0489  35DA               	rlf	(??_Sensor_Acquisition+2)+1,f
  5409  048A  0DDB               	lslf	(??_Sensor_Acquisition+2)+0,f
  5410  048B  35DA               	rlf	(??_Sensor_Acquisition+2)+1,f
  5411  048C  0DDB               	movf	(1+(?_abs)),w
  5412  048D  0847               	subwf	1+(??_Sensor_Acquisition+2)+0,w
  5413  048E  025B               	skipz
  5414  048F  1D03               	goto	u795
  5415  0490  2C93               	movf	(0+(?_abs)),w
  5416  0491  0846               	subwf	0+(??_Sensor_Acquisition+2)+0,w
  5417  0492  025A               u795:
  5418  0493                     	skipnc
  5419  0493  1803               	goto	u791
  5420  0494  2C96               	goto	u790
  5421  0495  2C97               u791:
  5422  0496                     	goto	l1684
  5423  0496  2CA3               u790:
  5424  0497                     	line	204
  5425                           	
  5426                           l1676:	
  5427  0497                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 204:         Sensor_setActive(sensor);
  5428                           	movf	(Sensor_Acquisition@sensor),w
  5429  0497  085D               	fcall	_Sensor_setActive
  5430  0498  3187  27A2  3184   	line	205
  5431                           	
  5432                           l1678:	
  5433  049B                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 205:         return Sensor_Scanfrequency_Ev
                                 aluation(sensor);
  5434                           	movlb 0	; select bank0
  5435  049B  0020               	movf	(Sensor_Acquisition@sensor),w
  5436  049C  085D               	fcall	_Sensor_Scanfrequency_Evaluation
  5437  049D  3182  228F  3184   	goto	l243
  5438  04A0  2CAB               	
  5439                           l1680:	
  5440  04A1                     	goto	l243
  5441  04A1  2CAB               	line	206
  5442                           	
  5443                           l1682:	
  5444  04A2                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 206:     }
  5445                           	goto	l1686
  5446  04A2  2CA9               	line	207
  5447                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 207:     else
  5448                           	
  5449                           l245:	
  5450  04A3                     	line	209
  5451                           	
  5452                           l1684:	
  5453  04A3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 208:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 209:         Sensor_setInactive(sensor);
  5454                           	movlb 0	; select bank0
  5455  04A3  0020               	movf	(Sensor_Acquisition@sensor),w
  5456  04A4  085D               	fcall	_Sensor_setInactive
  5457  04A5  3187  279A  3184   	goto	l1686
  5458  04A8  2CA9               	line	210
  5459                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 210:     }
  5460                           	
  5461                           l246:	
  5462  04A9                     	line	212
  5463                           	
  5464                           l1686:	
  5465  04A9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 212:     return MTOUCH_SENSOR_ERROR_none;
  5466                           	movlw	low(0)
  5467  04A9  3000               	goto	l243
  5468  04AA  2CAB               	
  5469                           l1688:	
  5470  04AB                     	line	213
  5471                           	
  5472                           l243:	
  5473  04AB                     	return
  5474  04AB  0008               	opt stack 0
  5475                           GLOBAL	__end_of_Sensor_Acquisition
  5476                           	__end_of_Sensor_Acquisition:
  5477  04AC                     	signat	_Sensor_Acquisition,4217
  5478                           	global	_abs
  5479                           
  5480 ;; *************** function _abs *****************
  5481 ;; Defined at:
  5482 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5483 ;; Parameters:    Size  Location     Type
  5484 ;;  a               2    0[BANK0 ] int 
  5485 ;; Auto vars:     Size  Location     Type
  5486 ;;		None
  5487 ;; Return value:  Size  Location     Type
  5488 ;;                  2    0[BANK0 ] int 
  5489 ;; Registers used:
  5490 ;;		wreg, status,2, status,0
  5491 ;; Tracked objects:
  5492 ;;		On entry : 0/0
  5493 ;;		On exit  : 0/0
  5494 ;;		Unchanged: 0/0
  5495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5496 ;;      Params:         0       2       0       0
  5497 ;;      Locals:         0       0       0       0
  5498 ;;      Temps:          0       2       0       0
  5499 ;;      Totals:         0       4       0       0
  5500 ;;Total ram usage:        4 bytes
  5501 ;; Hardware stack levels used:    1
  5502 ;; Hardware stack levels required when called:    4
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_Sensor_Acquisition
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
  5510                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5511                           	line	1
  5512                           global __ptext19
  5513                           __ptext19:	;psect for function _abs
  5514  0635                     psect	text19
  5515                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5516                           	line	1
  5517                           	global	__size_of_abs
  5518                           	__size_of_abs	equ	__end_of_abs-_abs
  5519  001D                     	
  5520                           _abs:	
  5521  0635                     ;incstack = 0
  5522                           	opt	stack 7
  5523                           ; Regs used in _abs: [wreg+status,2+status,0]
  5524                           	line	3
  5525                           	
  5526                           l1596:	
  5527  0635                     	movlb 0	; select bank0
  5528  0635  0020               	movf	(abs@a+1),w
  5529  0636  0847               	xorlw	80h
  5530  0637  3A80               	movwf	(??_abs+0)+0
  5531  0638  00C8               	movlw	(0)^80h
  5532  0639  3080               	subwf	(??_abs+0)+0,w
  5533  063A  0248               	skipz
  5534  063B  1D03               	goto	u665
  5535  063C  2E3F               	movlw	01h
  5536  063D  3001               	subwf	(abs@a),w
  5537  063E  0246               u665:
  5538  063F                     
  5539                           	skipnc
  5540  063F  1803               	goto	u661
  5541  0640  2E42               	goto	u660
  5542  0641  2E43               u661:
  5543  0642                     	goto	l949
  5544  0642  2E50               u660:
  5545  0643                     	
  5546                           l1598:	
  5547  0643                     	movlb 0	; select bank0
  5548  0643  0020               	comf	(abs@a),w
  5549  0644  0946               	movwf	(??_abs+0)+0
  5550  0645  00C8               	comf	(abs@a+1),w
  5551  0646  0947               	movwf	((??_abs+0)+0+1)
  5552  0647  00C9               	incf	(??_abs+0)+0,f
  5553  0648  0AC8               	skipnz
  5554  0649  1903               	incf	((??_abs+0)+0+1),f
  5555  064A  0AC9               	movf	0+(??_abs+0)+0,w
  5556  064B  0848               	movwf	(?_abs)
  5557  064C  00C6               	movf	1+(??_abs+0)+0,w
  5558  064D  0849               	movwf	(?_abs+1)
  5559  064E  00C7               	goto	l952
  5560  064F  2E51               	
  5561                           l949:	
  5562  0650                     	goto	l952
  5563  0650  2E51               	
  5564                           l951:	
  5565  0651                     	line	4
  5566                           	
  5567                           l952:	
  5568  0651                     	return
  5569  0651  0008               	opt stack 0
  5570                           GLOBAL	__end_of_abs
  5571                           	__end_of_abs:
  5572  0652                     	signat	_abs,4218
  5573                           	global	_Sensor_setInactive
  5574                           
  5575 ;; *************** function _Sensor_setInactive *****************
  5576 ;; Defined at:
  5577 ;;		line 473 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  sensor          1    wreg     PTR struct .
  5580 ;;		 -> mtouch_sensor(9), 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  sensor          1    0[BANK0 ] PTR struct .
  5583 ;;		 -> mtouch_sensor(9), 
  5584 ;; Return value:  Size  Location     Type
  5585 ;;                  1    wreg      void 
  5586 ;; Registers used:
  5587 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5588 ;; Tracked objects:
  5589 ;;		On entry : 0/0
  5590 ;;		On exit  : 0/0
  5591 ;;		Unchanged: 0/0
  5592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5593 ;;      Params:         0       0       0       0
  5594 ;;      Locals:         0       1       0       0
  5595 ;;      Temps:          0       0       0       0
  5596 ;;      Totals:         0       1       0       0
  5597 ;;Total ram usage:        1 bytes
  5598 ;; Hardware stack levels used:    1
  5599 ;; Hardware stack levels required when called:    4
  5600 ;; This function calls:
  5601 ;;		Nothing
  5602 ;; This function is called by:
  5603 ;;		_Sensor_Acquisition
  5604 ;; This function uses a non-reentrant model
  5605 ;;
  5606                           psect	text20,local,class=CODE,delta=2,merge=1,inline,group=0
  5607                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5608                           	line	473
  5609                           global __ptext20
  5610                           __ptext20:	;psect for function _Sensor_setInactive
  5611  079A                     psect	text20
  5612                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5613                           	line	473
  5614                           	global	__size_of_Sensor_setInactive
  5615                           	__size_of_Sensor_setInactive	equ	__end_of_Sensor_setInactive-_Sensor_setInactive
  5616  0008                     	
  5617                           _Sensor_setInactive:	
  5618  079A                     ;incstack = 0
  5619                           	opt	stack 7
  5620                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5621                           ;Sensor_setInactive@sensor stored from wreg
  5622                           	movlb 0	; select bank0
  5623  079A  0020               	movwf	(Sensor_setInactive@sensor)
  5624  079B  00C6               	line	475
  5625                           	
  5626                           l1644:	
  5627  079C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 473: static __attribute__((inline)) void Se
                                 nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 47
                                 4: {;mcc_generated_files/mtouch/mtouch_sensor.c: 475:     sensor->acitve = 0;
  5628                           	movf	(Sensor_setInactive@sensor),w
  5629  079C  0846               	addlw	08h
  5630  079D  3E08               	movwf	fsr1l
  5631  079E  0086               	clrf fsr1h	
  5632  079F  0187               	
  5633                           	bcf	indf1,2
  5634  07A0  1101               	line	476
  5635                           	
  5636                           l321:	
  5637  07A1                     	return
  5638  07A1  0008               	opt stack 0
  5639                           GLOBAL	__end_of_Sensor_setInactive
  5640                           	__end_of_Sensor_setInactive:
  5641  07A2                     	signat	_Sensor_setInactive,4217
  5642                           	global	_Sensor_setActive
  5643                           
  5644 ;; *************** function _Sensor_setActive *****************
  5645 ;; Defined at:
  5646 ;;		line 468 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  sensor          1    wreg     PTR struct .
  5649 ;;		 -> mtouch_sensor(9), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  sensor          1    0[BANK0 ] PTR struct .
  5652 ;;		 -> mtouch_sensor(9), 
  5653 ;; Return value:  Size  Location     Type
  5654 ;;                  1    wreg      void 
  5655 ;; Registers used:
  5656 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5657 ;; Tracked objects:
  5658 ;;		On entry : 0/0
  5659 ;;		On exit  : 0/0
  5660 ;;		Unchanged: 0/0
  5661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5662 ;;      Params:         0       0       0       0
  5663 ;;      Locals:         0       1       0       0
  5664 ;;      Temps:          0       0       0       0
  5665 ;;      Totals:         0       1       0       0
  5666 ;;Total ram usage:        1 bytes
  5667 ;; Hardware stack levels used:    1
  5668 ;; Hardware stack levels required when called:    4
  5669 ;; This function calls:
  5670 ;;		Nothing
  5671 ;; This function is called by:
  5672 ;;		_Sensor_Acquisition
  5673 ;; This function uses a non-reentrant model
  5674 ;;
  5675                           psect	text21,local,class=CODE,delta=2,merge=1,inline,group=0
  5676                           	line	468
  5677                           global __ptext21
  5678                           __ptext21:	;psect for function _Sensor_setActive
  5679  07A2                     psect	text21
  5680                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5681                           	line	468
  5682                           	global	__size_of_Sensor_setActive
  5683                           	__size_of_Sensor_setActive	equ	__end_of_Sensor_setActive-_Sensor_setActive
  5684  0008                     	
  5685                           _Sensor_setActive:	
  5686  07A2                     ;incstack = 0
  5687                           	opt	stack 7
  5688                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5689                           ;Sensor_setActive@sensor stored from wreg
  5690                           	movlb 0	; select bank0
  5691  07A2  0020               	movwf	(Sensor_setActive@sensor)
  5692  07A3  00C6               	line	470
  5693                           	
  5694                           l1600:	
  5695  07A4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 468: static __attribute__((inline)) void Se
                                 nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 469:
                                  {;mcc_generated_files/mtouch/mtouch_sensor.c: 470:     sensor->acitve = 1;
  5696                           	movf	(Sensor_setActive@sensor),w
  5697  07A4  0846               	addlw	08h
  5698  07A5  3E08               	movwf	fsr1l
  5699  07A6  0086               	clrf fsr1h	
  5700  07A7  0187               	
  5701                           	bsf	indf1,2
  5702  07A8  1501               	line	471
  5703                           	
  5704                           l318:	
  5705  07A9                     	return
  5706  07A9  0008               	opt stack 0
  5707                           GLOBAL	__end_of_Sensor_setActive
  5708                           	__end_of_Sensor_setActive:
  5709  07AA                     	signat	_Sensor_setActive,4217
  5710                           	global	_Sensor_Scanfrequency_Evaluation
  5711                           
  5712 ;; *************** function _Sensor_Scanfrequency_Evaluation *****************
  5713 ;; Defined at:
  5714 ;;		line 335 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5715 ;; Parameters:    Size  Location     Type
  5716 ;;  sensor          1    wreg     PTR struct .
  5717 ;;		 -> mtouch_sensor(9), 
  5718 ;; Auto vars:     Size  Location     Type
  5719 ;;  sensor          1   14[BANK0 ] PTR struct .
  5720 ;;		 -> mtouch_sensor(9), 
  5721 ;;  best_packet_    2   12[BANK0 ] unsigned short 
  5722 ;;  packet_noise    2   10[BANK0 ] unsigned short 
  5723 ;;  i               1   17[BANK0 ] unsigned char 
  5724 ;;  retry           1   16[BANK0 ] unsigned char 
  5725 ;;  best_sample_    1   15[BANK0 ] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      enum E2112
  5728 ;; Registers used:
  5729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 0/0
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5735 ;;      Params:         0       0       0       0
  5736 ;;      Locals:         0       8       0       0
  5737 ;;      Temps:          0       2       0       0
  5738 ;;      Totals:         0      10       0       0
  5739 ;;Total ram usage:       10 bytes
  5740 ;; Hardware stack levels used:    1
  5741 ;; Hardware stack levels required when called:    6
  5742 ;; This function calls:
  5743 ;;		_Sensor_Acq_ExecutePacket
  5744 ;; This function is called by:
  5745 ;;		_Sensor_Acquisition
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5749                           	line	335
  5750                           global __ptext22
  5751                           __ptext22:	;psect for function _Sensor_Scanfrequency_Evaluation
  5752  028F                     psect	text22
  5753                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5754                           	line	335
  5755                           	global	__size_of_Sensor_Scanfrequency_Evaluation
  5756                           	__size_of_Sensor_Scanfrequency_Evaluation	equ	__end_of_Sensor_Scanfrequency_Evaluation-
                                 _Sensor_Scanfrequency_Evaluation
  5757  0089                     	
  5758                           _Sensor_Scanfrequency_Evaluation:	
  5759  028F                     ;incstack = 0
  5760                           	opt	stack 5
  5761                           ; Regs used in _Sensor_Scanfrequency_Evaluation: [wreg-fsr1h+status,2+status,0+pclath+cs
                                 tack]
  5762                           ;Sensor_Scanfrequency_Evaluation@sensor stored from wreg
  5763                           	movlb 0	; select bank0
  5764  028F  0020               	movwf	(Sensor_Scanfrequency_Evaluation@sensor)
  5765  0290  00D4               	line	344
  5766                           	
  5767                           l1602:	
  5768  0291                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 335: static enum mtouch_sensor_error Sensor
                                 _Scanfrequency_Evaluation(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sen
                                 sor.c: 336: {;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     uint8_t i;;mcc_genera
                                 ted_files/mtouch/mtouch_sensor.c: 338:     const mtouch_sensor_sampleperiod_t frequency_
                                 hop[5] = {3,13,14,20,13};;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     mtouch_se
                                 nsor_packetnoise_t packet_noise_Max;;mcc_generated_files/mtouch/mtouch_sensor.c: 340:   
                                   mtouch_sensor_sampleperiod_t best_sample_period;
  5769                           	movf	(_packet_noise+1),w
  5770  0291  0864               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0+1
  5771  0292  00CF               	movf	(_packet_noise),w
  5772  0293  0863               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5773  0294  00CE               	lsrf	(??_Sensor_Scanfrequency_Evaluation+0)+1,f
  5774  0295  36CF               	rrf	(??_Sensor_Scanfrequency_Evaluation+0)+0,f
  5775  0296  0CCE               	lsrf	(??_Sensor_Scanfrequency_Evaluation+0)+1,f
  5776  0297  36CF               	rrf	(??_Sensor_Scanfrequency_Evaluation+0)+0,f
  5777  0298  0CCE               	movf	(_packet_noise),w
  5778  0299  0863               	addwf	0+(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5779  029A  074E               	movwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max)
  5780  029B  00D0               	movf	(_packet_noise+1),w
  5781  029C  0864               	addwfc	1+(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5782  029D  3D4F               	movwf	1+(Sensor_Scanfrequency_Evaluation@packet_noise_Max)
  5783  029E  00D1               	line	345
  5784                           	
  5785                           l1604:	
  5786  029F                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     best_sample_period = sample_period
                                 ;
  5787                           	movf	(_sample_period),w
  5788  029F  082C               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5789  02A0  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5790  02A1  084E               	movwf	(Sensor_Scanfrequency_Evaluation@best_sample_period)
  5791  02A2  00D5               	line	346
  5792                           	
  5793                           l1606:	
  5794  02A3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:     best_packet_sample = packet_sample
                                 ;
  5795                           	movf	(_packet_sample+1),w
  5796  02A3  0866               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample+1)
  5797  02A4  00D3               	movf	(_packet_sample),w
  5798  02A5  0865               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample)
  5799  02A6  00D2               	line	349
  5800                           	
  5801                           l1608:	
  5802  02A7                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 349:     for(i=(uint8_t)0;i<(uint8_t)5;i++)
                                 
  5803                           	clrf	(Sensor_Scanfrequency_Evaluation@i)
  5804  02A7  01D7               	
  5805                           l1610:	
  5806  02A8                     	movlw	low(05h)
  5807  02A8  3005               	subwf	(Sensor_Scanfrequency_Evaluation@i),w
  5808  02A9  0257               	skipc
  5809  02AA  1C03               	goto	u671
  5810  02AB  2AAD               	goto	u670
  5811  02AC  2AAE               u671:
  5812  02AD                     	goto	l1614
  5813  02AD  2AB0               u670:
  5814  02AE                     	goto	l1640
  5815  02AE  2B0D               	
  5816                           l1612:	
  5817  02AF                     	goto	l1640
  5818  02AF  2B0D               	
  5819                           l279:	
  5820  02B0                     	line	351
  5821                           	
  5822                           l1614:	
  5823  02B0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 350:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 351:         sample_period += frequency_hop[i];
  5824                           	movf	(Sensor_Scanfrequency_Evaluation@i),w
  5825  02B0  0857               	addlw	low(((Sensor_Scanfrequency_Evaluation@frequency_hop)|8000h))
  5826  02B1  3EB6               	movwf	fsr0l
  5827  02B2  0084               	movlw	high(((Sensor_Scanfrequency_Evaluation@frequency_hop)|8000h))
  5828  02B3  3087               	skipnc
  5829  02B4  1803               	addlw	1
  5830  02B5  3E01               	movwf	fsr0h
  5831  02B6  0085               	movf	indf0,w ;code access
  5832  02B7  0800               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5833  02B8  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5834  02B9  084E               	addwf	(_sample_period),f
  5835  02BA  07AC               	line	352
  5836                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:         if(sample_period > ((mtouch_se
                                 nsor_sampleperiod_t)255))
  5837                           	goto	l1618
  5838  02BB  2AC3               	line	354
  5839                           	
  5840                           l1616:	
  5841  02BC                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 354:             sample_period-=((mtouch_sensor_sampleperiod_t)255);
  5842                           	movlw	0FFh
  5843  02BC  30FF               	subwf	(_sample_period),f
  5844  02BD  02AC               	line	355
  5845                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:             sample_period+=((mtouch_se
                                 nsor_sampleperiod_t)200);
  5846                           	movlw	low(0C8h)
  5847  02BE  30C8               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5848  02BF  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5849  02C0  084E               	addwf	(_sample_period),f
  5850  02C1  07AC               	line	356
  5851                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:         }
  5852                           	goto	l1622
  5853  02C2  2ACF               	line	357
  5854                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:         else if(sample_period < ((mtou
                                 ch_sensor_sampleperiod_t)200))
  5855                           	
  5856                           l281:	
  5857  02C3                     	
  5858                           l1618:	
  5859  02C3                     	movlw	low(0C8h)
  5860  02C3  30C8               	subwf	(_sample_period),w
  5861  02C4  022C               	skipnc
  5862  02C5  1803               	goto	u681
  5863  02C6  2AC8               	goto	u680
  5864  02C7  2AC9               u681:
  5865  02C8                     	goto	l1622
  5866  02C8  2ACF               u680:
  5867  02C9                     	line	359
  5868                           	
  5869                           l1620:	
  5870  02C9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 358:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 359:             sample_period += ((mtouch_sensor_sampleperiod_t)200);
  5871                           	movlw	low(0C8h)
  5872  02C9  30C8               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5873  02CA  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5874  02CB  084E               	addwf	(_sample_period),f
  5875  02CC  07AC               	goto	l1622
  5876  02CD  2ACF               	line	360
  5877                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:         }
  5878                           	
  5879                           l283:	
  5880  02CE                     	goto	l1622
  5881  02CE  2ACF               	
  5882                           l282:	
  5883  02CF                     	line	362
  5884                           	
  5885                           l1622:	
  5886  02CF                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 362:         retry = (uint8_t)5;
  5887                           	movlw	low(05h)
  5888  02CF  3005               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5889  02D0  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5890  02D1  084E               	movwf	(Sensor_Scanfrequency_Evaluation@retry)
  5891  02D2  00D6               	line	364
  5892                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:         while(Sensor_Acq_ExecutePacket
                                 (sensor))
  5893                           	goto	l1630
  5894  02D3  2AE0               	
  5895                           l285:	
  5896  02D4                     	line	366
  5897                           	
  5898                           l1624:	
  5899  02D4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 366:             retry--;
  5900                           	movlw	01h
  5901  02D4  3001               	movlb 0	; select bank0
  5902  02D5  0020               	subwf	(Sensor_Scanfrequency_Evaluation@retry),f
  5903  02D6  02D6               	line	367
  5904                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:             if(retry == 0)
  5905                           	movf	((Sensor_Scanfrequency_Evaluation@retry)),w
  5906  02D7  0856               	btfss	status,2
  5907  02D8  1D03               	goto	u691
  5908  02D9  2ADB               	goto	u690
  5909  02DA  2ADC               u691:
  5910  02DB                     	goto	l1630
  5911  02DB  2AE0               u690:
  5912  02DC                     	line	369
  5913                           	
  5914                           l1626:	
  5915  02DC                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 368:             {;mcc_generated_files/mtou
                                 ch/mtouch_sensor.c: 369:                 return MTOUCH_SENSOR_ERROR_tooManyRetries;
  5916                           	movlw	low(-4)
  5917  02DC  30FC               	goto	l287
  5918  02DD  2B17               	
  5919                           l1628:	
  5920  02DE                     	goto	l287
  5921  02DE  2B17               	line	370
  5922                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 370:             }
  5923                           	
  5924                           l286:	
  5925  02DF                     	goto	l1630
  5926  02DF  2AE0               	line	371
  5927                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 371:         }
  5928                           	
  5929                           l284:	
  5930  02E0                     	line	364
  5931                           	
  5932                           l1630:	
  5933  02E0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:         while(Sensor_Acq_ExecutePacket
                                 (sensor))
  5934                           	movf	(Sensor_Scanfrequency_Evaluation@sensor),w
  5935  02E0  0854               	fcall	_Sensor_Acq_ExecutePacket
  5936  02E1  3183  2383  3182   	xorlw	low(0)&0ffh
  5937  02E4  3A00               	skipz
  5938  02E5  1D03               	goto	u701
  5939  02E6  2AE8               	goto	u700
  5940  02E7  2AE9               u701:
  5941  02E8                     	goto	l1624
  5942  02E8  2AD4               u700:
  5943  02E9                     	goto	l1632
  5944  02E9  2AEA               	
  5945                           l288:	
  5946  02EA                     	line	373
  5947                           	
  5948                           l1632:	
  5949  02EA                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 373:         if(packet_noise_Max < packet_n
                                 oise)
  5950                           	movlb 0	; select bank0
  5951  02EA  0020               	movf	(_packet_noise+1),w
  5952  02EB  0864               	subwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max+1),w
  5953  02EC  0251               	skipz
  5954  02ED  1D03               	goto	u715
  5955  02EE  2AF1               	movf	(_packet_noise),w
  5956  02EF  0863               	subwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max),w
  5957  02F0  0250               u715:
  5958  02F1                     	skipnc
  5959  02F1  1803               	goto	u711
  5960  02F2  2AF4               	goto	u710
  5961  02F3  2AF5               u711:
  5962  02F4                     	goto	l1636
  5963  02F4  2B02               u710:
  5964  02F5                     	line	375
  5965                           	
  5966                           l1634:	
  5967  02F5                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 375:             packet_noise_Max = packet_noise;
  5968                           	movf	(_packet_noise+1),w
  5969  02F5  0864               	movwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max+1)
  5970  02F6  00D1               	movf	(_packet_noise),w
  5971  02F7  0863               	movwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max)
  5972  02F8  00D0               	line	376
  5973                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 376:             best_sample_period = sampl
                                 e_period;
  5974                           	movf	(_sample_period),w
  5975  02F9  082C               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5976  02FA  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5977  02FB  084E               	movwf	(Sensor_Scanfrequency_Evaluation@best_sample_period)
  5978  02FC  00D5               	line	377
  5979                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 377:             best_packet_sample = packe
                                 t_sample;
  5980                           	movf	(_packet_sample+1),w
  5981  02FD  0866               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample+1)
  5982  02FE  00D3               	movf	(_packet_sample),w
  5983  02FF  0865               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample)
  5984  0300  00D2               	goto	l1636
  5985  0301  2B02               	line	378
  5986                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 378:         }
  5987                           	
  5988                           l289:	
  5989  0302                     	line	379
  5990                           	
  5991                           l1636:	
  5992  0302                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 379:     }
  5993                           	movlw	low(01h)
  5994  0302  3001               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5995  0303  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5996  0304  084E               	addwf	(Sensor_Scanfrequency_Evaluation@i),f
  5997  0305  07D7               	
  5998                           l1638:	
  5999  0306                     	movlw	low(05h)
  6000  0306  3005               	subwf	(Sensor_Scanfrequency_Evaluation@i),w
  6001  0307  0257               	skipc
  6002  0308  1C03               	goto	u721
  6003  0309  2B0B               	goto	u720
  6004  030A  2B0C               u721:
  6005  030B                     	goto	l1614
  6006  030B  2AB0               u720:
  6007  030C                     	goto	l1640
  6008  030C  2B0D               	
  6009                           l280:	
  6010  030D                     	line	381
  6011                           	
  6012                           l1640:	
  6013  030D                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:     sample_period = best_sample_period
                                 ;
  6014                           	movf	(Sensor_Scanfrequency_Evaluation@best_sample_period),w
  6015  030D  0855               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  6016  030E  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  6017  030F  084E               	movwf	(_sample_period)
  6018  0310  00AC               	line	382
  6019                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     packet_sample = best_packet_sample
                                 ;
  6020                           	movf	(Sensor_Scanfrequency_Evaluation@best_packet_sample+1),w
  6021  0311  0853               	movwf	(_packet_sample+1)
  6022  0312  00E6               	movf	(Sensor_Scanfrequency_Evaluation@best_packet_sample),w
  6023  0313  0852               	movwf	(_packet_sample)
  6024  0314  00E5               	line	384
  6025                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:     return MTOUCH_SENSOR_ERROR_none;
  6026                           	movlw	low(0)
  6027  0315  3000               	goto	l287
  6028  0316  2B17               	
  6029                           l1642:	
  6030  0317                     	line	385
  6031                           	
  6032                           l287:	
  6033  0317                     	return
  6034  0317  0008               	opt stack 0
  6035                           GLOBAL	__end_of_Sensor_Scanfrequency_Evaluation
  6036                           	__end_of_Sensor_Scanfrequency_Evaluation:
  6037  0318                     	signat	_Sensor_Scanfrequency_Evaluation,4217
  6038                           	global	_Sensor_Acq_ExecutePacket
  6039                           
  6040 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  6041 ;; Defined at:
  6042 ;;		line 221 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6043 ;; Parameters:    Size  Location     Type
  6044 ;;  sensor          1    wreg     PTR struct .
  6045 ;;		 -> mtouch_sensor(9), 
  6046 ;; Auto vars:     Size  Location     Type
  6047 ;;  sensor          1    7[BANK0 ] PTR struct .
  6048 ;;		 -> mtouch_sensor(9), 
  6049 ;;  error           1    6[BANK0 ] enum E2112
  6050 ;;  ADCON2_temp     1    5[BANK0 ] unsigned char 
  6051 ;;  ADCON1_temp     1    4[BANK0 ] unsigned char 
  6052 ;;  ADCON0_temp     1    3[BANK0 ] unsigned char 
  6053 ;; Return value:  Size  Location     Type
  6054 ;;                  1    wreg      enum E2112
  6055 ;; Registers used:
  6056 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6057 ;; Tracked objects:
  6058 ;;		On entry : 0/0
  6059 ;;		On exit  : 0/0
  6060 ;;		Unchanged: 0/0
  6061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6062 ;;      Params:         0       0       0       0
  6063 ;;      Locals:         0       5       0       0
  6064 ;;      Temps:          0       1       0       0
  6065 ;;      Totals:         0       6       0       0
  6066 ;;Total ram usage:        6 bytes
  6067 ;; Hardware stack levels used:    1
  6068 ;; Hardware stack levels required when called:    5
  6069 ;; This function calls:
  6070 ;;		_MTOUCH_Sensor_Scan_Initialize
  6071 ;;		_TMR2_LoadPeriodRegister
  6072 ;;		_TMR2_SetInterruptHandler
  6073 ;;		_TMR2_StartTimer
  6074 ;;		_TMR2_StopTimer
  6075 ;; This function is called by:
  6076 ;;		_Sensor_Acquisition
  6077 ;;		_Sensor_Scanfrequency_Evaluation
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6081                           	line	221
  6082                           global __ptext23
  6083                           __ptext23:	;psect for function _Sensor_Acq_ExecutePacket
  6084  0383                     psect	text23
  6085                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6086                           	line	221
  6087                           	global	__size_of_Sensor_Acq_ExecutePacket
  6088                           	__size_of_Sensor_Acq_ExecutePacket	equ	__end_of_Sensor_Acq_ExecutePacket-_Sensor_Acq_Ex
                                 ecutePacket
  6089  0068                     	
  6090                           _Sensor_Acq_ExecutePacket:	
  6091  0383                     ;incstack = 0
  6092                           	opt	stack 5
  6093                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6094                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  6095                           	movlb 0	; select bank0
  6096  0383  0020               	movwf	(Sensor_Acq_ExecutePacket@sensor)
  6097  0384  00CD               	line	226
  6098                           	
  6099                           l1548:	
  6100  0385                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 221: static enum mtouch_sensor_error Sensor
                                 _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 222: {;mcc_generated_files/mtouch/mtouch_sensor.c: 226:     enum mtouch_sensor_error err
                                 or = MTOUCH_SENSOR_ERROR_none;
  6101                           	clrf	(Sensor_Acq_ExecutePacket@error)
  6102  0385  01CC               	line	232
  6103                           	
  6104                           l1550:	
  6105  0386                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 227:     uint8_t ADCON0_temp;;mcc_generated
                                 _files/mtouch/mtouch_sensor.c: 228:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
                                 mtouch_sensor.c: 229:     uint8_t ADCON2_temp;;mcc_generated_files/mtouch/mtouch_sensor.
                                 c: 232:     ADCON0_temp = ADCON0;
  6106                           	movlb 1	; select bank1
  6107  0386  0021               	movf	(157)^080h,w	;volatile
  6108  0387  081D               	movlb 0	; select bank0
  6109  0388  0020               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6110  0389  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6111  038A  0848               	movwf	(Sensor_Acq_ExecutePacket@ADCON0_temp)
  6112  038B  00C9               	line	233
  6113                           	
  6114                           l1552:	
  6115  038C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 233:     ADCON1_temp = ADCON1;
  6116                           	movlb 1	; select bank1
  6117  038C  0021               	movf	(158)^080h,w	;volatile
  6118  038D  081E               	movlb 0	; select bank0
  6119  038E  0020               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6120  038F  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6121  0390  0848               	movwf	(Sensor_Acq_ExecutePacket@ADCON1_temp)
  6122  0391  00CA               	line	234
  6123                           	
  6124                           l1554:	
  6125  0392                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 234:     ADCON2_temp = ADCON2;
  6126                           	movlb 1	; select bank1
  6127  0392  0021               	movf	(159)^080h,w	;volatile
  6128  0393  081F               	movlb 0	; select bank0
  6129  0394  0020               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6130  0395  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6131  0396  0848               	movwf	(Sensor_Acq_ExecutePacket@ADCON2_temp)
  6132  0397  00CB               	line	235
  6133                           	
  6134                           l1556:	
  6135  0398                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 235:     MTOUCH_Sensor_Scan_Initialize();
  6136                           	fcall	_MTOUCH_Sensor_Scan_Initialize
  6137  0398  3187  2779  3183   	line	237
  6138                           	
  6139                           l1558:	
  6140  039B                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 237:     currentScannSensor = sensor->senso
                                 r_name;
  6141                           	movlb 0	; select bank0
  6142  039B  0020               	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6143  039C  084D               	movwf	fsr1l
  6144  039D  0086               	clrf fsr1h	
  6145  039E  0187               	
  6146                           	movf	indf1,w
  6147  039F  0801               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6148  03A0  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6149  03A1  0848               	movwf	(_currentScannSensor)
  6150  03A2  00FD               	line	238
  6151                           	
  6152                           l1560:	
  6153  03A3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 238:     packet_counter = sensor->oversampl
                                 ing;
  6154                           	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6155  03A3  084D               	movwf	fsr1l
  6156  03A4  0086               	clrf fsr1h	
  6157  03A5  0187               	
  6158                           	moviw	[05h]fsr1
  6159  03A6  3F45               	movwf	(_packet_counter)
  6160  03A7  00FC               	line	239
  6161                           	
  6162                           l1562:	
  6163  03A8                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 239:     packet_sample = 0;
  6164                           	clrf	(_packet_sample)
  6165  03A8  01E5               	clrf	(_packet_sample+1)
  6166  03A9  01E6               	line	240
  6167                           	
  6168                           l1564:	
  6169  03AA                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 240:     sensor_globalFlags.packet_done = 0
                                 ;
  6170                           	bcf	(_sensor_globalFlags),0	;volatile
  6171  03AA  1067               	line	241
  6172                           	
  6173                           l1566:	
  6174  03AB                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 241:     packet_noise = 0;
  6175                           	clrf	(_packet_noise)
  6176  03AB  01E3               	clrf	(_packet_noise+1)
  6177  03AC  01E4               	line	243
  6178                           	
  6179                           l1568:	
  6180  03AD                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     TMR2_SetInterruptHandler(Sensor_Ac
                                 q_ExecuteScan);
  6181                           	movlw	low(_Sensor_Acq_ExecuteScan)
  6182  03AD  3038               	movwf	(TMR2_SetInterruptHandler@InterruptHandler)
  6183  03AE  00C6               	movlw	high(_Sensor_Acq_ExecuteScan)
  6184  03AF  3000               	movwf	((TMR2_SetInterruptHandler@InterruptHandler))+1
  6185  03B0  00C7               	fcall	_TMR2_SetInterruptHandler
  6186  03B1  3187  27B0  3183   	line	244
  6187                           	
  6188                           l1570:	
  6189  03B4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     TMR2_LoadPeriodRegister(sample_per
                                 iod);
  6190                           	movlb 0	; select bank0
  6191  03B4  0020               	movf	(_sample_period),w
  6192  03B5  082C               	fcall	_TMR2_LoadPeriodRegister
  6193  03B6  3187  27C5  3183   	line	245
  6194                           	
  6195                           l1572:	
  6196  03B9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:     TMR2_StartTimer();
  6197                           	fcall	_TMR2_StartTimer
  6198  03B9  3187  27D6  3183   	line	247
  6199                           	
  6200                           l1574:	
  6201  03BC                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:     sensor_globalFlags.interrupted = 0
                                 ;
  6202                           	movlb 0	; select bank0
  6203  03BC  0020               	bcf	(_sensor_globalFlags),1	;volatile
  6204  03BD  10E7               	goto	l250
  6205  03BE  2BC6               	line	250
  6206                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:     do
  6207                           	
  6208                           l249:	
  6209  03BF                     	line	252
  6210                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 251:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 252:         while(PIR1bits.ADIF == 0)
  6211                           	goto	l250
  6212  03BF  2BC6               	
  6213                           l251:	
  6214  03C0                     	line	254
  6215                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 254:             if(sensor_globalFlags.packet_done == (uint8_t)1)
  6216                           	btfss	(_sensor_globalFlags),0	;volatile
  6217  03C0  1C67               	goto	u621
  6218  03C1  2BC3               	goto	u620
  6219  03C2  2BC4               u621:
  6220  03C3                     	goto	l250
  6221  03C3  2BC6               u620:
  6222  03C4                     	goto	l253
  6223  03C4  2BCA               	line	255
  6224                           	
  6225                           l1576:	
  6226  03C5                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 255:                 break;
  6227                           	goto	l253
  6228  03C5  2BCA               	
  6229                           l252:	
  6230  03C6                     	line	256
  6231                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 256:         }
  6232                           	
  6233                           l250:	
  6234  03C6                     	line	252
  6235                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:         while(PIR1bits.ADIF == 0)
  6236                           	btfss	(17),6	;volatile
  6237  03C6  1F11               	goto	u631
  6238  03C7  2BC9               	goto	u630
  6239  03C8  2BCA               u631:
  6240  03C9                     	goto	l251
  6241  03C9  2BC0               u630:
  6242  03CA                     	
  6243                           l253:	
  6244  03CA                     	line	257
  6245                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 257:         PIR1bits.ADIF = 0;
  6246                           	bcf	(17),6	;volatile
  6247  03CA  1311               	line	258
  6248                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 258:     } while(sensor_globalFlags.packet_
                                 done == 0);
  6249                           	btfss	(_sensor_globalFlags),0	;volatile
  6250  03CB  1C67               	goto	u641
  6251  03CC  2BCE               	goto	u640
  6252  03CD  2BCF               u641:
  6253  03CE                     	goto	l250
  6254  03CE  2BC6               u640:
  6255  03CF                     	goto	l1578
  6256  03CF  2BD0               	
  6257                           l254:	
  6258  03D0                     	line	261
  6259                           	
  6260                           l1578:	
  6261  03D0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:     TMR2_StopTimer();
  6262                           	fcall	_TMR2_StopTimer
  6263  03D0  3187  27D3  3183   	line	262
  6264                           	
  6265                           l1580:	
  6266  03D3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:     ADCON0 = ADCON0_temp;
  6267                           	movlb 0	; select bank0
  6268  03D3  0020               	movf	(Sensor_Acq_ExecutePacket@ADCON0_temp),w
  6269  03D4  0849               	movlb 1	; select bank1
  6270  03D5  0021               	movwf	(157)^080h	;volatile
  6271  03D6  009D               	line	263
  6272                           	
  6273                           l1582:	
  6274  03D7                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 263:     ADCON1 = ADCON1_temp;
  6275                           	movlb 0	; select bank0
  6276  03D7  0020               	movf	(Sensor_Acq_ExecutePacket@ADCON1_temp),w
  6277  03D8  084A               	movlb 1	; select bank1
  6278  03D9  0021               	movwf	(158)^080h	;volatile
  6279  03DA  009E               	line	264
  6280                           	
  6281                           l1584:	
  6282  03DB                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 264:     ADCON2 = ADCON2_temp;
  6283                           	movlb 0	; select bank0
  6284  03DB  0020               	movf	(Sensor_Acq_ExecutePacket@ADCON2_temp),w
  6285  03DC  084B               	movlb 1	; select bank1
  6286  03DD  0021               	movwf	(159)^080h	;volatile
  6287  03DE  009F               	line	266
  6288                           	
  6289                           l1586:	
  6290  03DF                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:     if(sensor_globalFlags.interrupted)
                                 
  6291                           	movlb 0	; select bank0
  6292  03DF  0020               	btfss	(_sensor_globalFlags),1	;volatile
  6293  03E0  1CE7               	goto	u651
  6294  03E1  2BE3               	goto	u650
  6295  03E2  2BE4               u651:
  6296  03E3                     	goto	l255
  6297  03E3  2BE8               u650:
  6298  03E4                     	line	268
  6299                           	
  6300                           l1588:	
  6301  03E4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 267:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 268:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  6302                           	movlw	low(-6)
  6303  03E4  30FA               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6304  03E5  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6305  03E6  0848               	movwf	(Sensor_Acq_ExecutePacket@error)
  6306  03E7  00CC               	line	269
  6307                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 269:     }
  6308                           	
  6309                           l255:	
  6310  03E8                     	line	271
  6311                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 271:     return error;
  6312                           	movf	(Sensor_Acq_ExecutePacket@error),w
  6313  03E8  084C               	goto	l256
  6314  03E9  2BEA               	
  6315                           l1590:	
  6316  03EA                     	line	272
  6317                           	
  6318                           l256:	
  6319  03EA                     	return
  6320  03EA  0008               	opt stack 0
  6321                           GLOBAL	__end_of_Sensor_Acq_ExecutePacket
  6322                           	__end_of_Sensor_Acq_ExecutePacket:
  6323  03EB                     	signat	_Sensor_Acq_ExecutePacket,4217
  6324                           	global	_TMR2_StopTimer
  6325                           
  6326 ;; *************** function _TMR2_StopTimer *****************
  6327 ;; Defined at:
  6328 ;;		line 93 in file "mcc_generated_files/tmr2.c"
  6329 ;; Parameters:    Size  Location     Type
  6330 ;;		None
  6331 ;; Auto vars:     Size  Location     Type
  6332 ;;		None
  6333 ;; Return value:  Size  Location     Type
  6334 ;;                  1    wreg      void 
  6335 ;; Registers used:
  6336 ;;		None
  6337 ;; Tracked objects:
  6338 ;;		On entry : 0/0
  6339 ;;		On exit  : 0/0
  6340 ;;		Unchanged: 0/0
  6341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6342 ;;      Params:         0       0       0       0
  6343 ;;      Locals:         0       0       0       0
  6344 ;;      Temps:          0       0       0       0
  6345 ;;      Totals:         0       0       0       0
  6346 ;;Total ram usage:        0 bytes
  6347 ;; Hardware stack levels used:    1
  6348 ;; Hardware stack levels required when called:    4
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_Sensor_Acq_ExecutePacket
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6356                           	file	"mcc_generated_files/tmr2.c"
  6357                           	line	93
  6358                           global __ptext24
  6359                           __ptext24:	;psect for function _TMR2_StopTimer
  6360  07D3                     psect	text24
  6361                           	file	"mcc_generated_files/tmr2.c"
  6362                           	line	93
  6363                           	global	__size_of_TMR2_StopTimer
  6364                           	__size_of_TMR2_StopTimer	equ	__end_of_TMR2_StopTimer-_TMR2_StopTimer
  6365  0003                     	
  6366                           _TMR2_StopTimer:	
  6367  07D3                     ;incstack = 0
  6368                           	opt	stack 5
  6369                           ; Regs used in _TMR2_StopTimer: []
  6370                           	line	96
  6371                           	
  6372                           l1522:	
  6373  07D3                     ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
  6374                           	movlb 0	; select bank0
  6375  07D3  0020               	bcf	(28),2	;volatile
  6376  07D4  111C               	line	97
  6377                           	
  6378                           l101:	
  6379  07D5                     	return
  6380  07D5  0008               	opt stack 0
  6381                           GLOBAL	__end_of_TMR2_StopTimer
  6382                           	__end_of_TMR2_StopTimer:
  6383  07D6                     	signat	_TMR2_StopTimer,89
  6384                           	global	_TMR2_StartTimer
  6385                           
  6386 ;; *************** function _TMR2_StartTimer *****************
  6387 ;; Defined at:
  6388 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		None
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6402 ;;      Params:         0       0       0       0
  6403 ;;      Locals:         0       0       0       0
  6404 ;;      Temps:          0       0       0       0
  6405 ;;      Totals:         0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used:    1
  6408 ;; Hardware stack levels required when called:    4
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_Sensor_Acq_ExecutePacket
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6416                           	line	87
  6417                           global __ptext25
  6418                           __ptext25:	;psect for function _TMR2_StartTimer
  6419  07D6                     psect	text25
  6420                           	file	"mcc_generated_files/tmr2.c"
  6421                           	line	87
  6422                           	global	__size_of_TMR2_StartTimer
  6423                           	__size_of_TMR2_StartTimer	equ	__end_of_TMR2_StartTimer-_TMR2_StartTimer
  6424  0003                     	
  6425                           _TMR2_StartTimer:	
  6426  07D6                     ;incstack = 0
  6427                           	opt	stack 5
  6428                           ; Regs used in _TMR2_StartTimer: []
  6429                           	line	90
  6430                           	
  6431                           l1520:	
  6432  07D6                     ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  6433                           	movlb 0	; select bank0
  6434  07D6  0020               	bsf	(28),2	;volatile
  6435  07D7  151C               	line	91
  6436                           	
  6437                           l98:	
  6438  07D8                     	return
  6439  07D8  0008               	opt stack 0
  6440                           GLOBAL	__end_of_TMR2_StartTimer
  6441                           	__end_of_TMR2_StartTimer:
  6442  07D9                     	signat	_TMR2_StartTimer,89
  6443                           	global	_TMR2_SetInterruptHandler
  6444                           
  6445 ;; *************** function _TMR2_SetInterruptHandler *****************
  6446 ;; Defined at:
  6447 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6450 ;;		 -> Sensor_Acq_ExecuteScan(1), TMR2_DefaultInterruptHandler(1), 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;		None
  6453 ;; Return value:  Size  Location     Type
  6454 ;;                  1    wreg      void 
  6455 ;; Registers used:
  6456 ;;		wreg
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6462 ;;      Params:         0       2       0       0
  6463 ;;      Locals:         0       0       0       0
  6464 ;;      Temps:          0       0       0       0
  6465 ;;      Totals:         0       2       0       0
  6466 ;;Total ram usage:        2 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    4
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_TMR2_Initialize
  6473 ;;		_Sensor_Acq_ExecutePacket
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  6477                           	line	132
  6478                           global __ptext26
  6479                           __ptext26:	;psect for function _TMR2_SetInterruptHandler
  6480  07B0                     psect	text26
  6481                           	file	"mcc_generated_files/tmr2.c"
  6482                           	line	132
  6483                           	global	__size_of_TMR2_SetInterruptHandler
  6484                           	__size_of_TMR2_SetInterruptHandler	equ	__end_of_TMR2_SetInterruptHandler-_TMR2_SetInter
                                 ruptHandler
  6485  0006                     	
  6486                           _TMR2_SetInterruptHandler:	
  6487  07B0                     ;incstack = 0
  6488                           	opt	stack 9
  6489                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  6490                           	line	133
  6491                           	
  6492                           l1518:	
  6493  07B0                     ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  6494                           	movlb 0	; select bank0
  6495  07B0  0020               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1),w
  6496  07B1  0847               	movwf	(_TMR2_InterruptHandler+1)
  6497  07B2  00E9               	movf	(TMR2_SetInterruptHandler@InterruptHandler),w
  6498  07B3  0846               	movwf	(_TMR2_InterruptHandler)
  6499  07B4  00E8               	line	134
  6500                           	
  6501                           l117:	
  6502  07B5                     	return
  6503  07B5  0008               	opt stack 0
  6504                           GLOBAL	__end_of_TMR2_SetInterruptHandler
  6505                           	__end_of_TMR2_SetInterruptHandler:
  6506  07B6                     	signat	_TMR2_SetInterruptHandler,4217
  6507                           	global	_TMR2_LoadPeriodRegister
  6508                           
  6509 ;; *************** function _TMR2_LoadPeriodRegister *****************
  6510 ;; Defined at:
  6511 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  6512 ;; Parameters:    Size  Location     Type
  6513 ;;  periodVal       1    wreg     unsigned char 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  periodVal       1    0[BANK0 ] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      void 
  6518 ;; Registers used:
  6519 ;;		wreg
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6525 ;;      Params:         0       0       0       0
  6526 ;;      Locals:         0       1       0       0
  6527 ;;      Temps:          0       0       0       0
  6528 ;;      Totals:         0       1       0       0
  6529 ;;Total ram usage:        1 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    4
  6532 ;; This function calls:
  6533 ;;		Nothing
  6534 ;; This function is called by:
  6535 ;;		_Sensor_Acq_ExecutePacket
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  6539                           	line	114
  6540                           global __ptext27
  6541                           __ptext27:	;psect for function _TMR2_LoadPeriodRegister
  6542  07C5                     psect	text27
  6543                           	file	"mcc_generated_files/tmr2.c"
  6544                           	line	114
  6545                           	global	__size_of_TMR2_LoadPeriodRegister
  6546                           	__size_of_TMR2_LoadPeriodRegister	equ	__end_of_TMR2_LoadPeriodRegister-_TMR2_LoadPeriod
                                 Register
  6547  0005                     	
  6548                           _TMR2_LoadPeriodRegister:	
  6549  07C5                     ;incstack = 0
  6550                           	opt	stack 5
  6551                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
  6552                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  6553                           	movlb 0	; select bank0
  6554  07C5  0020               	movwf	(TMR2_LoadPeriodRegister@periodVal)
  6555  07C6  00C6               	line	116
  6556                           	
  6557                           l1524:	
  6558  07C7                     ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
                                 nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
  6559                           	movf	(TMR2_LoadPeriodRegister@periodVal),w
  6560  07C7  0846               	movwf	(27)	;volatile
  6561  07C8  009B               	line	117
  6562                           	
  6563                           l110:	
  6564  07C9                     	return
  6565  07C9  0008               	opt stack 0
  6566                           GLOBAL	__end_of_TMR2_LoadPeriodRegister
  6567                           	__end_of_TMR2_LoadPeriodRegister:
  6568  07CA                     	signat	_TMR2_LoadPeriodRegister,4217
  6569                           	global	_MTOUCH_Sensor_Scan_Initialize
  6570                           
  6571 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  6572 ;; Defined at:
  6573 ;;		line 127 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6574 ;; Parameters:    Size  Location     Type
  6575 ;;		None
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;		None
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      void 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6587 ;;      Params:         0       0       0       0
  6588 ;;      Locals:         0       0       0       0
  6589 ;;      Temps:          0       0       0       0
  6590 ;;      Totals:         0       0       0       0
  6591 ;;Total ram usage:        0 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    4
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_MTOUCH_Initialize
  6598 ;;		_Sensor_Acq_ExecutePacket
  6599 ;; This function uses a non-reentrant model
  6600 ;;
  6601                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  6602                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6603                           	line	127
  6604                           global __ptext28
  6605                           __ptext28:	;psect for function _MTOUCH_Sensor_Scan_Initialize
  6606  0779                     psect	text28
  6607                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6608                           	line	127
  6609                           	global	__size_of_MTOUCH_Sensor_Scan_Initialize
  6610                           	__size_of_MTOUCH_Sensor_Scan_Initialize	equ	__end_of_MTOUCH_Sensor_Scan_Initialize-_MTO
                                 UCH_Sensor_Scan_Initialize
  6611  0009                     	
  6612                           _MTOUCH_Sensor_Scan_Initialize:	
  6613  0779                     ;incstack = 0
  6614                           	opt	stack 9
  6615                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0]
  6616                           	line	129
  6617                           	
  6618                           l1526:	
  6619  0779                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 129:     T2CONbits.T2CKPS = 0x0;
  6620                           	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  6621  0779  30FC               	movlb 0	; select bank0
  6622  077A  0020               	andwf	(28),f	;volatile
  6623  077B  059C               	line	130
  6624                           	
  6625                           l1528:	
  6626  077C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 130:     ADCON0 = (uint8_t)0;
  6627                           	movlb 1	; select bank1
  6628  077C  0021               	clrf	(157)^080h	;volatile
  6629  077D  019D               	line	131
  6630                           	
  6631                           l1530:	
  6632  077E                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 131:     ADCON1 = (uint8_t)( 0x1<<7 | 0x5<<
                                 4 | 0x0 );
  6633                           	movlw	low(0D0h)
  6634  077E  30D0               	movwf	(158)^080h	;volatile
  6635  077F  009E               	line	132
  6636                           	
  6637                           l1532:	
  6638  0780                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 132:     ADCON2 = (uint8_t)0;
  6639                           	clrf	(159)^080h	;volatile
  6640  0780  019F               	line	133
  6641                           	
  6642                           l223:	
  6643  0781                     	return
  6644  0781  0008               	opt stack 0
  6645                           GLOBAL	__end_of_MTOUCH_Sensor_Scan_Initialize
  6646                           	__end_of_MTOUCH_Sensor_Scan_Initialize:
  6647  0782                     	signat	_MTOUCH_Sensor_Scan_Initialize,89
  6648                           	global	_MTOUCH_Button_ServiceAll
  6649                           
  6650 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  6651 ;; Defined at:
  6652 ;;		line 141 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;		None
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;		None
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6666 ;;      Params:         0       0       0       0
  6667 ;;      Locals:         0       0       0       0
  6668 ;;      Temps:          0       0       0       0
  6669 ;;      Totals:         0       0       0       0
  6670 ;;Total ram usage:        0 bytes
  6671 ;; Hardware stack levels used:    1
  6672 ;; Hardware stack levels required when called:    9
  6673 ;; This function calls:
  6674 ;;		_Button_Service
  6675 ;; This function is called by:
  6676 ;;		_MTOUCH_Service_Mainloop
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  6680                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  6681                           	line	141
  6682                           global __ptext29
  6683                           __ptext29:	;psect for function _MTOUCH_Button_ServiceAll
  6684  07CA                     psect	text29
  6685                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  6686                           	line	141
  6687                           	global	__size_of_MTOUCH_Button_ServiceAll
  6688                           	__size_of_MTOUCH_Button_ServiceAll	equ	__end_of_MTOUCH_Button_ServiceAll-_MTOUCH_Button
                                 _ServiceAll
  6689  0005                     	
  6690                           _MTOUCH_Button_ServiceAll:	
  6691  07CA                     ;incstack = 0
  6692                           	opt	stack 5
  6693                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6694                           	line	144
  6695                           	
  6696                           l1888:	
  6697  07CA                     ;mcc_generated_files/mtouch/mtouch_button.c: 144:         Button_Service(Button0);
  6698                           	movlw	low(0)
  6699  07CA  3000               	fcall	_Button_Service
  6700  07CB  3184  24FA  3187   	line	146
  6701                           	
  6702                           l394:	
  6703  07CE                     	return
  6704  07CE  0008               	opt stack 0
  6705                           GLOBAL	__end_of_MTOUCH_Button_ServiceAll
  6706                           	__end_of_MTOUCH_Button_ServiceAll:
  6707  07CF                     	signat	_MTOUCH_Button_ServiceAll,89
  6708                           	global	_Button_Service
  6709                           
  6710 ;; *************** function _Button_Service *****************
  6711 ;; Defined at:
  6712 ;;		line 148 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  name            1    wreg     enum E2327
  6715 ;; Auto vars:     Size  Location     Type
  6716 ;;  name            1   20[BANK0 ] enum E2327
  6717 ;;  button          1   21[BANK0 ] PTR struct .
  6718 ;;		 -> mtouch_button(16), 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6728 ;;      Params:         0       0       0       0
  6729 ;;      Locals:         0       2       0       0
  6730 ;;      Temps:          0       2       0       0
  6731 ;;      Totals:         0       4       0       0
  6732 ;;Total ram usage:        4 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    8
  6735 ;; This function calls:
  6736 ;;		_Button_Deviation_Update
  6737 ;;		_Button_Reading_Update
  6738 ;;		_Button_State_Initializing
  6739 ;;		_Button_State_NotPressed
  6740 ;;		_Button_State_Pressed
  6741 ;;		_MTOUCH_Sensor_isCalibrated
  6742 ;;		_MTOUCH_Sensor_wasSampled
  6743 ;; This function is called by:
  6744 ;;		_MTOUCH_Button_ServiceAll
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  6748                           	line	148
  6749                           global __ptext30
  6750                           __ptext30:	;psect for function _Button_Service
  6751  04FA                     psect	text30
  6752                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  6753                           	line	148
  6754                           	global	__size_of_Button_Service
  6755                           	__size_of_Button_Service	equ	__end_of_Button_Service-_Button_Service
  6756  0045                     	
  6757                           _Button_Service:	
  6758  04FA                     ;incstack = 0
  6759                           	opt	stack 5
  6760                           ; Regs used in _Button_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6761                           ;Button_Service@name stored from wreg
  6762                           	movlb 0	; select bank0
  6763  04FA  0020               	movwf	(Button_Service@name)
  6764  04FB  00DA               	line	150
  6765                           	
  6766                           l1818:	
  6767  04FC                     ;mcc_generated_files/mtouch/mtouch_button.c: 148: static void Button_Service(enum mtouch
                                 _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 149: {;mcc_generated_fil
                                 es/mtouch/mtouch_button.c: 150:     mtouch_button_t* button = &mtouch_button[name];
  6768                           	movf	(Button_Service@name),w
  6769  04FC  085A               	movwf	(??_Button_Service+0)+0
  6770  04FD  00D8               	movlw	(04h)-1
  6771  04FE  3003               u955:
  6772  04FF                     	lslf	(??_Button_Service+0)+0,f
  6773  04FF  35D8               	addlw	-1
  6774  0500  3EFF               	skipz
  6775  0501  1D03               	goto	u955
  6776  0502  2CFF               	lslf	(??_Button_Service+0)+0,w
  6777  0503  3558               	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  6778  0504  3E2D               	movwf	(??_Button_Service+1)+0
  6779  0505  00D9               	movf	(??_Button_Service+1)+0,w
  6780  0506  0859               	movwf	(Button_Service@button)
  6781  0507  00DB               	line	152
  6782                           	
  6783                           l1820:	
  6784  0508                     ;mcc_generated_files/mtouch/mtouch_button.c: 152:     if (MTOUCH_Sensor_wasSampled(butto
                                 n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  6785                           	incf	(Button_Service@button),w
  6786  0508  0A5B               	movwf	fsr1l
  6787  0509  0086               	clrf fsr1h	
  6788  050A  0187               	
  6789                           	movf	indf1,w
  6790  050B  0801               	fcall	_MTOUCH_Sensor_wasSampled
  6791  050C  3187  2711  3184   	xorlw	low(0)&0ffh
  6792  050F  3A00               	skipnz
  6793  0510  1903               	goto	u961
  6794  0511  2D13               	goto	u960
  6795  0512  2D14               u961:
  6796  0513                     	goto	l398
  6797  0513  2D3E               u960:
  6798  0514                     	
  6799                           l1822:	
  6800  0514                     	movlb 0	; select bank0
  6801  0514  0020               	incf	(Button_Service@button),w
  6802  0515  0A5B               	movwf	fsr1l
  6803  0516  0086               	clrf fsr1h	
  6804  0517  0187               	
  6805                           	movf	indf1,w
  6806  0518  0801               	fcall	_MTOUCH_Sensor_isCalibrated
  6807  0519  3187  27D9  3184   	xorlw	low(0)&0ffh
  6808  051C  3A00               	skipnz
  6809  051D  1903               	goto	u971
  6810  051E  2D20               	goto	u970
  6811  051F  2D21               u971:
  6812  0520                     	goto	l398
  6813  0520  2D3E               u970:
  6814  0521                     	line	154
  6815                           	
  6816                           l1824:	
  6817  0521                     ;mcc_generated_files/mtouch/mtouch_button.c: 153:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 154:         Button_Reading_Update(button);
  6818                           	movlb 0	; select bank0
  6819  0521  0020               	movf	(Button_Service@button),w
  6820  0522  085B               	fcall	_Button_Reading_Update
  6821  0523  3183  2318  3184   	line	155
  6822                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:         Button_Deviation_Update(button
                                 );
  6823                           	movlb 0	; select bank0
  6824  0526  0020               	movf	(Button_Service@button),w
  6825  0527  085B               	fcall	_Button_Deviation_Update
  6826  0528  3180  20E2  3184   	line	156
  6827                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:         Button_StateMachine[button->st
                                 ate](button);
  6828                           	movlb 0	; select bank0
  6829  052B  0020               	movf	(Button_Service@button),w
  6830  052C  085B               	movwf	(??_Button_Service+0)+0
  6831  052D  00D8               	movf	(??_Button_Service+0)+0,w
  6832  052E  0858               	movwf	(Button_State_Pressed@button)
  6833  052F  00D3               	movf	(Button_Service@button),w
  6834  0530  085B               	addlw	02h
  6835  0531  3E02               	movwf	fsr1l
  6836  0532  0086               	clrf fsr1h	
  6837  0533  0187               	
  6838                           	lslf	indf1,w
  6839  0534  3501               	addlw	low(_Button_StateMachine|((0x0)<<8))&0ffh
  6840  0535  3E20               	movwf	fsr1l
  6841  0536  0086               	clrf fsr1h	
  6842  0537  0187               	
  6843                           	moviw	[1]fsr1
  6844  0538  3F41               	movwf	pclath
  6845  0539  008A               	moviw	[0]fsr1
  6846  053A  3F40               	callw
  6847  053B  000A               	pagesel	$
  6848  053C  3185               	goto	l398
  6849  053D  2D3E               	line	157
  6850                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     }
  6851                           	
  6852                           l397:	
  6853  053E                     	line	158
  6854                           	
  6855                           l398:	
  6856  053E                     	return
  6857  053E  0008               	opt stack 0
  6858                           GLOBAL	__end_of_Button_Service
  6859                           	__end_of_Button_Service:
  6860  053F                     	signat	_Button_Service,4217
  6861                           	global	_MTOUCH_Sensor_wasSampled
  6862                           
  6863 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  6864 ;; Defined at:
  6865 ;;		line 509 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6866 ;; Parameters:    Size  Location     Type
  6867 ;;  sensor          1    wreg     enum E2110
  6868 ;; Auto vars:     Size  Location     Type
  6869 ;;  sensor          1    5[BANK0 ] enum E2110
  6870 ;; Return value:  Size  Location     Type
  6871 ;;                  1    wreg      _Bool 
  6872 ;; Registers used:
  6873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6874 ;; Tracked objects:
  6875 ;;		On entry : 0/0
  6876 ;;		On exit  : 0/0
  6877 ;;		Unchanged: 0/0
  6878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6879 ;;      Params:         0       0       0       0
  6880 ;;      Locals:         0       1       0       0
  6881 ;;      Temps:          0       1       0       0
  6882 ;;      Totals:         0       2       0       0
  6883 ;;Total ram usage:        2 bytes
  6884 ;; Hardware stack levels used:    1
  6885 ;; Hardware stack levels required when called:    5
  6886 ;; This function calls:
  6887 ;;		___bmul
  6888 ;; This function is called by:
  6889 ;;		_Button_Service
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  6893                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6894                           	line	509
  6895                           global __ptext31
  6896                           __ptext31:	;psect for function _MTOUCH_Sensor_wasSampled
  6897  0711                     psect	text31
  6898                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6899                           	line	509
  6900                           	global	__size_of_MTOUCH_Sensor_wasSampled
  6901                           	__size_of_MTOUCH_Sensor_wasSampled	equ	__end_of_MTOUCH_Sensor_wasSampled-_MTOUCH_Sensor
                                 _wasSampled
  6902  0012                     	
  6903                           _MTOUCH_Sensor_wasSampled:	
  6904  0711                     ;incstack = 0
  6905                           	opt	stack 7
  6906                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6907                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  6908                           	movlb 0	; select bank0
  6909  0711  0020               	movwf	(MTOUCH_Sensor_wasSampled@sensor)
  6910  0712  00CB               	line	511
  6911                           	
  6912                           l1706:	
  6913  0713                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 509: _Bool MTOUCH_Sensor_wasSampled(enum mt
                                 ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 510: {;mcc_generat
                                 ed_files/mtouch/mtouch_sensor.c: 511:         return (_Bool)mtouch_sensor[sensor].sample
                                 d;
  6914                           	movlw	low(09h)
  6915  0713  3009               	movwf	(??_MTOUCH_Sensor_wasSampled+0)+0
  6916  0714  00CA               	movf	(??_MTOUCH_Sensor_wasSampled+0)+0,w
  6917  0715  084A               	movwf	(___bmul@multiplicand)
  6918  0716  00C6               	movf	(MTOUCH_Sensor_wasSampled@sensor),w
  6919  0717  084B               	fcall	___bmul
  6920  0718  3186  2688  3187   	addlw	08h
  6921  071B  3E08               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  6922  071C  3E3D               	movwf	fsr1l
  6923  071D  0086               	clrf fsr1h	
  6924  071E  0187               	
  6925                           	rrf	indf1,w
  6926  071F  0C01               	andlw	(1<<1)-1
  6927  0720  3901               	goto	l336
  6928  0721  2F22               	
  6929                           l1708:	
  6930  0722                     	line	513
  6931                           	
  6932                           l336:	
  6933  0722                     	return
  6934  0722  0008               	opt stack 0
  6935                           GLOBAL	__end_of_MTOUCH_Sensor_wasSampled
  6936                           	__end_of_MTOUCH_Sensor_wasSampled:
  6937  0723                     	signat	_MTOUCH_Sensor_wasSampled,4217
  6938                           	global	_MTOUCH_Sensor_isCalibrated
  6939                           
  6940 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  6941 ;; Defined at:
  6942 ;;		line 486 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6943 ;; Parameters:    Size  Location     Type
  6944 ;;  sensor          1    wreg     enum E2110
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  sensor          1    0[COMMON] enum E2110
  6947 ;; Return value:  Size  Location     Type
  6948 ;;                  1    wreg      _Bool 
  6949 ;; Registers used:
  6950 ;;		wreg
  6951 ;; Tracked objects:
  6952 ;;		On entry : 0/0
  6953 ;;		On exit  : 0/0
  6954 ;;		Unchanged: 0/0
  6955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6956 ;;      Params:         0       0       0       0
  6957 ;;      Locals:         0       0       0       0
  6958 ;;      Temps:          0       0       0       0
  6959 ;;      Totals:         0       0       0       0
  6960 ;;Total ram usage:        0 bytes
  6961 ;; Hardware stack levels used:    1
  6962 ;; Hardware stack levels required when called:    4
  6963 ;; This function calls:
  6964 ;;		Nothing
  6965 ;; This function is called by:
  6966 ;;		_Button_Service
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  6970                           	line	486
  6971                           global __ptext32
  6972                           __ptext32:	;psect for function _MTOUCH_Sensor_isCalibrated
  6973  07D9                     psect	text32
  6974                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6975                           	line	486
  6976                           	global	__size_of_MTOUCH_Sensor_isCalibrated
  6977                           	__size_of_MTOUCH_Sensor_isCalibrated	equ	__end_of_MTOUCH_Sensor_isCalibrated-_MTOUCH_Se
                                 nsor_isCalibrated
  6978  0003                     	
  6979                           _MTOUCH_Sensor_isCalibrated:	
  6980  07D9                     ;incstack = 0
  6981                           	opt	stack 8
  6982                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  6983                           	line	489
  6984                           	
  6985                           l1702:	
  6986  07D9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 486: _Bool MTOUCH_Sensor_isCalibrated(enum 
                                 mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 487: {;mcc_gener
                                 ated_files/mtouch/mtouch_sensor.c: 489:     return 1;
  6987                           	movlw	low(01h)
  6988  07D9  3001               	goto	l327
  6989  07DA  2FDB               	
  6990                           l1704:	
  6991  07DB                     	line	490
  6992                           	
  6993                           l327:	
  6994  07DB                     	return
  6995  07DB  0008               	opt stack 0
  6996                           GLOBAL	__end_of_MTOUCH_Sensor_isCalibrated
  6997                           	__end_of_MTOUCH_Sensor_isCalibrated:
  6998  07DC                     	signat	_MTOUCH_Sensor_isCalibrated,4217
  6999                           	global	_Button_State_Pressed
  7000                           	global	_Button_State_Initializing
  7001                           	global	_Button_State_NotPressed
  7002                           
  7003 ;; *************** function _Button_State_NotPressed *****************
  7004 ;; Defined at:
  7005 ;;		line 179 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7006 ;; Parameters:    Size  Location     Type
  7007 ;;  button          1   13[BANK0 ] PTR struct .
  7008 ;;		 -> mtouch_button(16), 
  7009 ;; Auto vars:     Size  Location     Type
  7010 ;;		None
  7011 ;; Return value:  Size  Location     Type
  7012 ;;                  1    wreg      void 
  7013 ;; Registers used:
  7014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7015 ;; Tracked objects:
  7016 ;;		On entry : 0/0
  7017 ;;		On exit  : 0/0
  7018 ;;		Unchanged: 0/0
  7019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7020 ;;      Params:         0       1       0       0
  7021 ;;      Locals:         0       0       0       0
  7022 ;;      Temps:          0       2       0       0
  7023 ;;      Totals:         0       3       0       0
  7024 ;;Total ram usage:        3 bytes
  7025 ;; Hardware stack levels used:    1
  7026 ;; Hardware stack levels required when called:    5
  7027 ;; This function calls:
  7028 ;;		_Button_Baseline_Update
  7029 ;;		_Button_DefaultCallback
  7030 ;; This function is called by:
  7031 ;;		_Button_Service
  7032 ;; This function uses a non-reentrant model
  7033 ;;
  7034                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  7035                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7036                           	line	179
  7037                           global __ptext33
  7038                           __ptext33:	;psect for function _Button_State_NotPressed
  7039  0176                     psect	text33
  7040                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7041                           	line	179
  7042                           	global	__size_of_Button_State_NotPressed
  7043                           	__size_of_Button_State_NotPressed	equ	__end_of_Button_State_NotPressed-_Button_State_No
                                 tPressed
  7044  008E                     	
  7045                           _Button_State_NotPressed:	
  7046  0176                     ;incstack = 0
  7047                           	opt	stack 7
  7048                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
                                 ck]
  7049                           	line	182
  7050                           	
  7051                           l1748:	
  7052  0176                     ;mcc_generated_files/mtouch/mtouch_button.c: 179: static void Button_State_NotPressed(mt
                                 ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 180: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 182:     if ((button->deviation) < (mtouch_button_deviatio
                                 n_t)(mtouch_button_deviation_t)-10)
  7053                           	movlb 0	; select bank0
  7054  0176  0020               	movf	(Button_State_NotPressed@button),w
  7055  0177  0853               	addlw	09h
  7056  0178  3E09               	movwf	fsr1l
  7057  0179  0086               	clrf fsr1h	
  7058  017A  0187               	
  7059                           	movf	indf1,w
  7060  017B  0801               	xorlw	80h
  7061  017C  3A80               	addlw	-((-10)^80h)
  7062  017D  3E8A               	skipnc
  7063  017E  1803               	goto	u891
  7064  017F  2981               	goto	u890
  7065  0180  2982               u891:
  7066  0181                     	goto	l1754
  7067  0181  29A5               u890:
  7068  0182                     	line	184
  7069                           	
  7070                           l1750:	
  7071  0182                     ;mcc_generated_files/mtouch/mtouch_button.c: 183:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 184:         (button->counter)++;
  7072                           	movf	(Button_State_NotPressed@button),w
  7073  0182  0853               	addlw	0Ah
  7074  0183  3E0A               	movwf	fsr1l
  7075  0184  0086               	clrf fsr1h	
  7076  0185  0187               	
  7077                           	movlw	01h
  7078  0186  3001               	addwf	indf1,f
  7079  0187  0781               	addfsr	fsr1,1
  7080  0188  3141               	skipnc
  7081  0189  1803               	incf	indf1,f
  7082  018A  0A81               	line	185
  7083                           ;mcc_generated_files/mtouch/mtouch_button.c: 185:         if ((button->counter) > (mtouc
                                 h_button_statecounter_t)((mtouch_button_statecounter_t)32))
  7084                           	movf	(Button_State_NotPressed@button),w
  7085  018B  0853               	addlw	0Ah
  7086  018C  3E0A               	movwf	fsr1l
  7087  018D  0086               	clrf fsr1h	
  7088  018E  0187               	
  7089                           	moviw	[0]fsr1
  7090  018F  3F40               	movwf	(??_Button_State_NotPressed+0)+0
  7091  0190  00D4               	moviw	[1]fsr1
  7092  0191  3F41               	movwf	(??_Button_State_NotPressed+0)+0+1
  7093  0192  00D5               	movlw	0
  7094  0193  3000               	subwf	1+(??_Button_State_NotPressed+0)+0,w
  7095  0194  0255               	movlw	021h
  7096  0195  3021               	skipnz
  7097  0196  1903               	subwf	0+(??_Button_State_NotPressed+0)+0,w
  7098  0197  0254               	skipc
  7099  0198  1C03               	goto	u901
  7100  0199  299B               	goto	u900
  7101  019A  299C               u901:
  7102  019B                     	goto	l409
  7103  019B  29DC               u900:
  7104  019C                     	line	187
  7105                           	
  7106                           l1752:	
  7107  019C                     ;mcc_generated_files/mtouch/mtouch_button.c: 186:         {;mcc_generated_files/mtouch/m
                                 touch_button.c: 187:             button->counter = (mtouch_button_statecounter_t)0;
  7108                           	movf	(Button_State_NotPressed@button),w
  7109  019C  0853               	addlw	0Ah
  7110  019D  3E0A               	movwf	fsr1l
  7111  019E  0086               	clrf fsr1h	
  7112  019F  0187               	
  7113                           	movlw	0
  7114  01A0  3000               	movwi	[0]fsr1
  7115  01A1  3FC0               	movwi	[1]fsr1
  7116  01A2  3FC1               	goto	l409
  7117  01A3  29DC               	line	188
  7118                           ;mcc_generated_files/mtouch/mtouch_button.c: 188:         }
  7119                           	
  7120                           l408:	
  7121  01A4                     	line	189
  7122                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     }
  7123                           	goto	l409
  7124  01A4  29DC               	line	191
  7125                           ;mcc_generated_files/mtouch/mtouch_button.c: 191:     else if ((button->deviation) > (bu
                                 tton->threshold))
  7126                           	
  7127                           l407:	
  7128  01A5                     	
  7129                           l1754:	
  7130  01A5                     	movf	(Button_State_NotPressed@button),w
  7131  01A5  0853               	addlw	0Eh
  7132  01A6  3E0E               	movwf	fsr1l
  7133  01A7  0086               	clrf fsr1h	
  7134  01A8  0187               	
  7135                           	movf	indf1,w
  7136  01A9  0801               	xorlw	80h
  7137  01AA  3A80               	movwf	(??_Button_State_NotPressed+0)+0
  7138  01AB  00D4               	movf	(Button_State_NotPressed@button),w
  7139  01AC  0853               	addlw	09h
  7140  01AD  3E09               	movwf	fsr1l
  7141  01AE  0086               	clrf fsr1h	
  7142  01AF  0187               	
  7143                           	movf	indf1,w
  7144  01B0  0801               	xorlw	80h
  7145  01B1  3A80               	subwf	(??_Button_State_NotPressed+0)+0
  7146  01B2  02D4               	skipnc
  7147  01B3  1803               	goto	u911
  7148  01B4  29B6               	goto	u910
  7149  01B5  29B7               u911:
  7150  01B6                     	goto	l1760
  7151  01B6  29D3               u910:
  7152  01B7                     	line	193
  7153                           	
  7154                           l1756:	
  7155  01B7                     ;mcc_generated_files/mtouch/mtouch_button.c: 192:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 193:         button->state = MTOUCH_BUTTON_STATE_pressed;
  7156                           	movlw	low(02h)
  7157  01B7  3002               	movwf	(??_Button_State_NotPressed+0)+0
  7158  01B8  00D4               	movf	(Button_State_NotPressed@button),w
  7159  01B9  0853               	addlw	02h
  7160  01BA  3E02               	movwf	fsr1l
  7161  01BB  0086               	clrf fsr1h	
  7162  01BC  0187               	
  7163                           	movf	(??_Button_State_NotPressed+0)+0,w
  7164  01BD  0854               	movwf	indf1
  7165  01BE  0081               	line	194
  7166                           ;mcc_generated_files/mtouch/mtouch_button.c: 194:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7167                           	movf	(Button_State_NotPressed@button),w
  7168  01BF  0853               	addlw	0Ah
  7169  01C0  3E0A               	movwf	fsr1l
  7170  01C1  0086               	clrf fsr1h	
  7171  01C2  0187               	
  7172                           	movlw	0
  7173  01C3  3000               	movwi	[0]fsr1
  7174  01C4  3FC0               	movwi	[1]fsr1
  7175  01C5  3FC1               	line	195
  7176                           	
  7177                           l1758:	
  7178  01C6                     ;mcc_generated_files/mtouch/mtouch_button.c: 195:         callback_pressed(button->name)
                                 ;
  7179                           	movf	(Button_State_NotPressed@button),w
  7180  01C6  0853               	movwf	fsr1l
  7181  01C7  0086               	clrf fsr1h	
  7182  01C8  0187               	
  7183                           	movf	indf1,w
  7184  01C9  0801               	movwf	(??_Button_State_NotPressed+0)+0
  7185  01CA  00D4               	movf	(??_Button_State_NotPressed+0)+0,w
  7186  01CB  0854               	movwf	(Button_DefaultCallback@button)
  7187  01CC  00C6               	movf	(_callback_pressed+1),w
  7188  01CD  0829               	movwf	pclath
  7189  01CE  008A               	movf	(_callback_pressed),w
  7190  01CF  0828               	callw
  7191  01D0  000A               	pagesel	$
  7192  01D1  3181               	line	196
  7193                           ;mcc_generated_files/mtouch/mtouch_button.c: 196:     }
  7194                           	goto	l409
  7195  01D2  29DC               	line	197
  7196                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     else
  7197                           	
  7198                           l410:	
  7199  01D3                     	line	200
  7200                           	
  7201                           l1760:	
  7202  01D3                     ;mcc_generated_files/mtouch/mtouch_button.c: 198:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 200:         button->counter = (mtouch_button_statecounter_t)0;
  7203                           	movlb 0	; select bank0
  7204  01D3  0020               	movf	(Button_State_NotPressed@button),w
  7205  01D4  0853               	addlw	0Ah
  7206  01D5  3E0A               	movwf	fsr1l
  7207  01D6  0086               	clrf fsr1h	
  7208  01D7  0187               	
  7209                           	movlw	0
  7210  01D8  3000               	movwi	[0]fsr1
  7211  01D9  3FC0               	movwi	[1]fsr1
  7212  01DA  3FC1               	goto	l409
  7213  01DB  29DC               	line	201
  7214                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:     }
  7215                           	
  7216                           l411:	
  7217  01DC                     	
  7218                           l409:	
  7219  01DC                     	line	204
  7220                           ;mcc_generated_files/mtouch/mtouch_button.c: 204:     (button->baseline_count)++;
  7221                           	movlb 0	; select bank0
  7222  01DC  0020               	movf	(Button_State_NotPressed@button),w
  7223  01DD  0853               	addlw	0Ch
  7224  01DE  3E0C               	movwf	fsr1l
  7225  01DF  0086               	clrf fsr1h	
  7226  01E0  0187               	
  7227                           	movlw	01h
  7228  01E1  3001               	addwf	indf1,f
  7229  01E2  0781               	addfsr	fsr1,1
  7230  01E3  3141               	skipnc
  7231  01E4  1803               	incf	indf1,f
  7232  01E5  0A81               	line	205
  7233                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:     if ((button->baseline_count) > ((m
                                 touch_button_baselinecounter_t)32))
  7234                           	movf	(Button_State_NotPressed@button),w
  7235  01E6  0853               	addlw	0Ch
  7236  01E7  3E0C               	movwf	fsr1l
  7237  01E8  0086               	clrf fsr1h	
  7238  01E9  0187               	
  7239                           	moviw	[0]fsr1
  7240  01EA  3F40               	movwf	(??_Button_State_NotPressed+0)+0
  7241  01EB  00D4               	moviw	[1]fsr1
  7242  01EC  3F41               	movwf	(??_Button_State_NotPressed+0)+0+1
  7243  01ED  00D5               	movlw	0
  7244  01EE  3000               	subwf	1+(??_Button_State_NotPressed+0)+0,w
  7245  01EF  0255               	movlw	021h
  7246  01F0  3021               	skipnz
  7247  01F1  1903               	subwf	0+(??_Button_State_NotPressed+0)+0,w
  7248  01F2  0254               	skipc
  7249  01F3  1C03               	goto	u921
  7250  01F4  29F6               	goto	u920
  7251  01F5  29F7               u921:
  7252  01F6                     	goto	l413
  7253  01F6  2A03               u920:
  7254  01F7                     	line	207
  7255                           	
  7256                           l1762:	
  7257  01F7                     ;mcc_generated_files/mtouch/mtouch_button.c: 206:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 207:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  7258                           	movf	(Button_State_NotPressed@button),w
  7259  01F7  0853               	addlw	0Ch
  7260  01F8  3E0C               	movwf	fsr1l
  7261  01F9  0086               	clrf fsr1h	
  7262  01FA  0187               	
  7263                           	movlw	0
  7264  01FB  3000               	movwi	[0]fsr1
  7265  01FC  3FC0               	movwi	[1]fsr1
  7266  01FD  3FC1               	line	208
  7267                           	
  7268                           l1764:	
  7269  01FE                     ;mcc_generated_files/mtouch/mtouch_button.c: 208:         Button_Baseline_Update(button)
                                 ;
  7270                           	movf	(Button_State_NotPressed@button),w
  7271  01FE  0853               	fcall	_Button_Baseline_Update
  7272  01FF  3182  2204  3181   	goto	l413
  7273  0202  2A03               	line	209
  7274                           ;mcc_generated_files/mtouch/mtouch_button.c: 209:     }
  7275                           	
  7276                           l412:	
  7277  0203                     	line	210
  7278                           	
  7279                           l413:	
  7280  0203                     	return
  7281  0203  0008               	opt stack 0
  7282                           GLOBAL	__end_of_Button_State_NotPressed
  7283                           	__end_of_Button_State_NotPressed:
  7284  0204                     	signat	_Button_State_NotPressed,4217
  7285                           
  7286 ;; *************** function _Button_State_Initializing *****************
  7287 ;; Defined at:
  7288 ;;		line 160 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7289 ;; Parameters:    Size  Location     Type
  7290 ;;  button          1   13[BANK0 ] PTR struct .
  7291 ;;		 -> mtouch_button(16), 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  1    wreg      void 
  7296 ;; Registers used:
  7297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7303 ;;      Params:         0       1       0       0
  7304 ;;      Locals:         0       0       0       0
  7305 ;;      Temps:          0       4       0       0
  7306 ;;      Totals:         0       5       0       0
  7307 ;;Total ram usage:        5 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; Hardware stack levels required when called:    7
  7310 ;; This function calls:
  7311 ;;		_Button_Baseline_Initialize
  7312 ;;		_Button_Baseline_Update
  7313 ;; This function is called by:
  7314 ;;		_Button_Service
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  7318                           	line	160
  7319                           global __ptext34
  7320                           __ptext34:	;psect for function _Button_State_Initializing
  7321  03EB                     psect	text34
  7322                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7323                           	line	160
  7324                           	global	__size_of_Button_State_Initializing
  7325                           	__size_of_Button_State_Initializing	equ	__end_of_Button_State_Initializing-_Button_Stat
                                 e_Initializing
  7326  0062                     	
  7327                           _Button_State_Initializing:	
  7328  03EB                     ;incstack = 0
  7329                           	opt	stack 5
  7330                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
                                 tack]
  7331                           	line	163
  7332                           	
  7333                           l1736:	
  7334  03EB                     ;mcc_generated_files/mtouch/mtouch_button.c: 160: static void Button_State_Initializing(
                                 mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 161: {;mcc_generate
                                 d_files/mtouch/mtouch_button.c: 163:     if ((button->counter) <= (mtouch_button_stateco
                                 unter_t)((mtouch_button_statecounter_t)16)/2)
  7335                           	movlb 0	; select bank0
  7336  03EB  0020               	movf	(Button_State_Initializing@button),w
  7337  03EC  0853               	addlw	0Ah
  7338  03ED  3E0A               	movwf	fsr1l
  7339  03EE  0086               	clrf fsr1h	
  7340  03EF  0187               	
  7341                           	moviw	[0]fsr1
  7342  03F0  3F40               	movwf	(??_Button_State_Initializing+0)+0
  7343  03F1  00D4               	moviw	[1]fsr1
  7344  03F2  3F41               	movwf	(??_Button_State_Initializing+0)+0+1
  7345  03F3  00D5               	movlw	0
  7346  03F4  3000               	subwf	1+(??_Button_State_Initializing+0)+0,w
  7347  03F5  0255               	movlw	09h
  7348  03F6  3009               	skipnz
  7349  03F7  1903               	subwf	0+(??_Button_State_Initializing+0)+0,w
  7350  03F8  0254               	skipnc
  7351  03F9  1803               	goto	u861
  7352  03FA  2BFC               	goto	u860
  7353  03FB  2BFD               u861:
  7354  03FC                     	goto	l1740
  7355  03FC  2C02               u860:
  7356  03FD                     	line	165
  7357                           	
  7358                           l1738:	
  7359  03FD                     ;mcc_generated_files/mtouch/mtouch_button.c: 164:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 165:         Button_Baseline_Initialize(button);
  7360                           	movf	(Button_State_Initializing@button),w
  7361  03FD  0853               	fcall	_Button_Baseline_Initialize
  7362  03FE  3185  257E  3183   	line	166
  7363                           ;mcc_generated_files/mtouch/mtouch_button.c: 166:     } else {
  7364                           	goto	l1742
  7365  0401  2C08               	
  7366                           l401:	
  7367  0402                     	line	167
  7368                           	
  7369                           l1740:	
  7370  0402                     ;mcc_generated_files/mtouch/mtouch_button.c: 167:         Button_Baseline_Update(button)
                                 ;
  7371                           	movlb 0	; select bank0
  7372  0402  0020               	movf	(Button_State_Initializing@button),w
  7373  0403  0853               	fcall	_Button_Baseline_Update
  7374  0404  3182  2204  3183   	goto	l1742
  7375  0407  2C08               	line	168
  7376                           ;mcc_generated_files/mtouch/mtouch_button.c: 168:     }
  7377                           	
  7378                           l402:	
  7379  0408                     	line	171
  7380                           	
  7381                           l1742:	
  7382  0408                     ;mcc_generated_files/mtouch/mtouch_button.c: 171:     (button->counter)++;
  7383                           	movlb 0	; select bank0
  7384  0408  0020               	movf	(Button_State_Initializing@button),w
  7385  0409  0853               	addlw	0Ah
  7386  040A  3E0A               	movwf	fsr1l
  7387  040B  0086               	clrf fsr1h	
  7388  040C  0187               	
  7389                           	movlw	01h
  7390  040D  3001               	addwf	indf1,f
  7391  040E  0781               	addfsr	fsr1,1
  7392  040F  3141               	skipnc
  7393  0410  1803               	incf	indf1,f
  7394  0411  0A81               	line	172
  7395                           	
  7396                           l1744:	
  7397  0412                     ;mcc_generated_files/mtouch/mtouch_button.c: 172:     if ((button->counter) >= (mtouch_b
                                 utton_statecounter_t)((mtouch_button_statecounter_t)16))
  7398                           	movf	(Button_State_Initializing@button),w
  7399  0412  0853               	addlw	0Ah
  7400  0413  3E0A               	movwf	fsr1l
  7401  0414  0086               	clrf fsr1h	
  7402  0415  0187               	
  7403                           	moviw	[0]fsr1
  7404  0416  3F40               	movwf	(??_Button_State_Initializing+0)+0
  7405  0417  00D4               	moviw	[1]fsr1
  7406  0418  3F41               	movwf	(??_Button_State_Initializing+0)+0+1
  7407  0419  00D5               	movlw	0
  7408  041A  3000               	subwf	1+(??_Button_State_Initializing+0)+0,w
  7409  041B  0255               	movlw	010h
  7410  041C  3010               	skipnz
  7411  041D  1903               	subwf	0+(??_Button_State_Initializing+0)+0,w
  7412  041E  0254               	skipc
  7413  041F  1C03               	goto	u871
  7414  0420  2C22               	goto	u870
  7415  0421  2C23               u871:
  7416  0422                     	goto	l404
  7417  0422  2C4C               u870:
  7418  0423                     	line	174
  7419                           	
  7420                           l1746:	
  7421  0423                     ;mcc_generated_files/mtouch/mtouch_button.c: 173:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 174:         button->reading = (mtouch_button_reading_t)((button->baseline)>
                                 >((uint8_t)4));
  7422                           	movf	(Button_State_Initializing@button),w
  7423  0423  0853               	addlw	05h
  7424  0424  3E05               	movwf	fsr1l
  7425  0425  0086               	clrf fsr1h	
  7426  0426  0187               	
  7427                           	moviw	[0]fsr1
  7428  0427  3F40               	movwf	((??_Button_State_Initializing+0)+0+0)
  7429  0428  00D4               	moviw	[1]fsr1
  7430  0429  3F41               	movwf	((??_Button_State_Initializing+0)+0+1)
  7431  042A  00D5               	moviw	[2]fsr1
  7432  042B  3F42               	movwf	((??_Button_State_Initializing+0)+0+2)
  7433  042C  00D6               	moviw	[3]fsr1
  7434  042D  3F43               	movwf	((??_Button_State_Initializing+0)+0+3)
  7435  042E  00D7               	movlw	04h
  7436  042F  3004               u885:
  7437  0430                     	lsrf	(??_Button_State_Initializing+0)+3,f
  7438  0430  36D7               	rrf	(??_Button_State_Initializing+0)+2,f
  7439  0431  0CD6               	rrf	(??_Button_State_Initializing+0)+1,f
  7440  0432  0CD5               	rrf	(??_Button_State_Initializing+0)+0,f
  7441  0433  0CD4               u880:
  7442  0434                     	decfsz	wreg,f
  7443  0434  0B89               	goto	u885
  7444  0435  2C30               	movf	(Button_State_Initializing@button),w
  7445  0436  0853               	addlw	03h
  7446  0437  3E03               	movwf	fsr1l
  7447  0438  0086               	clrf fsr1h	
  7448  0439  0187               	
  7449                           	movf	0+(??_Button_State_Initializing+0)+0,w
  7450  043A  0854               	movwi	[0]fsr1
  7451  043B  3FC0               	movf	1+(??_Button_State_Initializing+0)+0,w
  7452  043C  0855               	movwi	[1]fsr1
  7453  043D  3FC1               	line	175
  7454                           ;mcc_generated_files/mtouch/mtouch_button.c: 175:         button->state = MTOUCH_BUTTON_
                                 STATE_notPressed;
  7455                           	movf	(Button_State_Initializing@button),w
  7456  043E  0853               	addlw	02h
  7457  043F  3E02               	movwf	fsr1l
  7458  0440  0086               	clrf fsr1h	
  7459  0441  0187               	
  7460                           	clrf	indf1
  7461  0442  0181               	incf	indf1,f
  7462  0443  0A81               	line	176
  7463                           ;mcc_generated_files/mtouch/mtouch_button.c: 176:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7464                           	movf	(Button_State_Initializing@button),w
  7465  0444  0853               	addlw	0Ah
  7466  0445  3E0A               	movwf	fsr1l
  7467  0446  0086               	clrf fsr1h	
  7468  0447  0187               	
  7469                           	movlw	0
  7470  0448  3000               	movwi	[0]fsr1
  7471  0449  3FC0               	movwi	[1]fsr1
  7472  044A  3FC1               	goto	l404
  7473  044B  2C4C               	line	177
  7474                           ;mcc_generated_files/mtouch/mtouch_button.c: 177:     }
  7475                           	
  7476                           l403:	
  7477  044C                     	line	178
  7478                           	
  7479                           l404:	
  7480  044C                     	return
  7481  044C  0008               	opt stack 0
  7482                           GLOBAL	__end_of_Button_State_Initializing
  7483                           	__end_of_Button_State_Initializing:
  7484  044D                     	signat	_Button_State_Initializing,4217
  7485                           
  7486 ;; *************** function _Button_State_Pressed *****************
  7487 ;; Defined at:
  7488 ;;		line 211 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7489 ;; Parameters:    Size  Location     Type
  7490 ;;  button          1   13[BANK0 ] PTR struct .
  7491 ;;		 -> mtouch_button(16), 
  7492 ;; Auto vars:     Size  Location     Type
  7493 ;;		None
  7494 ;; Return value:  Size  Location     Type
  7495 ;;                  1    wreg      void 
  7496 ;; Registers used:
  7497 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7498 ;; Tracked objects:
  7499 ;;		On entry : 0/0
  7500 ;;		On exit  : 0/0
  7501 ;;		Unchanged: 0/0
  7502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7503 ;;      Params:         0       1       0       0
  7504 ;;      Locals:         0       0       0       0
  7505 ;;      Temps:          0       2       0       0
  7506 ;;      Totals:         0       3       0       0
  7507 ;;Total ram usage:        3 bytes
  7508 ;; Hardware stack levels used:    1
  7509 ;; Hardware stack levels required when called:    5
  7510 ;; This function calls:
  7511 ;;		_Button_DefaultCallback
  7512 ;; This function is called by:
  7513 ;;		_Button_Service
  7514 ;; This function uses a non-reentrant model
  7515 ;;
  7516                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  7517                           	line	211
  7518                           global __ptext35
  7519                           __ptext35:	;psect for function _Button_State_Pressed
  7520  04AC                     psect	text35
  7521                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7522                           	line	211
  7523                           	global	__size_of_Button_State_Pressed
  7524                           	__size_of_Button_State_Pressed	equ	__end_of_Button_State_Pressed-_Button_State_Pressed

  7525  004E                     	
  7526                           _Button_State_Pressed:	
  7527  04AC                     ;incstack = 0
  7528                           	opt	stack 7
  7529                           ; Regs used in _Button_State_Pressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
                                 
  7530                           	line	214
  7531                           	
  7532                           l1766:	
  7533  04AC                     ;mcc_generated_files/mtouch/mtouch_button.c: 211: static void Button_State_Pressed(mtouc
                                 h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 212: {;mcc_generated_fil
                                 es/mtouch/mtouch_button.c: 214:     if ((button->counter) >= ((mtouch_button_statecounte
                                 r_t)1000))
  7534                           	movlb 0	; select bank0
  7535  04AC  0020               	movf	(Button_State_Pressed@button),w
  7536  04AD  0853               	addlw	0Ah
  7537  04AE  3E0A               	movwf	fsr1l
  7538  04AF  0086               	clrf fsr1h	
  7539  04B0  0187               	
  7540                           	moviw	[0]fsr1
  7541  04B1  3F40               	movwf	(??_Button_State_Pressed+0)+0
  7542  04B2  00D4               	moviw	[1]fsr1
  7543  04B3  3F41               	movwf	(??_Button_State_Pressed+0)+0+1
  7544  04B4  00D5               	movlw	03h
  7545  04B5  3003               	subwf	1+(??_Button_State_Pressed+0)+0,w
  7546  04B6  0255               	movlw	0E8h
  7547  04B7  30E8               	skipnz
  7548  04B8  1903               	subwf	0+(??_Button_State_Pressed+0)+0,w
  7549  04B9  0254               	skipc
  7550  04BA  1C03               	goto	u931
  7551  04BB  2CBD               	goto	u930
  7552  04BC  2CBE               u931:
  7553  04BD                     	goto	l1770
  7554  04BD  2CCB               u930:
  7555  04BE                     	line	217
  7556                           	
  7557                           l1768:	
  7558  04BE                     ;mcc_generated_files/mtouch/mtouch_button.c: 215:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 217:         callback_notPressed(button->name);
  7559                           	movf	(Button_State_Pressed@button),w
  7560  04BE  0853               	movwf	fsr1l
  7561  04BF  0086               	clrf fsr1h	
  7562  04C0  0187               	
  7563                           	movf	indf1,w
  7564  04C1  0801               	movwf	(??_Button_State_Pressed+0)+0
  7565  04C2  00D4               	movf	(??_Button_State_Pressed+0)+0,w
  7566  04C3  0854               	movwf	(Button_DefaultCallback@button)
  7567  04C4  00C6               	movf	(_callback_notPressed+1),w
  7568  04C5  0827               	movwf	pclath
  7569  04C6  008A               	movf	(_callback_notPressed),w
  7570  04C7  0826               	callw
  7571  04C8  000A               	pagesel	$
  7572  04C9  3184               	line	218
  7573                           ;mcc_generated_files/mtouch/mtouch_button.c: 218:     }
  7574                           	goto	l419
  7575  04CA  2CF9               	line	221
  7576                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     else if ((button->deviation) < (mt
                                 ouch_button_deviation_t)((button->threshold) >> 1))
  7577                           	
  7578                           l416:	
  7579  04CB                     	
  7580                           l1770:	
  7581  04CB                     	movlb 0	; select bank0
  7582  04CB  0020               	movf	(Button_State_Pressed@button),w
  7583  04CC  0853               	addlw	09h
  7584  04CD  3E09               	movwf	fsr1l
  7585  04CE  0086               	clrf fsr1h	
  7586  04CF  0187               	
  7587                           	movf	indf1,w
  7588  04D0  0801               	xorlw	80h
  7589  04D1  3A80               	movwf	(??_Button_State_Pressed+0)+0
  7590  04D2  00D4               	movf	(Button_State_Pressed@button),w
  7591  04D3  0853               	addlw	0Eh
  7592  04D4  3E0E               	movwf	fsr1l
  7593  04D5  0086               	clrf fsr1h	
  7594  04D6  0187               	
  7595                           	asrf	indf1,w
  7596  04D7  3701               	xorlw	80h
  7597  04D8  3A80               	subwf	(??_Button_State_Pressed+0)+0
  7598  04D9  02D4               	skipnc
  7599  04DA  1803               	goto	u941
  7600  04DB  2CDD               	goto	u940
  7601  04DC  2CDE               u941:
  7602  04DD                     	goto	l419
  7603  04DD  2CF9               u940:
  7604  04DE                     	line	223
  7605                           	
  7606                           l1772:	
  7607  04DE                     ;mcc_generated_files/mtouch/mtouch_button.c: 222:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 223:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  7608                           	movf	(Button_State_Pressed@button),w
  7609  04DE  0853               	addlw	02h
  7610  04DF  3E02               	movwf	fsr1l
  7611  04E0  0086               	clrf fsr1h	
  7612  04E1  0187               	
  7613                           	clrf	indf1
  7614  04E2  0181               	incf	indf1,f
  7615  04E3  0A81               	line	224
  7616                           ;mcc_generated_files/mtouch/mtouch_button.c: 224:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7617                           	movf	(Button_State_Pressed@button),w
  7618  04E4  0853               	addlw	0Ah
  7619  04E5  3E0A               	movwf	fsr1l
  7620  04E6  0086               	clrf fsr1h	
  7621  04E7  0187               	
  7622                           	movlw	0
  7623  04E8  3000               	movwi	[0]fsr1
  7624  04E9  3FC0               	movwi	[1]fsr1
  7625  04EA  3FC1               	line	225
  7626                           	
  7627                           l1774:	
  7628  04EB                     ;mcc_generated_files/mtouch/mtouch_button.c: 225:         callback_notPressed(button->na
                                 me);
  7629                           	movf	(Button_State_Pressed@button),w
  7630  04EB  0853               	movwf	fsr1l
  7631  04EC  0086               	clrf fsr1h	
  7632  04ED  0187               	
  7633                           	movf	indf1,w
  7634  04EE  0801               	movwf	(??_Button_State_Pressed+0)+0
  7635  04EF  00D4               	movf	(??_Button_State_Pressed+0)+0,w
  7636  04F0  0854               	movwf	(Button_DefaultCallback@button)
  7637  04F1  00C6               	movf	(_callback_notPressed+1),w
  7638  04F2  0827               	movwf	pclath
  7639  04F3  008A               	movf	(_callback_notPressed),w
  7640  04F4  0826               	callw
  7641  04F5  000A               	pagesel	$
  7642  04F6  3184               	goto	l419
  7643  04F7  2CF9               	line	226
  7644                           ;mcc_generated_files/mtouch/mtouch_button.c: 226:     }
  7645                           	
  7646                           l418:	
  7647  04F8                     	goto	l419
  7648  04F8  2CF9               	
  7649                           l417:	
  7650  04F9                     	line	227
  7651                           	
  7652                           l419:	
  7653  04F9                     	return
  7654  04F9  0008               	opt stack 0
  7655                           GLOBAL	__end_of_Button_State_Pressed
  7656                           	__end_of_Button_State_Pressed:
  7657  04FA                     	signat	_Button_State_Pressed,4217
  7658                           	global	_Button_DefaultCallback
  7659                           
  7660 ;; *************** function _Button_DefaultCallback *****************
  7661 ;; Defined at:
  7662 ;;		line 397 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7663 ;; Parameters:    Size  Location     Type
  7664 ;;  button          1    0[BANK0 ] enum E2327
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;		None
  7667 ;; Return value:  Size  Location     Type
  7668 ;;                  1    wreg      void 
  7669 ;; Registers used:
  7670 ;;		None
  7671 ;; Tracked objects:
  7672 ;;		On entry : 0/0
  7673 ;;		On exit  : 0/0
  7674 ;;		Unchanged: 0/0
  7675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7676 ;;      Params:         0       1       0       0
  7677 ;;      Locals:         0       0       0       0
  7678 ;;      Temps:          0       0       0       0
  7679 ;;      Totals:         0       1       0       0
  7680 ;;Total ram usage:        1 bytes
  7681 ;; Hardware stack levels used:    1
  7682 ;; Hardware stack levels required when called:    4
  7683 ;; This function calls:
  7684 ;;		Nothing
  7685 ;; This function is called by:
  7686 ;;		_Button_State_NotPressed
  7687 ;;		_Button_State_Pressed
  7688 ;; This function uses a non-reentrant model
  7689 ;;
  7690                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
  7691                           	line	397
  7692                           global __ptext36
  7693                           __ptext36:	;psect for function _Button_DefaultCallback
  7694  07DE                     psect	text36
  7695                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7696                           	line	397
  7697                           	global	__size_of_Button_DefaultCallback
  7698                           	__size_of_Button_DefaultCallback	equ	__end_of_Button_DefaultCallback-_Button_DefaultCal
                                 lback
  7699  0001                     	
  7700                           _Button_DefaultCallback:	
  7701  07DE                     ;incstack = 0
  7702                           	opt	stack 7
  7703                           ; Regs used in _Button_DefaultCallback: []
  7704                           	
  7705                           l480:	
  7706  07DE                     	return
  7707  07DE  0008               	opt stack 0
  7708                           GLOBAL	__end_of_Button_DefaultCallback
  7709                           	__end_of_Button_DefaultCallback:
  7710  07DF                     	signat	_Button_DefaultCallback,4217
  7711                           	global	_Button_Baseline_Update
  7712                           
  7713 ;; *************** function _Button_Baseline_Update *****************
  7714 ;; Defined at:
  7715 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;  button          1    wreg     PTR struct .
  7718 ;;		 -> mtouch_button(16), 
  7719 ;; Auto vars:     Size  Location     Type
  7720 ;;  button          1    6[BANK0 ] PTR struct .
  7721 ;;		 -> mtouch_button(16), 
  7722 ;; Return value:  Size  Location     Type
  7723 ;;                  1    wreg      void 
  7724 ;; Registers used:
  7725 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7726 ;; Tracked objects:
  7727 ;;		On entry : 0/0
  7728 ;;		On exit  : 0/0
  7729 ;;		Unchanged: 0/0
  7730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7731 ;;      Params:         0       0       0       0
  7732 ;;      Locals:         0       1       0       0
  7733 ;;      Temps:          0       6       0       0
  7734 ;;      Totals:         0       7       0       0
  7735 ;;Total ram usage:        7 bytes
  7736 ;; Hardware stack levels used:    1
  7737 ;; Hardware stack levels required when called:    4
  7738 ;; This function calls:
  7739 ;;		Nothing
  7740 ;; This function is called by:
  7741 ;;		_Button_State_Initializing
  7742 ;;		_Button_State_NotPressed
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
  7746                           	line	363
  7747                           global __ptext37
  7748                           __ptext37:	;psect for function _Button_Baseline_Update
  7749  0204                     psect	text37
  7750                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7751                           	line	363
  7752                           	global	__size_of_Button_Baseline_Update
  7753                           	__size_of_Button_Baseline_Update	equ	__end_of_Button_Baseline_Update-_Button_Baseline_U
                                 pdate
  7754  008B                     	
  7755                           _Button_Baseline_Update:	
  7756  0204                     ;incstack = 0
  7757                           	opt	stack 7
  7758                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7759                           ;Button_Baseline_Update@button stored from wreg
  7760                           	movlb 0	; select bank0
  7761  0204  0020               	movwf	(Button_Baseline_Update@button)
  7762  0205  00CC               	line	365
  7763                           	
  7764                           l1650:	
  7765  0206                     ;mcc_generated_files/mtouch/mtouch_button.c: 363: static void Button_Baseline_Update(mto
                                 uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 364: {;mcc_generated_f
                                 iles/mtouch/mtouch_button.c: 365:     if (GIE == (uint8_t)1)
  7766                           	btfss	(95/8),(95)&7	;volatile
  7767  0206  1F8B               	goto	u741
  7768  0207  2A09               	goto	u740
  7769  0208  2A0A               u741:
  7770  0209                     	goto	l1658
  7771  0209  2A4D               u740:
  7772  020A                     	line	367
  7773                           	
  7774                           l1652:	
  7775  020A                     ;mcc_generated_files/mtouch/mtouch_button.c: 366:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 367:         GIE = (uint8_t)0;
  7776                           	bcf	(95/8),(95)&7	;volatile
  7777  020A  138B               	line	368
  7778                           	
  7779                           l1654:	
  7780  020B                     ;mcc_generated_files/mtouch/mtouch_button.c: 368:         button->baseline -= (button->b
                                 aseline) >> ((uint8_t)4);
  7781                           	movf	(Button_Baseline_Update@button),w
  7782  020B  084C               	addlw	05h
  7783  020C  3E05               	movwf	fsr1l
  7784  020D  0086               	clrf fsr1h	
  7785  020E  0187               	
  7786                           	moviw	[0]fsr1
  7787  020F  3F40               	movwf	((??_Button_Baseline_Update+0)+0+0)
  7788  0210  00C6               	moviw	[1]fsr1
  7789  0211  3F41               	movwf	((??_Button_Baseline_Update+0)+0+1)
  7790  0212  00C7               	moviw	[2]fsr1
  7791  0213  3F42               	movwf	((??_Button_Baseline_Update+0)+0+2)
  7792  0214  00C8               	moviw	[3]fsr1
  7793  0215  3F43               	movwf	((??_Button_Baseline_Update+0)+0+3)
  7794  0216  00C9               	movlw	04h
  7795  0217  3004               u755:
  7796  0218                     	lsrf	(??_Button_Baseline_Update+0)+3,f
  7797  0218  36C9               	rrf	(??_Button_Baseline_Update+0)+2,f
  7798  0219  0CC8               	rrf	(??_Button_Baseline_Update+0)+1,f
  7799  021A  0CC7               	rrf	(??_Button_Baseline_Update+0)+0,f
  7800  021B  0CC6               u750:
  7801  021C                     	decfsz	wreg,f
  7802  021C  0B89               	goto	u755
  7803  021D  2A18               	movf	(Button_Baseline_Update@button),w
  7804  021E  084C               	addlw	05h
  7805  021F  3E05               	movwf	fsr1l
  7806  0220  0086               	clrf fsr1h	
  7807  0221  0187               	
  7808                           	movf	0+(??_Button_Baseline_Update+0)+0,w
  7809  0222  0846               	subwf	indf1,f
  7810  0223  0281               	addfsr	fsr1,1
  7811  0224  3141               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7812  0225  0847               	subwfb	indf1,f
  7813  0226  3B81               	addfsr	fsr1,1
  7814  0227  3141               	movf	2+(??_Button_Baseline_Update+0)+0,w
  7815  0228  0848               	subwfb	indf1,f
  7816  0229  3B81               	addfsr	fsr1,1
  7817  022A  3141               	movf	3+(??_Button_Baseline_Update+0)+0,w
  7818  022B  0849               	subwfb	indf1,f
  7819  022C  3B81               	addfsr	fsr1,-3
  7820  022D  317D               	line	369
  7821                           ;mcc_generated_files/mtouch/mtouch_button.c: 369:         button->baseline += button->re
                                 ading;
  7822                           	movf	(Button_Baseline_Update@button),w
  7823  022E  084C               	addlw	03h
  7824  022F  3E03               	movwf	fsr1l
  7825  0230  0086               	clrf fsr1h	
  7826  0231  0187               	
  7827                           	moviw	[0]fsr1
  7828  0232  3F40               	movwf	(??_Button_Baseline_Update+0)+0
  7829  0233  00C6               	moviw	[1]fsr1
  7830  0234  3F41               	movwf	(??_Button_Baseline_Update+0)+0+1
  7831  0235  00C7               	movf	0+(??_Button_Baseline_Update+0)+0,w
  7832  0236  0846               	movwf	((??_Button_Baseline_Update+2)+0)
  7833  0237  00C8               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7834  0238  0847               	movwf	((??_Button_Baseline_Update+2)+0+1)
  7835  0239  00C9               	clrf	((??_Button_Baseline_Update+2)+0+2)
  7836  023A  01CA               	clrf	((??_Button_Baseline_Update+2)+0+3)
  7837  023B  01CB               	movf	(Button_Baseline_Update@button),w
  7838  023C  084C               	addlw	05h
  7839  023D  3E05               	movwf	fsr1l
  7840  023E  0086               	clrf fsr1h	
  7841  023F  0187               	
  7842                           	movf	0+(??_Button_Baseline_Update+2)+0,w
  7843  0240  0848               	addwf	indf1,f
  7844  0241  0781               	addfsr	fsr1,1
  7845  0242  3141               	movf	1+(??_Button_Baseline_Update+2)+0,w
  7846  0243  0849               	addwfc	indf1,f
  7847  0244  3D81               	addfsr	fsr1,1
  7848  0245  3141               	movf	2+(??_Button_Baseline_Update+2)+0,w
  7849  0246  084A               	addwfc	indf1,f
  7850  0247  3D81               	addfsr	fsr1,1
  7851  0248  3141               	movf	3+(??_Button_Baseline_Update+2)+0,w
  7852  0249  084B               	addwfc	indf1,f
  7853  024A  3D81               
  7854                           	line	370
  7855                           	
  7856                           l1656:	
  7857  024B                     ;mcc_generated_files/mtouch/mtouch_button.c: 370:         GIE = (uint8_t)1;
  7858                           	bsf	(95/8),(95)&7	;volatile
  7859  024B  178B               	line	371
  7860                           ;mcc_generated_files/mtouch/mtouch_button.c: 371:     }
  7861                           	goto	l471
  7862  024C  2A8E               	line	372
  7863                           ;mcc_generated_files/mtouch/mtouch_button.c: 372:     else
  7864                           	
  7865                           l469:	
  7866  024D                     	line	374
  7867                           	
  7868                           l1658:	
  7869  024D                     ;mcc_generated_files/mtouch/mtouch_button.c: 373:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 374:         button->baseline -= (button->baseline) >> ((uint8_t)4);
  7870                           	movf	(Button_Baseline_Update@button),w
  7871  024D  084C               	addlw	05h
  7872  024E  3E05               	movwf	fsr1l
  7873  024F  0086               	clrf fsr1h	
  7874  0250  0187               	
  7875                           	moviw	[0]fsr1
  7876  0251  3F40               	movwf	((??_Button_Baseline_Update+0)+0+0)
  7877  0252  00C6               	moviw	[1]fsr1
  7878  0253  3F41               	movwf	((??_Button_Baseline_Update+0)+0+1)
  7879  0254  00C7               	moviw	[2]fsr1
  7880  0255  3F42               	movwf	((??_Button_Baseline_Update+0)+0+2)
  7881  0256  00C8               	moviw	[3]fsr1
  7882  0257  3F43               	movwf	((??_Button_Baseline_Update+0)+0+3)
  7883  0258  00C9               	movlw	04h
  7884  0259  3004               u765:
  7885  025A                     	lsrf	(??_Button_Baseline_Update+0)+3,f
  7886  025A  36C9               	rrf	(??_Button_Baseline_Update+0)+2,f
  7887  025B  0CC8               	rrf	(??_Button_Baseline_Update+0)+1,f
  7888  025C  0CC7               	rrf	(??_Button_Baseline_Update+0)+0,f
  7889  025D  0CC6               u760:
  7890  025E                     	decfsz	wreg,f
  7891  025E  0B89               	goto	u765
  7892  025F  2A5A               	movf	(Button_Baseline_Update@button),w
  7893  0260  084C               	addlw	05h
  7894  0261  3E05               	movwf	fsr1l
  7895  0262  0086               	clrf fsr1h	
  7896  0263  0187               	
  7897                           	movf	0+(??_Button_Baseline_Update+0)+0,w
  7898  0264  0846               	subwf	indf1,f
  7899  0265  0281               	addfsr	fsr1,1
  7900  0266  3141               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7901  0267  0847               	subwfb	indf1,f
  7902  0268  3B81               	addfsr	fsr1,1
  7903  0269  3141               	movf	2+(??_Button_Baseline_Update+0)+0,w
  7904  026A  0848               	subwfb	indf1,f
  7905  026B  3B81               	addfsr	fsr1,1
  7906  026C  3141               	movf	3+(??_Button_Baseline_Update+0)+0,w
  7907  026D  0849               	subwfb	indf1,f
  7908  026E  3B81               	addfsr	fsr1,-3
  7909  026F  317D               	line	375
  7910                           ;mcc_generated_files/mtouch/mtouch_button.c: 375:         button->baseline += button->re
                                 ading;
  7911                           	movf	(Button_Baseline_Update@button),w
  7912  0270  084C               	addlw	03h
  7913  0271  3E03               	movwf	fsr1l
  7914  0272  0086               	clrf fsr1h	
  7915  0273  0187               	
  7916                           	moviw	[0]fsr1
  7917  0274  3F40               	movwf	(??_Button_Baseline_Update+0)+0
  7918  0275  00C6               	moviw	[1]fsr1
  7919  0276  3F41               	movwf	(??_Button_Baseline_Update+0)+0+1
  7920  0277  00C7               	movf	0+(??_Button_Baseline_Update+0)+0,w
  7921  0278  0846               	movwf	((??_Button_Baseline_Update+2)+0)
  7922  0279  00C8               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7923  027A  0847               	movwf	((??_Button_Baseline_Update+2)+0+1)
  7924  027B  00C9               	clrf	((??_Button_Baseline_Update+2)+0+2)
  7925  027C  01CA               	clrf	((??_Button_Baseline_Update+2)+0+3)
  7926  027D  01CB               	movf	(Button_Baseline_Update@button),w
  7927  027E  084C               	addlw	05h
  7928  027F  3E05               	movwf	fsr1l
  7929  0280  0086               	clrf fsr1h	
  7930  0281  0187               	
  7931                           	movf	0+(??_Button_Baseline_Update+2)+0,w
  7932  0282  0848               	addwf	indf1,f
  7933  0283  0781               	addfsr	fsr1,1
  7934  0284  3141               	movf	1+(??_Button_Baseline_Update+2)+0,w
  7935  0285  0849               	addwfc	indf1,f
  7936  0286  3D81               	addfsr	fsr1,1
  7937  0287  3141               	movf	2+(??_Button_Baseline_Update+2)+0,w
  7938  0288  084A               	addwfc	indf1,f
  7939  0289  3D81               	addfsr	fsr1,1
  7940  028A  3141               	movf	3+(??_Button_Baseline_Update+2)+0,w
  7941  028B  084B               	addwfc	indf1,f
  7942  028C  3D81               
  7943                           	goto	l471
  7944  028D  2A8E               	line	376
  7945                           ;mcc_generated_files/mtouch/mtouch_button.c: 376:     }
  7946                           	
  7947                           l470:	
  7948  028E                     	line	377
  7949                           	
  7950                           l471:	
  7951  028E                     	return
  7952  028E  0008               	opt stack 0
  7953                           GLOBAL	__end_of_Button_Baseline_Update
  7954                           	__end_of_Button_Baseline_Update:
  7955  028F                     	signat	_Button_Baseline_Update,4217
  7956                           	global	_Button_Baseline_Initialize
  7957                           
  7958 ;; *************** function _Button_Baseline_Initialize *****************
  7959 ;; Defined at:
  7960 ;;		line 357 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;  button          1    wreg     PTR struct .
  7963 ;;		 -> mtouch_button(16), 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  button          1   12[BANK0 ] PTR struct .
  7966 ;;		 -> mtouch_button(16), 
  7967 ;; Return value:  Size  Location     Type
  7968 ;;                  1    wreg      void 
  7969 ;; Registers used:
  7970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7971 ;; Tracked objects:
  7972 ;;		On entry : 0/0
  7973 ;;		On exit  : 0/0
  7974 ;;		Unchanged: 0/0
  7975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7976 ;;      Params:         0       0       0       0
  7977 ;;      Locals:         0       1       0       0
  7978 ;;      Temps:          0       4       0       0
  7979 ;;      Totals:         0       5       0       0
  7980 ;;Total ram usage:        5 bytes
  7981 ;; Hardware stack levels used:    1
  7982 ;; Hardware stack levels required when called:    6
  7983 ;; This function calls:
  7984 ;;		_MTOUCH_Sensor_RawSample_Get
  7985 ;; This function is called by:
  7986 ;;		_Button_State_Initializing
  7987 ;; This function uses a non-reentrant model
  7988 ;;
  7989                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
  7990                           	line	357
  7991                           global __ptext38
  7992                           __ptext38:	;psect for function _Button_Baseline_Initialize
  7993  057E                     psect	text38
  7994                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7995                           	line	357
  7996                           	global	__size_of_Button_Baseline_Initialize
  7997                           	__size_of_Button_Baseline_Initialize	equ	__end_of_Button_Baseline_Initialize-_Button_Ba
                                 seline_Initialize
  7998  002C                     	
  7999                           _Button_Baseline_Initialize:	
  8000  057E                     ;incstack = 0
  8001                           	opt	stack 5
  8002                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
                                 stack]
  8003                           ;Button_Baseline_Initialize@button stored from wreg
  8004                           	movlb 0	; select bank0
  8005  057E  0020               	movwf	(Button_Baseline_Initialize@button)
  8006  057F  00D2               	line	359
  8007                           	
  8008                           l1646:	
  8009  0580                     ;mcc_generated_files/mtouch/mtouch_button.c: 357: static void Button_Baseline_Initialize
                                 (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 358: {;mcc_generat
                                 ed_files/mtouch/mtouch_button.c: 359:     button->baseline = MTOUCH_Sensor_RawSample_Get
                                 (button->sensor);
  8010                           	incf	(Button_Baseline_Initialize@button),w
  8011  0580  0A52               	movwf	fsr1l
  8012  0581  0086               	clrf fsr1h	
  8013  0582  0187               	
  8014                           	movf	indf1,w
  8015  0583  0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8016  0584  3186  26E9  3185   	movlb 0	; select bank0
  8017  0587  0020               	movf	(0+(?_MTOUCH_Sensor_RawSample_Get)),w
  8018  0588  084A               	movwf	((??_Button_Baseline_Initialize+0)+0)
  8019  0589  00CE               	movf	(1+(?_MTOUCH_Sensor_RawSample_Get)),w
  8020  058A  084B               	movwf	((??_Button_Baseline_Initialize+0)+0+1)
  8021  058B  00CF               	clrf	((??_Button_Baseline_Initialize+0)+0+2)
  8022  058C  01D0               	clrf	((??_Button_Baseline_Initialize+0)+0+3)
  8023  058D  01D1               	movf	(Button_Baseline_Initialize@button),w
  8024  058E  0852               	addlw	05h
  8025  058F  3E05               	movwf	fsr1l
  8026  0590  0086               	clrf fsr1h	
  8027  0591  0187               	
  8028                           	movf	0+(??_Button_Baseline_Initialize+0)+0,w
  8029  0592  084E               	movwi	[0]fsr1
  8030  0593  3FC0               	movf	1+(??_Button_Baseline_Initialize+0)+0,w
  8031  0594  084F               	movwi	[1]fsr1
  8032  0595  3FC1               	movf	2+(??_Button_Baseline_Initialize+0)+0,w
  8033  0596  0850               	movwi	[2]fsr1
  8034  0597  3FC2               	movf	3+(??_Button_Baseline_Initialize+0)+0,w
  8035  0598  0851               	movwi	[3]fsr1
  8036  0599  3FC3               	line	360
  8037                           	
  8038                           l1648:	
  8039  059A                     ;mcc_generated_files/mtouch/mtouch_button.c: 360:     button->baseline <<= ((uint8_t)4);
                                 
  8040                           	movf	(Button_Baseline_Initialize@button),w
  8041  059A  0852               	addlw	05h
  8042  059B  3E05               	movwf	fsr1l
  8043  059C  0086               	clrf fsr1h	
  8044  059D  0187               	
  8045                           	movlw	04h
  8046  059E  3004               u735:
  8047  059F                     	lslf	indf1,f
  8048  059F  3581               	addfsr	fsr1,1
  8049  05A0  3141               	rlf	indf1,f
  8050  05A1  0D81               	addfsr	fsr1,1
  8051  05A2  3141               	rlf	indf1,f
  8052  05A3  0D81               	addfsr	fsr1,1
  8053  05A4  3141               	rlf	indf1,f
  8054  05A5  0D81               	addfsr	fsr1,-3
  8055  05A6  317D               	decfsz	wreg,f
  8056  05A7  0B89               	goto	u735
  8057  05A8  2D9F               	line	361
  8058                           	
  8059                           l466:	
  8060  05A9                     	return
  8061  05A9  0008               	opt stack 0
  8062                           GLOBAL	__end_of_Button_Baseline_Initialize
  8063                           	__end_of_Button_Baseline_Initialize:
  8064  05AA                     	signat	_Button_Baseline_Initialize,4217
  8065                           	global	_Button_Reading_Update
  8066                           
  8067 ;; *************** function _Button_Reading_Update *****************
  8068 ;; Defined at:
  8069 ;;		line 341 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;  button          1    wreg     PTR struct .
  8072 ;;		 -> mtouch_button(16), 
  8073 ;; Auto vars:     Size  Location     Type
  8074 ;;  button          1   10[BANK0 ] PTR struct .
  8075 ;;		 -> mtouch_button(16), 
  8076 ;; Return value:  Size  Location     Type
  8077 ;;                  1    wreg      void 
  8078 ;; Registers used:
  8079 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8080 ;; Tracked objects:
  8081 ;;		On entry : 0/0
  8082 ;;		On exit  : 0/0
  8083 ;;		Unchanged: 0/0
  8084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8085 ;;      Params:         0       0       0       0
  8086 ;;      Locals:         0       1       0       0
  8087 ;;      Temps:          0       2       0       0
  8088 ;;      Totals:         0       3       0       0
  8089 ;;Total ram usage:        3 bytes
  8090 ;; Hardware stack levels used:    1
  8091 ;; Hardware stack levels required when called:    6
  8092 ;; This function calls:
  8093 ;;		_MTOUCH_Sensor_RawSample_Get
  8094 ;; This function is called by:
  8095 ;;		_Button_Service
  8096 ;; This function uses a non-reentrant model
  8097 ;;
  8098                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
  8099                           	line	341
  8100                           global __ptext39
  8101                           __ptext39:	;psect for function _Button_Reading_Update
  8102  0318                     psect	text39
  8103                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8104                           	line	341
  8105                           	global	__size_of_Button_Reading_Update
  8106                           	__size_of_Button_Reading_Update	equ	__end_of_Button_Reading_Update-_Button_Reading_Upda
                                 te
  8107  006B                     	
  8108                           _Button_Reading_Update:	
  8109  0318                     ;incstack = 0
  8110                           	opt	stack 6
  8111                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
                                 ]
  8112                           ;Button_Reading_Update@button stored from wreg
  8113                           	movlb 0	; select bank0
  8114  0318  0020               	movwf	(Button_Reading_Update@button)
  8115  0319  00D0               	line	343
  8116                           	
  8117                           l1710:	
  8118  031A                     ;mcc_generated_files/mtouch/mtouch_button.c: 341: static void Button_Reading_Update(mtou
                                 ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 342: {;mcc_generated_fi
                                 les/mtouch/mtouch_button.c: 343:     if (GIE == (uint8_t)1)
  8119                           	btfss	(95/8),(95)&7	;volatile
  8120  031A  1F8B               	goto	u811
  8121  031B  2B1D               	goto	u810
  8122  031C  2B1E               u811:
  8123  031D                     	goto	l1720
  8124  031D  2B51               u810:
  8125  031E                     	line	345
  8126                           	
  8127                           l1712:	
  8128  031E                     ;mcc_generated_files/mtouch/mtouch_button.c: 344:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 345:         GIE = (uint8_t)0;
  8129                           	bcf	(95/8),(95)&7	;volatile
  8130  031E  138B               	line	346
  8131                           	
  8132                           l1714:	
  8133  031F                     ;mcc_generated_files/mtouch/mtouch_button.c: 346:         button->reading -= button->rea
                                 ding>>(uint8_t)2;
  8134                           	movf	(Button_Reading_Update@button),w
  8135  031F  0850               	addlw	03h
  8136  0320  3E03               	movwf	fsr1l
  8137  0321  0086               	clrf fsr1h	
  8138  0322  0187               	
  8139                           	moviw	[0]fsr1
  8140  0323  3F40               	movwf	(??_Button_Reading_Update+0)+0
  8141  0324  00CE               	moviw	[1]fsr1
  8142  0325  3F41               	movwf	(??_Button_Reading_Update+0)+0+1
  8143  0326  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8144  0327  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8145  0328  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8146  0329  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8147  032A  0CCE               	movf	(Button_Reading_Update@button),w
  8148  032B  0850               	addlw	03h
  8149  032C  3E03               	movwf	fsr1l
  8150  032D  0086               	clrf fsr1h	
  8151  032E  0187               	
  8152                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8153  032F  084E               	subwf	indf1,f
  8154  0330  0281               	addfsr	fsr1,1
  8155  0331  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8156  0332  084F               	subwfb	indf1,f
  8157  0333  3B81               	addfsr	fsr1,-1
  8158  0334  317F               	line	347
  8159                           	
  8160                           l1716:	
  8161  0335                     ;mcc_generated_files/mtouch/mtouch_button.c: 347:         button->reading += MTOUCH_Sens
                                 or_RawSample_Get(button->sensor)>>(uint8_t)2;
  8162                           	incf	(Button_Reading_Update@button),w
  8163  0335  0A50               	movwf	fsr1l
  8164  0336  0086               	clrf fsr1h	
  8165  0337  0187               	
  8166                           	movf	indf1,w
  8167  0338  0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8168  0339  3186  26E9  3183   	movlb 0	; select bank0
  8169  033C  0020               	movf	(0+?_MTOUCH_Sensor_RawSample_Get),w
  8170  033D  084A               	movwf	(??_Button_Reading_Update+0)+0
  8171  033E  00CE               	movf	(1+?_MTOUCH_Sensor_RawSample_Get),w
  8172  033F  084B               	movwf	((??_Button_Reading_Update+0)+0+1)
  8173  0340  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8174  0341  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8175  0342  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8176  0343  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8177  0344  0CCE               	movf	(Button_Reading_Update@button),w
  8178  0345  0850               	addlw	03h
  8179  0346  3E03               	movwf	fsr1l
  8180  0347  0086               	clrf fsr1h	
  8181  0348  0187               	
  8182                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8183  0349  084E               	addwf	indf1,f
  8184  034A  0781               	addfsr	fsr1,1
  8185  034B  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8186  034C  084F               	addwfc	indf1,f
  8187  034D  3D81               	addfsr	fsr1,-1
  8188  034E  317F               	line	348
  8189                           	
  8190                           l1718:	
  8191  034F                     ;mcc_generated_files/mtouch/mtouch_button.c: 348:         GIE = (uint8_t)1;
  8192                           	bsf	(95/8),(95)&7	;volatile
  8193  034F  178B               	line	349
  8194                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:     }
  8195                           	goto	l463
  8196  0350  2B82               	line	350
  8197                           ;mcc_generated_files/mtouch/mtouch_button.c: 350:     else
  8198                           	
  8199                           l461:	
  8200  0351                     	line	352
  8201                           	
  8202                           l1720:	
  8203  0351                     ;mcc_generated_files/mtouch/mtouch_button.c: 351:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 352:         button->reading -= button->reading>>(uint8_t)2;
  8204                           	movf	(Button_Reading_Update@button),w
  8205  0351  0850               	addlw	03h
  8206  0352  3E03               	movwf	fsr1l
  8207  0353  0086               	clrf fsr1h	
  8208  0354  0187               	
  8209                           	moviw	[0]fsr1
  8210  0355  3F40               	movwf	(??_Button_Reading_Update+0)+0
  8211  0356  00CE               	moviw	[1]fsr1
  8212  0357  3F41               	movwf	(??_Button_Reading_Update+0)+0+1
  8213  0358  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8214  0359  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8215  035A  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8216  035B  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8217  035C  0CCE               	movf	(Button_Reading_Update@button),w
  8218  035D  0850               	addlw	03h
  8219  035E  3E03               	movwf	fsr1l
  8220  035F  0086               	clrf fsr1h	
  8221  0360  0187               	
  8222                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8223  0361  084E               	subwf	indf1,f
  8224  0362  0281               	addfsr	fsr1,1
  8225  0363  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8226  0364  084F               	subwfb	indf1,f
  8227  0365  3B81               	addfsr	fsr1,-1
  8228  0366  317F               	line	353
  8229                           	
  8230                           l1722:	
  8231  0367                     ;mcc_generated_files/mtouch/mtouch_button.c: 353:         button->reading += MTOUCH_Sens
                                 or_RawSample_Get(button->sensor)>>(uint8_t)2;
  8232                           	incf	(Button_Reading_Update@button),w
  8233  0367  0A50               	movwf	fsr1l
  8234  0368  0086               	clrf fsr1h	
  8235  0369  0187               	
  8236                           	movf	indf1,w
  8237  036A  0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8238  036B  3186  26E9  3183   	movlb 0	; select bank0
  8239  036E  0020               	movf	(0+?_MTOUCH_Sensor_RawSample_Get),w
  8240  036F  084A               	movwf	(??_Button_Reading_Update+0)+0
  8241  0370  00CE               	movf	(1+?_MTOUCH_Sensor_RawSample_Get),w
  8242  0371  084B               	movwf	((??_Button_Reading_Update+0)+0+1)
  8243  0372  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8244  0373  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8245  0374  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8246  0375  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8247  0376  0CCE               	movf	(Button_Reading_Update@button),w
  8248  0377  0850               	addlw	03h
  8249  0378  3E03               	movwf	fsr1l
  8250  0379  0086               	clrf fsr1h	
  8251  037A  0187               	
  8252                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8253  037B  084E               	addwf	indf1,f
  8254  037C  0781               	addfsr	fsr1,1
  8255  037D  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8256  037E  084F               	addwfc	indf1,f
  8257  037F  3D81               	addfsr	fsr1,-1
  8258  0380  317F               	goto	l463
  8259  0381  2B82               	line	354
  8260                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     }
  8261                           	
  8262                           l462:	
  8263  0382                     	line	355
  8264                           	
  8265                           l463:	
  8266  0382                     	return
  8267  0382  0008               	opt stack 0
  8268                           GLOBAL	__end_of_Button_Reading_Update
  8269                           	__end_of_Button_Reading_Update:
  8270  0383                     	signat	_Button_Reading_Update,4217
  8271                           	global	_MTOUCH_Sensor_RawSample_Get
  8272                           
  8273 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  8274 ;; Defined at:
  8275 ;;		line 392 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  name            1    wreg     enum E2110
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  name            1    7[BANK0 ] enum E2110
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  2    4[BANK0 ] unsigned short 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8289 ;;      Params:         0       2       0       0
  8290 ;;      Locals:         0       1       0       0
  8291 ;;      Temps:          0       1       0       0
  8292 ;;      Totals:         0       4       0       0
  8293 ;;Total ram usage:        4 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    5
  8296 ;; This function calls:
  8297 ;;		___bmul
  8298 ;; This function is called by:
  8299 ;;		_Button_Reading_Update
  8300 ;;		_Button_Baseline_Initialize
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
  8304                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  8305                           	line	392
  8306                           global __ptext40
  8307                           __ptext40:	;psect for function _MTOUCH_Sensor_RawSample_Get
  8308  06E9                     psect	text40
  8309                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  8310                           	line	392
  8311                           	global	__size_of_MTOUCH_Sensor_RawSample_Get
  8312                           	__size_of_MTOUCH_Sensor_RawSample_Get	equ	__end_of_MTOUCH_Sensor_RawSample_Get-_MTOUCH_
                                 Sensor_RawSample_Get
  8313  0015                     	
  8314                           _MTOUCH_Sensor_RawSample_Get:	
  8315  06E9                     ;incstack = 0
  8316                           	opt	stack 5
  8317                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
                                 cstack]
  8318                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  8319                           	movlb 0	; select bank0
  8320  06E9  0020               	movwf	(MTOUCH_Sensor_RawSample_Get@name)
  8321  06EA  00CD               	line	395
  8322                           	
  8323                           l1592:	
  8324  06EB                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 392: mtouch_sensor_sample_t MTOUCH_Sensor_R
                                 awSample_Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 393: {;mcc_generated_files/mtouch/mtouch_sensor.c: 395:         return mtouch_sensor[nam
                                 e].rawSample;
  8325                           	movlw	low(09h)
  8326  06EB  3009               	movwf	(??_MTOUCH_Sensor_RawSample_Get+0)+0
  8327  06EC  00CC               	movf	(??_MTOUCH_Sensor_RawSample_Get+0)+0,w
  8328  06ED  084C               	movwf	(___bmul@multiplicand)
  8329  06EE  00C6               	movf	(MTOUCH_Sensor_RawSample_Get@name),w
  8330  06EF  084D               	fcall	___bmul
  8331  06F0  3186  2688  3186   	addlw	06h
  8332  06F3  3E06               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  8333  06F4  3E3D               	movwf	fsr1l
  8334  06F5  0086               	clrf fsr1h	
  8335  06F6  0187               	
  8336                           	moviw	[0]fsr1
  8337  06F7  3F40               	movlb 0	; select bank0
  8338  06F8  0020               	movwf	(?_MTOUCH_Sensor_RawSample_Get)
  8339  06F9  00CA               	moviw	[1]fsr1
  8340  06FA  3F41               	movwf	(?_MTOUCH_Sensor_RawSample_Get+1)
  8341  06FB  00CB               	goto	l292
  8342  06FC  2EFD               	
  8343                           l1594:	
  8344  06FD                     	line	397
  8345                           	
  8346                           l292:	
  8347  06FD                     	return
  8348  06FD  0008               	opt stack 0
  8349                           GLOBAL	__end_of_MTOUCH_Sensor_RawSample_Get
  8350                           	__end_of_MTOUCH_Sensor_RawSample_Get:
  8351  06FE                     	signat	_MTOUCH_Sensor_RawSample_Get,4218
  8352                           	global	___bmul
  8353                           
  8354 ;; *************** function ___bmul *****************
  8355 ;; Defined at:
  8356 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  multiplier      1    wreg     unsigned char 
  8359 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8360 ;; Auto vars:     Size  Location     Type
  8361 ;;  multiplier      1    3[BANK0 ] unsigned char 
  8362 ;;  product         1    2[BANK0 ] unsigned char 
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1    wreg      unsigned char 
  8365 ;; Registers used:
  8366 ;;		wreg, status,2, status,0
  8367 ;; Tracked objects:
  8368 ;;		On entry : 0/0
  8369 ;;		On exit  : 0/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8372 ;;      Params:         0       1       0       0
  8373 ;;      Locals:         0       2       0       0
  8374 ;;      Temps:          0       1       0       0
  8375 ;;      Totals:         0       4       0       0
  8376 ;;Total ram usage:        4 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:    4
  8379 ;; This function calls:
  8380 ;;		Nothing
  8381 ;; This function is called by:
  8382 ;;		_Sensor_Service
  8383 ;;		_Sensor_Acq_ExecuteScan
  8384 ;;		_MTOUCH_Sensor_RawSample_Get
  8385 ;;		_MTOUCH_Sensor_Enable
  8386 ;;		_MTOUCH_Sensor_wasSampled
  8387 ;;		_MTOUCH_Sensor_Disable
  8388 ;;		_MTOUCH_Sensor_isEnabled
  8389 ;;		_MTOUCH_Sensor_isActive
  8390 ;; This function uses a non-reentrant model
  8391 ;;
  8392                           psect	text41,local,class=CODE,delta=2,merge=1,group=1
  8393                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  8394                           	line	4
  8395                           global __ptext41
  8396                           __ptext41:	;psect for function ___bmul
  8397  0688                     psect	text41
  8398                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  8399                           	line	4
  8400                           	global	__size_of___bmul
  8401                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  8402  001A                     	
  8403                           ___bmul:	
  8404  0688                     ;incstack = 0
  8405                           	opt	stack 7
  8406                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8407                           ;___bmul@multiplier stored from wreg
  8408                           	movlb 0	; select bank0
  8409  0688  0020               	movwf	(___bmul@multiplier)
  8410  0689  00C9               	line	6
  8411                           	
  8412                           l1534:	
  8413  068A                     	clrf	(___bmul@product)
  8414  068A  01C8               	goto	l1536
  8415  068B  2E8C               	line	42
  8416                           	
  8417                           l537:	
  8418  068C                     	line	43
  8419                           	
  8420                           l1536:	
  8421  068C                     	btfss	(___bmul@multiplier),(0)&7
  8422  068C  1C49               	goto	u601
  8423  068D  2E8F               	goto	u600
  8424  068E  2E90               u601:
  8425  068F                     	goto	l1540
  8426  068F  2E95               u600:
  8427  0690                     	line	44
  8428                           	
  8429                           l1538:	
  8430  0690                     	movf	(___bmul@multiplicand),w
  8431  0690  0846               	movwf	(??___bmul+0)+0
  8432  0691  00C7               	movf	(??___bmul+0)+0,w
  8433  0692  0847               	addwf	(___bmul@product),f
  8434  0693  07C8               	goto	l1540
  8435  0694  2E95               	
  8436                           l538:	
  8437  0695                     	line	45
  8438                           	
  8439                           l1540:	
  8440  0695                     	clrc
  8441  0695  1003               	rlf	(___bmul@multiplicand),f
  8442  0696  0DC6               
  8443                           	line	46
  8444                           	
  8445                           l1542:	
  8446  0697                     	clrc
  8447  0697  1003               	rrf	(___bmul@multiplier),f
  8448  0698  0CC9               
  8449                           	line	47
  8450                           	movf	((___bmul@multiplier)),w
  8451  0699  0849               	btfss	status,2
  8452  069A  1D03               	goto	u611
  8453  069B  2E9D               	goto	u610
  8454  069C  2E9E               u611:
  8455  069D                     	goto	l1536
  8456  069D  2E8C               u610:
  8457  069E                     	goto	l1544
  8458  069E  2E9F               	
  8459                           l539:	
  8460  069F                     	line	50
  8461                           	
  8462                           l1544:	
  8463  069F                     	movf	(___bmul@product),w
  8464  069F  0848               	goto	l540
  8465  06A0  2EA1               	
  8466                           l1546:	
  8467  06A1                     	line	51
  8468                           	
  8469                           l540:	
  8470  06A1                     	return
  8471  06A1  0008               	opt stack 0
  8472                           GLOBAL	__end_of___bmul
  8473                           	__end_of___bmul:
  8474  06A2                     	signat	___bmul,8313
  8475                           	global	_Button_Deviation_Update
  8476                           
  8477 ;; *************** function _Button_Deviation_Update *****************
  8478 ;; Defined at:
  8479 ;;		line 296 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  button          1    wreg     PTR struct .
  8482 ;;		 -> mtouch_button(16), 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  button          1   10[BANK0 ] PTR struct .
  8485 ;;		 -> mtouch_button(16), 
  8486 ;;  deviation       4   11[BANK0 ] long 
  8487 ;; Return value:  Size  Location     Type
  8488 ;;                  1    wreg      void 
  8489 ;; Registers used:
  8490 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8491 ;; Tracked objects:
  8492 ;;		On entry : 0/0
  8493 ;;		On exit  : 0/0
  8494 ;;		Unchanged: 0/0
  8495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8496 ;;      Params:         0       0       0       0
  8497 ;;      Locals:         0       5       0       0
  8498 ;;      Temps:          0      10       0       0
  8499 ;;      Totals:         0      15       0       0
  8500 ;;Total ram usage:       15 bytes
  8501 ;; Hardware stack levels used:    1
  8502 ;; Hardware stack levels required when called:    4
  8503 ;; This function calls:
  8504 ;;		Nothing
  8505 ;; This function is called by:
  8506 ;;		_Button_Service
  8507 ;; This function uses a non-reentrant model
  8508 ;;
  8509                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
  8510                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8511                           	line	296
  8512                           global __ptext42
  8513                           __ptext42:	;psect for function _Button_Deviation_Update
  8514  00E2                     psect	text42
  8515                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8516                           	line	296
  8517                           	global	__size_of_Button_Deviation_Update
  8518                           	__size_of_Button_Deviation_Update	equ	__end_of_Button_Deviation_Update-_Button_Deviatio
                                 n_Update
  8519  0094                     	
  8520                           _Button_Deviation_Update:	
  8521  00E2                     ;incstack = 0
  8522                           	opt	stack 8
  8523                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8524                           ;Button_Deviation_Update@button stored from wreg
  8525                           	movlb 0	; select bank0
  8526  00E2  0020               	movwf	(Button_Deviation_Update@button)
  8527  00E3  00D0               	line	300
  8528                           	
  8529                           l1724:	
  8530  00E4                     ;mcc_generated_files/mtouch/mtouch_button.c: 296: static void Button_Deviation_Update(mt
                                 ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 297: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 298:     int32_t deviation;;mcc_generated_files/mtouch/mto
                                 uch_button.c: 300:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
                                 ton->baseline)>>((uint8_t)4)));
  8531                           	movf	(Button_Deviation_Update@button),w
  8532  00E4  0850               	addlw	05h
  8533  00E5  3E05               	movwf	fsr1l
  8534  00E6  0086               	clrf fsr1h	
  8535  00E7  0187               	
  8536                           	moviw	[0]fsr1
  8537  00E8  3F40               	movwf	((??_Button_Deviation_Update+0)+0+0)
  8538  00E9  00C6               	moviw	[1]fsr1
  8539  00EA  3F41               	movwf	((??_Button_Deviation_Update+0)+0+1)
  8540  00EB  00C7               	moviw	[2]fsr1
  8541  00EC  3F42               	movwf	((??_Button_Deviation_Update+0)+0+2)
  8542  00ED  00C8               	moviw	[3]fsr1
  8543  00EE  3F43               	movwf	((??_Button_Deviation_Update+0)+0+3)
  8544  00EF  00C9               	movlw	04h
  8545  00F0  3004               u825:
  8546  00F1                     	lsrf	(??_Button_Deviation_Update+0)+3,f
  8547  00F1  36C9               	rrf	(??_Button_Deviation_Update+0)+2,f
  8548  00F2  0CC8               	rrf	(??_Button_Deviation_Update+0)+1,f
  8549  00F3  0CC7               	rrf	(??_Button_Deviation_Update+0)+0,f
  8550  00F4  0CC6               u820:
  8551  00F5                     	decfsz	wreg,f
  8552  00F5  0B89               	goto	u825
  8553  00F6  28F1               	comf	(??_Button_Deviation_Update+0)+0,f
  8554  00F7  09C6               	comf	(??_Button_Deviation_Update+0)+1,f
  8555  00F8  09C7               	comf	(??_Button_Deviation_Update+0)+2,f
  8556  00F9  09C8               	comf	(??_Button_Deviation_Update+0)+3,f
  8557  00FA  09C9               	incf	(??_Button_Deviation_Update+0)+0,f
  8558  00FB  0AC6               	skipnz
  8559  00FC  1903               	incf	(??_Button_Deviation_Update+0)+1,f
  8560  00FD  0AC7               	skipnz
  8561  00FE  1903               	incf	(??_Button_Deviation_Update+0)+2,f
  8562  00FF  0AC8               	skipnz
  8563  0100  1903               	incf	(??_Button_Deviation_Update+0)+3,f
  8564  0101  0AC9               	movf	(Button_Deviation_Update@button),w
  8565  0102  0850               	addlw	03h
  8566  0103  3E03               	movwf	fsr1l
  8567  0104  0086               	clrf fsr1h	
  8568  0105  0187               	
  8569                           	moviw	[0]fsr1
  8570  0106  3F40               	movwf	(??_Button_Deviation_Update+4)+0
  8571  0107  00CA               	moviw	[1]fsr1
  8572  0108  3F41               	movwf	(??_Button_Deviation_Update+4)+0+1
  8573  0109  00CB               	movf	0+(??_Button_Deviation_Update+4)+0,w
  8574  010A  084A               	movwf	((??_Button_Deviation_Update+6)+0)
  8575  010B  00CC               	movf	1+(??_Button_Deviation_Update+4)+0,w
  8576  010C  084B               	movwf	((??_Button_Deviation_Update+6)+0+1)
  8577  010D  00CD               	clrf	((??_Button_Deviation_Update+6)+0+2)
  8578  010E  01CE               	clrf	((??_Button_Deviation_Update+6)+0+3)
  8579  010F  01CF               	movf	0+(??_Button_Deviation_Update+6)+0,w
  8580  0110  084C               	addwf	(??_Button_Deviation_Update+0)+0,f
  8581  0111  07C6               	movf	1+(??_Button_Deviation_Update+6)+0,w
  8582  0112  084D               	addwfc	(??_Button_Deviation_Update+0)+1,f
  8583  0113  3DC7               	movf	2+(??_Button_Deviation_Update+6)+0,w
  8584  0114  084E               	addwfc	(??_Button_Deviation_Update+0)+2,f
  8585  0115  3DC8               	movf	3+(??_Button_Deviation_Update+6)+0,w
  8586  0116  084F               	addwfc	(??_Button_Deviation_Update+0)+3,f
  8587  0117  3DC9               	movf	3+(??_Button_Deviation_Update+0)+0,w
  8588  0118  0849               	movwf	(Button_Deviation_Update@deviation+3)
  8589  0119  00D4               	movf	2+(??_Button_Deviation_Update+0)+0,w
  8590  011A  0848               	movwf	(Button_Deviation_Update@deviation+2)
  8591  011B  00D3               	movf	1+(??_Button_Deviation_Update+0)+0,w
  8592  011C  0847               	movwf	(Button_Deviation_Update@deviation+1)
  8593  011D  00D2               	movf	0+(??_Button_Deviation_Update+0)+0,w
  8594  011E  0846               	movwf	(Button_Deviation_Update@deviation)
  8595  011F  00D1               
  8596                           	line	303
  8597                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:     deviation = deviation >> (button->
                                 scaling);
  8598                           	movf	(Button_Deviation_Update@deviation),w
  8599  0120  0851               	movwf	(??_Button_Deviation_Update+0)+0
  8600  0121  00C6               	movf	(Button_Deviation_Update@deviation+1),w
  8601  0122  0852               	movwf	((??_Button_Deviation_Update+0)+0+1)
  8602  0123  00C7               	movf	(Button_Deviation_Update@deviation+2),w
  8603  0124  0853               	movwf	((??_Button_Deviation_Update+0)+0+2)
  8604  0125  00C8               	movf	(Button_Deviation_Update@deviation+3),w
  8605  0126  0854               	movwf	((??_Button_Deviation_Update+0)+0+3)
  8606  0127  00C9               	movf	(Button_Deviation_Update@button),w
  8607  0128  0850               	addlw	0Fh
  8608  0129  3E0F               	movwf	fsr1l
  8609  012A  0086               	clrf fsr1h	
  8610  012B  0187               	
  8611                           	incf	indf1,w
  8612  012C  0A01               	goto	u830
  8613  012D  2932               u835:
  8614  012E                     	asrf	(??_Button_Deviation_Update+0)+3,f
  8615  012E  37C9               	rrf	(??_Button_Deviation_Update+0)+2,f
  8616  012F  0CC8               	rrf	(??_Button_Deviation_Update+0)+1,f
  8617  0130  0CC7               	rrf	(??_Button_Deviation_Update+0)+0,f
  8618  0131  0CC6               u830:
  8619  0132                     	decfsz	wreg,f
  8620  0132  0B89               	goto	u835
  8621  0133  292E               	movf	3+(??_Button_Deviation_Update+0)+0,w
  8622  0134  0849               	movwf	(Button_Deviation_Update@deviation+3)
  8623  0135  00D4               	movf	2+(??_Button_Deviation_Update+0)+0,w
  8624  0136  0848               	movwf	(Button_Deviation_Update@deviation+2)
  8625  0137  00D3               	movf	1+(??_Button_Deviation_Update+0)+0,w
  8626  0138  0847               	movwf	(Button_Deviation_Update@deviation+1)
  8627  0139  00D2               	movf	0+(??_Button_Deviation_Update+0)+0,w
  8628  013A  0846               	movwf	(Button_Deviation_Update@deviation)
  8629  013B  00D1               
  8630                           	line	306
  8631                           	
  8632                           l1726:	
  8633  013C                     ;mcc_generated_files/mtouch/mtouch_button.c: 306:     if (deviation > ((0x7f)))
  8634                           	btfsc	(Button_Deviation_Update@deviation+3),7
  8635  013C  1BD4               	goto	u841
  8636  013D  294C               	movf	(Button_Deviation_Update@deviation+3),w
  8637  013E  0854               	btfss	status,2
  8638  013F  1D03               	goto	u840
  8639  0140  294D               	movf	(Button_Deviation_Update@deviation+2),w
  8640  0141  0853               	btfss	status,2
  8641  0142  1D03               	goto	u840
  8642  0143  294D               	movf	(Button_Deviation_Update@deviation+1),w
  8643  0144  0852               	btfss	status,2
  8644  0145  1D03               	goto	u840
  8645  0146  294D               	movlw	128
  8646  0147  3080               	subwf	 (Button_Deviation_Update@deviation),w
  8647  0148  0251               	btfss	status,0
  8648  0149  1C03               	goto	u841
  8649  014A  294C               	goto	u840
  8650  014B  294D               
  8651                           u841:
  8652  014C                     	goto	l1730
  8653  014C  2956               u840:
  8654  014D                     	line	308
  8655                           	
  8656                           l1728:	
  8657  014D                     ;mcc_generated_files/mtouch/mtouch_button.c: 307:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 308:         deviation = ((0x7f));
  8658                           	movlw	0
  8659  014D  3000               	movwf	(Button_Deviation_Update@deviation+3)
  8660  014E  00D4               	movlw	0
  8661  014F  3000               	movwf	(Button_Deviation_Update@deviation+2)
  8662  0150  00D3               	movlw	0
  8663  0151  3000               	movwf	(Button_Deviation_Update@deviation+1)
  8664  0152  00D2               	movlw	07Fh
  8665  0153  307F               	movwf	(Button_Deviation_Update@deviation)
  8666  0154  00D1               
  8667                           	goto	l1730
  8668  0155  2956               	line	309
  8669                           ;mcc_generated_files/mtouch/mtouch_button.c: 309:     }
  8670                           	
  8671                           l449:	
  8672  0156                     	line	310
  8673                           	
  8674                           l1730:	
  8675  0156                     ;mcc_generated_files/mtouch/mtouch_button.c: 310:     if (deviation < ((-1-0x7f)))
  8676                           	btfss	(Button_Deviation_Update@deviation+3),7
  8677  0156  1FD4               	goto	u851
  8678  0157  2963               	movlw	128
  8679  0158  3080               	subwf	 (Button_Deviation_Update@deviation),w
  8680  0159  0251               	movlw	255
  8681  015A  30FF               	subwfb	(Button_Deviation_Update@deviation+1),w
  8682  015B  3B52               	movlw	255
  8683  015C  30FF               	subwfb	(Button_Deviation_Update@deviation+2),w
  8684  015D  3B53               	movlw	255
  8685  015E  30FF               	subwfb	(Button_Deviation_Update@deviation+3),w
  8686  015F  3B54               	btfsc	status,0
  8687  0160  1803               	goto	u851
  8688  0161  2963               	goto	u850
  8689  0162  2964               
  8690                           u851:
  8691  0163                     	goto	l1734
  8692  0163  296D               u850:
  8693  0164                     	line	312
  8694                           	
  8695                           l1732:	
  8696  0164                     ;mcc_generated_files/mtouch/mtouch_button.c: 311:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 312:         deviation = ((-1-0x7f));
  8697                           	movlw	0FFh
  8698  0164  30FF               	movwf	(Button_Deviation_Update@deviation+3)
  8699  0165  00D4               	movlw	0FFh
  8700  0166  30FF               	movwf	(Button_Deviation_Update@deviation+2)
  8701  0167  00D3               	movlw	0FFh
  8702  0168  30FF               	movwf	(Button_Deviation_Update@deviation+1)
  8703  0169  00D2               	movlw	080h
  8704  016A  3080               	movwf	(Button_Deviation_Update@deviation)
  8705  016B  00D1               
  8706                           	goto	l1734
  8707  016C  296D               	line	313
  8708                           ;mcc_generated_files/mtouch/mtouch_button.c: 313:     }
  8709                           	
  8710                           l450:	
  8711  016D                     	line	315
  8712                           	
  8713                           l1734:	
  8714  016D                     ;mcc_generated_files/mtouch/mtouch_button.c: 315:     button->deviation = (mtouch_button
                                 _deviation_t)deviation;
  8715                           	movf	(Button_Deviation_Update@deviation),w
  8716  016D  0851               	movwf	(??_Button_Deviation_Update+0)+0
  8717  016E  00C6               	movf	(Button_Deviation_Update@button),w
  8718  016F  0850               	addlw	09h
  8719  0170  3E09               	movwf	fsr1l
  8720  0171  0086               	clrf fsr1h	
  8721  0172  0187               	
  8722                           	movf	(??_Button_Deviation_Update+0)+0,w
  8723  0173  0846               	movwf	indf1
  8724  0174  0081               	line	316
  8725                           	
  8726                           l451:	
  8727  0175                     	return
  8728  0175  0008               	opt stack 0
  8729                           GLOBAL	__end_of_Button_Deviation_Update
  8730                           	__end_of_Button_Deviation_Update:
  8731  0176                     	signat	_Button_Deviation_Update,4217
  8732                           	global	_MTOUCH_Button_isPressed
  8733                           
  8734 ;; *************** function _MTOUCH_Button_isPressed *****************
  8735 ;; Defined at:
  8736 ;;		line 277 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8737 ;; Parameters:    Size  Location     Type
  8738 ;;  name            1    wreg     enum E2327
  8739 ;; Auto vars:     Size  Location     Type
  8740 ;;  name            1    1[BANK0 ] enum E2327
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  1    wreg      _Bool 
  8743 ;; Registers used:
  8744 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8750 ;;      Params:         0       0       0       0
  8751 ;;      Locals:         0       1       0       0
  8752 ;;      Temps:          0       1       0       0
  8753 ;;      Totals:         0       2       0       0
  8754 ;;Total ram usage:        2 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:    4
  8757 ;; This function calls:
  8758 ;;		Nothing
  8759 ;; This function is called by:
  8760 ;;		_main
  8761 ;;		_MTOUCH_Button_Buttonmask_Get
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
  8765                           	line	277
  8766                           global __ptext43
  8767                           __ptext43:	;psect for function _MTOUCH_Button_isPressed
  8768  06BB                     psect	text43
  8769                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8770                           	line	277
  8771                           	global	__size_of_MTOUCH_Button_isPressed
  8772                           	__size_of_MTOUCH_Button_isPressed	equ	__end_of_MTOUCH_Button_isPressed-_MTOUCH_Button_i
                                 sPressed
  8773  0018                     	
  8774                           _MTOUCH_Button_isPressed:	
  8775  06BB                     ;incstack = 0
  8776                           	opt	stack 11
  8777                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  8778                           ;MTOUCH_Button_isPressed@name stored from wreg
  8779                           	movlb 0	; select bank0
  8780  06BB  0020               	movwf	(MTOUCH_Button_isPressed@name)
  8781  06BC  00C7               	line	280
  8782                           	
  8783                           l1954:	
  8784  06BD                     ;mcc_generated_files/mtouch/mtouch_button.c: 277: _Bool MTOUCH_Button_isPressed(enum mto
                                 uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 278: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 280:         return (mtouch_button[name].state == MTOUCH_B
                                 UTTON_STATE_pressed) ? 1 : 0;
  8785                           	movf	(MTOUCH_Button_isPressed@name),w
  8786  06BD  0847               	movwf	(??_MTOUCH_Button_isPressed+0)+0
  8787  06BE  00C6               	movlw	(04h)-1
  8788  06BF  3003               u1065:
  8789  06C0                     	lslf	(??_MTOUCH_Button_isPressed+0)+0,f
  8790  06C0  35C6               	addlw	-1
  8791  06C1  3EFF               	skipz
  8792  06C2  1D03               	goto	u1065
  8793  06C3  2EC0               	lslf	(??_MTOUCH_Button_isPressed+0)+0,w
  8794  06C4  3546               	addlw	02h
  8795  06C5  3E02               	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  8796  06C6  3E2D               	movwf	fsr1l
  8797  06C7  0086               	clrf fsr1h	
  8798  06C8  0187               	
  8799                           		movlw	2
  8800  06C9  3002               	xorwf	(indf1),w
  8801  06CA  0601               	btfsc	status,2
  8802  06CB  1903               	goto	u1071
  8803  06CC  2ECE               	goto	u1070
  8804  06CD  2ED0               u1071:
  8805  06CE                     	movlw	1
  8806  06CE  3001               	goto	u1080
  8807  06CF  2ED1               u1070:
  8808  06D0                     	movlw	0
  8809  06D0  3000               u1080:
  8810  06D1                     	goto	l440
  8811  06D1  2ED2               	
  8812                           l1956:	
  8813  06D2                     	line	282
  8814                           	
  8815                           l440:	
  8816  06D2                     	return
  8817  06D2  0008               	opt stack 0
  8818                           GLOBAL	__end_of_MTOUCH_Button_isPressed
  8819                           	__end_of_MTOUCH_Button_isPressed:
  8820  06D3                     	signat	_MTOUCH_Button_isPressed,4217
  8821                           	global	_INTERRUPT_InterruptManager
  8822                           
  8823 ;; *************** function _INTERRUPT_InterruptManager *****************
  8824 ;; Defined at:
  8825 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8826 ;; Parameters:    Size  Location     Type
  8827 ;;		None
  8828 ;; Auto vars:     Size  Location     Type
  8829 ;;		None
  8830 ;; Return value:  Size  Location     Type
  8831 ;;                  1    wreg      void 
  8832 ;; Registers used:
  8833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8834 ;; Tracked objects:
  8835 ;;		On entry : 0/0
  8836 ;;		On exit  : 0/0
  8837 ;;		Unchanged: 0/0
  8838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8839 ;;      Params:         0       0       0       0
  8840 ;;      Locals:         0       0       0       0
  8841 ;;      Temps:          0       0       0       0
  8842 ;;      Totals:         0       0       0       0
  8843 ;;Total ram usage:        0 bytes
  8844 ;; Hardware stack levels used:    1
  8845 ;; Hardware stack levels required when called:    3
  8846 ;; This function calls:
  8847 ;;		_TMR2_ISR
  8848 ;; This function is called by:
  8849 ;;		Interrupt level 1
  8850 ;; This function uses a non-reentrant model
  8851 ;;
  8852                           psect	intentry,class=CODE,delta=2
  8853                           global __pintentry
  8854                           __pintentry:
  8855  0004                     psect	intentry
  8856                           	file	"mcc_generated_files/interrupt_manager.c"
  8857                           	line	52
  8858                           	global	__size_of_INTERRUPT_InterruptManager
  8859                           	__size_of_INTERRUPT_InterruptManager	equ	__end_of_INTERRUPT_InterruptManager-_INTERRUPT
                                 _InterruptManager
  8860  0019                     	
  8861                           _INTERRUPT_InterruptManager:	
  8862  0004                     ;incstack = 0
  8863                           	opt	stack 5
  8864                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  8865  0004  147E               ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
                                 
  8866                           psect	intentry
  8867                           	pagesel	$
  8868  0005  3180               	line	55
  8869                           	
  8870                           i1l1958:	
  8871  0006                     ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8872                           	btfss	(11),6	;volatile
  8873  0006  1F0B               	goto	u109_21
  8874  0007  2809               	goto	u109_20
  8875  0008  280A               u109_21:
  8876  0009                     	goto	i1l46
  8877  0009  281B               u109_20:
  8878  000A                     	line	57
  8879                           	
  8880                           i1l1960:	
  8881  000A                     ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
                                 r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8882                           	movlb 1	; select bank1
  8883  000A  0021               	btfss	(145)^080h,1	;volatile
  8884  000B  1C91               	goto	u110_21
  8885  000C  280E               	goto	u110_20
  8886  000D  280F               u110_21:
  8887  000E                     	goto	i1l46
  8888  000E  281B               u110_20:
  8889  000F                     	
  8890                           i1l1962:	
  8891  000F                     	movlb 0	; select bank0
  8892  000F  0020               	btfss	(17),1	;volatile
  8893  0010  1C91               	goto	u111_21
  8894  0011  2813               	goto	u111_20
  8895  0012  2814               u111_21:
  8896  0013                     	goto	i1l46
  8897  0013  281B               u111_20:
  8898  0014                     	line	59
  8899                           	
  8900                           i1l1964:	
  8901  0014                     ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
                                 nager.c: 59:             TMR2_ISR();
  8902                           	fcall	_TMR2_ISR
  8903  0014  3187  2752  3180   	line	60
  8904                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8905                           	goto	i1l46
  8906  0017  281B               	line	61
  8907                           ;mcc_generated_files/interrupt_manager.c: 61:         else
  8908                           	
  8909                           i1l43:	
  8910  0018                     	goto	i1l46
  8911  0018  281B               	line	64
  8912                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
                                 nager.c: 64:         }
  8913                           	
  8914                           i1l44:	
  8915  0019                     	line	65
  8916                           ;mcc_generated_files/interrupt_manager.c: 65:     }
  8917                           	goto	i1l46
  8918  0019  281B               	line	66
  8919                           ;mcc_generated_files/interrupt_manager.c: 66:     else
  8920                           	
  8921                           i1l42:	
  8922  001A                     	goto	i1l46
  8923  001A  281B               	line	69
  8924                           ;mcc_generated_files/interrupt_manager.c: 67:     {;mcc_generated_files/interrupt_manage
                                 r.c: 69:     }
  8925                           	
  8926                           i1l45:	
  8927  001B                     	line	70
  8928                           	
  8929                           i1l46:	
  8930  001B                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  8931  001B  107E               	retfie
  8932  001C  0009               	opt stack 0
  8933                           GLOBAL	__end_of_INTERRUPT_InterruptManager
  8934                           	__end_of_INTERRUPT_InterruptManager:
  8935  001D                     	signat	_INTERRUPT_InterruptManager,89
  8936                           	global	_TMR2_ISR
  8937                           
  8938 ;; *************** function _TMR2_ISR *****************
  8939 ;; Defined at:
  8940 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8941 ;; Parameters:    Size  Location     Type
  8942 ;;		None
  8943 ;; Auto vars:     Size  Location     Type
  8944 ;;		None
  8945 ;; Return value:  Size  Location     Type
  8946 ;;                  1    wreg      void 
  8947 ;; Registers used:
  8948 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8949 ;; Tracked objects:
  8950 ;;		On entry : 0/0
  8951 ;;		On exit  : 0/0
  8952 ;;		Unchanged: 0/0
  8953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8954 ;;      Params:         0       0       0       0
  8955 ;;      Locals:         0       0       0       0
  8956 ;;      Temps:          0       0       0       0
  8957 ;;      Totals:         0       0       0       0
  8958 ;;Total ram usage:        0 bytes
  8959 ;; Hardware stack levels used:    1
  8960 ;; Hardware stack levels required when called:    2
  8961 ;; This function calls:
  8962 ;;		Absolute function
  8963 ;;		_Sensor_Acq_ExecuteScan
  8964 ;;		_TMR2_DefaultInterruptHandler
  8965 ;; This function is called by:
  8966 ;;		_INTERRUPT_InterruptManager
  8967 ;; This function uses a non-reentrant model
  8968 ;;
  8969                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
  8970                           	file	"mcc_generated_files/tmr2.c"
  8971                           	line	119
  8972                           global __ptext45
  8973                           __ptext45:	;psect for function _TMR2_ISR
  8974  0752                     psect	text45
  8975                           	file	"mcc_generated_files/tmr2.c"
  8976                           	line	119
  8977                           	global	__size_of_TMR2_ISR
  8978                           	__size_of_TMR2_ISR	equ	__end_of_TMR2_ISR-_TMR2_ISR
  8979  000F                     	
  8980                           _TMR2_ISR:	
  8981  0752                     ;incstack = 0
  8982                           	opt	stack 5
  8983                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8984                           	line	123
  8985                           	
  8986                           i1l1940:	
  8987  0752                     ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  8988                           	movlb 0	; select bank0
  8989  0752  0020               	bcf	(17),1	;volatile
  8990  0753  1091               	line	125
  8991                           	
  8992                           i1l1942:	
  8993  0754                     ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  8994                           	movf	((_TMR2_InterruptHandler)),w
  8995  0754  0868               iorwf	((_TMR2_InterruptHandler+1)),w
  8996  0755  0469               	btfsc	status,2
  8997  0756  1903               	goto	u105_21
  8998  0757  2F59               	goto	u105_20
  8999  0758  2F5A               u105_21:
  9000  0759                     	goto	i1l114
  9001  0759  2F60               u105_20:
  9002  075A                     	line	127
  9003                           	
  9004                           i1l1944:	
  9005  075A                     ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
                                 terruptHandler();
  9006                           	movf	(_TMR2_InterruptHandler+1),w
  9007  075A  0869               	movwf	pclath
  9008  075B  008A               	movf	(_TMR2_InterruptHandler),w
  9009  075C  0868               	callw
  9010  075D  000A               	pagesel	$
  9011  075E  3187               	goto	i1l114
  9012  075F  2F60               	line	128
  9013                           ;mcc_generated_files/tmr2.c: 128:     }
  9014                           	
  9015                           i1l113:	
  9016  0760                     	line	129
  9017                           	
  9018                           i1l114:	
  9019  0760                     	return
  9020  0760  0008               	opt stack 0
  9021                           GLOBAL	__end_of_TMR2_ISR
  9022                           	__end_of_TMR2_ISR:
  9023  0761                     	signat	_TMR2_ISR,89
  9024                           	global	_TMR2_DefaultInterruptHandler
  9025                           	global	_Sensor_Acq_ExecuteScan
  9026                           
  9027 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  9028 ;; Defined at:
  9029 ;;		line 285 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9030 ;; Parameters:    Size  Location     Type
  9031 ;;		None
  9032 ;; Auto vars:     Size  Location     Type
  9033 ;;  result          2    6[COMMON] unsigned short 
  9034 ;; Return value:  Size  Location     Type
  9035 ;;                  1    wreg      void 
  9036 ;; Registers used:
  9037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9038 ;; Tracked objects:
  9039 ;;		On entry : 0/0
  9040 ;;		On exit  : 0/0
  9041 ;;		Unchanged: 0/0
  9042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9043 ;;      Params:         0       0       0       0
  9044 ;;      Locals:         2       0       0       0
  9045 ;;      Temps:          2       0       0       0
  9046 ;;      Totals:         4       0       0       0
  9047 ;;Total ram usage:        4 bytes
  9048 ;; Hardware stack levels used:    1
  9049 ;; Hardware stack levels required when called:    1
  9050 ;; This function calls:
  9051 ;;		_MTOUCH_CVD_ScanA_0
  9052 ;;		_MTOUCH_CVD_ScanB_0
  9053 ;;		i1___bmul
  9054 ;;		i1_abs
  9055 ;; This function is called by:
  9056 ;;		_Sensor_Acq_ExecutePacket
  9057 ;;		_TMR2_ISR
  9058 ;; This function uses a non-reentrant model
  9059 ;;
  9060                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
  9061                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  9062                           	line	285
  9063                           global __ptext46
  9064                           __ptext46:	;psect for function _Sensor_Acq_ExecuteScan
  9065  0038                     psect	text46
  9066                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  9067                           	line	285
  9068                           	global	__size_of_Sensor_Acq_ExecuteScan
  9069                           	__size_of_Sensor_Acq_ExecuteScan	equ	__end_of_Sensor_Acq_ExecuteScan-_Sensor_Acq_Execut
                                 eScan
  9070  00AA                     	
  9071                           _Sensor_Acq_ExecuteScan:	
  9072  0038                     ;incstack = 0
  9073                           	opt	stack 5
  9074                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9075                           	line	287
  9076                           	
  9077                           i1l1890:	
  9078  0038                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 287:     mtouch_sensor_adcsample_t result =
                                  ADRES;
  9079                           	movlb 1	; select bank1
  9080  0038  0021               	movf	(155+1)^080h,w	;volatile
  9081  0039  081C               	movwf	(Sensor_Acq_ExecuteScan@result+1)
  9082  003A  00F7               	movf	(155)^080h,w	;volatile
  9083  003B  081B               	movwf	(Sensor_Acq_ExecuteScan@result)
  9084  003C  00F6               	line	290
  9085                           	
  9086                           i1l1892:	
  9087  003D                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 288:     static mtouch_sensor_adcsample_t l
                                 ast_a,last_b;;mcc_generated_files/mtouch/mtouch_sensor.c: 290:     if(sensor_globalFlags
                                 .packet_done)
  9088                           	movlb 0	; select bank0
  9089  003D  0020               	btfss	(_sensor_globalFlags),0	;volatile
  9090  003E  1C67               	goto	u101_21
  9091  003F  2841               	goto	u101_20
  9092  0040  2842               u101_21:
  9093  0041                     	goto	i1l1896
  9094  0041  2844               u101_20:
  9095  0042                     	goto	i1l264
  9096  0042  28E1               	line	291
  9097                           	
  9098                           i1l1894:	
  9099  0043                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:         return;
  9100                           	goto	i1l264
  9101  0043  28E1               	
  9102                           i1l263:	
  9103  0044                     	line	293
  9104                           	
  9105                           i1l1896:	
  9106  0044                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     if (packet_counter != (uint8_t)0)

  9107                           	movf	((_packet_counter)),w
  9108  0044  087C               	btfsc	status,2
  9109  0045  1903               	goto	u102_21
  9110  0046  2848               	goto	u102_20
  9111  0047  2849               u102_21:
  9112  0048                     	goto	i1l1926
  9113  0048  28C5               u102_20:
  9114  0049                     	goto	i1l1906
  9115  0049  2855               	line	296
  9116                           	
  9117                           i1l1898:	
  9118  004A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:     {
  9119                           	goto	i1l1906
  9120  004A  2855               	line	298
  9121                           	
  9122                           i1l267:	
  9123  004B                     	
  9124                           i1l1900:	
  9125  004B                     	fcall	_MTOUCH_CVD_ScanA_0
  9126  004B  3185  25F4  3180   	goto	i1l1908
  9127  004E  2866               	line	299
  9128                           	
  9129                           i1l269:	
  9130  004F                     	
  9131                           i1l1902:	
  9132  004F                     	fcall	_MTOUCH_CVD_ScanB_0
  9133  004F  3185  25D0  3180   	goto	i1l1908
  9134  0052  2866               	line	300
  9135                           	
  9136                           i1l270:	
  9137  0053                     	goto	i1l1908
  9138  0053  2866               	line	301
  9139                           	
  9140                           i1l1904:	
  9141  0054                     	goto	i1l1908
  9142  0054  2866               	
  9143                           i1l266:	
  9144  0055                     	
  9145                           i1l1906:	
  9146  0055                     	movf	(_packet_counter),w
  9147  0055  087C               	andlw	01h
  9148  0056  3901               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9149  0057  00F4               	clrf	(??_Sensor_Acq_ExecuteScan+0)+0+1
  9150  0058  01F5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9151                           ; Switch size 1, requested type "space"
  9152                           ; Number of cases is 1, Range of values is 0 to 0
  9153                           ; switch strategies available:
  9154                           ; Name         Instructions Cycles
  9155                           ; simple_byte            4     3 (average)
  9156                           ; direct_byte            8     6 (fixed)
  9157                           ; jumptable            260     6 (fixed)
  9158                           ;	Chosen strategy is simple_byte
  9159                           
  9160                           	movf 1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9161  0059  0875               	opt asmopt_push
  9162                           	opt asmopt_off
  9163                           	xorlw	0^0	; case 0
  9164  005A  3A00               	skipnz
  9165  005B  1903               	goto	i1l2044
  9166  005C  285E               	goto	i1l1908
  9167  005D  2866               	opt asmopt_pop
  9168                           	
  9169                           i1l2044:	
  9170  005E                     ; Switch size 1, requested type "space"
  9171                           ; Number of cases is 2, Range of values is 0 to 1
  9172                           ; switch strategies available:
  9173                           ; Name         Instructions Cycles
  9174                           ; simple_byte            7     4 (average)
  9175                           ; direct_byte           10     6 (fixed)
  9176                           ; jumptable            260     6 (fixed)
  9177                           ;	Chosen strategy is simple_byte
  9178                           
  9179                           	movf 0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9180  005E  0874               	opt asmopt_push
  9181                           	opt asmopt_off
  9182                           	xorlw	0^0	; case 0
  9183  005F  3A00               	skipnz
  9184  0060  1903               	goto	i1l1900
  9185  0061  284B               	xorlw	1^0	; case 1
  9186  0062  3A01               	skipnz
  9187  0063  1903               	goto	i1l1902
  9188  0064  284F               	goto	i1l1908
  9189  0065  2866               	opt asmopt_pop
  9190                           
  9191                           	
  9192                           i1l268:	
  9193  0066                     	line	303
  9194                           	
  9195                           i1l1908:	
  9196  0066                     	movlw	low(09h)
  9197  0066  3009               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9198  0067  00F4               	movf	(??_Sensor_Acq_ExecuteScan+0)+0,w
  9199  0068  0874               	movwf	(i1___bmul@multiplicand)
  9200  0069  00F0               	movf	(_currentScannSensor),w
  9201  006A  087D               	fcall	i1___bmul
  9202  006B  3186  26A2  3180   	addlw	05h
  9203  006E  3E05               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  9204  006F  3E3D               	movwf	fsr1l
  9205  0070  0086               	clrf fsr1h	
  9206  0071  0187               	
  9207                           	movf	indf1,w
  9208  0072  0801               	xorwf	(_packet_counter),w
  9209  0073  067C               	skipnz
  9210  0074  1903               	goto	u103_21
  9211  0075  2877               	goto	u103_20
  9212  0076  2878               u103_21:
  9213  0077                     	goto	i1l1924
  9214  0077  28C2               u103_20:
  9215  0078                     	line	305
  9216                           	
  9217                           i1l1910:	
  9218  0078                     	btfss	(_packet_counter),(0)&7
  9219  0078  1C7C               	goto	u104_21
  9220  0079  287B               	goto	u104_20
  9221  007A  287C               u104_21:
  9222  007B                     	goto	i1l1918
  9223  007B  28A3               u104_20:
  9224  007C                     	line	307
  9225                           	
  9226                           i1l1912:	
  9227  007C                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9228  007C  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9229  007D  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9230  007E  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9231  007F  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9232  0080  0AF4               	skipnz
  9233  0081  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9234  0082  0AF5               	movf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9235  0083  0874               	addlw	0
  9236  0084  3E00               	movwf	(Sensor_Acq_ExecuteScan@result)
  9237  0085  00F6               	movlw	04h
  9238  0086  3004               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9239  0087  3D75               	movwf	1+(Sensor_Acq_ExecuteScan@result)
  9240  0088  00F7               	line	308
  9241                           	
  9242                           i1l1914:	
  9243  0089                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9244  0089  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9245  008A  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9246  008B  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9247  008C  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9248  008D  0AF4               	skipnz
  9249  008E  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9250  008F  0AF5               	movf	(Sensor_Acq_ExecuteScan@last_a),w
  9251  0090  087A               	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9252  0091  0774               	movwf	(i1abs@a)
  9253  0092  00F0               	movf	(Sensor_Acq_ExecuteScan@last_a+1),w
  9254  0093  087B               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9255  0094  3D75               	movwf	1+(i1abs@a)
  9256  0095  00F1               	fcall	i1_abs
  9257  0096  3186  266D  3180   	movf	(0+(?i1_abs)),w
  9258  0099  0870               	movlb 0	; select bank0
  9259  009A  0020               	addwf	(_packet_noise),f
  9260  009B  07E3               	movf	(1+(?i1_abs)),w
  9261  009C  0871               	addwfc	(_packet_noise+1),f
  9262  009D  3DE4               	line	309
  9263                           	
  9264                           i1l1916:	
  9265  009E                     	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9266  009E  0877               	movwf	(Sensor_Acq_ExecuteScan@last_a+1)
  9267  009F  00FB               	movf	(Sensor_Acq_ExecuteScan@result),w
  9268  00A0  0876               	movwf	(Sensor_Acq_ExecuteScan@last_a)
  9269  00A1  00FA               	line	310
  9270                           	goto	i1l1922
  9271  00A2  28BD               	line	311
  9272                           	
  9273                           i1l272:	
  9274  00A3                     	line	313
  9275                           	
  9276                           i1l1918:	
  9277  00A3                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9278  00A3  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9279  00A4  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9280  00A5  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9281  00A6  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9282  00A7  0AF4               	skipnz
  9283  00A8  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9284  00A9  0AF5               	movf	(Sensor_Acq_ExecuteScan@last_b),w
  9285  00AA  0878               	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9286  00AB  0774               	movwf	(i1abs@a)
  9287  00AC  00F0               	movf	(Sensor_Acq_ExecuteScan@last_b+1),w
  9288  00AD  0879               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9289  00AE  3D75               	movwf	1+(i1abs@a)
  9290  00AF  00F1               	fcall	i1_abs
  9291  00B0  3186  266D  3180   	movf	(0+(?i1_abs)),w
  9292  00B3  0870               	movlb 0	; select bank0
  9293  00B4  0020               	addwf	(_packet_noise),f
  9294  00B5  07E3               	movf	(1+(?i1_abs)),w
  9295  00B6  0871               	addwfc	(_packet_noise+1),f
  9296  00B7  3DE4               	line	314
  9297                           	
  9298                           i1l1920:	
  9299  00B8                     	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9300  00B8  0877               	movwf	(Sensor_Acq_ExecuteScan@last_b+1)
  9301  00B9  00F9               	movf	(Sensor_Acq_ExecuteScan@result),w
  9302  00BA  0876               	movwf	(Sensor_Acq_ExecuteScan@last_b)
  9303  00BB  00F8               	goto	i1l1922
  9304  00BC  28BD               	line	315
  9305                           	
  9306                           i1l273:	
  9307  00BD                     	line	316
  9308                           	
  9309                           i1l1922:	
  9310  00BD                     	movf	(Sensor_Acq_ExecuteScan@result),w
  9311  00BD  0876               	addwf	(_packet_sample),f
  9312  00BE  07E5               	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9313  00BF  0877               	addwfc	(_packet_sample+1),f
  9314  00C0  3DE6               	goto	i1l1924
  9315  00C1  28C2               	line	317
  9316                           	
  9317                           i1l271:	
  9318  00C2                     	line	318
  9319                           	
  9320                           i1l1924:	
  9321  00C2                     	movlw	01h
  9322  00C2  3001               	subwf	(_packet_counter),f
  9323  00C3  02FC               	line	319
  9324                           	goto	i1l264
  9325  00C4  28E1               	line	320
  9326                           	
  9327                           i1l265:	
  9328  00C5                     	line	322
  9329                           	
  9330                           i1l1926:	
  9331  00C5                     	movf	(Sensor_Acq_ExecuteScan@result),w
  9332  00C5  0876               	movlb 0	; select bank0
  9333  00C6  0020               	addwf	(_packet_sample),f
  9334  00C7  07E5               	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9335  00C8  0877               	addwfc	(_packet_sample+1),f
  9336  00C9  3DE6               	line	323
  9337                           	
  9338                           i1l1928:	
  9339  00CA                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9340  00CA  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9341  00CB  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9342  00CC  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9343  00CD  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9344  00CE  0AF4               	skipnz
  9345  00CF  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9346  00D0  0AF5               	movf	(Sensor_Acq_ExecuteScan@last_b),w
  9347  00D1  0878               	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9348  00D2  0774               	movwf	(i1abs@a)
  9349  00D3  00F0               	movf	(Sensor_Acq_ExecuteScan@last_b+1),w
  9350  00D4  0879               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9351  00D5  3D75               	movwf	1+(i1abs@a)
  9352  00D6  00F1               	fcall	i1_abs
  9353  00D7  3186  266D  3180   	movf	(0+(?i1_abs)),w
  9354  00DA  0870               	movlb 0	; select bank0
  9355  00DB  0020               	addwf	(_packet_noise),f
  9356  00DC  07E3               	movf	(1+(?i1_abs)),w
  9357  00DD  0871               	addwfc	(_packet_noise+1),f
  9358  00DE  3DE4               	line	324
  9359                           	
  9360                           i1l1930:	
  9361  00DF                     	bsf	(_sensor_globalFlags),0	;volatile
  9362  00DF  1467               	goto	i1l264
  9363  00E0  28E1               	line	325
  9364                           	
  9365                           i1l274:	
  9366  00E1                     	line	326
  9367                           	
  9368                           i1l264:	
  9369  00E1                     	return
  9370  00E1  0008               	opt stack 0
  9371                           GLOBAL	__end_of_Sensor_Acq_ExecuteScan
  9372                           	__end_of_Sensor_Acq_ExecuteScan:
  9373  00E2                     	signat	_Sensor_Acq_ExecuteScan,89
  9374                           
  9375 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  9376 ;; Defined at:
  9377 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		None
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9391 ;;      Params:         0       0       0       0
  9392 ;;      Locals:         0       0       0       0
  9393 ;;      Temps:          0       0       0       0
  9394 ;;      Totals:         0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; This function calls:
  9398 ;;		Nothing
  9399 ;; This function is called by:
  9400 ;;		_TMR2_Initialize
  9401 ;;		_TMR2_ISR
  9402 ;; This function uses a non-reentrant model
  9403 ;;
  9404                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
  9405                           	file	"mcc_generated_files/tmr2.c"
  9406                           	line	136
  9407                           global __ptext47
  9408                           __ptext47:	;psect for function _TMR2_DefaultInterruptHandler
  9409  07DF                     psect	text47
  9410                           	file	"mcc_generated_files/tmr2.c"
  9411                           	line	136
  9412                           	global	__size_of_TMR2_DefaultInterruptHandler
  9413                           	__size_of_TMR2_DefaultInterruptHandler	equ	__end_of_TMR2_DefaultInterruptHandler-_TMR2_
                                 DefaultInterruptHandler
  9414  0001                     	
  9415                           _TMR2_DefaultInterruptHandler:	
  9416  07DF                     ;incstack = 0
  9417                           	opt	stack 6
  9418                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  9419                           	line	139
  9420                           	
  9421                           i1l120:	
  9422  07DF                     	return
  9423  07DF  0008               	opt stack 0
  9424                           GLOBAL	__end_of_TMR2_DefaultInterruptHandler
  9425                           	__end_of_TMR2_DefaultInterruptHandler:
  9426  07E0                     	signat	_TMR2_DefaultInterruptHandler,89
  9427                           	global	i1_abs
  9428                           
  9429 ;; *************** function i1_abs *****************
  9430 ;; Defined at:
  9431 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  9432 ;; Parameters:    Size  Location     Type
  9433 ;;  a               2    0[COMMON] int 
  9434 ;; Auto vars:     Size  Location     Type
  9435 ;;		None
  9436 ;; Return value:  Size  Location     Type
  9437 ;;                  2    0[COMMON] int 
  9438 ;; Registers used:
  9439 ;;		wreg, status,2, status,0
  9440 ;; Tracked objects:
  9441 ;;		On entry : 0/0
  9442 ;;		On exit  : 0/0
  9443 ;;		Unchanged: 0/0
  9444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9445 ;;      Params:         2       0       0       0
  9446 ;;      Locals:         0       0       0       0
  9447 ;;      Temps:          2       0       0       0
  9448 ;;      Totals:         4       0       0       0
  9449 ;;Total ram usage:        4 bytes
  9450 ;; Hardware stack levels used:    1
  9451 ;; This function calls:
  9452 ;;		Nothing
  9453 ;; This function is called by:
  9454 ;;		_Sensor_Acq_ExecuteScan
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
  9458                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  9459                           	line	1
  9460                           global __ptext48
  9461                           __ptext48:	;psect for function i1_abs
  9462  066D                     psect	text48
  9463                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  9464                           	line	1
  9465                           	global	__size_ofi1_abs
  9466                           	__size_ofi1_abs	equ	__end_ofi1_abs-i1_abs
  9467  001B                     	
  9468                           i1_abs:	
  9469  066D                     ;incstack = 0
  9470                           	opt	stack 5
  9471                           ; Regs used in i1_abs: [wreg+status,2+status,0]
  9472                           	line	3
  9473                           	
  9474                           i1l1826:	
  9475  066D                     	movf	(i1abs@a+1),w
  9476  066D  0871               	xorlw	80h
  9477  066E  3A80               	movwf	(??i1_abs+0)+0
  9478  066F  00F2               	movlw	(0)^80h
  9479  0670  3080               	subwf	(??i1_abs+0)+0,w
  9480  0671  0272               	skipz
  9481  0672  1D03               	goto	u98_25
  9482  0673  2E76               	movlw	01h
  9483  0674  3001               	subwf	(i1abs@a),w
  9484  0675  0270               u98_25:
  9485  0676                     
  9486                           	skipnc
  9487  0676  1803               	goto	u98_21
  9488  0677  2E79               	goto	u98_20
  9489  0678  2E7A               u98_21:
  9490  0679                     	goto	i1l949
  9491  0679  2E86               u98_20:
  9492  067A                     	
  9493                           i1l1828:	
  9494  067A                     	comf	(i1abs@a),w
  9495  067A  0970               	movwf	(??i1_abs+0)+0
  9496  067B  00F2               	comf	(i1abs@a+1),w
  9497  067C  0971               	movwf	((??i1_abs+0)+0+1)
  9498  067D  00F3               	incf	(??i1_abs+0)+0,f
  9499  067E  0AF2               	skipnz
  9500  067F  1903               	incf	((??i1_abs+0)+0+1),f
  9501  0680  0AF3               	movf	0+(??i1_abs+0)+0,w
  9502  0681  0872               	movwf	(?i1_abs)
  9503  0682  00F0               	movf	1+(??i1_abs+0)+0,w
  9504  0683  0873               	movwf	(?i1_abs+1)
  9505  0684  00F1               	goto	i1l952
  9506  0685  2E87               	
  9507                           i1l949:	
  9508  0686                     	goto	i1l952
  9509  0686  2E87               	
  9510                           i1l951:	
  9511  0687                     	line	4
  9512                           	
  9513                           i1l952:	
  9514  0687                     	return
  9515  0687  0008               	opt stack 0
  9516                           GLOBAL	__end_ofi1_abs
  9517                           	__end_ofi1_abs:
  9518  0688                     	signat	i1_abs,90
  9519                           	global	i1___bmul
  9520                           
  9521 ;; *************** function i1___bmul *****************
  9522 ;; Defined at:
  9523 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;  multiplier      1    wreg     unsigned char 
  9526 ;;  multiplicand    1    0[COMMON] unsigned char 
  9527 ;; Auto vars:     Size  Location     Type
  9528 ;;  multiplier      1    2[COMMON] unsigned char 
  9529 ;;  __bmul          1    3[COMMON] unsigned char 
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      unsigned char 
  9532 ;; Registers used:
  9533 ;;		wreg, status,2, status,0
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 0/0
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9539 ;;      Params:         1       0       0       0
  9540 ;;      Locals:         2       0       0       0
  9541 ;;      Temps:          1       0       0       0
  9542 ;;      Totals:         4       0       0       0
  9543 ;;Total ram usage:        4 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; This function calls:
  9546 ;;		Nothing
  9547 ;; This function is called by:
  9548 ;;		_Sensor_Acq_ExecuteScan
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
  9552                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9553                           	line	4
  9554                           global __ptext49
  9555                           __ptext49:	;psect for function i1___bmul
  9556  06A2                     psect	text49
  9557                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9558                           	line	4
  9559                           	global	__size_ofi1___bmul
  9560                           	__size_ofi1___bmul	equ	__end_ofi1___bmul-i1___bmul
  9561  0019                     	
  9562                           i1___bmul:	
  9563  06A2                     ;incstack = 0
  9564                           	opt	stack 5
  9565                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  9566                           ;i1___bmul@multiplier stored from wreg
  9567                           	movwf	(i1___bmul@multiplier)
  9568  06A2  00F2               	line	6
  9569                           	
  9570                           i1l1830:	
  9571  06A3                     	clrf	(i1___bmul@product)
  9572  06A3  01F3               	goto	i1l1832
  9573  06A4  2EA5               	line	42
  9574                           	
  9575                           i1l537:	
  9576  06A5                     	line	43
  9577                           	
  9578                           i1l1832:	
  9579  06A5                     	btfss	(i1___bmul@multiplier),(0)&7
  9580  06A5  1C72               	goto	u99_21
  9581  06A6  2EA8               	goto	u99_20
  9582  06A7  2EA9               u99_21:
  9583  06A8                     	goto	i1l1836
  9584  06A8  2EAE               u99_20:
  9585  06A9                     	line	44
  9586                           	
  9587                           i1l1834:	
  9588  06A9                     	movf	(i1___bmul@multiplicand),w
  9589  06A9  0870               	movwf	(??i1___bmul+0)+0
  9590  06AA  00F1               	movf	(??i1___bmul+0)+0,w
  9591  06AB  0871               	addwf	(i1___bmul@product),f
  9592  06AC  07F3               	goto	i1l1836
  9593  06AD  2EAE               	
  9594                           i1l538:	
  9595  06AE                     	line	45
  9596                           	
  9597                           i1l1836:	
  9598  06AE                     	clrc
  9599  06AE  1003               	rlf	(i1___bmul@multiplicand),f
  9600  06AF  0DF0               
  9601                           	line	46
  9602                           	
  9603                           i1l1838:	
  9604  06B0                     	clrc
  9605  06B0  1003               	rrf	(i1___bmul@multiplier),f
  9606  06B1  0CF2               
  9607                           	line	47
  9608                           	movf	((i1___bmul@multiplier)),w
  9609  06B2  0872               	btfss	status,2
  9610  06B3  1D03               	goto	u100_21
  9611  06B4  2EB6               	goto	u100_20
  9612  06B5  2EB7               u100_21:
  9613  06B6                     	goto	i1l1832
  9614  06B6  2EA5               u100_20:
  9615  06B7                     	goto	i1l1840
  9616  06B7  2EB8               	
  9617                           i1l539:	
  9618  06B8                     	line	50
  9619                           	
  9620                           i1l1840:	
  9621  06B8                     	movf	(i1___bmul@product),w
  9622  06B8  0873               	goto	i1l540
  9623  06B9  2EBA               	
  9624                           i1l1842:	
  9625  06BA                     	line	51
  9626                           	
  9627                           i1l540:	
  9628  06BA                     	return
  9629  06BA  0008               	opt stack 0
  9630                           GLOBAL	__end_ofi1___bmul
  9631                           	__end_ofi1___bmul:
  9632  06BB                     	signat	i1___bmul,89
  9633                           	global	_MTOUCH_CVD_ScanB_0
  9634                           
  9635 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  9636 ;; Defined at:
  9637 ;;		line 131 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9638 ;; Parameters:    Size  Location     Type
  9639 ;;		None
  9640 ;; Auto vars:     Size  Location     Type
  9641 ;;		None
  9642 ;; Return value:  Size  Location     Type
  9643 ;;                  1    wreg      void 
  9644 ;; Registers used:
  9645 ;;		wreg
  9646 ;; Tracked objects:
  9647 ;;		On entry : 0/0
  9648 ;;		On exit  : 0/0
  9649 ;;		Unchanged: 0/0
  9650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9651 ;;      Params:         0       0       0       0
  9652 ;;      Locals:         0       0       0       0
  9653 ;;      Temps:          0       0       0       0
  9654 ;;      Totals:         0       0       0       0
  9655 ;;Total ram usage:        0 bytes
  9656 ;; Hardware stack levels used:    1
  9657 ;; This function calls:
  9658 ;;		Nothing
  9659 ;; This function is called by:
  9660 ;;		_Sensor_Acq_ExecuteScan
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
  9664                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9665                           	line	131
  9666                           global __ptext50
  9667                           __ptext50:	;psect for function _MTOUCH_CVD_ScanB_0
  9668  05D0                     psect	text50
  9669                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9670                           	line	131
  9671                           	global	__size_of_MTOUCH_CVD_ScanB_0
  9672                           	__size_of_MTOUCH_CVD_ScanB_0	equ	__end_of_MTOUCH_CVD_ScanB_0-_MTOUCH_CVD_ScanB_0
  9673  0024                     	
  9674                           _MTOUCH_CVD_ScanB_0:	
  9675  05D0                     ;incstack = 0
  9676                           	opt	stack 5
  9677                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  9678                           	line	134
  9679                           	
  9680                           i1l1808:	
  9681  05D0                     # 134 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9682                           BANKSEL LATC ;# 
  9683  05D0  0022               	line	135
  9684                           # 135 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9685                           bcf LATC & 0x7F, 1 ;# 
  9686  05D1  108E               	line	138
  9687                           # 138 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9688                           BANKSEL ADCON0 ;# 
  9689  05D2  0021               	line	139
  9690                           # 139 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9691                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9692  05D3  3015               	line	140
  9693                           # 140 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9694                           movwf ADCON0 & 0x7F ;# 
  9695  05D4  009D               psect	text50
  9696                           	line	143
  9697                           	
  9698                           i1l1810:	
  9699  05D5                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(10);
  9700                           	opt asmopt_push
  9701                           opt asmopt_off
  9702                           	movlw	3
  9703  05D5  3003               u115_27:
  9704  05D6                     decfsz	wreg
  9705  05D6  0B89               	goto	u115_27
  9706  05D7  2DD6               	nop
  9707  05D8  0000               opt asmopt_pop
  9708                           
  9709                           	line	146
  9710                           # 146 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9711                           movlw 113 ;# 
  9712  05D9  3071               	line	147
  9713                           # 147 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9714                           movwf ADCON0 & 0x7F ;# 
  9715  05DA  009D               	line	148
  9716                           # 148 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9717                           BANKSEL LATC ;# 
  9718  05DB  0022               	line	149
  9719                           # 149 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9720                           bsf LATC & 0x7F, 1 ;# 
  9721  05DC  148E               	line	150
  9722                           # 150 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9723                           BANKSEL ADCON0 ;# 
  9724  05DD  0021               	line	153
  9725                           # 153 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9726                           movlw LOW TRISC ;# 
  9727  05DE  308E               	line	154
  9728                           # 154 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9729                           movwf FSR0L & 0x7F ;# 
  9730  05DF  0084               	line	155
  9731                           # 155 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9732                           movlw HIGH TRISC ;# 
  9733  05E0  3000               	line	156
  9734                           # 156 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9735                           movwf FSR0H & 0x7F ;# 
  9736  05E1  0085               	line	159
  9737                           # 159 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9738                           movlw LOW LATC ;# 
  9739  05E2  300E               	line	160
  9740                           # 160 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9741                           movwf FSR1L & 0x7F ;# 
  9742  05E3  0086               	line	161
  9743                           # 161 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9744                           movlw HIGH LATC ;# 
  9745  05E4  3001               	line	162
  9746                           # 162 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9747                           movwf FSR1H & 0x7F ;# 
  9748  05E5  0087               	line	165
  9749                           # 165 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9750                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9751  05E6  3015               	line	166
  9752                           # 166 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9753                           bsf INDF0 & 0x7F, 1 ;# 
  9754  05E7  1480               psect	text50
  9755                           	line	167
  9756                           	
  9757                           i1l1812:	
  9758  05E8                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 167:     _delay(0);
  9759                           		opt asmopt_push
  9760                           	opt asmopt_off
  9761                           	opt asmopt_pop
  9762                           
  9763                           	line	168
  9764                           # 168 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9765                           movwf ADCON0 & 0x7F ;# 
  9766  05E8  009D               psect	text50
  9767                           	line	174
  9768                           	
  9769                           i1l1814:	
  9770  05E9                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 174:     _delay(5);
  9771                           		opt asmopt_push
  9772                           	opt asmopt_off
  9773                           	nop2	;2 cycle nop
  9774  05E9  3200               	nop2	;2 cycle nop
  9775  05EA  3200               	nop
  9776  05EB  0000               	opt asmopt_pop
  9777                           
  9778                           	line	177
  9779                           # 177 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9780                           BANKSEL ADCON0 ;# 
  9781  05EC  0021               	line	178
  9782                           # 178 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9783                           bsf ADCON0 & 0x7F, 1 ;# 
  9784  05ED  149D               psect	text50
  9785                           	line	181
  9786                           	
  9787                           i1l1816:	
  9788  05EE                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 181:     _delay(3);
  9789                           		opt asmopt_push
  9790                           	opt asmopt_off
  9791                           	nop2	;2 cycle nop
  9792  05EE  3200               	nop
  9793  05EF  0000               	opt asmopt_pop
  9794                           
  9795                           	line	184
  9796                           # 184 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9797                           BANKSEL LATC ;# 
  9798  05F0  0022               	line	185
  9799                           # 185 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9800                           bcf LATC & 0x7F, 1 ;# 
  9801  05F1  108E               	line	186
  9802                           # 186 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9803                           bcf INDF0 & 0x7F, 1 ;# 
  9804  05F2  1080               psect	text50
  9805                           	line	188
  9806                           	
  9807                           i1l350:	
  9808  05F3                     	return
  9809  05F3  0008               	opt stack 0
  9810                           GLOBAL	__end_of_MTOUCH_CVD_ScanB_0
  9811                           	__end_of_MTOUCH_CVD_ScanB_0:
  9812  05F4                     	signat	_MTOUCH_CVD_ScanB_0,89
  9813                           	global	_MTOUCH_CVD_ScanA_0
  9814                           
  9815 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  9816 ;; Defined at:
  9817 ;;		line 62 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		wreg
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9831 ;;      Params:         0       0       0       0
  9832 ;;      Locals:         0       0       0       0
  9833 ;;      Temps:          0       0       0       0
  9834 ;;      Totals:         0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; This function calls:
  9838 ;;		Nothing
  9839 ;; This function is called by:
  9840 ;;		_Sensor_Acq_ExecuteScan
  9841 ;; This function uses a non-reentrant model
  9842 ;;
  9843                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
  9844                           	line	62
  9845                           global __ptext51
  9846                           __ptext51:	;psect for function _MTOUCH_CVD_ScanA_0
  9847  05F4                     psect	text51
  9848                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9849                           	line	62
  9850                           	global	__size_of_MTOUCH_CVD_ScanA_0
  9851                           	__size_of_MTOUCH_CVD_ScanA_0	equ	__end_of_MTOUCH_CVD_ScanA_0-_MTOUCH_CVD_ScanA_0
  9852  0024                     	
  9853                           _MTOUCH_CVD_ScanA_0:	
  9854  05F4                     ;incstack = 0
  9855                           	opt	stack 5
  9856                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  9857                           	line	65
  9858                           	
  9859                           i1l1798:	
  9860  05F4                     # 65 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9861                           BANKSEL LATC ;# 
  9862  05F4  0022               	line	66
  9863                           # 66 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9864                           bsf LATC & 0x7F, 1 ;# 
  9865  05F5  148E               	line	69
  9866                           # 69 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9867                           BANKSEL ADCON0 ;# 
  9868  05F6  0021               	line	70
  9869                           # 70 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9870                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9871  05F7  3015               	line	71
  9872                           # 71 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9873                           movwf ADCON0 & 0x7F ;# 
  9874  05F8  009D               psect	text51
  9875                           	line	74
  9876                           	
  9877                           i1l1800:	
  9878  05F9                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 74:     _delay(10);
  9879                           	opt asmopt_push
  9880                           opt asmopt_off
  9881                           	movlw	3
  9882  05F9  3003               u116_27:
  9883  05FA                     decfsz	wreg
  9884  05FA  0B89               	goto	u116_27
  9885  05FB  2DFA               	nop
  9886  05FC  0000               opt asmopt_pop
  9887                           
  9888                           	line	77
  9889                           # 77 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9890                           movlw 113 ;# 
  9891  05FD  3071               	line	78
  9892                           # 78 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9893                           movwf ADCON0 & 0x7F ;# 
  9894  05FE  009D               	line	79
  9895                           # 79 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9896                           BANKSEL LATC ;# 
  9897  05FF  0022               	line	80
  9898                           # 80 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9899                           bcf LATC & 0x7F, 1 ;# 
  9900  0600  108E               	line	81
  9901                           # 81 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9902                           BANKSEL ADCON0 ;# 
  9903  0601  0021               	line	84
  9904                           # 84 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9905                           movlw LOW TRISC ;# 
  9906  0602  308E               	line	85
  9907                           # 85 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9908                           movwf FSR0L & 0x7F ;# 
  9909  0603  0084               	line	86
  9910                           # 86 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9911                           movlw HIGH TRISC ;# 
  9912  0604  3000               	line	87
  9913                           # 87 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9914                           movwf FSR0H & 0x7F ;# 
  9915  0605  0085               	line	90
  9916                           # 90 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9917                           movlw LOW LATC ;# 
  9918  0606  300E               	line	91
  9919                           # 91 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9920                           movwf FSR1L & 0x7F ;# 
  9921  0607  0086               	line	92
  9922                           # 92 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9923                           movlw HIGH LATC ;# 
  9924  0608  3001               	line	93
  9925                           # 93 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9926                           movwf FSR1H & 0x7F ;# 
  9927  0609  0087               	line	96
  9928                           # 96 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9929                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9930  060A  3015               	line	97
  9931                           # 97 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9932                           bsf INDF0 & 0x7F, 1 ;# 
  9933  060B  1480               psect	text51
  9934                           	line	98
  9935                           	
  9936                           i1l1802:	
  9937  060C                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 98:     _delay(0);
  9938                           		opt asmopt_push
  9939                           	opt asmopt_off
  9940                           	opt asmopt_pop
  9941                           
  9942                           	line	99
  9943                           # 99 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9944                           movwf ADCON0 & 0x7F ;# 
  9945  060C  009D               psect	text51
  9946                           	line	104
  9947                           	
  9948                           i1l1804:	
  9949  060D                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 104:     _delay(5);
  9950                           		opt asmopt_push
  9951                           	opt asmopt_off
  9952                           	nop2	;2 cycle nop
  9953  060D  3200               	nop2	;2 cycle nop
  9954  060E  3200               	nop
  9955  060F  0000               	opt asmopt_pop
  9956                           
  9957                           	line	107
  9958                           # 107 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9959                           BANKSEL ADCON0 ;# 
  9960  0610  0021               	line	108
  9961                           # 108 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9962                           bsf ADCON0 & 0x7F, 1 ;# 
  9963  0611  149D               psect	text51
  9964                           	line	111
  9965                           	
  9966                           i1l1806:	
  9967  0612                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 111:     _delay(3);
  9968                           		opt asmopt_push
  9969                           	opt asmopt_off
  9970                           	nop2	;2 cycle nop
  9971  0612  3200               	nop
  9972  0613  0000               	opt asmopt_pop
  9973                           
  9974                           	line	114
  9975                           # 114 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9976                           BANKSEL LATC ;# 
  9977  0614  0022               	line	115
  9978                           # 115 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9979                           bsf LATC & 0x7F, 1 ;# 
  9980  0615  148E               	line	116
  9981                           # 116 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9982                           bcf INDF0 & 0x7F, 1 ;# 
  9983  0616  1080               psect	text51
  9984                           	line	118
  9985                           	
  9986                           i1l347:	
  9987  0617                     	return
  9988  0617  0008               	opt stack 0
  9989                           GLOBAL	__end_of_MTOUCH_CVD_ScanA_0
  9990                           	__end_of_MTOUCH_CVD_ScanA_0:
  9991  0618                     	signat	_MTOUCH_CVD_ScanA_0,89
  9992                           global	___latbits
  9993                           ___latbits	equ	0
  9994  0000                     	global	btemp
  9995                           	btemp set 07Eh
  9996  007E                     
  9997                           	DABS	1,126,2	;btemp
  9998                           	global	int$flags
  9999                           	int$flags	set btemp
 10000  007E                     	global	wtemp0
 10001                           	wtemp0 set btemp+0
 10002  007E                     	end


Data Sizes:
    Strings     0
    Constant    5
    Data        38
    BSS         11
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     29      74
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    Sensor_Scanfrequency_Evaluation@sensor.scanB	const PTR FTN()void  size(2) Largest target is 0
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Scanfrequency_Evaluation@sensor.scanA	const PTR FTN()void  size(2) Largest target is 0
		 -> MTOUCH_CVD_ScanA_0(), 

    Button_Service$1529$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Service$1529	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Service@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Scanfrequency_Evaluation@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    S358$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    S358$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2110,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sensor_Acq_ExecuteScan(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sensor_Acq_ExecuteScan(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_ISR->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->i1___bmul
    _Sensor_Acq_ExecuteScan->i1_abs

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Scanfrequency_Evaluation
    _Sensor_Scanfrequency_Evaluation->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_TMR2_SetInterruptHandler
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _MTOUCH_Sensor_wasSampled->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6122
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     653
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0     479
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          0     0      0     391
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Enable                                 2     2      0     303
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0    5447
           _MTOUCH_Button_ServiceAll
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       0     0      0      88
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              0     0      0    2214
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       5     5      0    2214
                                             24 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback *
            _Sensor_RawSample_Update
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              1     1      0      77
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   6     6      0    1608
                                             18 BANK0      6     6      0
           _Sensor_Acq_ExecutePacket
    _Sensor_Scanfrequency_Evaluation
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     292
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_Scanfrequency_Evaluation                     10    10      0     618
                                              8 BANK0     10    10      0
           _Sensor_Acq_ExecutePacket
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecutePacket                             6     6      0     399
                                              2 BANK0      6     6      0
      _MTOUCH_Sensor_Scan_Initialize
            _TMR2_LoadPeriodRegister
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR2_LoadPeriodRegister                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             0     0      0    3145
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    3145
                                             18 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             2     2      0     303
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1     366
                                             13 BANK0      3     2      1
             _Button_DefaultCallback *
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1     727
                                             13 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_DefaultCallback *
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            5     4      1     869
                                             13 BANK0      5     4      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     260
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0     411
                                              8 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                3     3      0     512
                                              8 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     303
                                              4 BANK0      4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     281
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     213
                                              0 BANK0     15    15      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_isPressed                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     409
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0     409
                   Absolute function *
             _Sensor_Acq_ExecuteScan *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Sensor_Acq_ExecuteScan                              4     4      0     409
                                              4 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0
                 _MTOUCH_CVD_ScanB_0
                           i1___bmul
                              i1_abs
 ---------------------------------------------------------------------------------
 (11) i1_abs                                               4     2      2     144
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) i1___bmul                                            4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Button_isPressed
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_DefaultCallback *
         _Button_State_Pressed *
           _Button_DefaultCallback *
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Sensor_Scan_Initialize
             _TMR2_LoadPeriodRegister
             _TMR2_SetInterruptHandler
             _TMR2_StartTimer
             _TMR2_StopTimer
           _Sensor_Scanfrequency_Evaluation
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Sensor_Scan_Initialize
               _TMR2_LoadPeriodRegister
               _TMR2_SetInterruptHandler
               _TMR2_StartTimer
               _TMR2_StopTimer
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback *
         _Sensor_RawSample_Update *
         _Sensor_setSampled *
         ___bmul *
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
   _SYSTEM_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Enable
           ___bmul
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _Sensor_Acq_ExecuteScan *
       _MTOUCH_CVD_ScanA_0
       _MTOUCH_CVD_ScanB_0
       i1___bmul
       i1_abs
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      58       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      58      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Aug 06 22:45:58 2018

                    __end_of_TMR2_SetInterruptHandler 07B6                          ?_MTOUCH_Sensor_RawSample_Get 004A  
                                      ___bmul@product 0048                                           __CFG_CP$OFF 0000  
                                                  l23 0732                                                    l26 0789  
                                                  l29 07D2                                                    l71 06E8  
                                                  l95 0710                                                    l98 07D8  
                     __size_of_Sensor_Acq_ExecuteScan 00AA                            __end_of_Sensor_setInactive 07A2  
                                         __CFG_LVP$ON 0000                                                   LATC 010E  
                                                 l101 07D5                                                   l110 07C9  
                                                 l300 07DD                                                   l140 0778  
                                                 l220 0751                                                   l117 07B5  
                                                 l230 0557                                                   l223 0781  
                                                 l231 057D                                                   l240 0460  
                                                 l232 056B                                                   l401 0402  
                                                 l321 07A1                                                   l241 0454  
                                                 l233 057D                                                   l137 076D  
                                                 l402 0408                                                   l410 01D3  
                                                 l250 03C6                                                   l242 045F  
                                                 l226 07C4                                                   l403 044C  
                                                 l411 01DC                                                   l251 03C0  
                                                 l243 04AB                                                   l404 044C  
                                                 l412 0203                                                   l252 03C6  
                                                 l244 046A                                                   l413 0203  
                                                 l253 03CA                                                   l245 04A3  
                                                 l229 056D                                                   l333 07BF  
                                                 l309 0742                                                   l501 061E  
                                                 l254 03D0                                                   l318 07A9  
                                                 l246 04A9                                                   l342 0799  
                                                 l510 0634                                                   l502 062E  
                                                 l407 01A5                                                   l327 07DB  
                                                 l255 03E8                                                   l503 062A  
                                                 l440 06D2                                                   l416 04CB  
                                                 l408 01A4                                                   l336 0722  
                                                 l256 03EA                                                   l280 030D  
                                                 l504 062D                                                   l417 04F9  
                                                 l409 01DC                                                   l249 03BF  
                                                 l281 02C3                                                   l505 0632  
                                                 l450 016D                                                   l418 04F8  
                                                 l282 02CF                                                   l506 062E  
                                                 l451 0175                                                   l419 04F9  
                                                 l283 02CE                                                   l339 0791  
                                                 l507 0631                                                   l540 06A1  
                                                 l292 06FD                                                   l284 02E0  
                                                 l508 0633                                                   l461 0351  
                                                 l285 02D4                                                   l509 0634  
                                                 l462 0382                                                   l470 028E  
                                                 l286 02DF                                                   l463 0382  
                                                 l471 028E                                                   l287 0317  
                                                 l279 02B0                                                   l295 0663  
                                                 l391 07DC                                                   l480 07DE  
                                                 l288 02EA                                                   l296 066C  
                                                 l449 0156                                                   l537 068C  
                                                 l289 0302                                                   l297 066C  
                                                 l538 0695                                                   l466 05A9  
                                                 l394 07CE                                                   l539 069F  
                                                 l469 024D                                                   l397 053E  
                                                 l398 053E                                                   l951 0651  
                                                 l952 0651                                                   l949 0650  
                                                 _GIE 005F                                                   _PR2 001B  
                                                 u600 0690                                                   u601 068F  
                                                 u610 069E                                                   u611 069D  
                                                 u620 03C4                                                   u700 02E9  
                                                 u621 03C3                                                   u701 02E8  
                                                 u630 03CA                                                   u710 02F5  
                                                 u631 03C9                                                   u711 02F4  
                                                 u640 03CF                                                   u720 030C  
                                                 u800 0658                                                   u641 03CE  
                                                 u721 030B                                                   u801 0657  
                                                 u810 031E                                                   u650 03E4  
                                                 u811 031D                                                   u651 03E3  
                                                 u715 02F1                                                   u820 00F5  
                                                 u740 020A                                                   u900 019C  
                                                 u660 0643                                                   u741 0209  
                                                 u901 019B                                                   u661 0642  
                                                 u830 0132                                                   u750 021C  
                                                 u910 01B7                                                   u670 02AE  
                                                 u735 059F                                                   u911 01B6  
                                                 u671 02AD                                                   u840 014D  
                                                 u760 025E                                                   u920 01F7  
                                                 u680 02C9                                                   u841 014C  
                                                 u825 00F1                                                   u921 01F6  
                                                 u681 02C8                                                   u665 063F  
                                                 u850 0164                                                   u930 04BE  
                                                 u690 02DC                                                   u770 045C  
                                                 u851 0163                                                   u835 012E  
                                                 u755 0218                                                   u931 04BD  
                                                 u691 02DB                                                   u771 045B  
                                                 u940 04DE                                                   u860 03FD  
                                                 u780 0469                                                   u765 025A  
                                                 u941 04DD                                                   u861 03FC  
                                                 u781 0468                                                   u870 0423  
                                                 u790 0497                                                   u871 0422  
                                                 u791 0496                                                   u880 0434  
                                                 u960 0514                                                   u961 0513  
                                                 u890 0182                                                   u970 0521  
                                                 u891 0181                                                   u971 0520  
                                                 u955 04FF                                                   u795 0493  
                                                 u885 0430                                                   _abs 0635  
                                     _TMR2_Initialize 06FE                                          __CFG_BORV$LO 0000  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0047  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0070                      __size_of_MTOUCH_Sensor_SampleAll 0005  
                                                INDF0 0000                                                  FSR0H 0005  
                                                FSR1H 0007                                                  FSR0L 0004  
                                                FSR1L 0006                                    _MTOUCH_CVD_ScanA_0 05F4  
                                  _MTOUCH_CVD_ScanB_0 05D0                                                  l2000 0621  
                                                ?_abs 0046                                                  l2042 0578  
                                                l1520 07D6                                                  l1600 07A4  
                                                l1530 077E                                                  l1522 07D3  
                                                l1610 02A8                                                  l1602 0291  
                                                l1540 0695                                                  l1532 0780  
                                                l1524 07C7                                                  l1620 02C9  
                                                l1612 02AF                                                  l1604 029F  
                                                l1700 0794                                                  l1542 0697  
                                                l1534 068A                                                  l1710 031A  
                                                l1702 07D9                                                  l1526 0779  
                                                l1518 07B0                                                  l1550 0386  
                                                l1630 02E0                                                  l1622 02CF  
                                                l1614 02B0                                                  l1606 02A3  
                                                l1544 069F                                                  l1536 068C  
                                                l1712 031E                                                  l1720 0351  
                                                l1704 07DB                                                  l1528 077C  
                                                l1560 03A3                                                  l1552 038C  
                                                l1632 02EA                                                  l1624 02D4  
                                                l1616 02BC                                                  l1640 030D  
                                                l1608 02A7                                                  l1730 0156  
                                                l1546 06A1                                                  l1538 0690  
                                                l1722 0367                                                  l1714 031F  
                                                l1650 0206                                                  l1706 0713  
                                                l1570 03B4                                                  l1562 03A8  
                                                l1554 0392                                                  l1642 0317  
                                                l1634 02F5                                                  l1626 02DC  
                                                l1618 02C3                                                  l1732 0164  
                                                l1724 00E4                                                  l1716 0335  
                                                l1652 020A                                                  l1740 0402  
                                                l1708 0722                                                  l1820 0508  
                                                l1580 03D3                                                  l1572 03B9  
                                                l1564 03AA                                                  l1556 0398  
                                                l1548 0385                                                  l1636 0302  
                                                l1628 02DE                                                  l1644 079C  
                                                l1660 0735                                                  l1734 016D  
                                                l1726 013C                                                  l1718 034F  
                                                l1646 0580                                                  l1654 020B  
                                                l1742 0408                                                  l1750 0182  
                                                l1822 0514                                                  l1590 03EA  
                                                l1582 03D7                                                  l1574 03BC  
                                                l1566 03AB                                                  l1558 039B  
                                                l1638 0306                                                  l1670 045E  
                                                l1662 078C                                                  l1728 014D  
                                                l1592 06EB                                                  l1648 059A  
                                                l1656 024B                                                  l1744 0412  
                                                l1736 03EB                                                  l1760 01D3  
                                                l1752 019C                                                  l1824 0521  
                                                l1584 03DB                                                  l1576 03C5  
                                                l1568 03AD                                                  l1680 04A1  
                                                l1672 0460                                                  l1664 044F  
                                                l1594 06FD                                                  l1658 024D  
                                                l1770 04CB                                                  l1746 0423  
                                                l1738 03FD                                                  l1762 01F7  
                                                l1754 01A5                                                  l1818 04FC  
                                                l1586 03DF                                                  l1578 03D0  
                                                l1682 04A2                                                  l1674 046A  
                                                l1666 0454                                                  l1690 0654  
                                                l1850 06DB                                                  l1772 04DE  
                                                l1764 01FE                                                  l1756 01B7  
                                                l1748 0176                                                  l1588 03E4  
                                                l1596 0635                                                  l1676 0497  
                                                l1684 04A3                                                  l1668 045C  
                                                l1692 0658                                                  l1780 07BB  
                                                l1860 0786                                                  l1852 06DE  
                                                l1844 06D3                                                  l1774 04EB  
                                                l1766 04AC                                                  l1758 01C6  
                                                l1598 0643                                                  l1686 04A9  
                                                l1678 049B                                                  l1694 0659  
                                                l1790 056C                                                  l1782 0541  
                                                l1950 0774                                                  l1862 0787  
                                                l1854 06E3                                                  l1846 06D6  
                                                l1870 0702                                                  l1768 04BE  
                                                l1688 04AB                                                  l1696 0661  
                                                l1792 056D                                                  l1784 054E  
                                                l1952 0778                                                  l1776 0743  
                                                l1880 0764                                                  l1856 0782  
                                                l1848 06D9                                                  l1872 0703  
                                                l1864 07CF                                                  l1936 0723  
                                                l1954 06BD                                                  l1698 0663  
                                                l1786 0557                                                  l1946 076E  
                                                l1778 0749                                                  l1882 0767  
                                                l1858 0785                                                  l1874 0705  
                                                l1866 06FE                                                  l1938 072F  
                                                l1956 06D2                                                  l1788 0560  
                                                l1948 0771                                                  l1884 076A  
                                                l1876 070D                                                  l1868 0701  
                                                l1886 07C0                                                  l1878 0761  
                                                l1888 07CA                                                  l1992 0618  
                                                l1994 061B                                                  l1996 061C  
                                                l1998 061E                                                  TRISC 008E  
                                                u1140 062A                                                  u1141 0629  
                                                u1070 06D0                                                  u1071 06CE  
                                                u1080 06D1                                                  u1065 06C0  
                                                _LATA 010C                                                  _LATC 010E  
                                                i1l42 001A                                                  i1l43 0018  
                                                i1l44 0019                                                  i1l45 001B  
                                                i1l46 001B                            Button_State_Pressed@button 0053  
                                                _TMR2 001A                                                  _WPUA 020C  
                                                _WPUC 020E                     __size_of_Sensor_Acq_ExecutePacket 0068  
                           ?_Sensor_Acq_ExecutePacket 0070                                          __CFG_WRT$OFF 0000  
                                                abs@a 0046                                                  _main 0618  
                __size_of_MTOUCH_Button_InitializeAll 0001                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                  __size_of_MTOUCH_Sensor_InitializeAll 000F  
                                                btemp 007E                                   ?_MTOUCH_CVD_ScanA_0 0070  
                                 ?_MTOUCH_CVD_ScanB_0 0070                                                  start 001D  
                                   ___bmul@multiplier 0049                                         __CFG_MCLRE$ON 0000  
                                               ADCON0 009D  __end_ofSensor_Scanfrequency_Evaluation@frequency_hop 07BB  
        Sensor_Scanfrequency_Evaluation@frequency_hop 07B6                              ?_MTOUCH_Service_Mainloop 0070  
                    __size_of_MTOUCH_Button_isPressed 0018                         __size_of_Button_State_Pressed 004E  
                                               ??_abs 0048                           ?_Button_Baseline_Initialize 0070  
                       ??_MTOUCH_Sensor_RawSample_Get 004C                         Sensor_RawSample_Update@sensor 0046  
                                       __CFG_PLLEN$ON 0000                        __size_of_OSCILLATOR_Initialize 0008  
                       __end_of_OSCILLATOR_Initialize 078A     Sensor_Scanfrequency_Evaluation@best_packet_sample 0052  
                                               ?_main 0070                                                 _ADRES 009B  
                                       __CFG_WDTE$OFF 0000                                  ??_MTOUCH_CVD_ScanA_0 0070  
                                ??_MTOUCH_CVD_ScanB_0 0070                                                 _T2CON 001C  
                             __size_of_Button_Service 0045                                                 i1l120 07DF  
                                               i1l113 0760                                                 i1l114 0760  
                                               i1l350 05F3                                                 i1l270 0053  
                                               i1l271 00C2                                                 i1l263 0044  
                                               i1l272 00A3                                                 i1l264 00E1  
                                               i1l265 00C5                                                 i1l273 00BD  
                                               i1l274 00E1                                                 i1l266 0055  
                                               i1l347 0617                                                 i1l267 004B  
                                               i1l540 06BA                                                 i1l268 0066  
                                               i1l269 004F                                                 i1l537 06A5  
                                               i1l538 06AE                                                 i1l539 06B8  
                                               i1l951 0687                                                 i1l952 0687  
                                               i1l949 0686                                                 _TRISA 008C  
                                               _TRISC 008E                                                 i1_abs 066D  
                                               u98_20 067A                                                 u98_21 0679  
                                               u98_25 0676                                                 u99_20 06A9  
                                               u99_21 06A8                       __size_of_Button_DefaultCallback 0001  
                                    __end_of_TMR2_ISR 0761                       __size_of_Sensor_DefaultCallback 0001  
                             __size_of_Sensor_Service 003F                 __end_of_MTOUCH_Sensor_Scan_Initialize 0782  
              __size_of_MTOUCH_Sensor_Scan_Initialize 0009                         _MTOUCH_Sensor_Scan_Initialize 0779  
                                      _WDT_Initialize 07CF                               Sensor_setSampled@sensor 0046  
                              _Sensor_Acq_ExecuteScan 0038                      __size_of_Button_State_NotPressed 008E  
                                    __end_ofi1___bmul 06BB                                        __CFG_BOREN$OFF 0000  
                                               pclath 000A                                  _Sensor_Sampled_Reset 078A  
                                               status 0003                                                 wtemp0 007E  
                                     _TMR2_StartTimer 07D6                      __size_of_TMR2_LoadPeriodRegister 0005  
                           __size_of_Sensor_setActive 0008                                       __initialization 001E  
                                        __end_of_main 0635                               __end_of_TMR2_Initialize 0711  
                                      __CFG_LPBOR$OFF 0000                           ?_INTERRUPT_InterruptManager 0070  
                            _TMR2_SetInterruptHandler 07B0                                                ??_main 0063  
                             ??_Button_Reading_Update 004E                                                ?i1_abs 0070  
                            ?_Button_Deviation_Update 0070                                __end_of_WDT_Initialize 07D3  
                        Button_Baseline_Update@button 004C                                                _ADCON0 009D  
                                              _ADCON1 009E                                                _ADCON2 009F  
                __size_of_MTOUCH_Sensor_RawSample_Get 0015                                        __CFG_ZCDDIS$ON 0000  
                                              _ANSELA 018C                                                _ANSELC 018E  
                                              _BORCON 0116                                                u100_20 06B7  
                                              u100_21 06B6                                                u101_20 0042  
                                              u101_21 0041                                                u102_20 0049  
                                              u110_20 000F                                                u102_21 0048  
                                              u110_21 000E                                                u103_20 0078  
                                              u111_20 0014                                                u103_21 0077  
                                              u111_21 0013                                                i1l2044 005E  
                                              u104_20 007C                                                u104_21 007B  
                                              _ODCONA 028C                                                _ODCONC 028E  
                                              i1l1800 05F9                                                u105_20 075A  
                                              u105_21 0759                                                i1l1802 060C  
                                              i1l1810 05D5                                                i1l1804 060D  
                                              i1l1812 05E8                                                i1l1900 004B  
                                              i1l1806 0612                                                i1l1814 05E9  
                                              i1l1830 06A3                                                i1l1910 0078  
                                              i1l1902 004F                                                i1l1816 05EE  
                                              i1l1808 05D0                                                i1l1840 06B8  
                                              i1l1832 06A5                                                i1l1920 00B8  
                                              i1l1912 007C                                                i1l1904 0054  
                                              i1l1842 06BA                                                i1l1834 06A9  
                                              i1l1826 066D                                                i1l1930 00DF  
                                              i1l1922 00BD                                                i1l1914 0089  
                                              i1l1906 0055                                                i1l1836 06AE  
                                              i1l1828 067A                                                i1l1916 009E  
                                              i1l1924 00C2                                                i1l1908 0066  
                                              i1l1940 0752                                                i1l1838 06B0  
                                              i1l1918 00A3                                                i1l1926 00C5  
                                              i1l1942 0754                                                i1l1928 00CA  
                                              i1l1944 075A                                                i1l1960 000A  
                                              i1l1890 0038                                                i1l1962 000F  
                                              i1l1892 003D                                                i1l1964 0014  
                                              i1l1798 05F4                                                i1l1894 0043  
                                              i1l1958 0006                                                u115_27 05D6  
                                              i1l1896 0044                                                i1l1898 004A  
                                              u116_27 05FA                                                u109_20 000A  
                                              u109_21 0009                                 ?_Sensor_Sampled_Reset 0070  
                                              _OSCCON 0099                                                _WDTCON 0097  
                                              i1abs@a 0070                                _Button_DefaultCallback 07DE  
                     __end_of_MTOUCH_Service_Mainloop 0779                                        __CFG_PWRTE$OFF 0000  
                              _Sensor_DefaultCallback 07DD                                         _packet_sample 0065  
                                              ___bmul 0688                          Sensor_DefaultCallback@sensor 0046  
                                      __CFG_STVREN$ON 0000                      __end_of_MTOUCH_Button_ServiceAll 07CF  
                             _MTOUCH_Sensor_SampleAll 07C0                          Button_DefaultCallback@button 0046  
                                     ?_WDT_Initialize 0070                              ?_Sensor_RawSample_Update 0070  
                          __end_of_Sensor_Acquisition 04AC                               ?_Button_Baseline_Update 0070  
                             __end_of_TMR2_StartTimer 07D9              TMR2_SetInterruptHandler@InterruptHandler 0046  
                     MTOUCH_Sensor_RawSample_Get@name 004D                                     _SYSTEM_Initialize 0723  
                             __end_of__initialization 0035                   __size_of_Button_Baseline_Initialize 002C  
                      ?_MTOUCH_Sensor_Scan_Initialize 0070                 Sensor_Scanfrequency_Evaluation@sensor 0054  
                                  ?_SYSTEM_Initialize 0070                                   _Button_StateMachine 0020  
                                 ___bmul@multiplicand 0046                                         __end_ofi1_abs 0688  
                                      __pcstackCOMMON 0070                               _MTOUCH_Button_isPressed 06BB  
                                        __pidataBANK0 05AA                                   ??_SYSTEM_Initialize 004C  
                                           ?_TMR2_ISR 0070                                      ?_TMR2_Initialize 0070  
                     __end_of_Button_Deviation_Update 0176                                             ?i1___bmul 0070  
                            Sensor_setInactive@sensor 0046                                        _Button_Service 04FA  
                    __end_of_Sensor_Acq_ExecutePacket 03EB                            ?_Button_State_Initializing 0053  
                                Button_Service@button 005B                                        _OPTION_REGbits 0095  
                                             ??i1_abs 0072                        __end_of_Button_Baseline_Update 028F  
                                Sensor_Service@sensor 0062                                        _Sensor_Service 053F  
                                    i1___bmul@product 0073                               _Button_State_NotPressed 0176  
                       __size_of_MTOUCH_Sensor_Enable 0010                                    _Sensor_setInactive 079A  
                           __end_of_SYSTEM_Initialize 0733                      MTOUCH_Sensor_isCalibrated@sensor 0070  
                              ??_Sensor_Sampled_Reset 0046                                            __pbssBANK0 0063  
                             _TMR2_LoadPeriodRegister 07C5                                   ?_Sensor_setInactive 0070  
                                    _Sensor_setActive 07A2                                    Sensor_Service@name 0061  
                                          __pmaintext 0618                                               ?___bmul 0046  
                                     __CFG_PPS1WAY$ON 0000                                            ??_TMR2_ISR 0078  
                      MTOUCH_Sensor_wasSampled@sensor 004B                                            __pintentry 0004  
                              __end_of_Button_Service 053F                   __end_of_MTOUCH_Button_InitializeAll 07DD  
                         _MTOUCH_Button_InitializeAll 07DC                   __end_of_MTOUCH_Sensor_InitializeAll 0752  
                         _MTOUCH_Sensor_InitializeAll 0743                             ??_MTOUCH_Sensor_SampleAll 0063  
                                          ??i1___bmul 0071                       __end_of_Sensor_RawSample_Update 066D  
                                ??_Sensor_setInactive 0046                     __size_of_MTOUCH_Sensor_wasSampled 0012  
                           ?_MTOUCH_Sensor_wasSampled 0070                     __end_of_Button_State_Initializing 044D  
                              __end_of_Sensor_Service 057E                              _MTOUCH_Button_ServiceAll 07CA  
                             ?_Sensor_Acq_ExecuteScan 0070                                               _OSCSTAT 009A  
                                             _OSCTUNE 0098                      __size_of_MTOUCH_Service_Mainloop 000B  
                        __end_of_Button_State_Pressed 04FA                               __size_of_TMR2_StopTimer 0003  
                                    ?_TMR2_StartTimer 0070                      Button_Baseline_Initialize@button 0052  
                           ??_MTOUCH_Button_isPressed 0046                                        _packet_counter 007C  
                          ??_TMR2_SetInterruptHandler 0048                               Sensor_Acquisition@retry 005C  
                                     __size_of___bmul 001A                                       ?_Button_Service 0070  
                                             __ptext1 0723                                               __ptext2 07CF  
                                             __ptext3 06FE                                               __ptext4 06D3  
                                             __ptext5 0782                                               __ptext6 0761  
                                             __ptext7 0743                                               __ptext8 0733  
                                             __ptext9 07DC                           Button_Reading_Update@button 0050  
                         __size_of_MTOUCH_CVD_ScanA_0 0024                           __size_of_MTOUCH_CVD_ScanB_0 0024  
                      __end_of_Sensor_Acq_ExecuteScan 00E2                                 _OSCILLATOR_Initialize 0782  
                                           _T2CONbits 001C                                          __size_of_abs 001D  
                           ??_Button_State_NotPressed 0054                                       ?_Sensor_Service 0070  
                            ??_PIN_MANAGER_Initialize 0046                                   i1___bmul@multiplier 0072  
                      __size_of_Button_Reading_Update 006B                         __end_of_Button_Reading_Update 0383  
                            _Sensor_Acq_ExecutePacket 0383                                      _callback_sampled 002A  
                           ??_TMR2_LoadPeriodRegister 0046                            __size_of_SYSTEM_Initialize 0010  
                                    _callback_pressed 0028                                  end_of_initialization 0035  
                             ?_Button_DefaultCallback 0046                                               init_ram 07AA  
                                             initloop 07AB                               ?_Sensor_DefaultCallback 0046  
                    __size_of_Button_Deviation_Update 0094                          ??_MTOUCH_Sensor_isCalibrated 0046  
                 __end_of_MTOUCH_Sensor_RawSample_Get 06FE                           _MTOUCH_Sensor_RawSample_Get 06E9  
                                    ??_WDT_Initialize 0046                                Sensor_setActive@sensor 0046  
                                    __CFG_FOSC$INTOSC 0000     Sensor_Scanfrequency_Evaluation@best_sample_period 0055  
                       Button_Deviation_Update@button 0050                                             _TRISCbits 008E  
                          MTOUCH_Sensor_Enable@sensor 004B                                   _callback_notPressed 0026  
                 __size_of_MTOUCH_Sensor_isCalibrated 0003                        __end_of_Button_DefaultCallback 07DF  
     Sensor_Scanfrequency_Evaluation@packet_noise_Max 0050                                    _sensor_globalFlags 0067  
                        Sensor_Acq_ExecuteScan@last_a 007A                          Sensor_Acq_ExecuteScan@last_b 0078  
                      __end_of_Sensor_DefaultCallback 07DE                          Sensor_Acq_ExecuteScan@result 0076  
                    __size_of_Sensor_RawSample_Update 001B                                    _Sensor_Acquisition 044D  
                __end_of_TMR2_DefaultInterruptHandler 07E0                 __size_of_TMR2_DefaultInterruptHandler 0001  
                        _TMR2_DefaultInterruptHandler 07DF                                  _Button_State_Pressed 04AC  
                                      __end_of___bmul 06A2                                   ?_Sensor_Acquisition 0070  
                     ??_MTOUCH_Sensor_Scan_Initialize 0046                                     __size_of_TMR2_ISR 000F  
                       Sensor_Acq_ExecutePacket@error 004C                                ?_OSCILLATOR_Initialize 0070  
                            __end_of_Sensor_setActive 07AA                      TMR2_LoadPeriodRegister@periodVal 0046  
                         ??_Button_State_Initializing 0054                                     __size_ofi1___bmul 0019  
                                 start_initialization 001E                               _MTOUCH_Service_Mainloop 076E  
                     __size_of_PIN_MANAGER_Initialize 0016                                           __end_of_abs 0652  
                                      _TMR2_StopTimer 07D3                                  ??_Sensor_Acquisition 0058  
                     Button_State_Initializing@button 0053                      __end_of_MTOUCH_Sensor_wasSampled 0723  
                        __end_of_MTOUCH_Sensor_Enable 0743                                          _packet_noise 0063  
                                            ??___bmul 0047                                 ?_Button_State_Pressed 0053  
                          ??_MTOUCH_Button_ServiceAll 005C                                           __pdataBANK0 0020  
                        ??_Button_Baseline_Initialize 004E                                         _sample_period 002C  
                       ?_TMR2_DefaultInterruptHandler 0070                            Sensor_Sampled_Reset@sensor 0046  
                              __end_of_TMR2_StopTimer 07D6                                           __pbssCOMMON 0078  
                                           ___latbits 0000                                         __pcstackBANK0 0046  
                            __size_of_TMR2_Initialize 0013                                   Sensor_Service@error 0060  
                       __size_of_Sensor_Sampled_Reset 0008                               _Button_Deviation_Update 00E2  
                           _Button_State_Initializing 03EB                    __end_of_MTOUCH_Sensor_isCalibrated 07DC  
                          _MTOUCH_Sensor_isCalibrated 07D9                                             __pnvBANK0 0068  
                                   _Sensor_setSampled 0792                                _PIN_MANAGER_Initialize 06D3  
                                    ??_Button_Service 0058                                    ?_Sensor_setSampled 0070  
                                    ??_Sensor_Service 005E                            ??_Sensor_Acq_ExecutePacket 0048  
                        ??_INTERRUPT_InterruptManager 0078                                   ??_Sensor_setSampled 0046  
                           ??_MTOUCH_Service_Mainloop 0063                           __size_of_Sensor_setInactive 0008  
                                     ?_TMR2_StopTimer 0070                                        __size_ofi1_abs 001B  
                      Sensor_Acq_ExecutePacket@sensor 004D                             __end_of_Sensor_setSampled 079A  
                                            _LATCbits 010E                                    _currentScannSensor 007D  
                             _Sensor_RawSample_Update 0652                                              _PIE1bits 0091  
                            __size_of_TMR2_StartTimer 0003                                 i1___bmul@multiplicand 0070  
                 __size_of_INTERRUPT_InterruptManager 0019                                              _PIR1bits 0011  
                              ??_Button_State_Pressed 0054                __end_of_MTOUCH_Sensor_Sampled_ResetAll 07C0  
             __size_of_MTOUCH_Sensor_Sampled_ResetAll 0005                        _MTOUCH_Sensor_Sampled_ResetAll 07BB  
                            ?_MTOUCH_Sensor_SampleAll 0070                                              _TMR2_ISR 0752  
                            _MTOUCH_Sensor_wasSampled 0711                            __end_of_MTOUCH_CVD_ScanA_0 0618  
                          __end_of_MTOUCH_CVD_ScanB_0 05F4                              ??_Button_Baseline_Update 0046  
                                            i1___bmul 06A2                                              _WPUCbits 020E  
                      ??_TMR2_DefaultInterruptHandler 0070                     __size_of_TMR2_SetInterruptHandler 0006  
                           ?_TMR2_SetInterruptHandler 0046                                  _MTOUCH_Sensor_Enable 0733  
                           ??_Button_Deviation_Update 0046                                 _Button_Reading_Update 0318  
                            ?_MTOUCH_Button_isPressed 0070                                     ??_TMR2_Initialize 0048  
                                   _MTOUCH_Initialize 0761                                    ?_MTOUCH_Initialize 0070  
                             ??_OSCILLATOR_Initialize 0046                    __end_of_Button_Baseline_Initialize 05AA  
                          _Button_Baseline_Initialize 057E                              Sensor_Acquisition@sensor 005D  
                                 ??_MTOUCH_Initialize 004C                              ?_Button_State_NotPressed 0053  
                                          _ANSELCbits 018E                                    Button_Service@name 005A  
                                   ?_Sensor_setActive 0070                              ?_TMR2_LoadPeriodRegister 0070  
                Sensor_Scanfrequency_Evaluation@retry 0056                                    ??_Sensor_setActive 0046  
                               ?_MTOUCH_Sensor_Enable 0070                                              __ptext10 076E  
                                            __ptext11 07BB                                              __ptext20 079A  
                                            __ptext12 078A                                              __ptext21 07A2  
                                            __ptext13 07C0                                              __ptext30 04FA  
                                            __ptext22 028F                                              __ptext14 053F  
                                            __ptext31 0711                                              __ptext23 0383  
                                            __ptext15 0792                                              __ptext40 06E9  
                                            __ptext32 07D9                                              __ptext24 07D3  
                                            __ptext16 0652                                              __ptext41 0688  
                                            __ptext33 0176                                              __ptext25 07D6  
                                            __ptext17 07DD                                              __ptext50 05D0  
                                            __ptext42 00E2                                              __ptext34 03EB  
                                            __ptext26 07B0                                              __ptext18 044D  
                                            __ptext51 05F4                                              __ptext43 06BB  
                                            __ptext35 04AC                                              __ptext27 07C5  
                                            __ptext19 0635                                              __ptext36 07DE  
                                            __ptext28 0779                                              __ptext45 0752  
                                            __ptext37 0204                                              __ptext29 07CA  
                                            __ptext46 0038                                              __ptext38 057E  
                                            __ptext47 07DF                                              __ptext39 0318  
                                            __ptext48 066D                                              __ptext49 06A2  
                           __end_of_MTOUCH_Initialize 076E                             ??_Sensor_RawSample_Update 0046  
                 Sensor_Acq_ExecutePacket@ADCON0_temp 0049                   Sensor_Acq_ExecutePacket@ADCON1_temp 004A  
                 Sensor_Acq_ExecutePacket@ADCON2_temp 004B                            __size_of_Sensor_setSampled 0008  
                                       __size_of_main 001D                       __end_of_MTOUCH_Sensor_SampleAll 07C5  
                    Sensor_Scanfrequency_Evaluation@i 0057                                              int$flags 007E  
                            ??_Sensor_Acq_ExecuteScan 0074                    __size_of_Button_State_Initializing 0062  
                                   ??_TMR2_StartTimer 0046                    __end_of_INTERRUPT_InterruptManager 001D  
                          _INTERRUPT_InterruptManager 0004                       __size_of_Button_Baseline_Update 008B  
                        ?_MTOUCH_Button_InitializeAll 0070                          ?_MTOUCH_Sensor_InitializeAll 0070  
                                       _mtouch_button 002D                                            _INTCONbits 000B  
                                       _mtouch_sensor 003D                       __end_of_MTOUCH_Button_isPressed 06D3  
                              ?_Button_Reading_Update 0070                      Button_Deviation_Update@deviation 0051  
                             __size_of_WDT_Initialize 0004                                              intlevel1 0000  
                         __size_of_Sensor_Acquisition 005F               __end_of_Sensor_Scanfrequency_Evaluation 0318  
            __size_of_Sensor_Scanfrequency_Evaluation 0089                     ??_Sensor_Scanfrequency_Evaluation 004E  
                    ?_Sensor_Scanfrequency_Evaluation 0070                       _Sensor_Scanfrequency_Evaluation 028F  
                             ?_PIN_MANAGER_Initialize 0070                                     __CFG_CLKOUTEN$OFF 0000  
                         ?_MTOUCH_Sensor_isCalibrated 0070                       __end_of_Button_State_NotPressed 0204  
                        __end_of_Sensor_Sampled_Reset 0792                                      ??_TMR2_StopTimer 0046  
                     __end_of_TMR2_LoadPeriodRegister 07CA                                         __pstringtext1 07B6  
                       ??_MTOUCH_Button_InitializeAll 0046                              ??_Button_DefaultCallback 0047  
                       ??_MTOUCH_Sensor_InitializeAll 004C                                ??_MTOUCH_Sensor_Enable 004A  
                            ??_Sensor_DefaultCallback 0047                     __size_of_MTOUCH_Button_ServiceAll 0005  
                           ?_MTOUCH_Button_ServiceAll 0070                         Button_State_NotPressed@button 0053  
                          __size_of_MTOUCH_Initialize 000D                        __end_of_PIN_MANAGER_Initialize 06E9  
                              _Button_Baseline_Update 0204                           MTOUCH_Button_isPressed@name 0047  
                               _TMR2_InterruptHandler 0068                            ??_MTOUCH_Sensor_wasSampled 004A  
