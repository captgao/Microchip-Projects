

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jul 25 14:16:51 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1703 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   120                           PORTC equ 0Eh ;# 
   121  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   122                           PIR1 equ 011h ;# 
   123  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   124                           PIR2 equ 012h ;# 
   125  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   126                           PIR3 equ 013h ;# 
   127  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   128                           TMR0 equ 015h ;# 
   129  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   130                           TMR1 equ 016h ;# 
   131  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   132                           TMR1L equ 016h ;# 
   133  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   134                           TMR1H equ 017h ;# 
   135  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   136                           T1CON equ 018h ;# 
   137  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   138                           T1GCON equ 019h ;# 
   139  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   140                           TMR2 equ 01Ah ;# 
   141  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   142                           PR2 equ 01Bh ;# 
   143  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   144                           T2CON equ 01Ch ;# 
   145  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   148                           TRISC equ 08Eh ;# 
   149  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   150                           PIE1 equ 091h ;# 
   151  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   152                           PIE2 equ 092h ;# 
   153  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   154                           PIE3 equ 093h ;# 
   155  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   156                           OPTION_REG equ 095h ;# 
   157  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   158                           PCON equ 096h ;# 
   159  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   160                           WDTCON equ 097h ;# 
   161  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   162                           OSCTUNE equ 098h ;# 
   163  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   164                           OSCCON equ 099h ;# 
   165  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   166                           OSCSTAT equ 09Ah ;# 
   167  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   168                           ADRES equ 09Bh ;# 
   169  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   170                           ADRESL equ 09Bh ;# 
   171  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   172                           ADRESH equ 09Ch ;# 
   173  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   174                           ADCON0 equ 09Dh ;# 
   175  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   176                           ADCON1 equ 09Eh ;# 
   177  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   178                           ADCON2 equ 09Fh ;# 
   179  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   182                           LATC equ 010Eh ;# 
   183  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   184                           BORCON equ 0116h ;# 
   185  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   186                           FVRCON equ 0117h ;# 
   187  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   188                           ZCD1CON equ 011Ch ;# 
   189  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   190                           ANSELA equ 018Ch ;# 
   191  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   192                           ANSELC equ 018Eh ;# 
   193  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   194                           PMADR equ 0191h ;# 
   195  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   196                           PMADRL equ 0191h ;# 
   197  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   198                           PMADRH equ 0192h ;# 
   199  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   200                           PMDAT equ 0193h ;# 
   201  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   202                           PMDATL equ 0193h ;# 
   203  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   204                           PMDATH equ 0194h ;# 
   205  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   206                           PMCON1 equ 0195h ;# 
   207  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   208                           PMCON2 equ 0196h ;# 
   209  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   210                           VREGCON equ 0197h ;# 
   211  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   212                           WPUA equ 020Ch ;# 
   213  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   214                           WPUC equ 020Eh ;# 
   215  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   216                           SSP1BUF equ 0211h ;# 
   217  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   218                           SSPBUF equ 0211h ;# 
   219  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   220                           SSP1ADD equ 0212h ;# 
   221  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   222                           SSPADD equ 0212h ;# 
   223  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   224                           SSP1MSK equ 0213h ;# 
   225  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   226                           SSPMSK equ 0213h ;# 
   227  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   228                           SSP1STAT equ 0214h ;# 
   229  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   230                           SSPSTAT equ 0214h ;# 
   231  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   232                           SSP1CON1 equ 0215h ;# 
   233  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   234                           SSPCON equ 0215h ;# 
   235  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   236                           SSPCON1 equ 0215h ;# 
   237  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   238                           SSP1CON equ 0215h ;# 
   239  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   240                           SSP1CON2 equ 0216h ;# 
   241  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   242                           SSPCON2 equ 0216h ;# 
   243  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   244                           SSP1CON3 equ 0217h ;# 
   245  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   246                           SSPCON3 equ 0217h ;# 
   247  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   248                           ODCONA equ 028Ch ;# 
   249  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   250                           ODCONC equ 028Eh ;# 
   251  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   252                           CCPR1 equ 0291h ;# 
   253  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   254                           CCPR1L equ 0291h ;# 
   255  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   256                           CCPR1H equ 0292h ;# 
   257  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   258                           CCP1CON equ 0293h ;# 
   259  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   260                           ECCP1CON equ 0293h ;# 
   261  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   262                           CCPR2 equ 0298h ;# 
   263  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   264                           CCPR2L equ 0298h ;# 
   265  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   266                           CCPR2H equ 0299h ;# 
   267  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   268                           CCP2CON equ 029Ah ;# 
   269  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   270                           ECCP2CON equ 029Ah ;# 
   271  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   272                           SLRCONA equ 030Ch ;# 
   273  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   274                           SLRCONC equ 030Eh ;# 
   275  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   276                           INLVLA equ 038Ch ;# 
   277  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   278                           INLVLC equ 038Eh ;# 
   279  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   280                           IOCAP equ 0391h ;# 
   281  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   282                           IOCAN equ 0392h ;# 
   283  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   284                           IOCAF equ 0393h ;# 
   285  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   286                           IOCCP equ 0397h ;# 
   287  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   288                           IOCCN equ 0398h ;# 
   289  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   290                           IOCCF equ 0399h ;# 
   291  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   292                           OPA1CON equ 0511h ;# 
   293  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   294                           OPA2CON equ 0515h ;# 
   295  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   296                           PPSLOCK equ 0E0Fh ;# 
   297  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   298                           INTPPS equ 0E10h ;# 
   299  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   300                           T0CKIPPS equ 0E11h ;# 
   301  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   302                           T1CKIPPS equ 0E12h ;# 
   303  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   304                           T1GPPS equ 0E13h ;# 
   305  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   306                           CCP1PPS equ 0E14h ;# 
   307  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   308                           CCP2PPS equ 0E15h ;# 
   309  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   310                           SSPCLKPPS equ 0E20h ;# 
   311  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   312                           SSPDATPPS equ 0E21h ;# 
   313  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   314                           SSPSSPPS equ 0E22h ;# 
   315  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   316                           RA0PPS equ 0E90h ;# 
   317  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   318                           RA1PPS equ 0E91h ;# 
   319  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   320                           RA2PPS equ 0E92h ;# 
   321  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   322                           RA4PPS equ 0E94h ;# 
   323  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   324                           RA5PPS equ 0E95h ;# 
   325  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   326                           RC0PPS equ 0EA0h ;# 
   327  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   328                           RC1PPS equ 0EA1h ;# 
   329  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   330                           RC2PPS equ 0EA2h ;# 
   331  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   332                           RC3PPS equ 0EA3h ;# 
   333  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   334                           RC4PPS equ 0EA4h ;# 
   335  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   336                           RC5PPS equ 0EA5h ;# 
   337  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   338                           ICDBK0H equ 0F9Eh ;# 
   339  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   340                           STATUS_SHAD equ 0FE4h ;# 
   341  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   342                           WREG_SHAD equ 0FE5h ;# 
   343  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   344                           BSR_SHAD equ 0FE6h ;# 
   345  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   346                           PCLATH_SHAD equ 0FE7h ;# 
   347  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   348                           FSR0L_SHAD equ 0FE8h ;# 
   349  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   350                           FSR0H_SHAD equ 0FE9h ;# 
   351  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   352                           FSR1L_SHAD equ 0FEAh ;# 
   353  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   354                           FSR1H_SHAD equ 0FEBh ;# 
   355  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   356                           STKPTR equ 0FEDh ;# 
   357  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   358                           TOSL equ 0FEEh ;# 
   359  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   360                           TOSH equ 0FEFh ;# 
   361  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   362                           INDF0 equ 00h ;# 
   363  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   364                           INDF1 equ 01h ;# 
   365  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   366                           PCL equ 02h ;# 
   367  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   368                           STATUS equ 03h ;# 
   369  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   370                           FSR0L equ 04h ;# 
   371  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   372                           FSR0H equ 05h ;# 
   373  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   374                           FSR1L equ 06h ;# 
   375  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   376                           FSR1H equ 07h ;# 
   377  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   378                           BSR equ 08h ;# 
   379  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   380                           WREG equ 09h ;# 
   381  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   382                           PCLATH equ 0Ah ;# 
   383  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   384                           INTCON equ 0Bh ;# 
   385  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   386                           PORTA equ 0Ch ;# 
   387  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   388                           PORTC equ 0Eh ;# 
   389  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   390                           PIR1 equ 011h ;# 
   391  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   392                           PIR2 equ 012h ;# 
   393  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   394                           PIR3 equ 013h ;# 
   395  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   396                           TMR0 equ 015h ;# 
   397  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   398                           TMR1 equ 016h ;# 
   399  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   400                           TMR1L equ 016h ;# 
   401  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   402                           TMR1H equ 017h ;# 
   403  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   404                           T1CON equ 018h ;# 
   405  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   406                           T1GCON equ 019h ;# 
   407  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   408                           TMR2 equ 01Ah ;# 
   409  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   410                           PR2 equ 01Bh ;# 
   411  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   412                           T2CON equ 01Ch ;# 
   413  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   414                           TRISA equ 08Ch ;# 
   415  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   416                           TRISC equ 08Eh ;# 
   417  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   418                           PIE1 equ 091h ;# 
   419  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   420                           PIE2 equ 092h ;# 
   421  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   422                           PIE3 equ 093h ;# 
   423  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   424                           OPTION_REG equ 095h ;# 
   425  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   426                           PCON equ 096h ;# 
   427  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   428                           WDTCON equ 097h ;# 
   429  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   430                           OSCTUNE equ 098h ;# 
   431  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   432                           OSCCON equ 099h ;# 
   433  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   434                           OSCSTAT equ 09Ah ;# 
   435  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   436                           ADRES equ 09Bh ;# 
   437  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   438                           ADRESL equ 09Bh ;# 
   439  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   440                           ADRESH equ 09Ch ;# 
   441  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   442                           ADCON0 equ 09Dh ;# 
   443  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   444                           ADCON1 equ 09Eh ;# 
   445  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   446                           ADCON2 equ 09Fh ;# 
   447  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   448                           LATA equ 010Ch ;# 
   449  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   450                           LATC equ 010Eh ;# 
   451  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   452                           BORCON equ 0116h ;# 
   453  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   454                           FVRCON equ 0117h ;# 
   455  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   456                           ZCD1CON equ 011Ch ;# 
   457  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   458                           ANSELA equ 018Ch ;# 
   459  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   460                           ANSELC equ 018Eh ;# 
   461  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   462                           PMADR equ 0191h ;# 
   463  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   464                           PMADRL equ 0191h ;# 
   465  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   466                           PMADRH equ 0192h ;# 
   467  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   468                           PMDAT equ 0193h ;# 
   469  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   470                           PMDATL equ 0193h ;# 
   471  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   472                           PMDATH equ 0194h ;# 
   473  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   474                           PMCON1 equ 0195h ;# 
   475  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   476                           PMCON2 equ 0196h ;# 
   477  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   478                           VREGCON equ 0197h ;# 
   479  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   480                           WPUA equ 020Ch ;# 
   481  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   482                           WPUC equ 020Eh ;# 
   483  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   484                           SSP1BUF equ 0211h ;# 
   485  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   486                           SSPBUF equ 0211h ;# 
   487  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   488                           SSP1ADD equ 0212h ;# 
   489  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   490                           SSPADD equ 0212h ;# 
   491  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   492                           SSP1MSK equ 0213h ;# 
   493  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   494                           SSPMSK equ 0213h ;# 
   495  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   496                           SSP1STAT equ 0214h ;# 
   497  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   498                           SSPSTAT equ 0214h ;# 
   499  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   500                           SSP1CON1 equ 0215h ;# 
   501  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   502                           SSPCON equ 0215h ;# 
   503  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   504                           SSPCON1 equ 0215h ;# 
   505  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   506                           SSP1CON equ 0215h ;# 
   507  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   508                           SSP1CON2 equ 0216h ;# 
   509  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   510                           SSPCON2 equ 0216h ;# 
   511  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   512                           SSP1CON3 equ 0217h ;# 
   513  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   514                           SSPCON3 equ 0217h ;# 
   515  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   516                           ODCONA equ 028Ch ;# 
   517  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   518                           ODCONC equ 028Eh ;# 
   519  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   520                           CCPR1 equ 0291h ;# 
   521  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   522                           CCPR1L equ 0291h ;# 
   523  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   524                           CCPR1H equ 0292h ;# 
   525  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   526                           CCP1CON equ 0293h ;# 
   527  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   528                           ECCP1CON equ 0293h ;# 
   529  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   530                           CCPR2 equ 0298h ;# 
   531  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   532                           CCPR2L equ 0298h ;# 
   533  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   534                           CCPR2H equ 0299h ;# 
   535  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   536                           CCP2CON equ 029Ah ;# 
   537  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   538                           ECCP2CON equ 029Ah ;# 
   539  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   540                           SLRCONA equ 030Ch ;# 
   541  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   542                           SLRCONC equ 030Eh ;# 
   543  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   544                           INLVLA equ 038Ch ;# 
   545  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   546                           INLVLC equ 038Eh ;# 
   547  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   548                           IOCAP equ 0391h ;# 
   549  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   550                           IOCAN equ 0392h ;# 
   551  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   552                           IOCAF equ 0393h ;# 
   553  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   554                           IOCCP equ 0397h ;# 
   555  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   556                           IOCCN equ 0398h ;# 
   557  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   558                           IOCCF equ 0399h ;# 
   559  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   560                           OPA1CON equ 0511h ;# 
   561  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   562                           OPA2CON equ 0515h ;# 
   563  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   564                           PPSLOCK equ 0E0Fh ;# 
   565  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   566                           INTPPS equ 0E10h ;# 
   567  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   568                           T0CKIPPS equ 0E11h ;# 
   569  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   570                           T1CKIPPS equ 0E12h ;# 
   571  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   572                           T1GPPS equ 0E13h ;# 
   573  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   574                           CCP1PPS equ 0E14h ;# 
   575  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   576                           CCP2PPS equ 0E15h ;# 
   577  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   578                           SSPCLKPPS equ 0E20h ;# 
   579  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   580                           SSPDATPPS equ 0E21h ;# 
   581  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   582                           SSPSSPPS equ 0E22h ;# 
   583  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   584                           RA0PPS equ 0E90h ;# 
   585  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   586                           RA1PPS equ 0E91h ;# 
   587  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   588                           RA2PPS equ 0E92h ;# 
   589  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   590                           RA4PPS equ 0E94h ;# 
   591  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   592                           RA5PPS equ 0E95h ;# 
   593  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   594                           RC0PPS equ 0EA0h ;# 
   595  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   596                           RC1PPS equ 0EA1h ;# 
   597  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   598                           RC2PPS equ 0EA2h ;# 
   599  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   600                           RC3PPS equ 0EA3h ;# 
   601  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   602                           RC4PPS equ 0EA4h ;# 
   603  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   604                           RC5PPS equ 0EA5h ;# 
   605  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   606                           ICDBK0H equ 0F9Eh ;# 
   607  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   608                           STATUS_SHAD equ 0FE4h ;# 
   609  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   610                           WREG_SHAD equ 0FE5h ;# 
   611  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   612                           BSR_SHAD equ 0FE6h ;# 
   613  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   614                           PCLATH_SHAD equ 0FE7h ;# 
   615  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   616                           FSR0L_SHAD equ 0FE8h ;# 
   617  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   618                           FSR0H_SHAD equ 0FE9h ;# 
   619  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   620                           FSR1L_SHAD equ 0FEAh ;# 
   621  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   622                           FSR1H_SHAD equ 0FEBh ;# 
   623  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   624                           STKPTR equ 0FEDh ;# 
   625  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   626                           TOSL equ 0FEEh ;# 
   627  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   628                           TOSH equ 0FEFh ;# 
   629  0FEF                     	FNCALL	_main,_getadc
   630                           	FNCALL	_main,_wait
   631                           	FNCALL	_main,_wdt_init
   632                           	FNCALL	_wait,___wmul
   633                           	FNROOT	_main
   634                           	FNCALL	intlevel1,_isr
   635                           	global	intlevel1
   636                           	FNROOT	intlevel1
   637                           	global	_timebase
   638                           	global	_waitOK
   639                           	global	_ADCOK
   640                           	global	isr@n
   641                           	global	_times
   642                           	global	_vadc
   643                           psect	nvBANK0,class=BANK0,space=1,noexec
   644                           global __pnvBANK0
   645                           __pnvBANK0:
   646  0024                     _vadc:
   647  0024                            ds      2
   648  0024                     
   649                           	global	_TMR0
   650                           _TMR0	set	0x15
   651  0015                     	global	_ADIF
   652                           _ADIF	set	0x8E
   653  008E                     	global	_T0IE
   654                           _T0IE	set	0x5D
   655  005D                     	global	_T0IF
   656                           _T0IF	set	0x5A
   657  005A                     	global	_RC3
   658                           _RC3	set	0x73
   659  0073                     	global	_GIE
   660                           _GIE	set	0x5F
   661  005F                     	global	_ADRESL
   662                           _ADRESL	set	0x9B
   663  009B                     	global	_ADRESH
   664                           _ADRESH	set	0x9C
   665  009C                     	global	_TRISC
   666                           _TRISC	set	0x8E
   667  008E                     	global	_TRISA
   668                           _TRISA	set	0x8C
   669  008C                     	global	_ADCON0bits
   670                           _ADCON0bits	set	0x9D
   671  009D                     	global	_ADCON1bits
   672                           _ADCON1bits	set	0x9E
   673  009E                     	global	_PSA
   674                           _PSA	set	0x4AB
   675  04AB                     	global	_T0CS
   676                           _T0CS	set	0x4AD
   677  04AD                     	global	_ADGO
   678                           _ADGO	set	0x4E9
   679  04E9                     	global	_TRISC3
   680                           _TRISC3	set	0x473
   681  0473                     	global	_TRISA2
   682                           _TRISA2	set	0x462
   683  0462                     	global	_ADPREF1
   684                           _ADPREF1	set	0x4F1
   685  04F1                     	global	_ADPREF0
   686                           _ADPREF0	set	0x4F0
   687  04F0                     	global	_ADFM
   688                           _ADFM	set	0x4F7
   689  04F7                     	global	_ADON
   690                           _ADON	set	0x4E8
   691  04E8                     	global	_LATC
   692                           _LATC	set	0x10E
   693  010E                     	global	_LATA
   694                           _LATA	set	0x10C
   695  010C                     	global	_LATC1
   696                           _LATC1	set	0x871
   697  0871                     	global	_LATA4
   698                           _LATA4	set	0x864
   699  0864                     	global	_LATC4
   700                           _LATC4	set	0x874
   701  0874                     	global	_LATC2
   702                           _LATC2	set	0x872
   703  0872                     	global	_LATC0
   704                           _LATC0	set	0x870
   705  0870                     	global	_LATA5
   706                           _LATA5	set	0x865
   707  0865                     	global	_LATA1
   708                           _LATA1	set	0x861
   709  0861                     	global	_LATA0
   710                           _LATA0	set	0x860
   711  0860                     	global	_ANSC3
   712                           _ANSC3	set	0xC73
   713  0C73                     	global	_ANSA2
   714                           _ANSA2	set	0xC62
   715  0C62                     ; #config settings
   716                           global __CFG_FOSC$INTOSC
   717                           __CFG_FOSC$INTOSC equ 0x0
   718  0000                     global __CFG_WDTE$OFF
   719                           __CFG_WDTE$OFF equ 0x0
   720  0000                     global __CFG_PWRTE$OFF
   721                           __CFG_PWRTE$OFF equ 0x0
   722  0000                     global __CFG_MCLRE$ON
   723                           __CFG_MCLRE$ON equ 0x0
   724  0000                     global __CFG_CP$OFF
   725                           __CFG_CP$OFF equ 0x0
   726  0000                     global __CFG_BOREN$OFF
   727                           __CFG_BOREN$OFF equ 0x0
   728  0000                     global __CFG_CLKOUTEN$OFF
   729                           __CFG_CLKOUTEN$OFF equ 0x0
   730  0000                     global __CFG_WRT$OFF
   731                           __CFG_WRT$OFF equ 0x0
   732  0000                     global __CFG_PPS1WAY$ON
   733                           __CFG_PPS1WAY$ON equ 0x0
   734  0000                     global __CFG_ZCDDIS$ON
   735                           __CFG_ZCDDIS$ON equ 0x0
   736  0000                     global __CFG_PLLEN$ON
   737                           __CFG_PLLEN$ON equ 0x0
   738  0000                     global __CFG_STVREN$ON
   739                           __CFG_STVREN$ON equ 0x0
   740  0000                     global __CFG_BORV$LO
   741                           __CFG_BORV$LO equ 0x0
   742  0000                     global __CFG_LPBOR$OFF
   743                           __CFG_LPBOR$OFF equ 0x0
   744  0000                     global __CFG_LVP$ON
   745                           __CFG_LVP$ON equ 0x0
   746  0000                     	file	"C:\Users\zhgao\AppData\Local\Temp\s1rc."
   747                           	line	#
   748                           psect cinit,class=CODE,delta=2
   749                           global start_initialization
   750                           start_initialization:
   751  0036                     
   752                           global __initialization
   753                           __initialization:
   754  0036                     psect	bssCOMMON,class=COMMON,space=1,noexec
   755                           global __pbssCOMMON
   756                           __pbssCOMMON:
   757  0077                     _timebase:
   758  0077                            ds      2
   759  0077                     
   760                           _waitOK:
   761  0079                            ds      2
   762  0079                     
   763                           _ADCOK:
   764  007B                            ds      1
   765  007B                     
   766                           psect	bssBANK0,class=BANK0,space=1,noexec
   767                           global __pbssBANK0
   768                           __pbssBANK0:
   769  0020                     isr@n:
   770  0020                            ds      2
   771  0020                     
   772                           _times:
   773  0022                            ds      2
   774  0022                     
   775                           	file	"C:\Users\zhgao\AppData\Local\Temp\s1rc."
   776                           	line	#
   777                           ; Clear objects allocated to COMMON
   778                           psect cinit,class=CODE,delta=2,merge=1
   779                           	global __pbssCOMMON
   780                           	clrf	((__pbssCOMMON)+0)&07Fh
   781  0036  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   782  0037  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   783  0038  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
   784  0039  01FA               	clrf	((__pbssCOMMON)+4)&07Fh
   785  003A  01FB               ; Clear objects allocated to BANK0
   786                           psect cinit,class=CODE,delta=2,merge=1
   787                           	global __pbssBANK0
   788                           	movlb 0	; select bank0
   789  003B  0020               	clrf	((__pbssBANK0)+0)&07Fh
   790  003C  01A0               	clrf	((__pbssBANK0)+1)&07Fh
   791  003D  01A1               	clrf	((__pbssBANK0)+2)&07Fh
   792  003E  01A2               	clrf	((__pbssBANK0)+3)&07Fh
   793  003F  01A3               psect cinit,class=CODE,delta=2,merge=1
   794                           global end_of_initialization,__end_of__initialization
   795                           
   796                           ;End of C runtime variable initialization code
   797                           
   798                           end_of_initialization:
   799  0040                     __end_of__initialization:
   800  0040                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
   801  0040  107E               movlb 0
   802  0041  0020               ljmp _main	;jump to C main() function
   803  0042  2843               psect	cstackCOMMON,class=COMMON,space=1,noexec
   804                           global __pcstackCOMMON
   805                           __pcstackCOMMON:
   806  0070                     ?_wdt_init:	; 1 bytes @ 0x0
   807  0070                     ?_main:	; 1 bytes @ 0x0
   808  0070                     ?_isr:	; 1 bytes @ 0x0
   809  0070                     ??_isr:	; 1 bytes @ 0x0
   810  0070                     	ds	1
   811  0070                     ??_wdt_init:	; 1 bytes @ 0x1
   812  0071                     	global	?_getadc
   813                           ?_getadc:	; 2 bytes @ 0x1
   814  0071                     	global	?___wmul
   815                           ?___wmul:	; 2 bytes @ 0x1
   816  0071                     	global	___wmul@multiplier
   817                           ___wmul@multiplier:	; 2 bytes @ 0x1
   818  0071                     	ds	2
   819  0071                     ??_getadc:	; 1 bytes @ 0x3
   820  0073                     	global	___wmul@multiplicand
   821                           ___wmul@multiplicand:	; 2 bytes @ 0x3
   822  0073                     	ds	2
   823  0073                     ??___wmul:	; 1 bytes @ 0x5
   824  0075                     	global	___wmul@product
   825                           ___wmul@product:	; 2 bytes @ 0x5
   826  0075                     	ds	1
   827  0075                     	global	_getadc$142
   828                           _getadc$142:	; 1 bytes @ 0x6
   829  0076                     	ds	1
   830  0076                     ??_wait:	; 1 bytes @ 0x7
   831  0077                     ??_main:	; 1 bytes @ 0x7
   832  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
   833                           global __pcstackBANK0
   834                           __pcstackBANK0:
   835  0026                     ?_wait:	; 1 bytes @ 0x0
   836  0026                     	global	wait@ms
   837                           wait@ms:	; 2 bytes @ 0x0
   838  0026                     	ds	2
   839  0026                     ;!
   840                           ;!Data Sizes:
   841                           ;!    Strings     0
   842                           ;!    Constant    0
   843                           ;!    Data        0
   844                           ;!    BSS         9
   845                           ;!    Persistent  2
   846                           ;!    Stack       0
   847                           ;!
   848                           ;!Auto Spaces:
   849                           ;!    Space          Size  Autos    Used
   850                           ;!    COMMON           14      7      12
   851                           ;!    BANK0            80      2       8
   852                           ;!    BANK1            80      0       0
   853                           ;!    BANK2            80      0       0
   854                           
   855                           ;!
   856                           ;!Pointer List with Targets:
   857                           ;!
   858                           ;!    None.
   859                           
   860                           
   861                           ;!
   862                           ;!Critical Paths under _main in COMMON
   863                           ;!
   864                           ;!    _main->_getadc
   865                           ;!    _wait->___wmul
   866                           ;!
   867                           ;!Critical Paths under _isr in COMMON
   868                           ;!
   869                           ;!    None.
   870                           ;!
   871                           ;!Critical Paths under _main in BANK0
   872                           ;!
   873                           ;!    _main->_wait
   874                           ;!
   875                           ;!Critical Paths under _isr in BANK0
   876                           ;!
   877                           ;!    None.
   878                           ;!
   879                           ;!Critical Paths under _main in BANK1
   880                           ;!
   881                           ;!    None.
   882                           ;!
   883                           ;!Critical Paths under _isr in BANK1
   884                           ;!
   885                           ;!    None.
   886                           ;!
   887                           ;!Critical Paths under _main in BANK2
   888                           ;!
   889                           ;!    None.
   890                           ;!
   891                           ;!Critical Paths under _isr in BANK2
   892                           ;!
   893                           ;!    None.
   894                           
   895 ;;
   896 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   897 ;;
   898                           
   899                           ;!
   900                           ;!Call Graph Tables:
   901                           ;!
   902                           ;! ---------------------------------------------------------------------------------
   903                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   904                           ;! ---------------------------------------------------------------------------------
   905                           ;! (0) _main                                                 0     0      0    1559
   906                           ;!                             _getadc
   907                           ;!                               _wait
   908                           ;!                           _wdt_init
   909                           ;! ---------------------------------------------------------------------------------
   910                           ;! (1) _wdt_init                                             0     0      0       0
   911                           ;! ---------------------------------------------------------------------------------
   912                           ;! (1) _wait                                                 2     0      2    1535
   913                           ;!                                              0 BANK0      2     0      2
   914                           ;!                             ___wmul
   915                           ;! ---------------------------------------------------------------------------------
   916                           ;! (2) ___wmul                                               6     2      4     244
   917                           ;!                                              1 COMMON     6     2      4
   918                           ;! ---------------------------------------------------------------------------------
   919                           ;! (1) _getadc                                               6     4      2      24
   920                           ;!                                              1 COMMON     6     4      2
   921                           ;! ---------------------------------------------------------------------------------
   922                           ;! Estimated maximum stack depth 2
   923                           ;! ---------------------------------------------------------------------------------
   924                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   925                           ;! ---------------------------------------------------------------------------------
   926                           ;! (3) _isr                                                  1     1      0       0
   927                           ;!                                              0 COMMON     1     1      0
   928                           ;! ---------------------------------------------------------------------------------
   929                           ;! Estimated maximum stack depth 3
   930                           ;! ---------------------------------------------------------------------------------
   931                           ;!
   932                           ;! Call Graph Graphs:
   933                           ;!
   934                           ;! _main (ROOT)
   935                           ;!   _getadc
   936                           ;!   _wait
   937                           ;!     ___wmul
   938                           ;!   _wdt_init
   939                           ;!
   940                           ;! _isr (ROOT)
   941                           ;!
   942                           
   943                           ;! Address spaces:
   944                           
   945                           ;!Name               Size   Autos  Total    Cost      Usage
   946                           ;!BIGRAM              F0      0       0       0        0.0%
   947                           ;!NULL                 0      0       0       0        0.0%
   948                           ;!CODE                 0      0       0       0        0.0%
   949                           ;!BITCOMMON            E      0       0       1        0.0%
   950                           ;!BITSFR0              0      0       0       1        0.0%
   951                           ;!SFR0                 0      0       0       1        0.0%
   952                           ;!COMMON               E      7       C       2       85.7%
   953                           ;!BITSFR1              0      0       0       2        0.0%
   954                           ;!SFR1                 0      0       0       2        0.0%
   955                           ;!BITSFR2              0      0       0       3        0.0%
   956                           ;!SFR2                 0      0       0       3        0.0%
   957                           ;!STACK                0      0       0       3        0.0%
   958                           ;!BITSFR3              0      0       0       4        0.0%
   959                           ;!SFR3                 0      0       0       4        0.0%
   960                           ;!ABS                  0      0      14       4        0.0%
   961                           ;!BITBANK0            50      0       0       5        0.0%
   962                           ;!BITSFR4              0      0       0       5        0.0%
   963                           ;!SFR4                 0      0       0       5        0.0%
   964                           ;!BANK0               50      2       8       6       10.0%
   965                           ;!BITSFR5              0      0       0       6        0.0%
   966                           ;!SFR5                 0      0       0       6        0.0%
   967                           ;!BITBANK1            50      0       0       7        0.0%
   968                           ;!BITSFR6              0      0       0       7        0.0%
   969                           ;!SFR6                 0      0       0       7        0.0%
   970                           ;!BANK1               50      0       0       8        0.0%
   971                           ;!BITSFR7              0      0       0       8        0.0%
   972                           ;!SFR7                 0      0       0       8        0.0%
   973                           ;!BITBANK2            50      0       0       9        0.0%
   974                           ;!BITSFR8              0      0       0       9        0.0%
   975                           ;!SFR8                 0      0       0       9        0.0%
   976                           ;!BANK2               50      0       0      10        0.0%
   977                           ;!BITSFR9              0      0       0      10        0.0%
   978                           ;!SFR9                 0      0       0      10        0.0%
   979                           ;!BITSFR10             0      0       0      11        0.0%
   980                           ;!SFR10                0      0       0      11        0.0%
   981                           ;!DATA                 0      0      14      11        0.0%
   982                           ;!BITSFR11             0      0       0      12        0.0%
   983                           ;!SFR11                0      0       0      12        0.0%
   984                           ;!BITSFR12             0      0       0      13        0.0%
   985                           ;!SFR12                0      0       0      13        0.0%
   986                           ;!BITSFR13             0      0       0      14        0.0%
   987                           ;!SFR13                0      0       0      14        0.0%
   988                           ;!BITSFR14             0      0       0      15        0.0%
   989                           ;!SFR14                0      0       0      15        0.0%
   990                           ;!BITSFR15             0      0       0      16        0.0%
   991                           ;!SFR15                0      0       0      16        0.0%
   992                           ;!BITSFR16             0      0       0      17        0.0%
   993                           ;!SFR16                0      0       0      17        0.0%
   994                           ;!BITSFR17             0      0       0      18        0.0%
   995                           ;!SFR17                0      0       0      18        0.0%
   996                           ;!BITSFR18             0      0       0      19        0.0%
   997                           ;!SFR18                0      0       0      19        0.0%
   998                           ;!BITSFR19             0      0       0      20        0.0%
   999                           ;!SFR19                0      0       0      20        0.0%
  1000                           ;!BITSFR20             0      0       0      21        0.0%
  1001                           ;!SFR20                0      0       0      21        0.0%
  1002                           ;!BITSFR21             0      0       0      22        0.0%
  1003                           ;!SFR21                0      0       0      22        0.0%
  1004                           ;!BITSFR22             0      0       0      23        0.0%
  1005                           ;!SFR22                0      0       0      23        0.0%
  1006                           ;!BITSFR23             0      0       0      24        0.0%
  1007                           ;!SFR23                0      0       0      24        0.0%
  1008                           ;!BITSFR24             0      0       0      25        0.0%
  1009                           ;!SFR24                0      0       0      25        0.0%
  1010                           ;!BITSFR25             0      0       0      26        0.0%
  1011                           ;!SFR25                0      0       0      26        0.0%
  1012                           ;!BITSFR26             0      0       0      27        0.0%
  1013                           ;!SFR26                0      0       0      27        0.0%
  1014                           ;!BITSFR27             0      0       0      28        0.0%
  1015                           ;!SFR27                0      0       0      28        0.0%
  1016                           ;!BITSFR28             0      0       0      29        0.0%
  1017                           ;!SFR28                0      0       0      29        0.0%
  1018                           ;!BITSFR29             0      0       0      30        0.0%
  1019                           ;!SFR29                0      0       0      30        0.0%
  1020                           ;!BITSFR30             0      0       0      31        0.0%
  1021                           ;!SFR30                0      0       0      31        0.0%
  1022                           ;!BITSFR31             0      0       0      32        0.0%
  1023                           ;!SFR31                0      0       0      32        0.0%
  1024                           
  1025                           	global	_main
  1026                           
  1027 ;; *************** function _main *****************
  1028 ;; Defined at:
  1029 ;;		line 40 in file "main.c"
  1030 ;; Parameters:    Size  Location     Type
  1031 ;;		None
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;		None
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, status,2, status,0, pclath, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : B1F/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1043 ;;      Params:         0       0       0       0
  1044 ;;      Locals:         0       0       0       0
  1045 ;;      Temps:          0       0       0       0
  1046 ;;      Totals:         0       0       0       0
  1047 ;;Total ram usage:        0 bytes
  1048 ;; Hardware stack levels required when called:    3
  1049 ;; This function calls:
  1050 ;;		_getadc
  1051 ;;		_wait
  1052 ;;		_wdt_init
  1053 ;; This function is called by:
  1054 ;;		Startup code after reset
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  1058                           	file	"main.c"
  1059                           	line	40
  1060                           global __pmaintext
  1061                           __pmaintext:	;psect for function _main
  1062  0043                     psect	maintext
  1063                           	file	"main.c"
  1064                           	line	40
  1065                           	global	__size_of_main
  1066                           	__size_of_main	equ	__end_of_main-_main
  1067  00D5                     	
  1068                           _main:	
  1069  0043                     ;incstack = 0
  1070                           	opt	stack 13
  1071                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1072                           	line	41
  1073                           	
  1074                           l921:	
  1075  0043                     ;main.c: 41:                 LATA5 = 1;
  1076                           	fcall	_wdt_init
  1077  0043  3181  2188  3180   	line	42
  1078                           	
  1079                           l923:	
  1080  0046                     ;main.c: 42:                 LATC0 = 1;
  1081                           	bsf	(95/8),(95)&7	;volatile
  1082  0046  178B               	line	44
  1083                           	
  1084                           l925:	
  1085  0047                     ;main.c: 44:                 LATC2 = 1;
  1086                           	movlb 1	; select bank1
  1087  0047  0021               	bsf	(1256/8)^080h,(1256)&7	;volatile
  1088  0048  141D               	line	45
  1089                           	
  1090                           l927:	
  1091  0049                     ;main.c: 45:                 LATC4 = 1;
  1092                           	bsf	(1271/8)^080h,(1271)&7	;volatile
  1093  0049  179E               	line	46
  1094                           	
  1095                           l929:	
  1096  004A                     ;main.c: 46:                 wait(250);
  1097                           	movf	(158)^080h,w	;volatile
  1098  004A  081E               	andlw	not (((1<<3)-1)<<4)
  1099  004B  398F               	iorlw	(02h & ((1<<3)-1))<<4
  1100  004C  3820               	movwf	(158)^080h	;volatile
  1101  004D  009E               	line	47
  1102                           	
  1103                           l931:	
  1104  004E                     ;main.c: 47:                 LATA4 = 1;
  1105                           	movf	(157)^080h,w	;volatile
  1106  004E  081D               	andlw	not (((1<<5)-1)<<2)
  1107  004F  3983               	iorlw	(02h & ((1<<5)-1))<<2
  1108  0050  3808               	movwf	(157)^080h	;volatile
  1109  0051  009D               	line	48
  1110                           	
  1111                           l933:	
  1112  0052                     ;main.c: 48:                 LATC1 = 1;
  1113                           	bcf	(1264/8)^080h,(1264)&7	;volatile
  1114  0052  101E               	line	49
  1115                           	
  1116                           l935:	
  1117  0053                     ;main.c: 49:                 wait(250);
  1118                           	bcf	(1265/8)^080h,(1265)&7	;volatile
  1119  0053  109E               	line	51
  1120                           	
  1121                           l937:	
  1122  0054                     ;main.c: 51:                 LATA4 = 0;
  1123                           	clrf	(140)^080h	;volatile
  1124  0054  018C               	line	52
  1125                           	
  1126                           l939:	
  1127  0055                     ;main.c: 52:                 wait(250);
  1128                           	clrf	(142)^080h	;volatile
  1129  0055  018E               	line	53
  1130                           	
  1131                           l941:	
  1132  0056                     ;main.c: 53:                 LATC2 = 0;
  1133                           	bsf	(1122/8)^080h,(1122)&7	;volatile
  1134  0056  150C               	line	54
  1135                           	
  1136                           l943:	
  1137  0057                     ;main.c: 54:                 LATC4 = 0;
  1138                           	bsf	(1139/8)^080h,(1139)&7	;volatile
  1139  0057  158E               	line	55
  1140                           	
  1141                           l945:	
  1142  0058                     ;main.c: 55:                 wait(250);
  1143                           	movlb 2	; select bank2
  1144  0058  0022               	clrf	(268)^0100h	;volatile
  1145  0059  018C               	line	56
  1146                           	
  1147                           l947:	
  1148  005A                     ;main.c: 56:                 LATA5 = 0;
  1149                           	clrf	(270)^0100h	;volatile
  1150  005A  018E               	line	57
  1151                           	
  1152                           l949:	
  1153  005B                     ;main.c: 57:                 LATC0 = 0;
  1154                           	movlb 3	; select bank3
  1155  005B  0023               	bsf	(3170/8)^0180h,(3170)&7	;volatile
  1156  005C  150C               	line	58
  1157                           	
  1158                           l951:	
  1159  005D                     ;main.c: 58:                 wait(250);
  1160                           	bcf	(3187/8)^0180h,(3187)&7	;volatile
  1161  005D  118E               	goto	l953
  1162  005E  285F               	line	59
  1163                           ;main.c: 59:                 LATA0 = 0;
  1164                           	
  1165                           l85:	
  1166  005F                     	line	61
  1167                           	
  1168                           l953:	
  1169  005F                     ;main.c: 61:                 wait(2000);
  1170                           	fcall	_getadc
  1171  005F  3181  2140  3180   	movf	(1+(?_getadc)),w
  1172  0062  0872               	movlb 0	; select bank0
  1173  0063  0020               	movwf	(_vadc+1)
  1174  0064  00A5               	movf	(0+(?_getadc)),w
  1175  0065  0871               	movwf	(_vadc)
  1176  0066  00A4               	line	63
  1177                           ;main.c: 63:             else{
  1178                           	movlw	0
  1179  0067  3000               	subwf	(_vadc+1),w
  1180  0068  0225               	movlw	08Ah
  1181  0069  308A               	skipnz
  1182  006A  1903               	subwf	(_vadc),w
  1183  006B  0224               	skipnc
  1184  006C  1803               	goto	u281
  1185  006D  286F               	goto	u280
  1186  006E  2870               u281:
  1187  006F                     	goto	l1019
  1188  006F  290C               u280:
  1189  0070                     	line	65
  1190                           	
  1191                           l955:	
  1192  0070                     ;main.c: 65:                 LATA1 = 1;
  1193                           	btfss	(115/8),(115)&7	;volatile
  1194  0070  1D8E               	goto	u291
  1195  0071  2873               	goto	u290
  1196  0072  2874               u291:
  1197  0073                     	goto	l87
  1198  0073  28CD               u290:
  1199  0074                     	line	66
  1200                           	
  1201                           l957:	
  1202  0074                     ;main.c: 66:                 wait(250);
  1203                           	movlb 2	; select bank2
  1204  0074  0022               	bsf	(2144/8)^0100h,(2144)&7	;volatile
  1205  0075  140C               	line	67
  1206                           ;main.c: 67:                 LATA0 = 0;
  1207                           	bsf	(2145/8)^0100h,(2145)&7	;volatile
  1208  0076  148C               	line	68
  1209                           	
  1210                           l959:	
  1211  0077                     ;main.c: 68:                 LATA1 = 0;
  1212                           	movlw	0FAh
  1213  0077  30FA               	movlb 0	; select bank0
  1214  0078  0020               	movwf	(wait@ms)
  1215  0079  00A6               	movlw	0
  1216  007A  3000               	movwf	((wait@ms))+1
  1217  007B  00A7               	fcall	_wait
  1218  007C  3181  2118  3180   	line	69
  1219                           	
  1220                           l961:	
  1221  007F                     ;main.c: 69:                 LATA5 = 1;
  1222                           	movlb 2	; select bank2
  1223  007F  0022               	bsf	(2149/8)^0100h,(2149)&7	;volatile
  1224  0080  168C               	line	70
  1225                           	
  1226                           l963:	
  1227  0081                     ;main.c: 70:                 LATC0 = 1;
  1228                           	bsf	(2160/8)^0100h,(2160)&7	;volatile
  1229  0081  140E               	line	71
  1230                           ;main.c: 71:                 wait(250);
  1231                           	movlw	0FAh
  1232  0082  30FA               	movlb 0	; select bank0
  1233  0083  0020               	movwf	(wait@ms)
  1234  0084  00A6               	movlw	0
  1235  0085  3000               	movwf	((wait@ms))+1
  1236  0086  00A7               	fcall	_wait
  1237  0087  3181  2118  3180   	line	72
  1238                           	
  1239                           l965:	
  1240  008A                     ;main.c: 72:                 LATA5 = 0;
  1241                           	movlb 2	; select bank2
  1242  008A  0022               	bsf	(2162/8)^0100h,(2162)&7	;volatile
  1243  008B  150E               	line	73
  1244                           	
  1245                           l967:	
  1246  008C                     ;main.c: 73:                 LATC0 = 0;
  1247                           	bsf	(2164/8)^0100h,(2164)&7	;volatile
  1248  008C  160E               	line	74
  1249                           ;main.c: 74:                 LATC2 = 1;
  1250                           	movlw	0FAh
  1251  008D  30FA               	movlb 0	; select bank0
  1252  008E  0020               	movwf	(wait@ms)
  1253  008F  00A6               	movlw	0
  1254  0090  3000               	movwf	((wait@ms))+1
  1255  0091  00A7               	fcall	_wait
  1256  0092  3181  2118  3180   	line	75
  1257                           	
  1258                           l969:	
  1259  0095                     ;main.c: 75:                 LATC4 = 1;
  1260                           	movlb 2	; select bank2
  1261  0095  0022               	bsf	(2148/8)^0100h,(2148)&7	;volatile
  1262  0096  160C               	line	76
  1263                           	
  1264                           l971:	
  1265  0097                     ;main.c: 76:                 wait(250);
  1266                           	bsf	(2161/8)^0100h,(2161)&7	;volatile
  1267  0097  148E               	line	77
  1268                           ;main.c: 77:                 LATC2 = 0;
  1269                           	movlw	0FAh
  1270  0098  30FA               	movlb 0	; select bank0
  1271  0099  0020               	movwf	(wait@ms)
  1272  009A  00A6               	movlw	0
  1273  009B  3000               	movwf	((wait@ms))+1
  1274  009C  00A7               	fcall	_wait
  1275  009D  3181  2118  3180   	line	78
  1276                           	
  1277                           l973:	
  1278  00A0                     ;main.c: 78:                 LATC4 = 0;
  1279                           	movlb 2	; select bank2
  1280  00A0  0022               	bcf	(2161/8)^0100h,(2161)&7	;volatile
  1281  00A1  108E               	line	79
  1282                           	
  1283                           l975:	
  1284  00A2                     ;main.c: 79:                 LATA4 = 1;
  1285                           	bcf	(2148/8)^0100h,(2148)&7	;volatile
  1286  00A2  120C               	line	80
  1287                           ;main.c: 80:                 LATC1 = 1;
  1288                           	movlw	0FAh
  1289  00A3  30FA               	movlb 0	; select bank0
  1290  00A4  0020               	movwf	(wait@ms)
  1291  00A5  00A6               	movlw	0
  1292  00A6  3000               	movwf	((wait@ms))+1
  1293  00A7  00A7               	fcall	_wait
  1294  00A8  3181  2118  3180   	line	81
  1295                           	
  1296                           l977:	
  1297  00AB                     ;main.c: 81:                 wait(250);
  1298                           	movlb 2	; select bank2
  1299  00AB  0022               	bcf	(2162/8)^0100h,(2162)&7	;volatile
  1300  00AC  110E               	line	82
  1301                           	
  1302                           l979:	
  1303  00AD                     ;main.c: 82:                 LATC1 = 0;
  1304                           	bcf	(2164/8)^0100h,(2164)&7	;volatile
  1305  00AD  120E               	line	83
  1306                           ;main.c: 83:                 LATA4 = 0;
  1307                           	movlw	0FAh
  1308  00AE  30FA               	movlb 0	; select bank0
  1309  00AF  0020               	movwf	(wait@ms)
  1310  00B0  00A6               	movlw	0
  1311  00B1  3000               	movwf	((wait@ms))+1
  1312  00B2  00A7               	fcall	_wait
  1313  00B3  3181  2118  3180   	line	84
  1314                           	
  1315                           l981:	
  1316  00B6                     ;main.c: 84:                 wait(2000);
  1317                           	movlb 2	; select bank2
  1318  00B6  0022               	bcf	(2149/8)^0100h,(2149)&7	;volatile
  1319  00B7  128C               	line	85
  1320                           	
  1321                           l983:	
  1322  00B8                     ;main.c: 85:             }
  1323                           	bcf	(2160/8)^0100h,(2160)&7	;volatile
  1324  00B8  100E               	line	86
  1325                           ;main.c: 86:         }
  1326                           	movlw	0FAh
  1327  00B9  30FA               	movlb 0	; select bank0
  1328  00BA  0020               	movwf	(wait@ms)
  1329  00BB  00A6               	movlw	0
  1330  00BC  3000               	movwf	((wait@ms))+1
  1331  00BD  00A7               	fcall	_wait
  1332  00BE  3181  2118  3180   	line	87
  1333                           	
  1334                           l985:	
  1335  00C1                     ;main.c: 87:         else{
  1336                           	movlb 2	; select bank2
  1337  00C1  0022               	bcf	(2144/8)^0100h,(2144)&7	;volatile
  1338  00C2  100C               	line	88
  1339                           	
  1340                           l987:	
  1341  00C3                     ;main.c: 88:             wait(2000);
  1342                           	bcf	(2145/8)^0100h,(2145)&7	;volatile
  1343  00C3  108C               	line	89
  1344                           ;main.c: 89:         }
  1345                           	movlw	0D0h
  1346  00C4  30D0               	movlb 0	; select bank0
  1347  00C5  0020               	movwf	(wait@ms)
  1348  00C6  00A6               	movlw	07h
  1349  00C7  3007               	movwf	((wait@ms))+1
  1350  00C8  00A7               	fcall	_wait
  1351  00C9  3181  2118  3180   	line	90
  1352                           ;main.c: 90:     }
  1353                           	goto	l953
  1354  00CC  285F               	line	91
  1355                           ;main.c: 91: }
  1356                           	
  1357                           l87:	
  1358  00CD                     	line	92
  1359                           ;main.c: 92: void wdt_init(void){
  1360                           	movlb 2	; select bank2
  1361  00CD  0022               	bsf	(2144/8)^0100h,(2144)&7	;volatile
  1362  00CE  140C               	line	93
  1363                           ;main.c: 93: 
  1364                           	bsf	(2145/8)^0100h,(2145)&7	;volatile
  1365  00CF  148C               	line	94
  1366                           	
  1367                           l989:	
  1368  00D0                     ;main.c: 94: }
  1369                           	movlw	0FAh
  1370  00D0  30FA               	movlb 0	; select bank0
  1371  00D1  0020               	movwf	(wait@ms)
  1372  00D2  00A6               	movlw	0
  1373  00D3  3000               	movwf	((wait@ms))+1
  1374  00D4  00A7               	fcall	_wait
  1375  00D5  3181  2118  3180   	line	95
  1376                           	
  1377                           l991:	
  1378  00D8                     ;main.c: 95: unsigned int getadc(){
  1379                           	movlb 2	; select bank2
  1380  00D8  0022               	bcf	(2144/8)^0100h,(2144)&7	;volatile
  1381  00D9  100C               	line	96
  1382                           	
  1383                           l993:	
  1384  00DA                     ;main.c: 96:     ADCOK = 0;
  1385                           	bcf	(2145/8)^0100h,(2145)&7	;volatile
  1386  00DA  108C               	line	97
  1387                           	
  1388                           l995:	
  1389  00DB                     ;main.c: 97:     ADGO = 1;
  1390                           	bsf	(2149/8)^0100h,(2149)&7	;volatile
  1391  00DB  168C               	line	98
  1392                           	
  1393                           l997:	
  1394  00DC                     ;main.c: 98:     while(ADGO);
  1395                           	bsf	(2160/8)^0100h,(2160)&7	;volatile
  1396  00DC  140E               	line	99
  1397                           ;main.c: 99:     return (unsigned int)((ADRESH<<8)||ADRESL );
  1398                           	movlw	0FAh
  1399  00DD  30FA               	movlb 0	; select bank0
  1400  00DE  0020               	movwf	(wait@ms)
  1401  00DF  00A6               	movlw	0
  1402  00E0  3000               	movwf	((wait@ms))+1
  1403  00E1  00A7               	fcall	_wait
  1404  00E2  3181  2118  3180   	line	100
  1405                           	
  1406                           l999:	
  1407  00E5                     ;main.c: 100: }
  1408                           	movlb 2	; select bank2
  1409  00E5  0022               	bcf	(2149/8)^0100h,(2149)&7	;volatile
  1410  00E6  128C               	line	101
  1411                           	
  1412                           l1001:	
  1413  00E7                     ;main.c: 101: 
  1414                           	bcf	(2160/8)^0100h,(2160)&7	;volatile
  1415  00E7  100E               	line	102
  1416                           	
  1417                           l1003:	
  1418  00E8                     ;main.c: 102: void wait(int ms){
  1419                           	bsf	(2162/8)^0100h,(2162)&7	;volatile
  1420  00E8  150E               	line	103
  1421                           	
  1422                           l1005:	
  1423  00E9                     ;main.c: 103:     waitOK = 0;
  1424                           	bsf	(2164/8)^0100h,(2164)&7	;volatile
  1425  00E9  160E               	line	104
  1426                           ;main.c: 104:     T0CS = 0;
  1427                           	movlw	0FAh
  1428  00EA  30FA               	movlb 0	; select bank0
  1429  00EB  0020               	movwf	(wait@ms)
  1430  00EC  00A6               	movlw	0
  1431  00ED  3000               	movwf	((wait@ms))+1
  1432  00EE  00A7               	fcall	_wait
  1433  00EF  3181  2118  3180   	line	105
  1434                           	
  1435                           l1007:	
  1436  00F2                     ;main.c: 105:     PSA = 1;
  1437                           	movlb 2	; select bank2
  1438  00F2  0022               	bcf	(2162/8)^0100h,(2162)&7	;volatile
  1439  00F3  110E               	line	106
  1440                           	
  1441                           l1009:	
  1442  00F4                     ;main.c: 106:     T0IF = 0;
  1443                           	bcf	(2164/8)^0100h,(2164)&7	;volatile
  1444  00F4  120E               	line	107
  1445                           	
  1446                           l1011:	
  1447  00F5                     ;main.c: 107:     T0IE = 1;
  1448                           	bsf	(2148/8)^0100h,(2148)&7	;volatile
  1449  00F5  160C               	line	108
  1450                           	
  1451                           l1013:	
  1452  00F6                     ;main.c: 108:     timebase = 0xAA;
  1453                           	bsf	(2161/8)^0100h,(2161)&7	;volatile
  1454  00F6  148E               	line	109
  1455                           ;main.c: 109:     times = ms*5;
  1456                           	movlw	0FAh
  1457  00F7  30FA               	movlb 0	; select bank0
  1458  00F8  0020               	movwf	(wait@ms)
  1459  00F9  00A6               	movlw	0
  1460  00FA  3000               	movwf	((wait@ms))+1
  1461  00FB  00A7               	fcall	_wait
  1462  00FC  3181  2118  3180   	line	110
  1463                           	
  1464                           l1015:	
  1465  00FF                     ;main.c: 110:     TMR0 = timebase;
  1466                           	movlb 2	; select bank2
  1467  00FF  0022               	bcf	(2161/8)^0100h,(2161)&7	;volatile
  1468  0100  108E               	line	111
  1469                           	
  1470                           l1017:	
  1471  0101                     ;main.c: 111:     while(!waitOK);
  1472                           	bcf	(2148/8)^0100h,(2148)&7	;volatile
  1473  0101  120C               	line	112
  1474                           ;main.c: 112: }
  1475                           	movlw	0D0h
  1476  0102  30D0               	movlb 0	; select bank0
  1477  0103  0020               	movwf	(wait@ms)
  1478  0104  00A6               	movlw	07h
  1479  0105  3007               	movwf	((wait@ms))+1
  1480  0106  00A7               	fcall	_wait
  1481  0107  3181  2118  3180   	goto	l953
  1482  010A  285F               	line	113
  1483                           	
  1484                           l88:	
  1485  010B                     	line	114
  1486                           	goto	l953
  1487  010B  285F               	line	115
  1488                           	
  1489                           l86:	
  1490  010C                     	line	116
  1491                           	
  1492                           l1019:	
  1493  010C                     	movlw	0D0h
  1494  010C  30D0               	movlb 0	; select bank0
  1495  010D  0020               	movwf	(wait@ms)
  1496  010E  00A6               	movlw	07h
  1497  010F  3007               	movwf	((wait@ms))+1
  1498  0110  00A7               	fcall	_wait
  1499  0111  3181  2118  3180   	goto	l953
  1500  0114  285F               	line	117
  1501                           	
  1502                           l89:	
  1503  0115                     	goto	l953
  1504  0115  285F               	line	118
  1505                           	
  1506                           l90:	
  1507  0116                     	goto	l953
  1508  0116  285F               	
  1509                           l91:	
  1510  0117                     	line	119
  1511                           	
  1512                           l92:	
  1513  0117                     	global	start
  1514                           	ljmp	start
  1515  0117  2835               	opt stack 0
  1516                           GLOBAL	__end_of_main
  1517                           	__end_of_main:
  1518  0118                     	signat	_main,89
  1519                           	global	_wdt_init
  1520                           
  1521 ;; *************** function _wdt_init *****************
  1522 ;; Defined at:
  1523 ;;		line 120 in file "main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		None
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1537 ;;      Params:         0       0       0       0
  1538 ;;      Locals:         0       0       0       0
  1539 ;;      Temps:          0       0       0       0
  1540 ;;      Totals:         0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; Hardware stack levels required when called:    1
  1544 ;; This function calls:
  1545 ;;		Nothing
  1546 ;; This function is called by:
  1547 ;;		_main
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1551                           	line	120
  1552                           global __ptext1
  1553                           __ptext1:	;psect for function _wdt_init
  1554  0188                     psect	text1
  1555                           	file	"main.c"
  1556                           	line	120
  1557                           	global	__size_of_wdt_init
  1558                           	__size_of_wdt_init	equ	__end_of_wdt_init-_wdt_init
  1559  0001                     	
  1560                           _wdt_init:	
  1561  0188                     ;incstack = 0
  1562                           	opt	stack 14
  1563                           ; Regs used in _wdt_init: []
  1564                           	line	122
  1565                           	
  1566                           l95:	
  1567  0188                     	return
  1568  0188  0008               	opt stack 0
  1569                           GLOBAL	__end_of_wdt_init
  1570                           	__end_of_wdt_init:
  1571  0189                     	signat	_wdt_init,89
  1572                           	global	_wait
  1573                           
  1574 ;; *************** function _wait *****************
  1575 ;; Defined at:
  1576 ;;		line 130 in file "main.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  ms              2    0[BANK0 ] int 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0, pclath, cstack
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1590 ;;      Params:         0       2       0       0
  1591 ;;      Locals:         0       0       0       0
  1592 ;;      Temps:          0       0       0       0
  1593 ;;      Totals:         0       2       0       0
  1594 ;;Total ram usage:        2 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    2
  1597 ;; This function calls:
  1598 ;;		___wmul
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1604                           	line	130
  1605                           global __ptext2
  1606                           __ptext2:	;psect for function _wait
  1607  0118                     psect	text2
  1608                           	file	"main.c"
  1609                           	line	130
  1610                           	global	__size_of_wait
  1611                           	__size_of_wait	equ	__end_of_wait-_wait
  1612  0028                     	
  1613                           _wait:	
  1614  0118                     ;incstack = 0
  1615                           	opt	stack 13
  1616                           ; Regs used in _wait: [wreg+status,2+status,0+pclath+cstack]
  1617                           	line	131
  1618                           	
  1619                           l903:	
  1620  0118                     	clrf	(_waitOK)
  1621  0118  01F9               	clrf	(_waitOK+1)
  1622  0119  01FA               	line	132
  1623                           	
  1624                           l905:	
  1625  011A                     	movlb 1	; select bank1
  1626  011A  0021               	bcf	(1197/8)^080h,(1197)&7	;volatile
  1627  011B  1295               	line	133
  1628                           	
  1629                           l907:	
  1630  011C                     	bsf	(1195/8)^080h,(1195)&7	;volatile
  1631  011C  1595               	line	134
  1632                           	
  1633                           l909:	
  1634  011D                     	bcf	(90/8),(90)&7	;volatile
  1635  011D  110B               	line	135
  1636                           	
  1637                           l911:	
  1638  011E                     	bsf	(93/8),(93)&7	;volatile
  1639  011E  168B               	line	136
  1640                           	
  1641                           l913:	
  1642  011F                     	movlw	0AAh
  1643  011F  30AA               	movwf	(_timebase)
  1644  0120  00F7               	movlw	0
  1645  0121  3000               	movwf	((_timebase))+1
  1646  0122  00F8               	line	137
  1647                           	
  1648                           l915:	
  1649  0123                     	movlb 0	; select bank0
  1650  0123  0020               	movf	(wait@ms+1),w
  1651  0124  0827               	movwf	(___wmul@multiplier+1)
  1652  0125  00F2               	movf	(wait@ms),w
  1653  0126  0826               	movwf	(___wmul@multiplier)
  1654  0127  00F1               	movlw	05h
  1655  0128  3005               	movwf	(___wmul@multiplicand)
  1656  0129  00F3               	movlw	0
  1657  012A  3000               	movwf	((___wmul@multiplicand))+1
  1658  012B  00F4               	fcall	___wmul
  1659  012C  3181  2166  3181   	movf	(1+(?___wmul)),w
  1660  012F  0872               	movlb 0	; select bank0
  1661  0130  0020               	movwf	(_times+1)
  1662  0131  00A3               	movf	(0+(?___wmul)),w
  1663  0132  0871               	movwf	(_times)
  1664  0133  00A2               	line	138
  1665                           	
  1666                           l917:	
  1667  0134                     	movf	(_timebase),w
  1668  0134  0877               	movwf	(21)	;volatile
  1669  0135  0095               	line	139
  1670                           	goto	l919
  1671  0136  2938               	
  1672                           l107:	
  1673  0137                     	goto	l919
  1674  0137  2938               	
  1675                           l106:	
  1676  0138                     	
  1677                           l919:	
  1678  0138                     	movf	((_waitOK)),w
  1679  0138  0879               iorwf	((_waitOK+1)),w
  1680  0139  047A               	btfsc	status,2
  1681  013A  1903               	goto	u271
  1682  013B  293D               	goto	u270
  1683  013C  293E               u271:
  1684  013D                     	goto	l919
  1685  013D  2938               u270:
  1686  013E                     	goto	l109
  1687  013E  293F               	
  1688                           l108:	
  1689  013F                     	line	140
  1690                           	
  1691                           l109:	
  1692  013F                     	return
  1693  013F  0008               	opt stack 0
  1694                           GLOBAL	__end_of_wait
  1695                           	__end_of_wait:
  1696  0140                     	signat	_wait,4217
  1697                           	global	___wmul
  1698                           
  1699 ;; *************** function ___wmul *****************
  1700 ;; Defined at:
  1701 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  multiplier      2    1[COMMON] unsigned int 
  1704 ;;  multiplicand    2    3[COMMON] unsigned int 
  1705 ;; Auto vars:     Size  Location     Type
  1706 ;;  product         2    5[COMMON] unsigned int 
  1707 ;; Return value:  Size  Location     Type
  1708 ;;                  2    1[COMMON] unsigned int 
  1709 ;; Registers used:
  1710 ;;		wreg, status,2, status,0
  1711 ;; Tracked objects:
  1712 ;;		On entry : 0/0
  1713 ;;		On exit  : 0/0
  1714 ;;		Unchanged: 0/0
  1715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1716 ;;      Params:         4       0       0       0
  1717 ;;      Locals:         2       0       0       0
  1718 ;;      Temps:          0       0       0       0
  1719 ;;      Totals:         6       0       0       0
  1720 ;;Total ram usage:        6 bytes
  1721 ;; Hardware stack levels used:    1
  1722 ;; Hardware stack levels required when called:    1
  1723 ;; This function calls:
  1724 ;;		Nothing
  1725 ;; This function is called by:
  1726 ;;		_wait
  1727 ;; This function uses a non-reentrant model
  1728 ;;
  1729                           psect	text3,local,class=CODE,delta=2,merge=1,group=1
  1730                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1731                           	line	15
  1732                           global __ptext3
  1733                           __ptext3:	;psect for function ___wmul
  1734  0166                     psect	text3
  1735                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul16.c"
  1736                           	line	15
  1737                           	global	__size_of___wmul
  1738                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  1739  0022                     	
  1740                           ___wmul:	
  1741  0166                     ;incstack = 0
  1742                           	opt	stack 13
  1743                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1744                           	line	43
  1745                           	
  1746                           l741:	
  1747  0166                     	clrf	(___wmul@product)
  1748  0166  01F5               	clrf	(___wmul@product+1)
  1749  0167  01F6               	goto	l743
  1750  0168  2969               	line	44
  1751                           	
  1752                           l139:	
  1753  0169                     	line	45
  1754                           	
  1755                           l743:	
  1756  0169                     	btfss	(___wmul@multiplier),(0)&7
  1757  0169  1C71               	goto	u141
  1758  016A  296C               	goto	u140
  1759  016B  296D               u141:
  1760  016C                     	goto	l140
  1761  016C  2971               u140:
  1762  016D                     	line	46
  1763                           	
  1764                           l745:	
  1765  016D                     	movf	(___wmul@multiplicand),w
  1766  016D  0873               	addwf	(___wmul@product),f
  1767  016E  07F5               	movf	(___wmul@multiplicand+1),w
  1768  016F  0874               	addwfc	(___wmul@product+1),f
  1769  0170  3DF6               	
  1770                           l140:	
  1771  0171                     	line	47
  1772                           	movlw	01h
  1773  0171  3001               	
  1774                           u155:
  1775  0172                     	lslf	(___wmul@multiplicand),f
  1776  0172  35F3               	rlf	(___wmul@multiplicand+1),f
  1777  0173  0DF4               	decfsz	wreg,f
  1778  0174  0B89               	goto	u155
  1779  0175  2972               	line	48
  1780                           	
  1781                           l747:	
  1782  0176                     	movlw	01h
  1783  0176  3001               	
  1784                           u165:
  1785  0177                     	lsrf	(___wmul@multiplier+1),f
  1786  0177  36F2               	rrf	(___wmul@multiplier),f
  1787  0178  0CF1               	decfsz	wreg,f
  1788  0179  0B89               	goto	u165
  1789  017A  2977               	line	49
  1790                           	
  1791                           l749:	
  1792  017B                     	movf	((___wmul@multiplier)),w
  1793  017B  0871               iorwf	((___wmul@multiplier+1)),w
  1794  017C  0472               	btfss	status,2
  1795  017D  1D03               	goto	u171
  1796  017E  2980               	goto	u170
  1797  017F  2981               u171:
  1798  0180                     	goto	l743
  1799  0180  2969               u170:
  1800  0181                     	goto	l751
  1801  0181  2982               	
  1802                           l141:	
  1803  0182                     	line	52
  1804                           	
  1805                           l751:	
  1806  0182                     	movf	(___wmul@product+1),w
  1807  0182  0876               	movwf	(?___wmul+1)
  1808  0183  00F2               	movf	(___wmul@product),w
  1809  0184  0875               	movwf	(?___wmul)
  1810  0185  00F1               	goto	l142
  1811  0186  2987               	
  1812                           l753:	
  1813  0187                     	line	53
  1814                           	
  1815                           l142:	
  1816  0187                     	return
  1817  0187  0008               	opt stack 0
  1818                           GLOBAL	__end_of___wmul
  1819                           	__end_of___wmul:
  1820  0188                     	signat	___wmul,8314
  1821                           	global	_getadc
  1822                           
  1823 ;; *************** function _getadc *****************
  1824 ;; Defined at:
  1825 ;;		line 123 in file "main.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;		None
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2    1[COMMON] unsigned int 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1839 ;;      Params:         2       0       0       0
  1840 ;;      Locals:         1       0       0       0
  1841 ;;      Temps:          3       0       0       0
  1842 ;;      Totals:         6       0       0       0
  1843 ;;Total ram usage:        6 bytes
  1844 ;; Hardware stack levels used:    1
  1845 ;; Hardware stack levels required when called:    1
  1846 ;; This function calls:
  1847 ;;		Nothing
  1848 ;; This function is called by:
  1849 ;;		_main
  1850 ;; This function uses a non-reentrant model
  1851 ;;
  1852                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1853                           	file	"main.c"
  1854                           	line	123
  1855                           global __ptext4
  1856                           __ptext4:	;psect for function _getadc
  1857  0140                     psect	text4
  1858                           	file	"main.c"
  1859                           	line	123
  1860                           	global	__size_of_getadc
  1861                           	__size_of_getadc	equ	__end_of_getadc-_getadc
  1862  0026                     	
  1863                           _getadc:	
  1864  0140                     ;incstack = 0
  1865                           	opt	stack 14
  1866                           ; Regs used in _getadc: [wreg+status,2+status,0]
  1867                           	line	124
  1868                           	
  1869                           l755:	
  1870  0140                     	clrf	(_ADCOK)
  1871  0140  01FB               	line	125
  1872                           	
  1873                           l757:	
  1874  0141                     	movlb 1	; select bank1
  1875  0141  0021               	bsf	(1257/8)^080h,(1257)&7	;volatile
  1876  0142  149D               	line	126
  1877                           	goto	l98
  1878  0143  2944               	
  1879                           l99:	
  1880  0144                     	
  1881                           l98:	
  1882  0144                     	btfsc	(1257/8)^080h,(1257)&7	;volatile
  1883  0144  189D               	goto	u181
  1884  0145  2947               	goto	u180
  1885  0146  2948               u181:
  1886  0147                     	goto	l98
  1887  0147  2944               u180:
  1888  0148                     	
  1889                           l100:	
  1890  0148                     	line	127
  1891                           	clrf	(_getadc$142)
  1892  0148  01F6               	incf	(_getadc$142),f
  1893  0149  0AF6               	
  1894                           l759:	
  1895  014A                     	movf	(156)^080h,w	;volatile
  1896  014A  081C               	movwf	(??_getadc+0)+0
  1897  014B  00F3               	clrf	(??_getadc+0)+0+1
  1898  014C  01F4               	movf	(??_getadc+0)+0,w
  1899  014D  0873               	movwf	(??_getadc+0)+1
  1900  014E  00F4               	clrf	(??_getadc+0)+0
  1901  014F  01F3               	movf	((??_getadc+0)+0),w
  1902  0150  0873               iorwf	((??_getadc+0)+1),w
  1903  0151  0474               	btfss	status,2
  1904  0152  1D03               	goto	u191
  1905  0153  2955               	goto	u190
  1906  0154  2956               u191:
  1907  0155                     	goto	l765
  1908  0155  295D               u190:
  1909  0156                     	
  1910                           l761:	
  1911  0156                     	movf	((155)^080h),w	;volatile
  1912  0156  081B               	btfss	status,2
  1913  0157  1D03               	goto	u201
  1914  0158  295A               	goto	u200
  1915  0159  295B               u201:
  1916  015A                     	goto	l765
  1917  015A  295D               u200:
  1918  015B                     	
  1919                           l763:	
  1920  015B                     	clrf	(_getadc$142)
  1921  015B  01F6               	goto	l765
  1922  015C  295D               	
  1923                           l102:	
  1924  015D                     	
  1925                           l765:	
  1926  015D                     	movf	(_getadc$142),w
  1927  015D  0876               	movwf	(??_getadc+0)+0
  1928  015E  00F3               	clrf	(??_getadc+0)+0+1
  1929  015F  01F4               	movf	0+(??_getadc+0)+0,w
  1930  0160  0873               	movwf	(?_getadc)
  1931  0161  00F1               	movf	1+(??_getadc+0)+0,w
  1932  0162  0874               	movwf	(?_getadc+1)
  1933  0163  00F2               	goto	l103
  1934  0164  2965               	
  1935                           l767:	
  1936  0165                     	line	128
  1937                           	
  1938                           l103:	
  1939  0165                     	return
  1940  0165  0008               	opt stack 0
  1941                           GLOBAL	__end_of_getadc
  1942                           	__end_of_getadc:
  1943  0166                     	signat	_getadc,90
  1944                           	global	_isr
  1945                           
  1946 ;; *************** function _isr *****************
  1947 ;; Defined at:
  1948 ;;		line 6 in file "int.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;		None
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;		None
  1953 ;; Return value:  Size  Location     Type
  1954 ;;                  1    wreg      void 
  1955 ;; Registers used:
  1956 ;;		wreg, status,2
  1957 ;; Tracked objects:
  1958 ;;		On entry : 0/0
  1959 ;;		On exit  : 0/0
  1960 ;;		Unchanged: 0/0
  1961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1962 ;;      Params:         0       0       0       0
  1963 ;;      Locals:         0       0       0       0
  1964 ;;      Temps:          1       0       0       0
  1965 ;;      Totals:         1       0       0       0
  1966 ;;Total ram usage:        1 bytes
  1967 ;; Hardware stack levels used:    1
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		Interrupt level 1
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           psect	intentry,class=CODE,delta=2
  1975                           global __pintentry
  1976                           __pintentry:
  1977  0004                     psect	intentry
  1978                           	file	"int.c"
  1979                           	line	6
  1980                           	global	__size_of_isr
  1981                           	__size_of_isr	equ	__end_of_isr-_isr
  1982  0031                     	
  1983                           _isr:	
  1984  0004                     ;incstack = 0
  1985                           	opt	stack 13
  1986                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  1987  0004  147E               ; Regs used in _isr: [wreg+status,2]
  1988                           psect	intentry
  1989                           	pagesel	$
  1990  0005  3180               	line	8
  1991                           	
  1992                           i1l887:	
  1993  0006                     ;int.c: 8:     if(ADIF){
  1994                           	movlb 0	; select bank0
  1995  0006  0020               	btfss	(142/8),(142)&7	;volatile
  1996  0007  1F11               	goto	u24_21
  1997  0008  280A               	goto	u24_20
  1998  0009  280B               u24_21:
  1999  000A                     	goto	i1l130
  2000  000A  280E               u24_20:
  2001  000B                     	line	9
  2002                           	
  2003                           i1l889:	
  2004  000B                     ;int.c: 9:         ADCOK = 1;
  2005                           	clrf	(_ADCOK)
  2006  000B  01FB               	incf	(_ADCOK),f
  2007  000C  0AFB               	line	10
  2008                           ;int.c: 10:         ADIF = 0;
  2009                           	bcf	(142/8),(142)&7	;volatile
  2010  000D  1311               	line	11
  2011                           ;int.c: 11:     }
  2012                           	
  2013                           i1l130:	
  2014  000E                     	line	13
  2015                           ;int.c: 12:     static int n = 0;;int.c: 13:     if(T0IF){
  2016                           	btfss	(90/8),(90)&7	;volatile
  2017  000E  1D0B               	goto	u25_21
  2018  000F  2811               	goto	u25_20
  2019  0010  2812               u25_21:
  2020  0011                     	goto	i1l136
  2021  0011  2833               u25_20:
  2022  0012                     	line	14
  2023                           	
  2024                           i1l891:	
  2025  0012                     ;int.c: 14:         if(n<times){
  2026                           	movf	(isr@n+1),w
  2027  0012  0821               	xorlw	80h
  2028  0013  3A80               	movwf	(??_isr+0)+0
  2029  0014  00F0               	movf	(_times+1),w
  2030  0015  0823               	xorlw	80h
  2031  0016  3A80               	subwf	(??_isr+0)+0,w
  2032  0017  0270               	skipz
  2033  0018  1D03               	goto	u26_25
  2034  0019  281C               	movf	(_times),w
  2035  001A  0822               	subwf	(isr@n),w
  2036  001B  0220               u26_25:
  2037  001C                     
  2038                           	skipnc
  2039  001C  1803               	goto	u26_21
  2040  001D  281F               	goto	u26_20
  2041  001E  2820               u26_21:
  2042  001F                     	goto	i1l899
  2043  001F  282A               u26_20:
  2044  0020                     	line	15
  2045                           	
  2046                           i1l893:	
  2047  0020                     ;int.c: 15:             n++;
  2048                           	movlw	01h
  2049  0020  3001               	movlb 0	; select bank0
  2050  0021  0020               	addwf	(isr@n),f
  2051  0022  07A0               	movlw	0
  2052  0023  3000               	addwfc	(isr@n+1),f
  2053  0024  3DA1               	line	16
  2054                           	
  2055                           i1l895:	
  2056  0025                     ;int.c: 16:             T0IF = 0;
  2057                           	bcf	(90/8),(90)&7	;volatile
  2058  0025  110B               	line	17
  2059                           	
  2060                           i1l897:	
  2061  0026                     ;int.c: 17:             T0IE = 1;
  2062                           	bsf	(93/8),(93)&7	;volatile
  2063  0026  168B               	line	18
  2064                           ;int.c: 18:             TMR0 = timebase;
  2065                           	movf	(_timebase),w
  2066  0027  0877               	movwf	(21)	;volatile
  2067  0028  0095               	line	19
  2068                           ;int.c: 19:         }
  2069                           	goto	i1l136
  2070  0029  2833               	line	20
  2071                           ;int.c: 20:         else{
  2072                           	
  2073                           i1l134:	
  2074  002A                     	line	21
  2075                           	
  2076                           i1l899:	
  2077  002A                     ;int.c: 21:             n = 0;
  2078                           	movlb 0	; select bank0
  2079  002A  0020               	clrf	(isr@n)
  2080  002B  01A0               	clrf	(isr@n+1)
  2081  002C  01A1               	line	22
  2082                           	
  2083                           i1l901:	
  2084  002D                     ;int.c: 22:             waitOK = 1;
  2085                           	movlw	01h
  2086  002D  3001               	movwf	(_waitOK)
  2087  002E  00F9               	movlw	0
  2088  002F  3000               	movwf	((_waitOK))+1
  2089  0030  00FA               	goto	i1l136
  2090  0031  2833               	line	23
  2091                           ;int.c: 23:         }
  2092                           	
  2093                           i1l135:	
  2094  0032                     	goto	i1l136
  2095  0032  2833               	line	24
  2096                           ;int.c: 24:     }
  2097                           	
  2098                           i1l133:	
  2099  0033                     	line	25
  2100                           	
  2101                           i1l136:	
  2102  0033                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2103  0033  107E               	retfie
  2104  0034  0009               	opt stack 0
  2105                           GLOBAL	__end_of_isr
  2106                           	__end_of_isr:
  2107  0035                     	signat	_isr,89
  2108                           global	___latbits
  2109                           ___latbits	equ	0
  2110  0000                     	global	btemp
  2111                           	btemp set 07Eh
  2112  007E                     
  2113                           	DABS	1,126,2	;btemp
  2114                           	global	int$flags
  2115                           	int$flags	set btemp
  2116  007E                     	global	wtemp0
  2117                           	wtemp0 set btemp+0
  2118  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         9
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      12
    BANK0            80      2       8
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_getadc
    _wait->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_wait

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1559
                             _getadc
                               _wait
                           _wdt_init
 ---------------------------------------------------------------------------------
 (1) _wdt_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait                                                 2     0      2    1535
                                              0 BANK0      2     0      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) _getadc                                               6     4      2      24
                                              1 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getadc
   _wait
     ___wmul
   _wdt_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      14       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      14      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jul 25 14:16:51 2018

            __CFG_CP$OFF 0000                       l90 0116                       l91 0117  
                     l92 0117                       l85 005F                       l86 010C  
                     l95 0188                       l87 00CD                       l88 010B  
                     l89 0115                       l98 0144                       l99 0144  
    ___wmul@multiplicand 0073              __CFG_LVP$ON 0000                      l100 0148  
                    l102 015D                      l103 0165                      l106 0138  
                    l107 0137                      l140 0171                      l108 013F  
                    l141 0182                      l109 013F                      l142 0187  
                    l139 0169                      l741 0166                      l751 0182  
                    l743 0169                      l911 011E                      l903 0118  
                    l761 0156                      l753 0187                      l745 016D  
                    l913 011F                      l905 011A                      l921 0043  
                    l763 015B                      l755 0140                      l747 0176  
                    l915 0123                      l907 011C                      l931 004E  
                    l923 0046                      l765 015D                      l757 0141  
                    l749 017B                      l917 0134                      l909 011D  
                    l941 0056                      l933 0052                      l925 0047  
                    l767 0165                      l759 014A                      l919 0138  
                    l951 005D                      l943 0057                      l935 0053  
                    l927 0049                      l961 007F                      l953 005F  
                    l945 0058                      l937 0054                      l929 004A  
                    l971 0097                      l963 0081                      l955 0070  
                    l947 005A                      l939 0055                      l981 00B6  
                    l973 00A0                      l965 008A                      l957 0074  
                    l949 005B                      l991 00D8                      l983 00B8  
                    l975 00A2                      l967 008C                      l959 0077  
                    l993 00DA                      l985 00C1                      l977 00AB  
                    l969 0095                      l995 00DB                      l987 00C3  
                    l979 00AD                      _GIE 005F                      l997 00DC  
                    l989 00D0                      l999 00E5                      _RC3 0073  
                    u200 015B                      u201 015A                      u140 016D  
                    u141 016C                      u170 0181                      u171 0180  
                    u155 0172                      u180 0148                      u181 0147  
                    u165 0177                      u190 0156                      u270 013E  
                    u191 0155                      u271 013D                      u280 0070  
                    u281 006F                      u290 0074                      u291 0073  
                    _PSA 04AB                      _isr 0004             __CFG_BORV$LO 0000  
                    wreg 0009                     l1001 00E7                     l1011 00F5  
                   l1003 00E8                     l1013 00F6                     l1005 00E9  
                   l1015 00FF                     l1007 00F2                     l1017 0101  
                   l1009 00F4                     l1019 010C                     _ADIF 008E  
                   _ADFM 04F7                     ?_isr 0070                     _ADGO 04E9  
                   _ADON 04E8                     _T0IE 005D                     _T0IF 005A  
                   _T0CS 04AD                     _LATA 010C                     _LATC 010E  
                   _TMR0 0015             __CFG_WRT$OFF 0000                     _main 0043  
                   _vadc 0024                     _wait 0118                     btemp 007E  
                   isr@n 0020                     start 0035            __CFG_MCLRE$ON 0000  
                  ??_isr 0070            __CFG_PLLEN$ON 0000                    ?_main 0070  
                  _ADCOK 007B            __CFG_WDTE$OFF 0000                    ?_wait 0026  
                  _ANSA2 0C62                    _ANSC3 0C73                    _LATA0 0860  
                  _LATA1 0861                    _LATC0 0870                    _LATA4 0864  
                  _LATA5 0865                    _LATC1 0871                    _LATC2 0872  
                  _LATC4 0874                    i1l130 000E                    i1l133 0033  
                  i1l134 002A                    i1l135 0032                    i1l136 0033  
                  i1l901 002D                    i1l891 0012                    i1l893 0020  
                  i1l895 0025                    i1l887 0006                    i1l897 0026  
                  i1l889 000B                    i1l899 002A                    u24_20 000B  
                  u24_21 000A                    u25_20 0012                    u25_21 0011  
                  u26_20 0020                    u26_21 001F                    u26_25 001C  
                  _TRISA 008C                    _TRISC 008E                    _times 0022  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
        __initialization 0036             __end_of_main 0118             __end_of_wait 0140  
         __CFG_LPBOR$OFF 0000                   ??_main 0077                   ??_wait 0077  
                 _ADRESH 009C                   _ADRESL 009B           __CFG_ZCDDIS$ON 0000  
                 _TRISA2 0462                   _TRISC3 0473           __CFG_PWRTE$OFF 0000  
                 ___wmul 0166           __CFG_STVREN$ON 0000                   _getadc 0140  
                 _waitOK 0079                   wait@ms 0026         __end_of_wdt_init 0189  
__end_of__initialization 0040           __pcstackCOMMON 0070               __pbssBANK0 0020  
             __pmaintext 0043                  ?___wmul 0071          __CFG_PPS1WAY$ON 0000  
             __pintentry 0004                  ?_getadc 0071               _getadc$142 0076  
                _ADPREF0 04F0                  _ADPREF1 04F1                ?_wdt_init 0070  
        __size_of___wmul 0022          __size_of_getadc 0026                  __ptext1 0188  
                __ptext2 0118                  __ptext3 0166                  __ptext4 0140  
           __size_of_isr 0031     end_of_initialization 0040               ??_wdt_init 0071  
       __CFG_FOSC$INTOSC 0000           __end_of___wmul 0188           __end_of_getadc 0166  
    start_initialization 0036              __end_of_isr 0035                 ??___wmul 0075  
               ??_getadc 0073              __pbssCOMMON 0077                ___latbits 0000  
          __pcstackBANK0 0026                __pnvBANK0 0024        __size_of_wdt_init 0001  
         ___wmul@product 0075               _ADCON0bits 009D               _ADCON1bits 009E  
      ___wmul@multiplier 0071            __size_of_main 00D5            __size_of_wait 0028  
               _timebase 0077                 int$flags 007E                 _wdt_init 0188  
               intlevel1 0000        __CFG_CLKOUTEN$OFF 0000  
