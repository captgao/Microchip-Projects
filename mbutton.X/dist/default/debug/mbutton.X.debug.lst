

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Aug 06 22:45:07 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1703 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   120                           PORTC equ 0Eh ;# 
   121  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   122                           PIR1 equ 011h ;# 
   123  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   124                           PIR2 equ 012h ;# 
   125  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   126                           PIR3 equ 013h ;# 
   127  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   128                           TMR0 equ 015h ;# 
   129  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   130                           TMR1 equ 016h ;# 
   131  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   132                           TMR1L equ 016h ;# 
   133  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   134                           TMR1H equ 017h ;# 
   135  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   136                           T1CON equ 018h ;# 
   137  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   138                           T1GCON equ 019h ;# 
   139  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   140                           TMR2 equ 01Ah ;# 
   141  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   142                           PR2 equ 01Bh ;# 
   143  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   144                           T2CON equ 01Ch ;# 
   145  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   148                           TRISC equ 08Eh ;# 
   149  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   150                           PIE1 equ 091h ;# 
   151  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   152                           PIE2 equ 092h ;# 
   153  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   154                           PIE3 equ 093h ;# 
   155  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   156                           OPTION_REG equ 095h ;# 
   157  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   158                           PCON equ 096h ;# 
   159  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   160                           WDTCON equ 097h ;# 
   161  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   162                           OSCTUNE equ 098h ;# 
   163  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   164                           OSCCON equ 099h ;# 
   165  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   166                           OSCSTAT equ 09Ah ;# 
   167  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   168                           ADRES equ 09Bh ;# 
   169  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   170                           ADRESL equ 09Bh ;# 
   171  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   172                           ADRESH equ 09Ch ;# 
   173  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   174                           ADCON0 equ 09Dh ;# 
   175  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   176                           ADCON1 equ 09Eh ;# 
   177  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   178                           ADCON2 equ 09Fh ;# 
   179  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   182                           LATC equ 010Eh ;# 
   183  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   184                           BORCON equ 0116h ;# 
   185  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   186                           FVRCON equ 0117h ;# 
   187  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   188                           ZCD1CON equ 011Ch ;# 
   189  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   190                           ANSELA equ 018Ch ;# 
   191  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   192                           ANSELC equ 018Eh ;# 
   193  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   194                           PMADR equ 0191h ;# 
   195  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   196                           PMADRL equ 0191h ;# 
   197  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   198                           PMADRH equ 0192h ;# 
   199  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   200                           PMDAT equ 0193h ;# 
   201  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   202                           PMDATL equ 0193h ;# 
   203  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   204                           PMDATH equ 0194h ;# 
   205  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   206                           PMCON1 equ 0195h ;# 
   207  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   208                           PMCON2 equ 0196h ;# 
   209  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   210                           VREGCON equ 0197h ;# 
   211  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   212                           WPUA equ 020Ch ;# 
   213  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   214                           WPUC equ 020Eh ;# 
   215  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   216                           SSP1BUF equ 0211h ;# 
   217  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   218                           SSPBUF equ 0211h ;# 
   219  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   220                           SSP1ADD equ 0212h ;# 
   221  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   222                           SSPADD equ 0212h ;# 
   223  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   224                           SSP1MSK equ 0213h ;# 
   225  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   226                           SSPMSK equ 0213h ;# 
   227  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   228                           SSP1STAT equ 0214h ;# 
   229  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   230                           SSPSTAT equ 0214h ;# 
   231  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   232                           SSP1CON1 equ 0215h ;# 
   233  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   234                           SSPCON equ 0215h ;# 
   235  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   236                           SSPCON1 equ 0215h ;# 
   237  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   238                           SSP1CON equ 0215h ;# 
   239  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   240                           SSP1CON2 equ 0216h ;# 
   241  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   242                           SSPCON2 equ 0216h ;# 
   243  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   244                           SSP1CON3 equ 0217h ;# 
   245  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   246                           SSPCON3 equ 0217h ;# 
   247  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   248                           ODCONA equ 028Ch ;# 
   249  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   250                           ODCONC equ 028Eh ;# 
   251  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   252                           CCPR1 equ 0291h ;# 
   253  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   254                           CCPR1L equ 0291h ;# 
   255  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   256                           CCPR1H equ 0292h ;# 
   257  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   258                           CCP1CON equ 0293h ;# 
   259  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   260                           ECCP1CON equ 0293h ;# 
   261  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   262                           CCPR2 equ 0298h ;# 
   263  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   264                           CCPR2L equ 0298h ;# 
   265  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   266                           CCPR2H equ 0299h ;# 
   267  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   268                           CCP2CON equ 029Ah ;# 
   269  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   270                           ECCP2CON equ 029Ah ;# 
   271  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   272                           SLRCONA equ 030Ch ;# 
   273  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   274                           SLRCONC equ 030Eh ;# 
   275  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   276                           INLVLA equ 038Ch ;# 
   277  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   278                           INLVLC equ 038Eh ;# 
   279  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   280                           IOCAP equ 0391h ;# 
   281  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   282                           IOCAN equ 0392h ;# 
   283  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   284                           IOCAF equ 0393h ;# 
   285  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   286                           IOCCP equ 0397h ;# 
   287  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   288                           IOCCN equ 0398h ;# 
   289  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   290                           IOCCF equ 0399h ;# 
   291  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   292                           OPA1CON equ 0511h ;# 
   293  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   294                           OPA2CON equ 0515h ;# 
   295  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   296                           PPSLOCK equ 0E0Fh ;# 
   297  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   298                           INTPPS equ 0E10h ;# 
   299  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   300                           T0CKIPPS equ 0E11h ;# 
   301  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   302                           T1CKIPPS equ 0E12h ;# 
   303  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   304                           T1GPPS equ 0E13h ;# 
   305  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   306                           CCP1PPS equ 0E14h ;# 
   307  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   308                           CCP2PPS equ 0E15h ;# 
   309  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   310                           SSPCLKPPS equ 0E20h ;# 
   311  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   312                           SSPDATPPS equ 0E21h ;# 
   313  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   314                           SSPSSPPS equ 0E22h ;# 
   315  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   316                           RA0PPS equ 0E90h ;# 
   317  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   318                           RA1PPS equ 0E91h ;# 
   319  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   320                           RA2PPS equ 0E92h ;# 
   321  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   322                           RA4PPS equ 0E94h ;# 
   323  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   324                           RA5PPS equ 0E95h ;# 
   325  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   326                           RC0PPS equ 0EA0h ;# 
   327  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   328                           RC1PPS equ 0EA1h ;# 
   329  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   330                           RC2PPS equ 0EA2h ;# 
   331  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   332                           RC3PPS equ 0EA3h ;# 
   333  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   334                           RC4PPS equ 0EA4h ;# 
   335  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   336                           RC5PPS equ 0EA5h ;# 
   337  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   338                           ICDBK0H equ 0F9Eh ;# 
   339  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   340                           STATUS_SHAD equ 0FE4h ;# 
   341  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   342                           WREG_SHAD equ 0FE5h ;# 
   343  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   344                           BSR_SHAD equ 0FE6h ;# 
   345  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   346                           PCLATH_SHAD equ 0FE7h ;# 
   347  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   348                           FSR0L_SHAD equ 0FE8h ;# 
   349  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   350                           FSR0H_SHAD equ 0FE9h ;# 
   351  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   352                           FSR1L_SHAD equ 0FEAh ;# 
   353  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   354                           FSR1H_SHAD equ 0FEBh ;# 
   355  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   356                           STKPTR equ 0FEDh ;# 
   357  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   358                           TOSL equ 0FEEh ;# 
   359  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   360                           TOSH equ 0FEFh ;# 
   361  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   362                           INDF0 equ 00h ;# 
   363  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   364                           INDF1 equ 01h ;# 
   365  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   366                           PCL equ 02h ;# 
   367  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   368                           STATUS equ 03h ;# 
   369  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   370                           FSR0L equ 04h ;# 
   371  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   372                           FSR0H equ 05h ;# 
   373  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   374                           FSR1L equ 06h ;# 
   375  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   376                           FSR1H equ 07h ;# 
   377  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   378                           BSR equ 08h ;# 
   379  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   380                           WREG equ 09h ;# 
   381  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   382                           PCLATH equ 0Ah ;# 
   383  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   384                           INTCON equ 0Bh ;# 
   385  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   386                           PORTA equ 0Ch ;# 
   387  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   388                           PORTC equ 0Eh ;# 
   389  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   390                           PIR1 equ 011h ;# 
   391  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   392                           PIR2 equ 012h ;# 
   393  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   394                           PIR3 equ 013h ;# 
   395  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   396                           TMR0 equ 015h ;# 
   397  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   398                           TMR1 equ 016h ;# 
   399  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   400                           TMR1L equ 016h ;# 
   401  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   402                           TMR1H equ 017h ;# 
   403  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   404                           T1CON equ 018h ;# 
   405  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   406                           T1GCON equ 019h ;# 
   407  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   408                           TMR2 equ 01Ah ;# 
   409  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   410                           PR2 equ 01Bh ;# 
   411  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   412                           T2CON equ 01Ch ;# 
   413  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   414                           TRISA equ 08Ch ;# 
   415  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   416                           TRISC equ 08Eh ;# 
   417  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   418                           PIE1 equ 091h ;# 
   419  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   420                           PIE2 equ 092h ;# 
   421  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   422                           PIE3 equ 093h ;# 
   423  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   424                           OPTION_REG equ 095h ;# 
   425  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   426                           PCON equ 096h ;# 
   427  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   428                           WDTCON equ 097h ;# 
   429  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   430                           OSCTUNE equ 098h ;# 
   431  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   432                           OSCCON equ 099h ;# 
   433  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   434                           OSCSTAT equ 09Ah ;# 
   435  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   436                           ADRES equ 09Bh ;# 
   437  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   438                           ADRESL equ 09Bh ;# 
   439  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   440                           ADRESH equ 09Ch ;# 
   441  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   442                           ADCON0 equ 09Dh ;# 
   443  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   444                           ADCON1 equ 09Eh ;# 
   445  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   446                           ADCON2 equ 09Fh ;# 
   447  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   448                           LATA equ 010Ch ;# 
   449  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   450                           LATC equ 010Eh ;# 
   451  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   452                           BORCON equ 0116h ;# 
   453  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   454                           FVRCON equ 0117h ;# 
   455  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   456                           ZCD1CON equ 011Ch ;# 
   457  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   458                           ANSELA equ 018Ch ;# 
   459  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   460                           ANSELC equ 018Eh ;# 
   461  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   462                           PMADR equ 0191h ;# 
   463  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   464                           PMADRL equ 0191h ;# 
   465  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   466                           PMADRH equ 0192h ;# 
   467  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   468                           PMDAT equ 0193h ;# 
   469  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   470                           PMDATL equ 0193h ;# 
   471  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   472                           PMDATH equ 0194h ;# 
   473  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   474                           PMCON1 equ 0195h ;# 
   475  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   476                           PMCON2 equ 0196h ;# 
   477  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   478                           VREGCON equ 0197h ;# 
   479  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   480                           WPUA equ 020Ch ;# 
   481  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   482                           WPUC equ 020Eh ;# 
   483  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   484                           SSP1BUF equ 0211h ;# 
   485  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   486                           SSPBUF equ 0211h ;# 
   487  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   488                           SSP1ADD equ 0212h ;# 
   489  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   490                           SSPADD equ 0212h ;# 
   491  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   492                           SSP1MSK equ 0213h ;# 
   493  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   494                           SSPMSK equ 0213h ;# 
   495  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   496                           SSP1STAT equ 0214h ;# 
   497  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   498                           SSPSTAT equ 0214h ;# 
   499  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   500                           SSP1CON1 equ 0215h ;# 
   501  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   502                           SSPCON equ 0215h ;# 
   503  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   504                           SSPCON1 equ 0215h ;# 
   505  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   506                           SSP1CON equ 0215h ;# 
   507  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   508                           SSP1CON2 equ 0216h ;# 
   509  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   510                           SSPCON2 equ 0216h ;# 
   511  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   512                           SSP1CON3 equ 0217h ;# 
   513  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   514                           SSPCON3 equ 0217h ;# 
   515  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   516                           ODCONA equ 028Ch ;# 
   517  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   518                           ODCONC equ 028Eh ;# 
   519  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   520                           CCPR1 equ 0291h ;# 
   521  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   522                           CCPR1L equ 0291h ;# 
   523  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   524                           CCPR1H equ 0292h ;# 
   525  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   526                           CCP1CON equ 0293h ;# 
   527  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   528                           ECCP1CON equ 0293h ;# 
   529  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   530                           CCPR2 equ 0298h ;# 
   531  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   532                           CCPR2L equ 0298h ;# 
   533  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   534                           CCPR2H equ 0299h ;# 
   535  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   536                           CCP2CON equ 029Ah ;# 
   537  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   538                           ECCP2CON equ 029Ah ;# 
   539  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   540                           SLRCONA equ 030Ch ;# 
   541  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   542                           SLRCONC equ 030Eh ;# 
   543  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   544                           INLVLA equ 038Ch ;# 
   545  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   546                           INLVLC equ 038Eh ;# 
   547  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   548                           IOCAP equ 0391h ;# 
   549  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   550                           IOCAN equ 0392h ;# 
   551  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   552                           IOCAF equ 0393h ;# 
   553  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   554                           IOCCP equ 0397h ;# 
   555  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   556                           IOCCN equ 0398h ;# 
   557  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   558                           IOCCF equ 0399h ;# 
   559  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   560                           OPA1CON equ 0511h ;# 
   561  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   562                           OPA2CON equ 0515h ;# 
   563  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   564                           PPSLOCK equ 0E0Fh ;# 
   565  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   566                           INTPPS equ 0E10h ;# 
   567  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   568                           T0CKIPPS equ 0E11h ;# 
   569  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   570                           T1CKIPPS equ 0E12h ;# 
   571  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   572                           T1GPPS equ 0E13h ;# 
   573  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   574                           CCP1PPS equ 0E14h ;# 
   575  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   576                           CCP2PPS equ 0E15h ;# 
   577  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   578                           SSPCLKPPS equ 0E20h ;# 
   579  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   580                           SSPDATPPS equ 0E21h ;# 
   581  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   582                           SSPSSPPS equ 0E22h ;# 
   583  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   584                           RA0PPS equ 0E90h ;# 
   585  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   586                           RA1PPS equ 0E91h ;# 
   587  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   588                           RA2PPS equ 0E92h ;# 
   589  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   590                           RA4PPS equ 0E94h ;# 
   591  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   592                           RA5PPS equ 0E95h ;# 
   593  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   594                           RC0PPS equ 0EA0h ;# 
   595  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   596                           RC1PPS equ 0EA1h ;# 
   597  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   598                           RC2PPS equ 0EA2h ;# 
   599  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   600                           RC3PPS equ 0EA3h ;# 
   601  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   602                           RC4PPS equ 0EA4h ;# 
   603  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   604                           RC5PPS equ 0EA5h ;# 
   605  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   606                           ICDBK0H equ 0F9Eh ;# 
   607  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   608                           STATUS_SHAD equ 0FE4h ;# 
   609  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   610                           WREG_SHAD equ 0FE5h ;# 
   611  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   612                           BSR_SHAD equ 0FE6h ;# 
   613  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   614                           PCLATH_SHAD equ 0FE7h ;# 
   615  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   616                           FSR0L_SHAD equ 0FE8h ;# 
   617  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   618                           FSR0H_SHAD equ 0FE9h ;# 
   619  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   620                           FSR1L_SHAD equ 0FEAh ;# 
   621  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   622                           FSR1H_SHAD equ 0FEBh ;# 
   623  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   624                           STKPTR equ 0FEDh ;# 
   625  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   626                           TOSL equ 0FEEh ;# 
   627  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   628                           TOSH equ 0FEFh ;# 
   629  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   630                           INDF0 equ 00h ;# 
   631  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   632                           INDF1 equ 01h ;# 
   633  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   634                           PCL equ 02h ;# 
   635  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   636                           STATUS equ 03h ;# 
   637  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   638                           FSR0L equ 04h ;# 
   639  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   640                           FSR0H equ 05h ;# 
   641  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   642                           FSR1L equ 06h ;# 
   643  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   644                           FSR1H equ 07h ;# 
   645  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   646                           BSR equ 08h ;# 
   647  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   648                           WREG equ 09h ;# 
   649  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   650                           PCLATH equ 0Ah ;# 
   651  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   652                           INTCON equ 0Bh ;# 
   653  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   654                           PORTA equ 0Ch ;# 
   655  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   656                           PORTC equ 0Eh ;# 
   657  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   658                           PIR1 equ 011h ;# 
   659  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   660                           PIR2 equ 012h ;# 
   661  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   662                           PIR3 equ 013h ;# 
   663  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   664                           TMR0 equ 015h ;# 
   665  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   666                           TMR1 equ 016h ;# 
   667  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   668                           TMR1L equ 016h ;# 
   669  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   670                           TMR1H equ 017h ;# 
   671  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   672                           T1CON equ 018h ;# 
   673  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   674                           T1GCON equ 019h ;# 
   675  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   676                           TMR2 equ 01Ah ;# 
   677  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   678                           PR2 equ 01Bh ;# 
   679  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   680                           T2CON equ 01Ch ;# 
   681  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   682                           TRISA equ 08Ch ;# 
   683  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   684                           TRISC equ 08Eh ;# 
   685  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   686                           PIE1 equ 091h ;# 
   687  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   688                           PIE2 equ 092h ;# 
   689  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   690                           PIE3 equ 093h ;# 
   691  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   692                           OPTION_REG equ 095h ;# 
   693  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   694                           PCON equ 096h ;# 
   695  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   696                           WDTCON equ 097h ;# 
   697  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   698                           OSCTUNE equ 098h ;# 
   699  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   700                           OSCCON equ 099h ;# 
   701  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   702                           OSCSTAT equ 09Ah ;# 
   703  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   704                           ADRES equ 09Bh ;# 
   705  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   706                           ADRESL equ 09Bh ;# 
   707  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   708                           ADRESH equ 09Ch ;# 
   709  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   710                           ADCON0 equ 09Dh ;# 
   711  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   712                           ADCON1 equ 09Eh ;# 
   713  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   714                           ADCON2 equ 09Fh ;# 
   715  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   716                           LATA equ 010Ch ;# 
   717  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   718                           LATC equ 010Eh ;# 
   719  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   720                           BORCON equ 0116h ;# 
   721  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   722                           FVRCON equ 0117h ;# 
   723  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   724                           ZCD1CON equ 011Ch ;# 
   725  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   726                           ANSELA equ 018Ch ;# 
   727  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   728                           ANSELC equ 018Eh ;# 
   729  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   730                           PMADR equ 0191h ;# 
   731  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   732                           PMADRL equ 0191h ;# 
   733  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   734                           PMADRH equ 0192h ;# 
   735  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   736                           PMDAT equ 0193h ;# 
   737  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   738                           PMDATL equ 0193h ;# 
   739  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   740                           PMDATH equ 0194h ;# 
   741  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   742                           PMCON1 equ 0195h ;# 
   743  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   744                           PMCON2 equ 0196h ;# 
   745  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   746                           VREGCON equ 0197h ;# 
   747  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   748                           WPUA equ 020Ch ;# 
   749  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   750                           WPUC equ 020Eh ;# 
   751  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   752                           SSP1BUF equ 0211h ;# 
   753  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   754                           SSPBUF equ 0211h ;# 
   755  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   756                           SSP1ADD equ 0212h ;# 
   757  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   758                           SSPADD equ 0212h ;# 
   759  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   760                           SSP1MSK equ 0213h ;# 
   761  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   762                           SSPMSK equ 0213h ;# 
   763  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   764                           SSP1STAT equ 0214h ;# 
   765  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   766                           SSPSTAT equ 0214h ;# 
   767  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   768                           SSP1CON1 equ 0215h ;# 
   769  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   770                           SSPCON equ 0215h ;# 
   771  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   772                           SSPCON1 equ 0215h ;# 
   773  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   774                           SSP1CON equ 0215h ;# 
   775  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   776                           SSP1CON2 equ 0216h ;# 
   777  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   778                           SSPCON2 equ 0216h ;# 
   779  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   780                           SSP1CON3 equ 0217h ;# 
   781  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   782                           SSPCON3 equ 0217h ;# 
   783  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   784                           ODCONA equ 028Ch ;# 
   785  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   786                           ODCONC equ 028Eh ;# 
   787  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   788                           CCPR1 equ 0291h ;# 
   789  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   790                           CCPR1L equ 0291h ;# 
   791  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   792                           CCPR1H equ 0292h ;# 
   793  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   794                           CCP1CON equ 0293h ;# 
   795  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   796                           ECCP1CON equ 0293h ;# 
   797  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   798                           CCPR2 equ 0298h ;# 
   799  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   800                           CCPR2L equ 0298h ;# 
   801  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   802                           CCPR2H equ 0299h ;# 
   803  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   804                           CCP2CON equ 029Ah ;# 
   805  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   806                           ECCP2CON equ 029Ah ;# 
   807  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   808                           SLRCONA equ 030Ch ;# 
   809  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   810                           SLRCONC equ 030Eh ;# 
   811  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   812                           INLVLA equ 038Ch ;# 
   813  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   814                           INLVLC equ 038Eh ;# 
   815  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   816                           IOCAP equ 0391h ;# 
   817  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   818                           IOCAN equ 0392h ;# 
   819  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   820                           IOCAF equ 0393h ;# 
   821  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   822                           IOCCP equ 0397h ;# 
   823  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   824                           IOCCN equ 0398h ;# 
   825  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   826                           IOCCF equ 0399h ;# 
   827  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   828                           OPA1CON equ 0511h ;# 
   829  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   830                           OPA2CON equ 0515h ;# 
   831  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   832                           PPSLOCK equ 0E0Fh ;# 
   833  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   834                           INTPPS equ 0E10h ;# 
   835  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   836                           T0CKIPPS equ 0E11h ;# 
   837  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   838                           T1CKIPPS equ 0E12h ;# 
   839  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   840                           T1GPPS equ 0E13h ;# 
   841  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   842                           CCP1PPS equ 0E14h ;# 
   843  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   844                           CCP2PPS equ 0E15h ;# 
   845  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   846                           SSPCLKPPS equ 0E20h ;# 
   847  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   848                           SSPDATPPS equ 0E21h ;# 
   849  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   850                           SSPSSPPS equ 0E22h ;# 
   851  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   852                           RA0PPS equ 0E90h ;# 
   853  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   854                           RA1PPS equ 0E91h ;# 
   855  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   856                           RA2PPS equ 0E92h ;# 
   857  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   858                           RA4PPS equ 0E94h ;# 
   859  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   860                           RA5PPS equ 0E95h ;# 
   861  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   862                           RC0PPS equ 0EA0h ;# 
   863  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   864                           RC1PPS equ 0EA1h ;# 
   865  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   866                           RC2PPS equ 0EA2h ;# 
   867  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   868                           RC3PPS equ 0EA3h ;# 
   869  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   870                           RC4PPS equ 0EA4h ;# 
   871  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   872                           RC5PPS equ 0EA5h ;# 
   873  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   874                           ICDBK0H equ 0F9Eh ;# 
   875  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   876                           STATUS_SHAD equ 0FE4h ;# 
   877  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   878                           WREG_SHAD equ 0FE5h ;# 
   879  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   880                           BSR_SHAD equ 0FE6h ;# 
   881  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   882                           PCLATH_SHAD equ 0FE7h ;# 
   883  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   884                           FSR0L_SHAD equ 0FE8h ;# 
   885  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   886                           FSR0H_SHAD equ 0FE9h ;# 
   887  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   888                           FSR1L_SHAD equ 0FEAh ;# 
   889  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   890                           FSR1H_SHAD equ 0FEBh ;# 
   891  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   892                           STKPTR equ 0FEDh ;# 
   893  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   894                           TOSL equ 0FEEh ;# 
   895  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   896                           TOSH equ 0FEFh ;# 
   897  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   898                           INDF0 equ 00h ;# 
   899  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   900                           INDF1 equ 01h ;# 
   901  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   902                           PCL equ 02h ;# 
   903  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   904                           STATUS equ 03h ;# 
   905  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   906                           FSR0L equ 04h ;# 
   907  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   908                           FSR0H equ 05h ;# 
   909  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   910                           FSR1L equ 06h ;# 
   911  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   912                           FSR1H equ 07h ;# 
   913  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   914                           BSR equ 08h ;# 
   915  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   916                           WREG equ 09h ;# 
   917  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   918                           PCLATH equ 0Ah ;# 
   919  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   920                           INTCON equ 0Bh ;# 
   921  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   922                           PORTA equ 0Ch ;# 
   923  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   924                           PORTC equ 0Eh ;# 
   925  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   926                           PIR1 equ 011h ;# 
   927  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   928                           PIR2 equ 012h ;# 
   929  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   930                           PIR3 equ 013h ;# 
   931  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   932                           TMR0 equ 015h ;# 
   933  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   934                           TMR1 equ 016h ;# 
   935  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   936                           TMR1L equ 016h ;# 
   937  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   938                           TMR1H equ 017h ;# 
   939  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   940                           T1CON equ 018h ;# 
   941  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   942                           T1GCON equ 019h ;# 
   943  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   944                           TMR2 equ 01Ah ;# 
   945  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   946                           PR2 equ 01Bh ;# 
   947  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   948                           T2CON equ 01Ch ;# 
   949  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   950                           TRISA equ 08Ch ;# 
   951  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   952                           TRISC equ 08Eh ;# 
   953  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   954                           PIE1 equ 091h ;# 
   955  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   956                           PIE2 equ 092h ;# 
   957  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   958                           PIE3 equ 093h ;# 
   959  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   960                           OPTION_REG equ 095h ;# 
   961  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   962                           PCON equ 096h ;# 
   963  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   964                           WDTCON equ 097h ;# 
   965  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   966                           OSCTUNE equ 098h ;# 
   967  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   968                           OSCCON equ 099h ;# 
   969  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   970                           OSCSTAT equ 09Ah ;# 
   971  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   972                           ADRES equ 09Bh ;# 
   973  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   974                           ADRESL equ 09Bh ;# 
   975  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   976                           ADRESH equ 09Ch ;# 
   977  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   978                           ADCON0 equ 09Dh ;# 
   979  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   980                           ADCON1 equ 09Eh ;# 
   981  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   982                           ADCON2 equ 09Fh ;# 
   983  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   984                           LATA equ 010Ch ;# 
   985  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   986                           LATC equ 010Eh ;# 
   987  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   988                           BORCON equ 0116h ;# 
   989  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   990                           FVRCON equ 0117h ;# 
   991  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   992                           ZCD1CON equ 011Ch ;# 
   993  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   994                           ANSELA equ 018Ch ;# 
   995  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   996                           ANSELC equ 018Eh ;# 
   997  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   998                           PMADR equ 0191h ;# 
   999  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1000                           PMADRL equ 0191h ;# 
  1001  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1002                           PMADRH equ 0192h ;# 
  1003  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1004                           PMDAT equ 0193h ;# 
  1005  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1006                           PMDATL equ 0193h ;# 
  1007  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1008                           PMDATH equ 0194h ;# 
  1009  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1010                           PMCON1 equ 0195h ;# 
  1011  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1012                           PMCON2 equ 0196h ;# 
  1013  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1014                           VREGCON equ 0197h ;# 
  1015  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1016                           WPUA equ 020Ch ;# 
  1017  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1018                           WPUC equ 020Eh ;# 
  1019  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1020                           SSP1BUF equ 0211h ;# 
  1021  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1022                           SSPBUF equ 0211h ;# 
  1023  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1024                           SSP1ADD equ 0212h ;# 
  1025  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1026                           SSPADD equ 0212h ;# 
  1027  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1028                           SSP1MSK equ 0213h ;# 
  1029  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1030                           SSPMSK equ 0213h ;# 
  1031  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1032                           SSP1STAT equ 0214h ;# 
  1033  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1034                           SSPSTAT equ 0214h ;# 
  1035  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1036                           SSP1CON1 equ 0215h ;# 
  1037  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1038                           SSPCON equ 0215h ;# 
  1039  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1040                           SSPCON1 equ 0215h ;# 
  1041  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1042                           SSP1CON equ 0215h ;# 
  1043  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1044                           SSP1CON2 equ 0216h ;# 
  1045  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1046                           SSPCON2 equ 0216h ;# 
  1047  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1048                           SSP1CON3 equ 0217h ;# 
  1049  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1050                           SSPCON3 equ 0217h ;# 
  1051  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1052                           ODCONA equ 028Ch ;# 
  1053  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1054                           ODCONC equ 028Eh ;# 
  1055  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1056                           CCPR1 equ 0291h ;# 
  1057  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1058                           CCPR1L equ 0291h ;# 
  1059  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1060                           CCPR1H equ 0292h ;# 
  1061  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1062                           CCP1CON equ 0293h ;# 
  1063  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1064                           ECCP1CON equ 0293h ;# 
  1065  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1066                           CCPR2 equ 0298h ;# 
  1067  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1068                           CCPR2L equ 0298h ;# 
  1069  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1070                           CCPR2H equ 0299h ;# 
  1071  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1072                           CCP2CON equ 029Ah ;# 
  1073  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1074                           ECCP2CON equ 029Ah ;# 
  1075  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1076                           SLRCONA equ 030Ch ;# 
  1077  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1078                           SLRCONC equ 030Eh ;# 
  1079  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1080                           INLVLA equ 038Ch ;# 
  1081  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1082                           INLVLC equ 038Eh ;# 
  1083  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1084                           IOCAP equ 0391h ;# 
  1085  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1086                           IOCAN equ 0392h ;# 
  1087  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1088                           IOCAF equ 0393h ;# 
  1089  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1090                           IOCCP equ 0397h ;# 
  1091  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1092                           IOCCN equ 0398h ;# 
  1093  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1094                           IOCCF equ 0399h ;# 
  1095  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1096                           OPA1CON equ 0511h ;# 
  1097  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1098                           OPA2CON equ 0515h ;# 
  1099  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1100                           PPSLOCK equ 0E0Fh ;# 
  1101  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1102                           INTPPS equ 0E10h ;# 
  1103  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1104                           T0CKIPPS equ 0E11h ;# 
  1105  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1106                           T1CKIPPS equ 0E12h ;# 
  1107  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1108                           T1GPPS equ 0E13h ;# 
  1109  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1110                           CCP1PPS equ 0E14h ;# 
  1111  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1112                           CCP2PPS equ 0E15h ;# 
  1113  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1114                           SSPCLKPPS equ 0E20h ;# 
  1115  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1116                           SSPDATPPS equ 0E21h ;# 
  1117  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1118                           SSPSSPPS equ 0E22h ;# 
  1119  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1120                           RA0PPS equ 0E90h ;# 
  1121  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1122                           RA1PPS equ 0E91h ;# 
  1123  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1124                           RA2PPS equ 0E92h ;# 
  1125  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1126                           RA4PPS equ 0E94h ;# 
  1127  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1128                           RA5PPS equ 0E95h ;# 
  1129  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1130                           RC0PPS equ 0EA0h ;# 
  1131  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1132                           RC1PPS equ 0EA1h ;# 
  1133  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1134                           RC2PPS equ 0EA2h ;# 
  1135  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1136                           RC3PPS equ 0EA3h ;# 
  1137  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1138                           RC4PPS equ 0EA4h ;# 
  1139  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1140                           RC5PPS equ 0EA5h ;# 
  1141  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1142                           ICDBK0H equ 0F9Eh ;# 
  1143  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1144                           STATUS_SHAD equ 0FE4h ;# 
  1145  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1146                           WREG_SHAD equ 0FE5h ;# 
  1147  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1148                           BSR_SHAD equ 0FE6h ;# 
  1149  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1150                           PCLATH_SHAD equ 0FE7h ;# 
  1151  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1152                           FSR0L_SHAD equ 0FE8h ;# 
  1153  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1154                           FSR0H_SHAD equ 0FE9h ;# 
  1155  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1156                           FSR1L_SHAD equ 0FEAh ;# 
  1157  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1158                           FSR1H_SHAD equ 0FEBh ;# 
  1159  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1160                           STKPTR equ 0FEDh ;# 
  1161  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1162                           TOSL equ 0FEEh ;# 
  1163  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1164                           TOSH equ 0FEFh ;# 
  1165  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1166                           INDF0 equ 00h ;# 
  1167  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1168                           INDF1 equ 01h ;# 
  1169  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1170                           PCL equ 02h ;# 
  1171  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1172                           STATUS equ 03h ;# 
  1173  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1174                           FSR0L equ 04h ;# 
  1175  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1176                           FSR0H equ 05h ;# 
  1177  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1178                           FSR1L equ 06h ;# 
  1179  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1180                           FSR1H equ 07h ;# 
  1181  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1182                           BSR equ 08h ;# 
  1183  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1184                           WREG equ 09h ;# 
  1185  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1186                           PCLATH equ 0Ah ;# 
  1187  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1188                           INTCON equ 0Bh ;# 
  1189  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1190                           PORTA equ 0Ch ;# 
  1191  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1192                           PORTC equ 0Eh ;# 
  1193  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1194                           PIR1 equ 011h ;# 
  1195  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1196                           PIR2 equ 012h ;# 
  1197  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1198                           PIR3 equ 013h ;# 
  1199  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1200                           TMR0 equ 015h ;# 
  1201  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1202                           TMR1 equ 016h ;# 
  1203  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1204                           TMR1L equ 016h ;# 
  1205  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1206                           TMR1H equ 017h ;# 
  1207  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1208                           T1CON equ 018h ;# 
  1209  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1210                           T1GCON equ 019h ;# 
  1211  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1212                           TMR2 equ 01Ah ;# 
  1213  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1214                           PR2 equ 01Bh ;# 
  1215  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1216                           T2CON equ 01Ch ;# 
  1217  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1218                           TRISA equ 08Ch ;# 
  1219  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1220                           TRISC equ 08Eh ;# 
  1221  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1222                           PIE1 equ 091h ;# 
  1223  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1224                           PIE2 equ 092h ;# 
  1225  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1226                           PIE3 equ 093h ;# 
  1227  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1228                           OPTION_REG equ 095h ;# 
  1229  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1230                           PCON equ 096h ;# 
  1231  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1232                           WDTCON equ 097h ;# 
  1233  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1234                           OSCTUNE equ 098h ;# 
  1235  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1236                           OSCCON equ 099h ;# 
  1237  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1238                           OSCSTAT equ 09Ah ;# 
  1239  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1240                           ADRES equ 09Bh ;# 
  1241  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1242                           ADRESL equ 09Bh ;# 
  1243  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1244                           ADRESH equ 09Ch ;# 
  1245  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1246                           ADCON0 equ 09Dh ;# 
  1247  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1248                           ADCON1 equ 09Eh ;# 
  1249  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1250                           ADCON2 equ 09Fh ;# 
  1251  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1252                           LATA equ 010Ch ;# 
  1253  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1254                           LATC equ 010Eh ;# 
  1255  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1256                           BORCON equ 0116h ;# 
  1257  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1258                           FVRCON equ 0117h ;# 
  1259  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1260                           ZCD1CON equ 011Ch ;# 
  1261  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1262                           ANSELA equ 018Ch ;# 
  1263  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1264                           ANSELC equ 018Eh ;# 
  1265  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1266                           PMADR equ 0191h ;# 
  1267  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1268                           PMADRL equ 0191h ;# 
  1269  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1270                           PMADRH equ 0192h ;# 
  1271  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1272                           PMDAT equ 0193h ;# 
  1273  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1274                           PMDATL equ 0193h ;# 
  1275  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1276                           PMDATH equ 0194h ;# 
  1277  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1278                           PMCON1 equ 0195h ;# 
  1279  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1280                           PMCON2 equ 0196h ;# 
  1281  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1282                           VREGCON equ 0197h ;# 
  1283  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1284                           WPUA equ 020Ch ;# 
  1285  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1286                           WPUC equ 020Eh ;# 
  1287  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1288                           SSP1BUF equ 0211h ;# 
  1289  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1290                           SSPBUF equ 0211h ;# 
  1291  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1292                           SSP1ADD equ 0212h ;# 
  1293  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1294                           SSPADD equ 0212h ;# 
  1295  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1296                           SSP1MSK equ 0213h ;# 
  1297  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1298                           SSPMSK equ 0213h ;# 
  1299  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1300                           SSP1STAT equ 0214h ;# 
  1301  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1302                           SSPSTAT equ 0214h ;# 
  1303  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1304                           SSP1CON1 equ 0215h ;# 
  1305  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1306                           SSPCON equ 0215h ;# 
  1307  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1308                           SSPCON1 equ 0215h ;# 
  1309  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1310                           SSP1CON equ 0215h ;# 
  1311  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1312                           SSP1CON2 equ 0216h ;# 
  1313  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1314                           SSPCON2 equ 0216h ;# 
  1315  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1316                           SSP1CON3 equ 0217h ;# 
  1317  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1318                           SSPCON3 equ 0217h ;# 
  1319  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1320                           ODCONA equ 028Ch ;# 
  1321  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1322                           ODCONC equ 028Eh ;# 
  1323  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1324                           CCPR1 equ 0291h ;# 
  1325  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1326                           CCPR1L equ 0291h ;# 
  1327  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1328                           CCPR1H equ 0292h ;# 
  1329  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1330                           CCP1CON equ 0293h ;# 
  1331  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1332                           ECCP1CON equ 0293h ;# 
  1333  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1334                           CCPR2 equ 0298h ;# 
  1335  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1336                           CCPR2L equ 0298h ;# 
  1337  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1338                           CCPR2H equ 0299h ;# 
  1339  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1340                           CCP2CON equ 029Ah ;# 
  1341  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1342                           ECCP2CON equ 029Ah ;# 
  1343  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1344                           SLRCONA equ 030Ch ;# 
  1345  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1346                           SLRCONC equ 030Eh ;# 
  1347  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1348                           INLVLA equ 038Ch ;# 
  1349  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1350                           INLVLC equ 038Eh ;# 
  1351  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1352                           IOCAP equ 0391h ;# 
  1353  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1354                           IOCAN equ 0392h ;# 
  1355  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1356                           IOCAF equ 0393h ;# 
  1357  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1358                           IOCCP equ 0397h ;# 
  1359  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1360                           IOCCN equ 0398h ;# 
  1361  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1362                           IOCCF equ 0399h ;# 
  1363  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1364                           OPA1CON equ 0511h ;# 
  1365  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1366                           OPA2CON equ 0515h ;# 
  1367  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1368                           PPSLOCK equ 0E0Fh ;# 
  1369  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1370                           INTPPS equ 0E10h ;# 
  1371  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1372                           T0CKIPPS equ 0E11h ;# 
  1373  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1374                           T1CKIPPS equ 0E12h ;# 
  1375  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1376                           T1GPPS equ 0E13h ;# 
  1377  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1378                           CCP1PPS equ 0E14h ;# 
  1379  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1380                           CCP2PPS equ 0E15h ;# 
  1381  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1382                           SSPCLKPPS equ 0E20h ;# 
  1383  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1384                           SSPDATPPS equ 0E21h ;# 
  1385  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1386                           SSPSSPPS equ 0E22h ;# 
  1387  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1388                           RA0PPS equ 0E90h ;# 
  1389  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1390                           RA1PPS equ 0E91h ;# 
  1391  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1392                           RA2PPS equ 0E92h ;# 
  1393  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1394                           RA4PPS equ 0E94h ;# 
  1395  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1396                           RA5PPS equ 0E95h ;# 
  1397  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1398                           RC0PPS equ 0EA0h ;# 
  1399  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1400                           RC1PPS equ 0EA1h ;# 
  1401  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1402                           RC2PPS equ 0EA2h ;# 
  1403  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1404                           RC3PPS equ 0EA3h ;# 
  1405  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1406                           RC4PPS equ 0EA4h ;# 
  1407  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1408                           RC5PPS equ 0EA5h ;# 
  1409  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1410                           ICDBK0H equ 0F9Eh ;# 
  1411  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1412                           STATUS_SHAD equ 0FE4h ;# 
  1413  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1414                           WREG_SHAD equ 0FE5h ;# 
  1415  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1416                           BSR_SHAD equ 0FE6h ;# 
  1417  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1418                           PCLATH_SHAD equ 0FE7h ;# 
  1419  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1420                           FSR0L_SHAD equ 0FE8h ;# 
  1421  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1422                           FSR0H_SHAD equ 0FE9h ;# 
  1423  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1424                           FSR1L_SHAD equ 0FEAh ;# 
  1425  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1426                           FSR1H_SHAD equ 0FEBh ;# 
  1427  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1428                           STKPTR equ 0FEDh ;# 
  1429  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1430                           TOSL equ 0FEEh ;# 
  1431  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1432                           TOSH equ 0FEFh ;# 
  1433  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1434                           INDF0 equ 00h ;# 
  1435  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1436                           INDF1 equ 01h ;# 
  1437  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1438                           PCL equ 02h ;# 
  1439  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1440                           STATUS equ 03h ;# 
  1441  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1442                           FSR0L equ 04h ;# 
  1443  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1444                           FSR0H equ 05h ;# 
  1445  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1446                           FSR1L equ 06h ;# 
  1447  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1448                           FSR1H equ 07h ;# 
  1449  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1450                           BSR equ 08h ;# 
  1451  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1452                           WREG equ 09h ;# 
  1453  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1454                           PCLATH equ 0Ah ;# 
  1455  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1456                           INTCON equ 0Bh ;# 
  1457  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1458                           PORTA equ 0Ch ;# 
  1459  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1460                           PORTC equ 0Eh ;# 
  1461  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1462                           PIR1 equ 011h ;# 
  1463  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1464                           PIR2 equ 012h ;# 
  1465  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1466                           PIR3 equ 013h ;# 
  1467  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1468                           TMR0 equ 015h ;# 
  1469  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1470                           TMR1 equ 016h ;# 
  1471  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1472                           TMR1L equ 016h ;# 
  1473  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1474                           TMR1H equ 017h ;# 
  1475  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1476                           T1CON equ 018h ;# 
  1477  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1478                           T1GCON equ 019h ;# 
  1479  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1480                           TMR2 equ 01Ah ;# 
  1481  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1482                           PR2 equ 01Bh ;# 
  1483  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1484                           T2CON equ 01Ch ;# 
  1485  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1486                           TRISA equ 08Ch ;# 
  1487  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1488                           TRISC equ 08Eh ;# 
  1489  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1490                           PIE1 equ 091h ;# 
  1491  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1492                           PIE2 equ 092h ;# 
  1493  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1494                           PIE3 equ 093h ;# 
  1495  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1496                           OPTION_REG equ 095h ;# 
  1497  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1498                           PCON equ 096h ;# 
  1499  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1500                           WDTCON equ 097h ;# 
  1501  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1502                           OSCTUNE equ 098h ;# 
  1503  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1504                           OSCCON equ 099h ;# 
  1505  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1506                           OSCSTAT equ 09Ah ;# 
  1507  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1508                           ADRES equ 09Bh ;# 
  1509  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1510                           ADRESL equ 09Bh ;# 
  1511  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1512                           ADRESH equ 09Ch ;# 
  1513  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1514                           ADCON0 equ 09Dh ;# 
  1515  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1516                           ADCON1 equ 09Eh ;# 
  1517  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1518                           ADCON2 equ 09Fh ;# 
  1519  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1520                           LATA equ 010Ch ;# 
  1521  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1522                           LATC equ 010Eh ;# 
  1523  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1524                           BORCON equ 0116h ;# 
  1525  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1526                           FVRCON equ 0117h ;# 
  1527  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1528                           ZCD1CON equ 011Ch ;# 
  1529  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1530                           ANSELA equ 018Ch ;# 
  1531  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1532                           ANSELC equ 018Eh ;# 
  1533  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1534                           PMADR equ 0191h ;# 
  1535  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1536                           PMADRL equ 0191h ;# 
  1537  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1538                           PMADRH equ 0192h ;# 
  1539  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1540                           PMDAT equ 0193h ;# 
  1541  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1542                           PMDATL equ 0193h ;# 
  1543  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1544                           PMDATH equ 0194h ;# 
  1545  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1546                           PMCON1 equ 0195h ;# 
  1547  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1548                           PMCON2 equ 0196h ;# 
  1549  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1550                           VREGCON equ 0197h ;# 
  1551  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1552                           WPUA equ 020Ch ;# 
  1553  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1554                           WPUC equ 020Eh ;# 
  1555  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1556                           SSP1BUF equ 0211h ;# 
  1557  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1558                           SSPBUF equ 0211h ;# 
  1559  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1560                           SSP1ADD equ 0212h ;# 
  1561  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1562                           SSPADD equ 0212h ;# 
  1563  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1564                           SSP1MSK equ 0213h ;# 
  1565  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1566                           SSPMSK equ 0213h ;# 
  1567  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1568                           SSP1STAT equ 0214h ;# 
  1569  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1570                           SSPSTAT equ 0214h ;# 
  1571  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1572                           SSP1CON1 equ 0215h ;# 
  1573  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1574                           SSPCON equ 0215h ;# 
  1575  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1576                           SSPCON1 equ 0215h ;# 
  1577  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1578                           SSP1CON equ 0215h ;# 
  1579  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1580                           SSP1CON2 equ 0216h ;# 
  1581  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1582                           SSPCON2 equ 0216h ;# 
  1583  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1584                           SSP1CON3 equ 0217h ;# 
  1585  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1586                           SSPCON3 equ 0217h ;# 
  1587  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1588                           ODCONA equ 028Ch ;# 
  1589  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1590                           ODCONC equ 028Eh ;# 
  1591  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1592                           CCPR1 equ 0291h ;# 
  1593  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1594                           CCPR1L equ 0291h ;# 
  1595  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1596                           CCPR1H equ 0292h ;# 
  1597  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1598                           CCP1CON equ 0293h ;# 
  1599  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1600                           ECCP1CON equ 0293h ;# 
  1601  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1602                           CCPR2 equ 0298h ;# 
  1603  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1604                           CCPR2L equ 0298h ;# 
  1605  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1606                           CCPR2H equ 0299h ;# 
  1607  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1608                           CCP2CON equ 029Ah ;# 
  1609  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1610                           ECCP2CON equ 029Ah ;# 
  1611  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1612                           SLRCONA equ 030Ch ;# 
  1613  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1614                           SLRCONC equ 030Eh ;# 
  1615  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1616                           INLVLA equ 038Ch ;# 
  1617  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1618                           INLVLC equ 038Eh ;# 
  1619  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1620                           IOCAP equ 0391h ;# 
  1621  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1622                           IOCAN equ 0392h ;# 
  1623  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1624                           IOCAF equ 0393h ;# 
  1625  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1626                           IOCCP equ 0397h ;# 
  1627  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1628                           IOCCN equ 0398h ;# 
  1629  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1630                           IOCCF equ 0399h ;# 
  1631  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1632                           OPA1CON equ 0511h ;# 
  1633  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1634                           OPA2CON equ 0515h ;# 
  1635  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1636                           PPSLOCK equ 0E0Fh ;# 
  1637  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1638                           INTPPS equ 0E10h ;# 
  1639  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1640                           T0CKIPPS equ 0E11h ;# 
  1641  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1642                           T1CKIPPS equ 0E12h ;# 
  1643  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1644                           T1GPPS equ 0E13h ;# 
  1645  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1646                           CCP1PPS equ 0E14h ;# 
  1647  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1648                           CCP2PPS equ 0E15h ;# 
  1649  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1650                           SSPCLKPPS equ 0E20h ;# 
  1651  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1652                           SSPDATPPS equ 0E21h ;# 
  1653  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1654                           SSPSSPPS equ 0E22h ;# 
  1655  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1656                           RA0PPS equ 0E90h ;# 
  1657  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1658                           RA1PPS equ 0E91h ;# 
  1659  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1660                           RA2PPS equ 0E92h ;# 
  1661  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1662                           RA4PPS equ 0E94h ;# 
  1663  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1664                           RA5PPS equ 0E95h ;# 
  1665  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1666                           RC0PPS equ 0EA0h ;# 
  1667  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1668                           RC1PPS equ 0EA1h ;# 
  1669  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1670                           RC2PPS equ 0EA2h ;# 
  1671  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1672                           RC3PPS equ 0EA3h ;# 
  1673  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1674                           RC4PPS equ 0EA4h ;# 
  1675  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1676                           RC5PPS equ 0EA5h ;# 
  1677  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1678                           ICDBK0H equ 0F9Eh ;# 
  1679  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1680                           STATUS_SHAD equ 0FE4h ;# 
  1681  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1682                           WREG_SHAD equ 0FE5h ;# 
  1683  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1684                           BSR_SHAD equ 0FE6h ;# 
  1685  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1686                           PCLATH_SHAD equ 0FE7h ;# 
  1687  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1688                           FSR0L_SHAD equ 0FE8h ;# 
  1689  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1690                           FSR0H_SHAD equ 0FE9h ;# 
  1691  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1692                           FSR1L_SHAD equ 0FEAh ;# 
  1693  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1694                           FSR1H_SHAD equ 0FEBh ;# 
  1695  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1696                           STKPTR equ 0FEDh ;# 
  1697  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1698                           TOSL equ 0FEEh ;# 
  1699  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1700                           TOSH equ 0FEFh ;# 
  1701  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1702                           INDF0 equ 00h ;# 
  1703  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1704                           INDF1 equ 01h ;# 
  1705  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1706                           PCL equ 02h ;# 
  1707  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1708                           STATUS equ 03h ;# 
  1709  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1710                           FSR0L equ 04h ;# 
  1711  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1712                           FSR0H equ 05h ;# 
  1713  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1714                           FSR1L equ 06h ;# 
  1715  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1716                           FSR1H equ 07h ;# 
  1717  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1718                           BSR equ 08h ;# 
  1719  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1720                           WREG equ 09h ;# 
  1721  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1722                           PCLATH equ 0Ah ;# 
  1723  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1724                           INTCON equ 0Bh ;# 
  1725  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1726                           PORTA equ 0Ch ;# 
  1727  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1728                           PORTC equ 0Eh ;# 
  1729  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1730                           PIR1 equ 011h ;# 
  1731  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1732                           PIR2 equ 012h ;# 
  1733  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1734                           PIR3 equ 013h ;# 
  1735  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1736                           TMR0 equ 015h ;# 
  1737  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1738                           TMR1 equ 016h ;# 
  1739  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1740                           TMR1L equ 016h ;# 
  1741  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1742                           TMR1H equ 017h ;# 
  1743  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1744                           T1CON equ 018h ;# 
  1745  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1746                           T1GCON equ 019h ;# 
  1747  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1748                           TMR2 equ 01Ah ;# 
  1749  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1750                           PR2 equ 01Bh ;# 
  1751  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1752                           T2CON equ 01Ch ;# 
  1753  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1754                           TRISA equ 08Ch ;# 
  1755  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1756                           TRISC equ 08Eh ;# 
  1757  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1758                           PIE1 equ 091h ;# 
  1759  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1760                           PIE2 equ 092h ;# 
  1761  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1762                           PIE3 equ 093h ;# 
  1763  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1764                           OPTION_REG equ 095h ;# 
  1765  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1766                           PCON equ 096h ;# 
  1767  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1768                           WDTCON equ 097h ;# 
  1769  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1770                           OSCTUNE equ 098h ;# 
  1771  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1772                           OSCCON equ 099h ;# 
  1773  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1774                           OSCSTAT equ 09Ah ;# 
  1775  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1776                           ADRES equ 09Bh ;# 
  1777  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1778                           ADRESL equ 09Bh ;# 
  1779  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1780                           ADRESH equ 09Ch ;# 
  1781  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1782                           ADCON0 equ 09Dh ;# 
  1783  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1784                           ADCON1 equ 09Eh ;# 
  1785  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1786                           ADCON2 equ 09Fh ;# 
  1787  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1788                           LATA equ 010Ch ;# 
  1789  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1790                           LATC equ 010Eh ;# 
  1791  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1792                           BORCON equ 0116h ;# 
  1793  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1794                           FVRCON equ 0117h ;# 
  1795  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1796                           ZCD1CON equ 011Ch ;# 
  1797  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1798                           ANSELA equ 018Ch ;# 
  1799  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1800                           ANSELC equ 018Eh ;# 
  1801  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1802                           PMADR equ 0191h ;# 
  1803  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1804                           PMADRL equ 0191h ;# 
  1805  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1806                           PMADRH equ 0192h ;# 
  1807  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1808                           PMDAT equ 0193h ;# 
  1809  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1810                           PMDATL equ 0193h ;# 
  1811  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1812                           PMDATH equ 0194h ;# 
  1813  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1814                           PMCON1 equ 0195h ;# 
  1815  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1816                           PMCON2 equ 0196h ;# 
  1817  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1818                           VREGCON equ 0197h ;# 
  1819  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1820                           WPUA equ 020Ch ;# 
  1821  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1822                           WPUC equ 020Eh ;# 
  1823  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1824                           SSP1BUF equ 0211h ;# 
  1825  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1826                           SSPBUF equ 0211h ;# 
  1827  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1828                           SSP1ADD equ 0212h ;# 
  1829  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1830                           SSPADD equ 0212h ;# 
  1831  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1832                           SSP1MSK equ 0213h ;# 
  1833  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1834                           SSPMSK equ 0213h ;# 
  1835  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1836                           SSP1STAT equ 0214h ;# 
  1837  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1838                           SSPSTAT equ 0214h ;# 
  1839  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1840                           SSP1CON1 equ 0215h ;# 
  1841  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1842                           SSPCON equ 0215h ;# 
  1843  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1844                           SSPCON1 equ 0215h ;# 
  1845  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1846                           SSP1CON equ 0215h ;# 
  1847  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1848                           SSP1CON2 equ 0216h ;# 
  1849  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1850                           SSPCON2 equ 0216h ;# 
  1851  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1852                           SSP1CON3 equ 0217h ;# 
  1853  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1854                           SSPCON3 equ 0217h ;# 
  1855  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1856                           ODCONA equ 028Ch ;# 
  1857  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1858                           ODCONC equ 028Eh ;# 
  1859  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1860                           CCPR1 equ 0291h ;# 
  1861  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1862                           CCPR1L equ 0291h ;# 
  1863  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1864                           CCPR1H equ 0292h ;# 
  1865  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1866                           CCP1CON equ 0293h ;# 
  1867  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1868                           ECCP1CON equ 0293h ;# 
  1869  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1870                           CCPR2 equ 0298h ;# 
  1871  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1872                           CCPR2L equ 0298h ;# 
  1873  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1874                           CCPR2H equ 0299h ;# 
  1875  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1876                           CCP2CON equ 029Ah ;# 
  1877  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1878                           ECCP2CON equ 029Ah ;# 
  1879  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1880                           SLRCONA equ 030Ch ;# 
  1881  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1882                           SLRCONC equ 030Eh ;# 
  1883  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1884                           INLVLA equ 038Ch ;# 
  1885  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1886                           INLVLC equ 038Eh ;# 
  1887  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1888                           IOCAP equ 0391h ;# 
  1889  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1890                           IOCAN equ 0392h ;# 
  1891  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1892                           IOCAF equ 0393h ;# 
  1893  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1894                           IOCCP equ 0397h ;# 
  1895  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1896                           IOCCN equ 0398h ;# 
  1897  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1898                           IOCCF equ 0399h ;# 
  1899  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1900                           OPA1CON equ 0511h ;# 
  1901  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1902                           OPA2CON equ 0515h ;# 
  1903  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1904                           PPSLOCK equ 0E0Fh ;# 
  1905  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1906                           INTPPS equ 0E10h ;# 
  1907  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1908                           T0CKIPPS equ 0E11h ;# 
  1909  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1910                           T1CKIPPS equ 0E12h ;# 
  1911  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1912                           T1GPPS equ 0E13h ;# 
  1913  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1914                           CCP1PPS equ 0E14h ;# 
  1915  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1916                           CCP2PPS equ 0E15h ;# 
  1917  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1918                           SSPCLKPPS equ 0E20h ;# 
  1919  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1920                           SSPDATPPS equ 0E21h ;# 
  1921  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1922                           SSPSSPPS equ 0E22h ;# 
  1923  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1924                           RA0PPS equ 0E90h ;# 
  1925  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1926                           RA1PPS equ 0E91h ;# 
  1927  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1928                           RA2PPS equ 0E92h ;# 
  1929  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1930                           RA4PPS equ 0E94h ;# 
  1931  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1932                           RA5PPS equ 0E95h ;# 
  1933  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1934                           RC0PPS equ 0EA0h ;# 
  1935  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1936                           RC1PPS equ 0EA1h ;# 
  1937  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1938                           RC2PPS equ 0EA2h ;# 
  1939  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1940                           RC3PPS equ 0EA3h ;# 
  1941  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1942                           RC4PPS equ 0EA4h ;# 
  1943  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1944                           RC5PPS equ 0EA5h ;# 
  1945  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1946                           ICDBK0H equ 0F9Eh ;# 
  1947  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1948                           STATUS_SHAD equ 0FE4h ;# 
  1949  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1950                           WREG_SHAD equ 0FE5h ;# 
  1951  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1952                           BSR_SHAD equ 0FE6h ;# 
  1953  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1954                           PCLATH_SHAD equ 0FE7h ;# 
  1955  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1956                           FSR0L_SHAD equ 0FE8h ;# 
  1957  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1958                           FSR0H_SHAD equ 0FE9h ;# 
  1959  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1960                           FSR1L_SHAD equ 0FEAh ;# 
  1961  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1962                           FSR1H_SHAD equ 0FEBh ;# 
  1963  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1964                           STKPTR equ 0FEDh ;# 
  1965  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1966                           TOSL equ 0FEEh ;# 
  1967  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1968                           TOSH equ 0FEFh ;# 
  1969  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1970                           INDF0 equ 00h ;# 
  1971  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1972                           INDF1 equ 01h ;# 
  1973  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1974                           PCL equ 02h ;# 
  1975  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1976                           STATUS equ 03h ;# 
  1977  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1978                           FSR0L equ 04h ;# 
  1979  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1980                           FSR0H equ 05h ;# 
  1981  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1982                           FSR1L equ 06h ;# 
  1983  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1984                           FSR1H equ 07h ;# 
  1985  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1986                           BSR equ 08h ;# 
  1987  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1988                           WREG equ 09h ;# 
  1989  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1990                           PCLATH equ 0Ah ;# 
  1991  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1992                           INTCON equ 0Bh ;# 
  1993  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1994                           PORTA equ 0Ch ;# 
  1995  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1996                           PORTC equ 0Eh ;# 
  1997  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1998                           PIR1 equ 011h ;# 
  1999  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2000                           PIR2 equ 012h ;# 
  2001  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2002                           PIR3 equ 013h ;# 
  2003  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2004                           TMR0 equ 015h ;# 
  2005  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2006                           TMR1 equ 016h ;# 
  2007  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2008                           TMR1L equ 016h ;# 
  2009  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2010                           TMR1H equ 017h ;# 
  2011  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2012                           T1CON equ 018h ;# 
  2013  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2014                           T1GCON equ 019h ;# 
  2015  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2016                           TMR2 equ 01Ah ;# 
  2017  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2018                           PR2 equ 01Bh ;# 
  2019  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2020                           T2CON equ 01Ch ;# 
  2021  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2022                           TRISA equ 08Ch ;# 
  2023  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2024                           TRISC equ 08Eh ;# 
  2025  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2026                           PIE1 equ 091h ;# 
  2027  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2028                           PIE2 equ 092h ;# 
  2029  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2030                           PIE3 equ 093h ;# 
  2031  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2032                           OPTION_REG equ 095h ;# 
  2033  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2034                           PCON equ 096h ;# 
  2035  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2036                           WDTCON equ 097h ;# 
  2037  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2038                           OSCTUNE equ 098h ;# 
  2039  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2040                           OSCCON equ 099h ;# 
  2041  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2042                           OSCSTAT equ 09Ah ;# 
  2043  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2044                           ADRES equ 09Bh ;# 
  2045  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2046                           ADRESL equ 09Bh ;# 
  2047  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2048                           ADRESH equ 09Ch ;# 
  2049  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2050                           ADCON0 equ 09Dh ;# 
  2051  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2052                           ADCON1 equ 09Eh ;# 
  2053  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2054                           ADCON2 equ 09Fh ;# 
  2055  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2056                           LATA equ 010Ch ;# 
  2057  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2058                           LATC equ 010Eh ;# 
  2059  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2060                           BORCON equ 0116h ;# 
  2061  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2062                           FVRCON equ 0117h ;# 
  2063  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2064                           ZCD1CON equ 011Ch ;# 
  2065  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2066                           ANSELA equ 018Ch ;# 
  2067  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2068                           ANSELC equ 018Eh ;# 
  2069  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2070                           PMADR equ 0191h ;# 
  2071  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2072                           PMADRL equ 0191h ;# 
  2073  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2074                           PMADRH equ 0192h ;# 
  2075  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2076                           PMDAT equ 0193h ;# 
  2077  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2078                           PMDATL equ 0193h ;# 
  2079  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2080                           PMDATH equ 0194h ;# 
  2081  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2082                           PMCON1 equ 0195h ;# 
  2083  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2084                           PMCON2 equ 0196h ;# 
  2085  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2086                           VREGCON equ 0197h ;# 
  2087  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2088                           WPUA equ 020Ch ;# 
  2089  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2090                           WPUC equ 020Eh ;# 
  2091  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2092                           SSP1BUF equ 0211h ;# 
  2093  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2094                           SSPBUF equ 0211h ;# 
  2095  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2096                           SSP1ADD equ 0212h ;# 
  2097  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2098                           SSPADD equ 0212h ;# 
  2099  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2100                           SSP1MSK equ 0213h ;# 
  2101  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2102                           SSPMSK equ 0213h ;# 
  2103  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2104                           SSP1STAT equ 0214h ;# 
  2105  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2106                           SSPSTAT equ 0214h ;# 
  2107  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2108                           SSP1CON1 equ 0215h ;# 
  2109  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2110                           SSPCON equ 0215h ;# 
  2111  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2112                           SSPCON1 equ 0215h ;# 
  2113  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2114                           SSP1CON equ 0215h ;# 
  2115  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2116                           SSP1CON2 equ 0216h ;# 
  2117  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2118                           SSPCON2 equ 0216h ;# 
  2119  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2120                           SSP1CON3 equ 0217h ;# 
  2121  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2122                           SSPCON3 equ 0217h ;# 
  2123  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2124                           ODCONA equ 028Ch ;# 
  2125  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2126                           ODCONC equ 028Eh ;# 
  2127  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2128                           CCPR1 equ 0291h ;# 
  2129  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2130                           CCPR1L equ 0291h ;# 
  2131  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2132                           CCPR1H equ 0292h ;# 
  2133  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2134                           CCP1CON equ 0293h ;# 
  2135  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2136                           ECCP1CON equ 0293h ;# 
  2137  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2138                           CCPR2 equ 0298h ;# 
  2139  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2140                           CCPR2L equ 0298h ;# 
  2141  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2142                           CCPR2H equ 0299h ;# 
  2143  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2144                           CCP2CON equ 029Ah ;# 
  2145  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2146                           ECCP2CON equ 029Ah ;# 
  2147  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2148                           SLRCONA equ 030Ch ;# 
  2149  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2150                           SLRCONC equ 030Eh ;# 
  2151  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2152                           INLVLA equ 038Ch ;# 
  2153  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2154                           INLVLC equ 038Eh ;# 
  2155  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2156                           IOCAP equ 0391h ;# 
  2157  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2158                           IOCAN equ 0392h ;# 
  2159  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2160                           IOCAF equ 0393h ;# 
  2161  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2162                           IOCCP equ 0397h ;# 
  2163  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2164                           IOCCN equ 0398h ;# 
  2165  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2166                           IOCCF equ 0399h ;# 
  2167  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2168                           OPA1CON equ 0511h ;# 
  2169  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2170                           OPA2CON equ 0515h ;# 
  2171  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2172                           PPSLOCK equ 0E0Fh ;# 
  2173  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2174                           INTPPS equ 0E10h ;# 
  2175  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2176                           T0CKIPPS equ 0E11h ;# 
  2177  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2178                           T1CKIPPS equ 0E12h ;# 
  2179  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2180                           T1GPPS equ 0E13h ;# 
  2181  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2182                           CCP1PPS equ 0E14h ;# 
  2183  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2184                           CCP2PPS equ 0E15h ;# 
  2185  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2186                           SSPCLKPPS equ 0E20h ;# 
  2187  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2188                           SSPDATPPS equ 0E21h ;# 
  2189  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2190                           SSPSSPPS equ 0E22h ;# 
  2191  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2192                           RA0PPS equ 0E90h ;# 
  2193  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2194                           RA1PPS equ 0E91h ;# 
  2195  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2196                           RA2PPS equ 0E92h ;# 
  2197  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2198                           RA4PPS equ 0E94h ;# 
  2199  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2200                           RA5PPS equ 0E95h ;# 
  2201  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2202                           RC0PPS equ 0EA0h ;# 
  2203  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2204                           RC1PPS equ 0EA1h ;# 
  2205  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2206                           RC2PPS equ 0EA2h ;# 
  2207  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2208                           RC3PPS equ 0EA3h ;# 
  2209  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2210                           RC4PPS equ 0EA4h ;# 
  2211  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2212                           RC5PPS equ 0EA5h ;# 
  2213  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2214                           ICDBK0H equ 0F9Eh ;# 
  2215  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2216                           STATUS_SHAD equ 0FE4h ;# 
  2217  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2218                           WREG_SHAD equ 0FE5h ;# 
  2219  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2220                           BSR_SHAD equ 0FE6h ;# 
  2221  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2222                           PCLATH_SHAD equ 0FE7h ;# 
  2223  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2224                           FSR0L_SHAD equ 0FE8h ;# 
  2225  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2226                           FSR0H_SHAD equ 0FE9h ;# 
  2227  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2228                           FSR1L_SHAD equ 0FEAh ;# 
  2229  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2230                           FSR1H_SHAD equ 0FEBh ;# 
  2231  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2232                           STKPTR equ 0FEDh ;# 
  2233  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2234                           TOSL equ 0FEEh ;# 
  2235  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2236                           TOSH equ 0FEFh ;# 
  2237  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2238                           INDF0 equ 00h ;# 
  2239  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2240                           INDF1 equ 01h ;# 
  2241  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2242                           PCL equ 02h ;# 
  2243  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2244                           STATUS equ 03h ;# 
  2245  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2246                           FSR0L equ 04h ;# 
  2247  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2248                           FSR0H equ 05h ;# 
  2249  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2250                           FSR1L equ 06h ;# 
  2251  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2252                           FSR1H equ 07h ;# 
  2253  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2254                           BSR equ 08h ;# 
  2255  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2256                           WREG equ 09h ;# 
  2257  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2258                           PCLATH equ 0Ah ;# 
  2259  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2260                           INTCON equ 0Bh ;# 
  2261  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2262                           PORTA equ 0Ch ;# 
  2263  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2264                           PORTC equ 0Eh ;# 
  2265  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2266                           PIR1 equ 011h ;# 
  2267  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2268                           PIR2 equ 012h ;# 
  2269  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2270                           PIR3 equ 013h ;# 
  2271  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2272                           TMR0 equ 015h ;# 
  2273  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2274                           TMR1 equ 016h ;# 
  2275  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2276                           TMR1L equ 016h ;# 
  2277  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2278                           TMR1H equ 017h ;# 
  2279  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2280                           T1CON equ 018h ;# 
  2281  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2282                           T1GCON equ 019h ;# 
  2283  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2284                           TMR2 equ 01Ah ;# 
  2285  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2286                           PR2 equ 01Bh ;# 
  2287  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2288                           T2CON equ 01Ch ;# 
  2289  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2290                           TRISA equ 08Ch ;# 
  2291  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2292                           TRISC equ 08Eh ;# 
  2293  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2294                           PIE1 equ 091h ;# 
  2295  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2296                           PIE2 equ 092h ;# 
  2297  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2298                           PIE3 equ 093h ;# 
  2299  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2300                           OPTION_REG equ 095h ;# 
  2301  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2302                           PCON equ 096h ;# 
  2303  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2304                           WDTCON equ 097h ;# 
  2305  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2306                           OSCTUNE equ 098h ;# 
  2307  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2308                           OSCCON equ 099h ;# 
  2309  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2310                           OSCSTAT equ 09Ah ;# 
  2311  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2312                           ADRES equ 09Bh ;# 
  2313  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2314                           ADRESL equ 09Bh ;# 
  2315  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2316                           ADRESH equ 09Ch ;# 
  2317  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2318                           ADCON0 equ 09Dh ;# 
  2319  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2320                           ADCON1 equ 09Eh ;# 
  2321  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2322                           ADCON2 equ 09Fh ;# 
  2323  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2324                           LATA equ 010Ch ;# 
  2325  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2326                           LATC equ 010Eh ;# 
  2327  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2328                           BORCON equ 0116h ;# 
  2329  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2330                           FVRCON equ 0117h ;# 
  2331  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2332                           ZCD1CON equ 011Ch ;# 
  2333  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2334                           ANSELA equ 018Ch ;# 
  2335  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2336                           ANSELC equ 018Eh ;# 
  2337  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2338                           PMADR equ 0191h ;# 
  2339  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2340                           PMADRL equ 0191h ;# 
  2341  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2342                           PMADRH equ 0192h ;# 
  2343  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2344                           PMDAT equ 0193h ;# 
  2345  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2346                           PMDATL equ 0193h ;# 
  2347  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2348                           PMDATH equ 0194h ;# 
  2349  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2350                           PMCON1 equ 0195h ;# 
  2351  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2352                           PMCON2 equ 0196h ;# 
  2353  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2354                           VREGCON equ 0197h ;# 
  2355  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2356                           WPUA equ 020Ch ;# 
  2357  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2358                           WPUC equ 020Eh ;# 
  2359  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2360                           SSP1BUF equ 0211h ;# 
  2361  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2362                           SSPBUF equ 0211h ;# 
  2363  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2364                           SSP1ADD equ 0212h ;# 
  2365  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2366                           SSPADD equ 0212h ;# 
  2367  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2368                           SSP1MSK equ 0213h ;# 
  2369  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2370                           SSPMSK equ 0213h ;# 
  2371  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2372                           SSP1STAT equ 0214h ;# 
  2373  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2374                           SSPSTAT equ 0214h ;# 
  2375  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2376                           SSP1CON1 equ 0215h ;# 
  2377  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2378                           SSPCON equ 0215h ;# 
  2379  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2380                           SSPCON1 equ 0215h ;# 
  2381  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2382                           SSP1CON equ 0215h ;# 
  2383  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2384                           SSP1CON2 equ 0216h ;# 
  2385  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2386                           SSPCON2 equ 0216h ;# 
  2387  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2388                           SSP1CON3 equ 0217h ;# 
  2389  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2390                           SSPCON3 equ 0217h ;# 
  2391  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2392                           ODCONA equ 028Ch ;# 
  2393  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2394                           ODCONC equ 028Eh ;# 
  2395  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2396                           CCPR1 equ 0291h ;# 
  2397  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2398                           CCPR1L equ 0291h ;# 
  2399  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2400                           CCPR1H equ 0292h ;# 
  2401  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2402                           CCP1CON equ 0293h ;# 
  2403  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2404                           ECCP1CON equ 0293h ;# 
  2405  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2406                           CCPR2 equ 0298h ;# 
  2407  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2408                           CCPR2L equ 0298h ;# 
  2409  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2410                           CCPR2H equ 0299h ;# 
  2411  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2412                           CCP2CON equ 029Ah ;# 
  2413  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2414                           ECCP2CON equ 029Ah ;# 
  2415  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2416                           SLRCONA equ 030Ch ;# 
  2417  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2418                           SLRCONC equ 030Eh ;# 
  2419  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2420                           INLVLA equ 038Ch ;# 
  2421  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2422                           INLVLC equ 038Eh ;# 
  2423  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2424                           IOCAP equ 0391h ;# 
  2425  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2426                           IOCAN equ 0392h ;# 
  2427  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2428                           IOCAF equ 0393h ;# 
  2429  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2430                           IOCCP equ 0397h ;# 
  2431  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2432                           IOCCN equ 0398h ;# 
  2433  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2434                           IOCCF equ 0399h ;# 
  2435  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2436                           OPA1CON equ 0511h ;# 
  2437  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2438                           OPA2CON equ 0515h ;# 
  2439  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2440                           PPSLOCK equ 0E0Fh ;# 
  2441  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2442                           INTPPS equ 0E10h ;# 
  2443  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2444                           T0CKIPPS equ 0E11h ;# 
  2445  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2446                           T1CKIPPS equ 0E12h ;# 
  2447  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2448                           T1GPPS equ 0E13h ;# 
  2449  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2450                           CCP1PPS equ 0E14h ;# 
  2451  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2452                           CCP2PPS equ 0E15h ;# 
  2453  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2454                           SSPCLKPPS equ 0E20h ;# 
  2455  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2456                           SSPDATPPS equ 0E21h ;# 
  2457  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2458                           SSPSSPPS equ 0E22h ;# 
  2459  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2460                           RA0PPS equ 0E90h ;# 
  2461  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2462                           RA1PPS equ 0E91h ;# 
  2463  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2464                           RA2PPS equ 0E92h ;# 
  2465  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2466                           RA4PPS equ 0E94h ;# 
  2467  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2468                           RA5PPS equ 0E95h ;# 
  2469  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2470                           RC0PPS equ 0EA0h ;# 
  2471  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2472                           RC1PPS equ 0EA1h ;# 
  2473  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2474                           RC2PPS equ 0EA2h ;# 
  2475  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2476                           RC3PPS equ 0EA3h ;# 
  2477  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2478                           RC4PPS equ 0EA4h ;# 
  2479  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2480                           RC5PPS equ 0EA5h ;# 
  2481  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2482                           ICDBK0H equ 0F9Eh ;# 
  2483  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2484                           STATUS_SHAD equ 0FE4h ;# 
  2485  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2486                           WREG_SHAD equ 0FE5h ;# 
  2487  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2488                           BSR_SHAD equ 0FE6h ;# 
  2489  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2490                           PCLATH_SHAD equ 0FE7h ;# 
  2491  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2492                           FSR0L_SHAD equ 0FE8h ;# 
  2493  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2494                           FSR0H_SHAD equ 0FE9h ;# 
  2495  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2496                           FSR1L_SHAD equ 0FEAh ;# 
  2497  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2498                           FSR1H_SHAD equ 0FEBh ;# 
  2499  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2500                           STKPTR equ 0FEDh ;# 
  2501  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2502                           TOSL equ 0FEEh ;# 
  2503  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2504                           TOSH equ 0FEFh ;# 
  2505  0FEF                     	FNCALL	_main,_MTOUCH_Button_isPressed
  2506                           	FNCALL	_main,_MTOUCH_Service_Mainloop
  2507                           	FNCALL	_main,_SYSTEM_Initialize
  2508                           	FNCALL	_SYSTEM_Initialize,_MTOUCH_Initialize
  2509                           	FNCALL	_SYSTEM_Initialize,_OSCILLATOR_Initialize
  2510                           	FNCALL	_SYSTEM_Initialize,_PIN_MANAGER_Initialize
  2511                           	FNCALL	_SYSTEM_Initialize,_TMR2_Initialize
  2512                           	FNCALL	_SYSTEM_Initialize,_WDT_Initialize
  2513                           	FNCALL	_TMR2_Initialize,_TMR2_SetInterruptHandler
  2514                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Button_InitializeAll
  2515                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_InitializeAll
  2516                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_Sampled_ResetAll
  2517                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_Scan_Initialize
  2518                           	FNCALL	_MTOUCH_Sensor_InitializeAll,_MTOUCH_Sensor_Enable
  2519                           	FNCALL	_MTOUCH_Sensor_InitializeAll,_Sensor_Sampled_Reset
  2520                           	FNCALL	_MTOUCH_Sensor_Enable,___bmul
  2521                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Button_ServiceAll
  2522                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Sensor_SampleAll
  2523                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Sensor_Sampled_ResetAll
  2524                           	FNCALL	_MTOUCH_Sensor_Sampled_ResetAll,_Sensor_Sampled_Reset
  2525                           	FNCALL	_MTOUCH_Sensor_SampleAll,_Sensor_Service
  2526                           	FNCALL	_Sensor_Service,_Sensor_Acquisition
  2527                           	FNCALL	_Sensor_Service,_Sensor_DefaultCallback
  2528                           	FNCALL	_Sensor_Service,_Sensor_RawSample_Update
  2529                           	FNCALL	_Sensor_Service,_Sensor_setSampled
  2530                           	FNCALL	_Sensor_Service,___bmul
  2531                           	FNCALL	_Sensor_Acquisition,_Sensor_Acq_ExecutePacket
  2532                           	FNCALL	_Sensor_Acquisition,_Sensor_Scanfrequency_Evaluation
  2533                           	FNCALL	_Sensor_Acquisition,_Sensor_setActive
  2534                           	FNCALL	_Sensor_Acquisition,_Sensor_setInactive
  2535                           	FNCALL	_Sensor_Acquisition,_abs
  2536                           	FNCALL	_Sensor_Scanfrequency_Evaluation,_Sensor_Acq_ExecutePacket
  2537                           	FNCALL	_Sensor_Acq_ExecutePacket,_MTOUCH_Sensor_Scan_Initialize
  2538                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_LoadPeriodRegister
  2539                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_SetInterruptHandler
  2540                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_StartTimer
  2541                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_StopTimer
  2542                           	FNCALL	_MTOUCH_Button_ServiceAll,_Button_Service
  2543                           	FNCALL	_Button_Service,_Button_Deviation_Update
  2544                           	FNCALL	_Button_Service,_Button_Reading_Update
  2545                           	FNCALL	_Button_Service,_Button_State_Initializing
  2546                           	FNCALL	_Button_Service,_Button_State_NotPressed
  2547                           	FNCALL	_Button_Service,_Button_State_Pressed
  2548                           	FNCALL	_Button_Service,_MTOUCH_Sensor_isCalibrated
  2549                           	FNCALL	_Button_Service,_MTOUCH_Sensor_wasSampled
  2550                           	FNCALL	_MTOUCH_Sensor_wasSampled,___bmul
  2551                           	FNCALL	_Button_State_Pressed,_Button_DefaultCallback
  2552                           	FNCALL	_Button_State_NotPressed,_Button_Baseline_Update
  2553                           	FNCALL	_Button_State_NotPressed,_Button_DefaultCallback
  2554                           	FNCALL	_Button_State_Initializing,_Button_Baseline_Initialize
  2555                           	FNCALL	_Button_State_Initializing,_Button_Baseline_Update
  2556                           	FNCALL	_Button_Baseline_Initialize,_MTOUCH_Sensor_RawSample_Get
  2557                           	FNCALL	_Button_Reading_Update,_MTOUCH_Sensor_RawSample_Get
  2558                           	FNCALL	_MTOUCH_Sensor_RawSample_Get,___bmul
  2559                           	FNROOT	_main
  2560                           	FNCALL	_INTERRUPT_InterruptManager,_TMR2_ISR
  2561                           	FNCALL	_TMR2_ISR,_Sensor_Acq_ExecuteScan
  2562                           	FNCALL	_TMR2_ISR,_TMR2_DefaultInterruptHandler
  2563                           	FNCALL	_Sensor_Acq_ExecuteScan,_MTOUCH_CVD_ScanA_0
  2564                           	FNCALL	_Sensor_Acq_ExecuteScan,_MTOUCH_CVD_ScanB_0
  2565                           	FNCALL	_Sensor_Acq_ExecuteScan,i1___bmul
  2566                           	FNCALL	_Sensor_Acq_ExecuteScan,i1_abs
  2567                           	FNCALL	intlevel1,_INTERRUPT_InterruptManager
  2568                           	global	intlevel1
  2569                           	FNROOT	intlevel1
  2570                           	global	_Button_StateMachine
  2571                           	global	_callback_notPressed
  2572                           	global	_callback_pressed
  2573                           	global	_callback_sampled
  2574                           	global	_sample_period
  2575                           	global	_mtouch_button
  2576                           	global	_mtouch_sensor
  2577                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  2578                           global __pidataBANK0
  2579                           __pidataBANK0:
  2580  05AA                     	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2581                           	line	116
  2582                           
  2583                           ;initializer for _Button_StateMachine
  2584                           	retlw	low(_Button_State_Initializing)
  2585  05AA  34EB               	retlw	high(_Button_State_Initializing)
  2586  05AB  3403               
  2587                           	retlw	low(_Button_State_NotPressed)
  2588  05AC  3476               	retlw	high(_Button_State_NotPressed)
  2589  05AD  3401               
  2590                           	retlw	low(_Button_State_Pressed)
  2591  05AE  34AC               	retlw	high(_Button_State_Pressed)
  2592  05AF  3404               
  2593                           	line	108
  2594                           
  2595                           ;initializer for _callback_notPressed
  2596                           	retlw	low(_Button_DefaultCallback)
  2597  05B0  34DC               	retlw	high(_Button_DefaultCallback)
  2598  05B1  3407               
  2599                           	line	107
  2600                           
  2601                           ;initializer for _callback_pressed
  2602                           	retlw	low(_Button_DefaultCallback)
  2603  05B2  34DC               	retlw	high(_Button_DefaultCallback)
  2604  05B3  3407               
  2605                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2606                           	line	77
  2607                           
  2608                           ;initializer for _callback_sampled
  2609                           	retlw	low(_Sensor_DefaultCallback)
  2610  05B4  34DB               	retlw	high(_Sensor_DefaultCallback)
  2611  05B5  3407               
  2612                           	line	88
  2613                           
  2614                           ;initializer for _sample_period
  2615                           	retlw	0C8h
  2616  05B6  34C8               	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2617                           	line	74
  2618                           
  2619                           ;initializer for _mtouch_button
  2620                           	retlw	low(0)
  2621  05B7  3400               	retlw	low(0)
  2622  05B8  3400               	retlw	low(0)
  2623  05B9  3400               	retlw	low(0)
  2624  05BA  3400               	retlw	high(0)
  2625  05BB  3400               
  2626                           	retlw	low(0)
  2627  05BC  3400               	retlw	high(0)
  2628  05BD  3400               	retlw	low highword(0)
  2629  05BE  3400               	retlw	high highword(0)
  2630  05BF  3400               
  2631                           	retlw	low(0)
  2632  05C0  3400               	retlw	low(0)
  2633  05C1  3400               	retlw	high(0)
  2634  05C2  3400               
  2635                           	retlw	low(0)
  2636  05C3  3400               	retlw	high(0)
  2637  05C4  3400               
  2638                           	retlw	064h
  2639  05C5  3464               	retlw	01h
  2640  05C6  3401               	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2641                           	line	97
  2642                           
  2643                           ;initializer for _mtouch_sensor
  2644                           	retlw	low(0)
  2645  05C7  3400               	retlw	low(_MTOUCH_CVD_ScanA_0)
  2646  05C8  34F4               	retlw	high(_MTOUCH_CVD_ScanA_0)
  2647  05C9  3405               
  2648                           	retlw	low(_MTOUCH_CVD_ScanB_0)
  2649  05CA  34D0               	retlw	high(_MTOUCH_CVD_ScanB_0)
  2650  05CB  3405               
  2651                           	retlw	020h
  2652  05CC  3420               	retlw	low(0)
  2653  05CD  3400               	retlw	high(0)
  2654  05CE  3400               
  2655                           	retlw	low(0)
  2656  05CF  3400               	global	Sensor_Scanfrequency_Evaluation@frequency_hop
  2657                           psect	stringtext1,class=STRCODE,delta=2,noexec
  2658                           global __pstringtext1
  2659                           __pstringtext1:
  2660  07B4                     	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2661                           	line	338
  2662                           Sensor_Scanfrequency_Evaluation@frequency_hop:
  2663  07B4                     	retlw	03h
  2664  07B4  3403               	retlw	0Dh
  2665  07B5  340D               	retlw	0Eh
  2666  07B6  340E               	retlw	014h
  2667  07B7  3414               	retlw	0Dh
  2668  07B8  340D               	global __end_ofSensor_Scanfrequency_Evaluation@frequency_hop
  2669                           __end_ofSensor_Scanfrequency_Evaluation@frequency_hop:
  2670  07B9                     	global	Sensor_Scanfrequency_Evaluation@frequency_hop
  2671                           	global	Sensor_Acq_ExecuteScan@last_b
  2672                           	global	Sensor_Acq_ExecuteScan@last_a
  2673                           	global	_packet_counter
  2674                           	global	_currentScannSensor
  2675                           	global	_packet_noise
  2676                           	global	_packet_sample
  2677                           	global	_sensor_globalFlags
  2678                           	global	_TMR2_InterruptHandler
  2679                           psect	nvBANK0,class=BANK0,space=1,noexec
  2680                           global __pnvBANK0
  2681                           __pnvBANK0:
  2682  0068                     _TMR2_InterruptHandler:
  2683  0068                            ds      2
  2684  0068                     
  2685                           	global	_T2CONbits
  2686                           _T2CONbits	set	0x1C
  2687  001C                     	global	_T2CON
  2688                           _T2CON	set	0x1C
  2689  001C                     	global	_TMR2
  2690                           _TMR2	set	0x1A
  2691  001A                     	global	_PR2
  2692                           _PR2	set	0x1B
  2693  001B                     	global	_PIR1bits
  2694                           _PIR1bits	set	0x11
  2695  0011                     	global	_INTCONbits
  2696                           _INTCONbits	set	0xB
  2697  000B                     	global	_GIE
  2698                           _GIE	set	0x5F
  2699  005F                     	global	_ADRES
  2700                           _ADRES	set	0x9B
  2701  009B                     	global	_ADCON2
  2702                           _ADCON2	set	0x9F
  2703  009F                     	global	_ADCON1
  2704                           _ADCON1	set	0x9E
  2705  009E                     	global	_ADCON0
  2706                           _ADCON0	set	0x9D
  2707  009D                     	global	_TRISCbits
  2708                           _TRISCbits	set	0x8E
  2709  008E                     	global	_OPTION_REGbits
  2710                           _OPTION_REGbits	set	0x95
  2711  0095                     	global	_TRISC
  2712                           _TRISC	set	0x8E
  2713  008E                     	global	_TRISA
  2714                           _TRISA	set	0x8C
  2715  008C                     	global	_PIE1bits
  2716                           _PIE1bits	set	0x91
  2717  0091                     	global	_WDTCON
  2718                           _WDTCON	set	0x97
  2719  0097                     	global	_OSCTUNE
  2720                           _OSCTUNE	set	0x98
  2721  0098                     	global	_OSCSTAT
  2722                           _OSCSTAT	set	0x9A
  2723  009A                     	global	_OSCCON
  2724                           _OSCCON	set	0x99
  2725  0099                     	global	_LATCbits
  2726                           _LATCbits	set	0x10E
  2727  010E                     	global	_LATC
  2728                           _LATC	set	0x10E
  2729  010E                     	global	_LATA
  2730                           _LATA	set	0x10C
  2731  010C                     	global	_BORCON
  2732                           _BORCON	set	0x116
  2733  0116                     	global	_ANSELCbits
  2734                           _ANSELCbits	set	0x18E
  2735  018E                     	global	_ANSELA
  2736                           _ANSELA	set	0x18C
  2737  018C                     	global	_ANSELC
  2738                           _ANSELC	set	0x18E
  2739  018E                     	global	_WPUCbits
  2740                           _WPUCbits	set	0x20E
  2741  020E                     	global	_WPUC
  2742                           _WPUC	set	0x20E
  2743  020E                     	global	_WPUA
  2744                           _WPUA	set	0x20C
  2745  020C                     	global	_ODCONC
  2746                           _ODCONC	set	0x28E
  2747  028E                     	global	_ODCONA
  2748                           _ODCONA	set	0x28C
  2749  028C                     ; #config settings
  2750                           global __CFG_FOSC$INTOSC
  2751                           __CFG_FOSC$INTOSC equ 0x0
  2752  0000                     global __CFG_WDTE$OFF
  2753                           __CFG_WDTE$OFF equ 0x0
  2754  0000                     global __CFG_PWRTE$OFF
  2755                           __CFG_PWRTE$OFF equ 0x0
  2756  0000                     global __CFG_MCLRE$ON
  2757                           __CFG_MCLRE$ON equ 0x0
  2758  0000                     global __CFG_CP$OFF
  2759                           __CFG_CP$OFF equ 0x0
  2760  0000                     global __CFG_BOREN$OFF
  2761                           __CFG_BOREN$OFF equ 0x0
  2762  0000                     global __CFG_CLKOUTEN$OFF
  2763                           __CFG_CLKOUTEN$OFF equ 0x0
  2764  0000                     global __CFG_WRT$OFF
  2765                           __CFG_WRT$OFF equ 0x0
  2766  0000                     global __CFG_PPS1WAY$ON
  2767                           __CFG_PPS1WAY$ON equ 0x0
  2768  0000                     global __CFG_ZCDDIS$ON
  2769                           __CFG_ZCDDIS$ON equ 0x0
  2770  0000                     global __CFG_PLLEN$ON
  2771                           __CFG_PLLEN$ON equ 0x0
  2772  0000                     global __CFG_STVREN$ON
  2773                           __CFG_STVREN$ON equ 0x0
  2774  0000                     global __CFG_BORV$LO
  2775                           __CFG_BORV$LO equ 0x0
  2776  0000                     global __CFG_LPBOR$OFF
  2777                           __CFG_LPBOR$OFF equ 0x0
  2778  0000                     global __CFG_LVP$ON
  2779                           __CFG_LVP$ON equ 0x0
  2780  0000                     	file	"C:\Users\zhgao\AppData\Local\Temp\s1os."
  2781                           	line	#
  2782                           psect cinit,class=CODE,delta=2
  2783                           global start_initialization
  2784                           start_initialization:
  2785  001E                     
  2786                           global __initialization
  2787                           __initialization:
  2788  001E                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2789                           global __pbssCOMMON
  2790                           __pbssCOMMON:
  2791  0078                     Sensor_Acq_ExecuteScan@last_b:
  2792  0078                            ds      2
  2793  0078                     
  2794                           Sensor_Acq_ExecuteScan@last_a:
  2795  007A                            ds      2
  2796  007A                     
  2797                           _packet_counter:
  2798  007C                            ds      1
  2799  007C                     
  2800                           _currentScannSensor:
  2801  007D                            ds      1
  2802  007D                     
  2803                           psect	bssBANK0,class=BANK0,space=1,noexec
  2804                           global __pbssBANK0
  2805                           __pbssBANK0:
  2806  0063                     _packet_noise:
  2807  0063                            ds      2
  2808  0063                     
  2809                           _packet_sample:
  2810  0065                            ds      2
  2811  0065                     
  2812                           _sensor_globalFlags:
  2813  0067                            ds      1
  2814  0067                     
  2815                           psect	dataBANK0,class=BANK0,space=1,noexec
  2816                           global __pdataBANK0
  2817                           __pdataBANK0:
  2818  0020                     	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2819                           	line	116
  2820                           _Button_StateMachine:
  2821  0020                            ds      6
  2822  0020                     
  2823                           psect	dataBANK0
  2824                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2825                           	line	108
  2826                           _callback_notPressed:
  2827  0026                            ds      2
  2828  0026                     
  2829                           psect	dataBANK0
  2830                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2831                           	line	107
  2832                           _callback_pressed:
  2833  0028                            ds      2
  2834  0028                     
  2835                           psect	dataBANK0
  2836                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2837                           	line	77
  2838                           _callback_sampled:
  2839  002A                            ds      2
  2840  002A                     
  2841                           psect	dataBANK0
  2842                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2843                           	line	88
  2844                           _sample_period:
  2845  002C                            ds      1
  2846  002C                     
  2847                           psect	dataBANK0
  2848                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2849                           	line	74
  2850                           _mtouch_button:
  2851  002D                            ds      16
  2852  002D                     
  2853                           psect	dataBANK0
  2854                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2855                           	line	97
  2856                           _mtouch_sensor:
  2857  003D                            ds      9
  2858  003D                     
  2859                           	file	"C:\Users\zhgao\AppData\Local\Temp\s1os."
  2860                           	line	#
  2861                           psect inittext,class=CODE,delta=2
  2862                           global init_ram,btemp
  2863                           init_ram:
  2864  07A8                     	movwf btemp,f
  2865  07A8  00FE               initloop:
  2866  07A9                     	moviw fsr0++
  2867  07A9  0012               	movwi fsr1++
  2868  07AA  001E               	decfsz btemp
  2869  07AB  0BFE               	goto initloop
  2870  07AC  2FA9               	retlw 0
  2871  07AD  3400               ; Initialize objects allocated to BANK0
  2872                           	global __pidataBANK0,__pdataBANK0
  2873                           psect cinit,class=CODE,delta=2,merge=1
  2874                           	movlw low(__pidataBANK0)
  2875  001E  30AA               	movwf fsr0l
  2876  001F  0084               	movlw high(__pidataBANK0)|80h
  2877  0020  3085               	movwf fsr0h
  2878  0021  0085               	movlw low(__pdataBANK0)
  2879  0022  3020               	movwf fsr1l
  2880  0023  0086               	movlw high(__pdataBANK0)
  2881  0024  3000               	movwf fsr1h
  2882  0025  0087               	movlw 026h
  2883  0026  3026               	fcall init_ram
  2884  0027  3187  27A8  3180   	line	#
  2885                           ; Clear objects allocated to COMMON
  2886                           psect cinit,class=CODE,delta=2,merge=1
  2887                           	global __pbssCOMMON
  2888                           	clrf	((__pbssCOMMON)+0)&07Fh
  2889  002A  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
  2890  002B  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
  2891  002C  01FA               	clrf	((__pbssCOMMON)+3)&07Fh
  2892  002D  01FB               	clrf	((__pbssCOMMON)+4)&07Fh
  2893  002E  01FC               	clrf	((__pbssCOMMON)+5)&07Fh
  2894  002F  01FD               ; Clear objects allocated to BANK0
  2895                           psect cinit,class=CODE,delta=2,merge=1
  2896                           	global __pbssBANK0
  2897                           	clrf	((__pbssBANK0)+0)&07Fh
  2898  0030  01E3               	clrf	((__pbssBANK0)+1)&07Fh
  2899  0031  01E4               	clrf	((__pbssBANK0)+2)&07Fh
  2900  0032  01E5               	clrf	((__pbssBANK0)+3)&07Fh
  2901  0033  01E6               	clrf	((__pbssBANK0)+4)&07Fh
  2902  0034  01E7               psect cinit,class=CODE,delta=2,merge=1
  2903                           global end_of_initialization,__end_of__initialization
  2904                           
  2905                           ;End of C runtime variable initialization code
  2906                           
  2907                           end_of_initialization:
  2908  0035                     __end_of__initialization:
  2909  0035                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2910  0035  107E               movlb 0
  2911  0036  0020               ljmp _main	;jump to C main() function
  2912  0037  2E35               psect	cstackCOMMON,class=COMMON,space=1,noexec
  2913                           global __pcstackCOMMON
  2914                           __pcstackCOMMON:
  2915  0070                     ?_PIN_MANAGER_Initialize:	; 1 bytes @ 0x0
  2916  0070                     ?_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2917  0070                     ?_WDT_Initialize:	; 1 bytes @ 0x0
  2918  0070                     ?_TMR2_Initialize:	; 1 bytes @ 0x0
  2919  0070                     ?_MTOUCH_Initialize:	; 1 bytes @ 0x0
  2920  0070                     ?_TMR2_ISR:	; 1 bytes @ 0x0
  2921  0070                     ?_TMR2_DefaultInterruptHandler:	; 1 bytes @ 0x0
  2922  0070                     ??_TMR2_DefaultInterruptHandler:	; 1 bytes @ 0x0
  2923  0070                     ?_MTOUCH_Sensor_InitializeAll:	; 1 bytes @ 0x0
  2924  0070                     ?_MTOUCH_Button_InitializeAll:	; 1 bytes @ 0x0
  2925  0070                     ?_MTOUCH_Sensor_Sampled_ResetAll:	; 1 bytes @ 0x0
  2926  0070                     ?_MTOUCH_Sensor_Scan_Initialize:	; 1 bytes @ 0x0
  2927  0070                     ?_MTOUCH_Sensor_SampleAll:	; 1 bytes @ 0x0
  2928  0070                     ?_MTOUCH_Button_ServiceAll:	; 1 bytes @ 0x0
  2929  0070                     ?_MTOUCH_CVD_ScanA_0:	; 1 bytes @ 0x0
  2930  0070                     ??_MTOUCH_CVD_ScanA_0:	; 1 bytes @ 0x0
  2931  0070                     ?_MTOUCH_CVD_ScanB_0:	; 1 bytes @ 0x0
  2932  0070                     ??_MTOUCH_CVD_ScanB_0:	; 1 bytes @ 0x0
  2933  0070                     ?_MTOUCH_Sensor_Enable:	; 1 bytes @ 0x0
  2934  0070                     ?_Sensor_Sampled_Reset:	; 1 bytes @ 0x0
  2935  0070                     ?_Sensor_Service:	; 1 bytes @ 0x0
  2936  0070                     ?_Sensor_Acquisition:	; 1 bytes @ 0x0
  2937  0070                     ?_Sensor_RawSample_Update:	; 1 bytes @ 0x0
  2938  0070                     ?_Sensor_setSampled:	; 1 bytes @ 0x0
  2939  0070                     ?_Sensor_Acq_ExecutePacket:	; 1 bytes @ 0x0
  2940  0070                     ?_Sensor_setActive:	; 1 bytes @ 0x0
  2941  0070                     ?_Sensor_Scanfrequency_Evaluation:	; 1 bytes @ 0x0
  2942  0070                     ?_Sensor_setInactive:	; 1 bytes @ 0x0
  2943  0070                     ?_Sensor_Acq_ExecuteScan:	; 1 bytes @ 0x0
  2944  0070                     ?_Button_Service:	; 1 bytes @ 0x0
  2945  0070                     ?_Button_Reading_Update:	; 1 bytes @ 0x0
  2946  0070                     ?_Button_Deviation_Update:	; 1 bytes @ 0x0
  2947  0070                     ?_Button_Baseline_Initialize:	; 1 bytes @ 0x0
  2948  0070                     ?_Button_Baseline_Update:	; 1 bytes @ 0x0
  2949  0070                     ?_SYSTEM_Initialize:	; 1 bytes @ 0x0
  2950  0070                     ?_INTERRUPT_InterruptManager:	; 1 bytes @ 0x0
  2951  0070                     ?_TMR2_StartTimer:	; 1 bytes @ 0x0
  2952  0070                     ?_TMR2_StopTimer:	; 1 bytes @ 0x0
  2953  0070                     ?_TMR2_LoadPeriodRegister:	; 1 bytes @ 0x0
  2954  0070                     ?_MTOUCH_Service_Mainloop:	; 1 bytes @ 0x0
  2955  0070                     ?_MTOUCH_Sensor_isCalibrated:	; 1 bytes @ 0x0
  2956  0070                     ?_MTOUCH_Sensor_wasSampled:	; 1 bytes @ 0x0
  2957  0070                     ?_MTOUCH_Button_isPressed:	; 1 bytes @ 0x0
  2958  0070                     ?_main:	; 1 bytes @ 0x0
  2959  0070                     ?i1___bmul:	; 1 bytes @ 0x0
  2960  0070                     	global	?i1_abs
  2961                           ?i1_abs:	; 2 bytes @ 0x0
  2962  0070                     MTOUCH_Sensor_isCalibrated@sensor:	; 1 bytes @ 0x0
  2963  0070                     	global	i1___bmul@multiplicand
  2964                           i1___bmul@multiplicand:	; 1 bytes @ 0x0
  2965  0070                     	global	i1abs@a
  2966                           i1abs@a:	; 2 bytes @ 0x0
  2967  0070                     	ds	1
  2968  0070                     ??i1___bmul:	; 1 bytes @ 0x1
  2969  0071                     	ds	1
  2970  0071                     ??i1_abs:	; 1 bytes @ 0x2
  2971  0072                     	global	i1___bmul@multiplier
  2972                           i1___bmul@multiplier:	; 1 bytes @ 0x2
  2973  0072                     	ds	1
  2974  0072                     	global	i1___bmul@product
  2975                           i1___bmul@product:	; 1 bytes @ 0x3
  2976  0073                     	ds	1
  2977  0073                     ??_Sensor_Acq_ExecuteScan:	; 1 bytes @ 0x4
  2978  0074                     	ds	2
  2979  0074                     	global	Sensor_Acq_ExecuteScan@result
  2980                           Sensor_Acq_ExecuteScan@result:	; 2 bytes @ 0x6
  2981  0076                     	ds	2
  2982  0076                     ??_TMR2_ISR:	; 1 bytes @ 0x8
  2983  0078                     ??_INTERRUPT_InterruptManager:	; 1 bytes @ 0x8
  2984  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2985                           global __pcstackBANK0
  2986                           __pcstackBANK0:
  2987  0046                     ??_PIN_MANAGER_Initialize:	; 1 bytes @ 0x0
  2988  0046                     ??_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2989  0046                     ??_WDT_Initialize:	; 1 bytes @ 0x0
  2990  0046                     ?_TMR2_SetInterruptHandler:	; 1 bytes @ 0x0
  2991  0046                     ??_MTOUCH_Button_InitializeAll:	; 1 bytes @ 0x0
  2992  0046                     ??_MTOUCH_Sensor_Scan_Initialize:	; 1 bytes @ 0x0
  2993  0046                     ?_Sensor_DefaultCallback:	; 1 bytes @ 0x0
  2994  0046                     ??_Sensor_Sampled_Reset:	; 1 bytes @ 0x0
  2995  0046                     ??_Sensor_RawSample_Update:	; 1 bytes @ 0x0
  2996  0046                     ??_Sensor_setSampled:	; 1 bytes @ 0x0
  2997  0046                     ??_Sensor_setActive:	; 1 bytes @ 0x0
  2998  0046                     ??_Sensor_setInactive:	; 1 bytes @ 0x0
  2999  0046                     ?_Button_DefaultCallback:	; 1 bytes @ 0x0
  3000  0046                     ??_Button_Deviation_Update:	; 1 bytes @ 0x0
  3001  0046                     ??_Button_Baseline_Update:	; 1 bytes @ 0x0
  3002  0046                     ??_TMR2_StartTimer:	; 1 bytes @ 0x0
  3003  0046                     ??_TMR2_StopTimer:	; 1 bytes @ 0x0
  3004  0046                     ??_TMR2_LoadPeriodRegister:	; 1 bytes @ 0x0
  3005  0046                     ??_MTOUCH_Sensor_isCalibrated:	; 1 bytes @ 0x0
  3006  0046                     ??_MTOUCH_Button_isPressed:	; 1 bytes @ 0x0
  3007  0046                     ?___bmul:	; 1 bytes @ 0x0
  3008  0046                     	global	?_abs
  3009                           ?_abs:	; 2 bytes @ 0x0
  3010  0046                     	global	TMR2_LoadPeriodRegister@periodVal
  3011                           TMR2_LoadPeriodRegister@periodVal:	; 1 bytes @ 0x0
  3012  0046                     	global	Sensor_RawSample_Update@sensor
  3013                           Sensor_RawSample_Update@sensor:	; 1 bytes @ 0x0
  3014  0046                     	global	Sensor_DefaultCallback@sensor
  3015                           Sensor_DefaultCallback@sensor:	; 1 bytes @ 0x0
  3016  0046                     	global	Sensor_setActive@sensor
  3017                           Sensor_setActive@sensor:	; 1 bytes @ 0x0
  3018  0046                     	global	Sensor_setInactive@sensor
  3019                           Sensor_setInactive@sensor:	; 1 bytes @ 0x0
  3020  0046                     	global	Sensor_Sampled_Reset@sensor
  3021                           Sensor_Sampled_Reset@sensor:	; 1 bytes @ 0x0
  3022  0046                     	global	Sensor_setSampled@sensor
  3023                           Sensor_setSampled@sensor:	; 1 bytes @ 0x0
  3024  0046                     	global	Button_DefaultCallback@button
  3025                           Button_DefaultCallback@button:	; 1 bytes @ 0x0
  3026  0046                     	global	___bmul@multiplicand
  3027                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  3028  0046                     	global	TMR2_SetInterruptHandler@InterruptHandler
  3029                           TMR2_SetInterruptHandler@InterruptHandler:	; 2 bytes @ 0x0
  3030  0046                     	global	abs@a
  3031                           abs@a:	; 2 bytes @ 0x0
  3032  0046                     	ds	1
  3033  0046                     ??_MTOUCH_Sensor_Sampled_ResetAll:	; 1 bytes @ 0x1
  3034  0047                     ??_Sensor_DefaultCallback:	; 1 bytes @ 0x1
  3035  0047                     ??_Button_DefaultCallback:	; 1 bytes @ 0x1
  3036  0047                     ??___bmul:	; 1 bytes @ 0x1
  3037  0047                     	global	MTOUCH_Button_isPressed@name
  3038                           MTOUCH_Button_isPressed@name:	; 1 bytes @ 0x1
  3039  0047                     	ds	1
  3040  0047                     ??_TMR2_Initialize:	; 1 bytes @ 0x2
  3041  0048                     ??_TMR2_SetInterruptHandler:	; 1 bytes @ 0x2
  3042  0048                     ??_Sensor_Acq_ExecutePacket:	; 1 bytes @ 0x2
  3043  0048                     ??_abs:	; 1 bytes @ 0x2
  3044  0048                     	global	___bmul@product
  3045                           ___bmul@product:	; 1 bytes @ 0x2
  3046  0048                     	ds	1
  3047  0048                     	global	Sensor_Acq_ExecutePacket@ADCON0_temp
  3048                           Sensor_Acq_ExecutePacket@ADCON0_temp:	; 1 bytes @ 0x3
  3049  0049                     	global	___bmul@multiplier
  3050                           ___bmul@multiplier:	; 1 bytes @ 0x3
  3051  0049                     	ds	1
  3052  0049                     ??_MTOUCH_Sensor_Enable:	; 1 bytes @ 0x4
  3053  004A                     ??_MTOUCH_Sensor_wasSampled:	; 1 bytes @ 0x4
  3054  004A                     	global	?_MTOUCH_Sensor_RawSample_Get
  3055                           ?_MTOUCH_Sensor_RawSample_Get:	; 2 bytes @ 0x4
  3056  004A                     	global	Sensor_Acq_ExecutePacket@ADCON1_temp
  3057                           Sensor_Acq_ExecutePacket@ADCON1_temp:	; 1 bytes @ 0x4
  3058  004A                     	ds	1
  3059  004A                     	global	Sensor_Acq_ExecutePacket@ADCON2_temp
  3060                           Sensor_Acq_ExecutePacket@ADCON2_temp:	; 1 bytes @ 0x5
  3061  004B                     	global	MTOUCH_Sensor_Enable@sensor
  3062                           MTOUCH_Sensor_Enable@sensor:	; 1 bytes @ 0x5
  3063  004B                     	global	MTOUCH_Sensor_wasSampled@sensor
  3064                           MTOUCH_Sensor_wasSampled@sensor:	; 1 bytes @ 0x5
  3065  004B                     	ds	1
  3066  004B                     ??_MTOUCH_Initialize:	; 1 bytes @ 0x6
  3067  004C                     ??_MTOUCH_Sensor_InitializeAll:	; 1 bytes @ 0x6
  3068  004C                     ??_SYSTEM_Initialize:	; 1 bytes @ 0x6
  3069  004C                     ??_MTOUCH_Sensor_RawSample_Get:	; 1 bytes @ 0x6
  3070  004C                     	global	Sensor_Acq_ExecutePacket@error
  3071                           Sensor_Acq_ExecutePacket@error:	; 1 bytes @ 0x6
  3072  004C                     	global	Button_Baseline_Update@button
  3073                           Button_Baseline_Update@button:	; 1 bytes @ 0x6
  3074  004C                     	ds	1
  3075  004C                     	global	Sensor_Acq_ExecutePacket@sensor
  3076                           Sensor_Acq_ExecutePacket@sensor:	; 1 bytes @ 0x7
  3077  004D                     	global	MTOUCH_Sensor_RawSample_Get@name
  3078                           MTOUCH_Sensor_RawSample_Get@name:	; 1 bytes @ 0x7
  3079  004D                     	ds	1
  3080  004D                     ??_Sensor_Scanfrequency_Evaluation:	; 1 bytes @ 0x8
  3081  004E                     ??_Button_Reading_Update:	; 1 bytes @ 0x8
  3082  004E                     ??_Button_Baseline_Initialize:	; 1 bytes @ 0x8
  3083  004E                     	ds	2
  3084  004E                     	global	Button_Deviation_Update@button
  3085                           Button_Deviation_Update@button:	; 1 bytes @ 0xA
  3086  0050                     	global	Button_Reading_Update@button
  3087                           Button_Reading_Update@button:	; 1 bytes @ 0xA
  3088  0050                     	global	Sensor_Scanfrequency_Evaluation@packet_noise_Max
  3089                           Sensor_Scanfrequency_Evaluation@packet_noise_Max:	; 2 bytes @ 0xA
  3090  0050                     	ds	1
  3091  0050                     	global	Button_Deviation_Update@deviation
  3092                           Button_Deviation_Update@deviation:	; 4 bytes @ 0xB
  3093  0051                     	ds	1
  3094  0051                     	global	Button_Baseline_Initialize@button
  3095                           Button_Baseline_Initialize@button:	; 1 bytes @ 0xC
  3096  0052                     	global	Sensor_Scanfrequency_Evaluation@best_packet_sample
  3097                           Sensor_Scanfrequency_Evaluation@best_packet_sample:	; 2 bytes @ 0xC
  3098  0052                     	ds	1
  3099  0052                     ?_Button_State_Initializing:	; 1 bytes @ 0xD
  3100  0053                     ?_Button_State_NotPressed:	; 1 bytes @ 0xD
  3101  0053                     ?_Button_State_Pressed:	; 1 bytes @ 0xD
  3102  0053                     	global	Button_State_Initializing@button
  3103                           Button_State_Initializing@button:	; 1 bytes @ 0xD
  3104  0053                     	global	Button_State_NotPressed@button
  3105                           Button_State_NotPressed@button:	; 1 bytes @ 0xD
  3106  0053                     	global	Button_State_Pressed@button
  3107                           Button_State_Pressed@button:	; 1 bytes @ 0xD
  3108  0053                     	ds	1
  3109  0053                     ??_Button_State_Initializing:	; 1 bytes @ 0xE
  3110  0054                     ??_Button_State_NotPressed:	; 1 bytes @ 0xE
  3111  0054                     ??_Button_State_Pressed:	; 1 bytes @ 0xE
  3112  0054                     	global	Sensor_Scanfrequency_Evaluation@sensor
  3113                           Sensor_Scanfrequency_Evaluation@sensor:	; 1 bytes @ 0xE
  3114  0054                     	ds	1
  3115  0054                     	global	Sensor_Scanfrequency_Evaluation@best_sample_period
  3116                           Sensor_Scanfrequency_Evaluation@best_sample_period:	; 1 bytes @ 0xF
  3117  0055                     	ds	1
  3118  0055                     	global	Sensor_Scanfrequency_Evaluation@retry
  3119                           Sensor_Scanfrequency_Evaluation@retry:	; 1 bytes @ 0x10
  3120  0056                     	ds	1
  3121  0056                     	global	Sensor_Scanfrequency_Evaluation@i
  3122                           Sensor_Scanfrequency_Evaluation@i:	; 1 bytes @ 0x11
  3123  0057                     	ds	1
  3124  0057                     ??_Sensor_Acquisition:	; 1 bytes @ 0x12
  3125  0058                     ??_Button_Service:	; 1 bytes @ 0x12
  3126  0058                     	ds	2
  3127  0058                     	global	Button_Service@name
  3128                           Button_Service@name:	; 1 bytes @ 0x14
  3129  005A                     	ds	1
  3130  005A                     	global	Button_Service@button
  3131                           Button_Service@button:	; 1 bytes @ 0x15
  3132  005B                     	ds	1
  3133  005B                     ??_MTOUCH_Button_ServiceAll:	; 1 bytes @ 0x16
  3134  005C                     	global	Sensor_Acquisition@retry
  3135                           Sensor_Acquisition@retry:	; 1 bytes @ 0x16
  3136  005C                     	ds	1
  3137  005C                     	global	Sensor_Acquisition@sensor
  3138                           Sensor_Acquisition@sensor:	; 1 bytes @ 0x17
  3139  005D                     	ds	1
  3140  005D                     ??_Sensor_Service:	; 1 bytes @ 0x18
  3141  005E                     	ds	2
  3142  005E                     	global	Sensor_Service@error
  3143                           Sensor_Service@error:	; 1 bytes @ 0x1A
  3144  0060                     	ds	1
  3145  0060                     	global	Sensor_Service@name
  3146                           Sensor_Service@name:	; 1 bytes @ 0x1B
  3147  0061                     	ds	1
  3148  0061                     	global	Sensor_Service@sensor
  3149                           Sensor_Service@sensor:	; 1 bytes @ 0x1C
  3150  0062                     	ds	1
  3151  0062                     ??_MTOUCH_Sensor_SampleAll:	; 1 bytes @ 0x1D
  3152  0063                     ??_MTOUCH_Service_Mainloop:	; 1 bytes @ 0x1D
  3153  0063                     ??_main:	; 1 bytes @ 0x1D
  3154  0063                     ;!
  3155                           ;!Data Sizes:
  3156                           ;!    Strings     0
  3157                           ;!    Constant    5
  3158                           ;!    Data        38
  3159                           ;!    BSS         11
  3160                           ;!    Persistent  2
  3161                           ;!    Stack       0
  3162                           ;!
  3163                           ;!Auto Spaces:
  3164                           ;!    Space          Size  Autos    Used
  3165                           ;!    COMMON           14      8      14
  3166                           ;!    BANK0            80     29      74
  3167                           ;!    BANK1            80      0       0
  3168                           ;!    BANK2            80      0       0
  3169                           
  3170                           ;!
  3171                           ;!Pointer List with Targets:
  3172                           ;!
  3173                           ;!    Sensor_Scanfrequency_Evaluation@sensor.scanB	const PTR FTN()void  size(2) Largest 
                                 target is 0
  3174                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3175                           ;!
  3176                           ;!    Sensor_Scanfrequency_Evaluation@sensor.scanA	const PTR FTN()void  size(2) Largest 
                                 target is 0
  3177                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3178                           ;!
  3179                           ;!    Button_Service$1511$0	PTR struct . size(1) Largest target is 16
  3180                           ;!		 -> mtouch_button(BANK0[16]), 
  3181                           ;!
  3182                           ;!    Button_Service$1511	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
  3183                           ;!		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 
                                 
  3184                           ;!
  3185                           ;!    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
  3186                           ;!		 -> mtouch_button(BANK0[16]), 
  3187                           ;!
  3188                           ;!    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
  3189                           ;!		 -> mtouch_button(BANK0[16]), 
  3190                           ;!
  3191                           ;!    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
  3192                           ;!		 -> mtouch_button(BANK0[16]), 
  3193                           ;!
  3194                           ;!    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
  3195                           ;!		 -> mtouch_button(BANK0[16]), 
  3196                           ;!
  3197                           ;!    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
  3198                           ;!		 -> mtouch_button(BANK0[16]), 
  3199                           ;!
  3200                           ;!    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
  3201                           ;!		 -> mtouch_button(BANK0[16]), 
  3202                           ;!
  3203                           ;!    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
  3204                           ;!		 -> mtouch_button(BANK0[16]), 
  3205                           ;!
  3206                           ;!    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
  3207                           ;!		 -> mtouch_button(BANK0[16]), 
  3208                           ;!
  3209                           ;!    Button_Service@button	PTR struct . size(1) Largest target is 16
  3210                           ;!		 -> mtouch_button(BANK0[16]), 
  3211                           ;!
  3212                           ;!    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
  3213                           ;!		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 
                                 
  3214                           ;!
  3215                           ;!    callback_notPressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
  3216                           ;!		 -> Button_DefaultCallback(), 
  3217                           ;!
  3218                           ;!    callback_pressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
  3219                           ;!		 -> Button_DefaultCallback(), 
  3220                           ;!
  3221                           ;!    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3222                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3223                           ;!
  3224                           ;!    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3225                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3226                           ;!
  3227                           ;!    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
  3228                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3229                           ;!
  3230                           ;!    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
                                 
  3231                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3232                           ;!
  3233                           ;!    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
                                 
  3234                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3235                           ;!
  3236                           ;!    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
  3237                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3238                           ;!
  3239                           ;!    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3240                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3241                           ;!
  3242                           ;!    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3243                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3244                           ;!
  3245                           ;!    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 9
  3246                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3247                           ;!
  3248                           ;!    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3249                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3250                           ;!
  3251                           ;!    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3252                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3253                           ;!
  3254                           ;!    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 9
  3255                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3256                           ;!
  3257                           ;!    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3258                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3259                           ;!
  3260                           ;!    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3261                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3262                           ;!
  3263                           ;!    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target i
                                 s 1
  3264                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3265                           ;!
  3266                           ;!    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target i
                                 s 1
  3267                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3268                           ;!
  3269                           ;!    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
  3270                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3271                           ;!
  3272                           ;!    Sensor_Scanfrequency_Evaluation@sensor	PTR struct . size(1) Largest target is 9
  3273                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3274                           ;!
  3275                           ;!    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target 
                                 is 1
  3276                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3277                           ;!
  3278                           ;!    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target 
                                 is 1
  3279                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3280                           ;!
  3281                           ;!    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 9
  3282                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3283                           ;!
  3284                           ;!    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3285                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3286                           ;!
  3287                           ;!    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3288                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3289                           ;!
  3290                           ;!    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 9
  3291                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3292                           ;!
  3293                           ;!    Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
  3294                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3295                           ;!
  3296                           ;!    S358$scanB	const PTR FTN()void  size(2) Largest target is 1
  3297                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3298                           ;!
  3299                           ;!    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3300                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3301                           ;!
  3302                           ;!    S358$scanA	const PTR FTN()void  size(2) Largest target is 1
  3303                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3304                           ;!
  3305                           ;!    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3306                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3307                           ;!
  3308                           ;!    callback_sampled	PTR FTN(enum E2110,)void  size(2) Largest target is 1
  3309                           ;!		 -> Sensor_DefaultCallback(), 
  3310                           ;!
  3311                           ;!    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is
                                  1
  3312                           ;!		 -> Sensor_Acq_ExecuteScan(), TMR2_DefaultInterruptHandler(), 
  3313                           ;!
  3314                           ;!    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
  3315                           ;!		 -> Sensor_Acq_ExecuteScan(), Absolute function(), TMR2_DefaultInterruptHandler(), 

  3316                           ;!
  3317                           
  3318                           
  3319                           ;!
  3320                           ;!Critical Paths under _main in COMMON
  3321                           ;!
  3322                           ;!    None.
  3323                           ;!
  3324                           ;!Critical Paths under _INTERRUPT_InterruptManager in COMMON
  3325                           ;!
  3326                           ;!    _TMR2_ISR->_Sensor_Acq_ExecuteScan
  3327                           ;!    _Sensor_Acq_ExecuteScan->i1___bmul
  3328                           ;!    _Sensor_Acq_ExecuteScan->i1_abs
  3329                           ;!
  3330                           ;!Critical Paths under _main in BANK0
  3331                           ;!
  3332                           ;!    _TMR2_Initialize->_TMR2_SetInterruptHandler
  3333                           ;!    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Enable
  3334                           ;!    _MTOUCH_Sensor_Enable->___bmul
  3335                           ;!    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
  3336                           ;!    _MTOUCH_Sensor_SampleAll->_Sensor_Service
  3337                           ;!    _Sensor_Service->_Sensor_Acquisition
  3338                           ;!    _Sensor_Acquisition->_Sensor_Scanfrequency_Evaluation
  3339                           ;!    _Sensor_Scanfrequency_Evaluation->_Sensor_Acq_ExecutePacket
  3340                           ;!    _Sensor_Acq_ExecutePacket->_TMR2_SetInterruptHandler
  3341                           ;!    _MTOUCH_Button_ServiceAll->_Button_Service
  3342                           ;!    _Button_Service->_Button_State_Initializing
  3343                           ;!    _MTOUCH_Sensor_wasSampled->___bmul
  3344                           ;!    _Button_State_Initializing->_Button_Baseline_Initialize
  3345                           ;!    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
  3346                           ;!    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
  3347                           ;!    _MTOUCH_Sensor_RawSample_Get->___bmul
  3348                           ;!
  3349                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK0
  3350                           ;!
  3351                           ;!    None.
  3352                           ;!
  3353                           ;!Critical Paths under _main in BANK1
  3354                           ;!
  3355                           ;!    None.
  3356                           ;!
  3357                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK1
  3358                           ;!
  3359                           ;!    None.
  3360                           ;!
  3361                           ;!Critical Paths under _main in BANK2
  3362                           ;!
  3363                           ;!    None.
  3364                           ;!
  3365                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK2
  3366                           ;!
  3367                           ;!    None.
  3368                           
  3369 ;;
  3370 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3371 ;;
  3372                           
  3373                           ;!
  3374                           ;!Call Graph Tables:
  3375                           ;!
  3376                           ;! ---------------------------------------------------------------------------------
  3377                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3378                           ;! ---------------------------------------------------------------------------------
  3379                           ;! (0) _main                                                 0     0      0    6122
  3380                           ;!            _MTOUCH_Button_isPressed
  3381                           ;!            _MTOUCH_Service_Mainloop
  3382                           ;!                  _SYSTEM_Initialize
  3383                           ;! ---------------------------------------------------------------------------------
  3384                           ;! (1) _SYSTEM_Initialize                                    0     0      0     653
  3385                           ;!                  _MTOUCH_Initialize
  3386                           ;!              _OSCILLATOR_Initialize
  3387                           ;!             _PIN_MANAGER_Initialize
  3388                           ;!                    _TMR2_Initialize
  3389                           ;!                     _WDT_Initialize
  3390                           ;! ---------------------------------------------------------------------------------
  3391                           ;! (2) _WDT_Initialize                                       0     0      0       0
  3392                           ;! ---------------------------------------------------------------------------------
  3393                           ;! (2) _TMR2_Initialize                                      0     0      0     174
  3394                           ;!           _TMR2_SetInterruptHandler
  3395                           ;! ---------------------------------------------------------------------------------
  3396                           ;! (2) _PIN_MANAGER_Initialize                               0     0      0       0
  3397                           ;! ---------------------------------------------------------------------------------
  3398                           ;! (2) _OSCILLATOR_Initialize                                0     0      0       0
  3399                           ;! ---------------------------------------------------------------------------------
  3400                           ;! (2) _MTOUCH_Initialize                                    0     0      0     479
  3401                           ;!        _MTOUCH_Button_InitializeAll
  3402                           ;!        _MTOUCH_Sensor_InitializeAll
  3403                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3404                           ;!      _MTOUCH_Sensor_Scan_Initialize
  3405                           ;! ---------------------------------------------------------------------------------
  3406                           ;! (3) _MTOUCH_Sensor_InitializeAll                          0     0      0     391
  3407                           ;!               _MTOUCH_Sensor_Enable
  3408                           ;!               _Sensor_Sampled_Reset
  3409                           ;! ---------------------------------------------------------------------------------
  3410                           ;! (4) _MTOUCH_Sensor_Enable                                 2     2      0     303
  3411                           ;!                                              4 BANK0      2     2      0
  3412                           ;!                             ___bmul
  3413                           ;! ---------------------------------------------------------------------------------
  3414                           ;! (3) _MTOUCH_Button_InitializeAll                          0     0      0       0
  3415                           ;! ---------------------------------------------------------------------------------
  3416                           ;! (1) _MTOUCH_Service_Mainloop                              0     0      0    5447
  3417                           ;!           _MTOUCH_Button_ServiceAll
  3418                           ;!            _MTOUCH_Sensor_SampleAll
  3419                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3420                           ;! ---------------------------------------------------------------------------------
  3421                           ;! (3) _MTOUCH_Sensor_Sampled_ResetAll                       0     0      0      88
  3422                           ;!               _Sensor_Sampled_Reset
  3423                           ;! ---------------------------------------------------------------------------------
  3424                           ;! (4) _Sensor_Sampled_Reset                                 1     1      0      88
  3425                           ;!                                              0 BANK0      1     1      0
  3426                           ;! ---------------------------------------------------------------------------------
  3427                           ;! (2) _MTOUCH_Sensor_SampleAll                              0     0      0    2214
  3428                           ;!                     _Sensor_Service
  3429                           ;! ---------------------------------------------------------------------------------
  3430                           ;! (3) _Sensor_Service                                       5     5      0    2214
  3431                           ;!                                             24 BANK0      5     5      0
  3432                           ;!                 _Sensor_Acquisition
  3433                           ;!             _Sensor_DefaultCallback *
  3434                           ;!            _Sensor_RawSample_Update
  3435                           ;!                  _Sensor_setSampled
  3436                           ;!                             ___bmul
  3437                           ;! ---------------------------------------------------------------------------------
  3438                           ;! (4) _Sensor_setSampled                                    1     1      0      55
  3439                           ;!                                              0 BANK0      1     1      0
  3440                           ;! ---------------------------------------------------------------------------------
  3441                           ;! (4) _Sensor_RawSample_Update                              1     1      0      77
  3442                           ;!                                              0 BANK0      1     1      0
  3443                           ;! ---------------------------------------------------------------------------------
  3444                           ;! (4) _Sensor_DefaultCallback                               1     0      1      53
  3445                           ;!                                              0 BANK0      1     0      1
  3446                           ;! ---------------------------------------------------------------------------------
  3447                           ;! (4) _Sensor_Acquisition                                   6     6      0    1608
  3448                           ;!                                             18 BANK0      6     6      0
  3449                           ;!           _Sensor_Acq_ExecutePacket
  3450                           ;!    _Sensor_Scanfrequency_Evaluation
  3451                           ;!                   _Sensor_setActive
  3452                           ;!                 _Sensor_setInactive
  3453                           ;!                                _abs
  3454                           ;! ---------------------------------------------------------------------------------
  3455                           ;! (5) _abs                                                  4     2      2     292
  3456                           ;!                                              0 BANK0      4     2      2
  3457                           ;! ---------------------------------------------------------------------------------
  3458                           ;! (5) _Sensor_setInactive                                   1     1      0      55
  3459                           ;!                                              0 BANK0      1     1      0
  3460                           ;! ---------------------------------------------------------------------------------
  3461                           ;! (5) _Sensor_setActive                                     1     1      0      55
  3462                           ;!                                              0 BANK0      1     1      0
  3463                           ;! ---------------------------------------------------------------------------------
  3464                           ;! (5) _Sensor_Scanfrequency_Evaluation                     10    10      0     618
  3465                           ;!                                              8 BANK0     10    10      0
  3466                           ;!           _Sensor_Acq_ExecutePacket
  3467                           ;! ---------------------------------------------------------------------------------
  3468                           ;! (6) _Sensor_Acq_ExecutePacket                             6     6      0     399
  3469                           ;!                                              2 BANK0      6     6      0
  3470                           ;!      _MTOUCH_Sensor_Scan_Initialize
  3471                           ;!            _TMR2_LoadPeriodRegister
  3472                           ;!           _TMR2_SetInterruptHandler
  3473                           ;!                    _TMR2_StartTimer
  3474                           ;!                     _TMR2_StopTimer
  3475                           ;! ---------------------------------------------------------------------------------
  3476                           ;! (7) _TMR2_StopTimer                                       0     0      0       0
  3477                           ;! ---------------------------------------------------------------------------------
  3478                           ;! (7) _TMR2_StartTimer                                      0     0      0       0
  3479                           ;! ---------------------------------------------------------------------------------
  3480                           ;! (3) _TMR2_SetInterruptHandler                             2     0      2     174
  3481                           ;!                                              0 BANK0      2     0      2
  3482                           ;! ---------------------------------------------------------------------------------
  3483                           ;! (7) _TMR2_LoadPeriodRegister                              1     1      0      22
  3484                           ;!                                              0 BANK0      1     1      0
  3485                           ;! ---------------------------------------------------------------------------------
  3486                           ;! (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
  3487                           ;! ---------------------------------------------------------------------------------
  3488                           ;! (2) _MTOUCH_Button_ServiceAll                             0     0      0    3145
  3489                           ;!                     _Button_Service
  3490                           ;! ---------------------------------------------------------------------------------
  3491                           ;! (3) _Button_Service                                       4     4      0    3145
  3492                           ;!                                             18 BANK0      4     4      0
  3493                           ;!            _Button_Deviation_Update
  3494                           ;!              _Button_Reading_Update
  3495                           ;!          _Button_State_Initializing *
  3496                           ;!            _Button_State_NotPressed *
  3497                           ;!               _Button_State_Pressed *
  3498                           ;!         _MTOUCH_Sensor_isCalibrated
  3499                           ;!           _MTOUCH_Sensor_wasSampled
  3500                           ;! ---------------------------------------------------------------------------------
  3501                           ;! (4) _MTOUCH_Sensor_wasSampled                             2     2      0     303
  3502                           ;!                                              4 BANK0      2     2      0
  3503                           ;!                             ___bmul
  3504                           ;! ---------------------------------------------------------------------------------
  3505                           ;! (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
  3506                           ;! ---------------------------------------------------------------------------------
  3507                           ;! (4) _Button_State_Pressed                                 3     2      1     366
  3508                           ;!                                             13 BANK0      3     2      1
  3509                           ;!             _Button_DefaultCallback *
  3510                           ;! ---------------------------------------------------------------------------------
  3511                           ;! (4) _Button_State_NotPressed                              3     2      1     727
  3512                           ;!                                             13 BANK0      3     2      1
  3513                           ;!             _Button_Baseline_Update
  3514                           ;!             _Button_DefaultCallback *
  3515                           ;! ---------------------------------------------------------------------------------
  3516                           ;! (5) _Button_DefaultCallback                               1     0      1     159
  3517                           ;!                                              0 BANK0      1     0      1
  3518                           ;! ---------------------------------------------------------------------------------
  3519                           ;! (4) _Button_State_Initializing                            5     4      1     869
  3520                           ;!                                             13 BANK0      5     4      1
  3521                           ;!         _Button_Baseline_Initialize
  3522                           ;!             _Button_Baseline_Update
  3523                           ;! ---------------------------------------------------------------------------------
  3524                           ;! (5) _Button_Baseline_Update                               7     7      0     260
  3525                           ;!                                              0 BANK0      7     7      0
  3526                           ;! ---------------------------------------------------------------------------------
  3527                           ;! (5) _Button_Baseline_Initialize                           5     5      0     411
  3528                           ;!                                              8 BANK0      5     5      0
  3529                           ;!        _MTOUCH_Sensor_RawSample_Get
  3530                           ;! ---------------------------------------------------------------------------------
  3531                           ;! (4) _Button_Reading_Update                                3     3      0     512
  3532                           ;!                                              8 BANK0      3     3      0
  3533                           ;!        _MTOUCH_Sensor_RawSample_Get
  3534                           ;! ---------------------------------------------------------------------------------
  3535                           ;! (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     303
  3536                           ;!                                              4 BANK0      4     2      2
  3537                           ;!                             ___bmul
  3538                           ;! ---------------------------------------------------------------------------------
  3539                           ;! (5) ___bmul                                               4     3      1     281
  3540                           ;!                                              0 BANK0      4     3      1
  3541                           ;! ---------------------------------------------------------------------------------
  3542                           ;! (4) _Button_Deviation_Update                             15    15      0     213
  3543                           ;!                                              0 BANK0     15    15      0
  3544                           ;! ---------------------------------------------------------------------------------
  3545                           ;! (1) _MTOUCH_Button_isPressed                              2     2      0      22
  3546                           ;!                                              0 BANK0      2     2      0
  3547                           ;! ---------------------------------------------------------------------------------
  3548                           ;! Estimated maximum stack depth 7
  3549                           ;! ---------------------------------------------------------------------------------
  3550                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3551                           ;! ---------------------------------------------------------------------------------
  3552                           ;! (8) _INTERRUPT_InterruptManager                           0     0      0     409
  3553                           ;!                           _TMR2_ISR
  3554                           ;! ---------------------------------------------------------------------------------
  3555                           ;! (9) _TMR2_ISR                                             0     0      0     409
  3556                           ;!                   Absolute function *
  3557                           ;!             _Sensor_Acq_ExecuteScan *
  3558                           ;!       _TMR2_DefaultInterruptHandler *
  3559                           ;! ---------------------------------------------------------------------------------
  3560                           ;! (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
  3561                           ;! ---------------------------------------------------------------------------------
  3562                           ;! (10) _Sensor_Acq_ExecuteScan                              4     4      0     409
  3563                           ;!                                              4 COMMON     4     4      0
  3564                           ;!                 _MTOUCH_CVD_ScanA_0
  3565                           ;!                 _MTOUCH_CVD_ScanB_0
  3566                           ;!                           i1___bmul
  3567                           ;!                              i1_abs
  3568                           ;! ---------------------------------------------------------------------------------
  3569                           ;! (11) i1_abs                                               4     2      2     144
  3570                           ;!                                              0 COMMON     4     2      2
  3571                           ;! ---------------------------------------------------------------------------------
  3572                           ;! (11) i1___bmul                                            4     3      1      87
  3573                           ;!                                              0 COMMON     4     3      1
  3574                           ;! ---------------------------------------------------------------------------------
  3575                           ;! (11) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
  3576                           ;! ---------------------------------------------------------------------------------
  3577                           ;! (11) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
  3578                           ;! ---------------------------------------------------------------------------------
  3579                           ;! (10) Absolute function(Fake)                              0     0      0       0
  3580                           ;! ---------------------------------------------------------------------------------
  3581                           ;! Estimated maximum stack depth 11
  3582                           ;! ---------------------------------------------------------------------------------
  3583                           ;!
  3584                           ;! Call Graph Graphs:
  3585                           ;!
  3586                           ;! _main (ROOT)
  3587                           ;!   _MTOUCH_Button_isPressed
  3588                           ;!   _MTOUCH_Service_Mainloop
  3589                           ;!     _MTOUCH_Button_ServiceAll
  3590                           ;!       _Button_Service
  3591                           ;!         _Button_Deviation_Update
  3592                           ;!         _Button_Reading_Update
  3593                           ;!           _MTOUCH_Sensor_RawSample_Get
  3594                           ;!             ___bmul
  3595                           ;!         _Button_State_Initializing *
  3596                           ;!           _Button_Baseline_Initialize
  3597                           ;!             _MTOUCH_Sensor_RawSample_Get
  3598                           ;!               ___bmul
  3599                           ;!           _Button_Baseline_Update
  3600                           ;!         _Button_State_NotPressed *
  3601                           ;!           _Button_Baseline_Update
  3602                           ;!           _Button_DefaultCallback *
  3603                           ;!         _Button_State_Pressed *
  3604                           ;!           _Button_DefaultCallback *
  3605                           ;!         _MTOUCH_Sensor_isCalibrated *
  3606                           ;!         _MTOUCH_Sensor_wasSampled *
  3607                           ;!           ___bmul
  3608                           ;!     _MTOUCH_Sensor_SampleAll
  3609                           ;!       _Sensor_Service
  3610                           ;!         _Sensor_Acquisition
  3611                           ;!           _Sensor_Acq_ExecutePacket
  3612                           ;!             _MTOUCH_Sensor_Scan_Initialize
  3613                           ;!             _TMR2_LoadPeriodRegister
  3614                           ;!             _TMR2_SetInterruptHandler
  3615                           ;!             _TMR2_StartTimer
  3616                           ;!             _TMR2_StopTimer
  3617                           ;!           _Sensor_Scanfrequency_Evaluation
  3618                           ;!             _Sensor_Acq_ExecutePacket
  3619                           ;!               _MTOUCH_Sensor_Scan_Initialize
  3620                           ;!               _TMR2_LoadPeriodRegister
  3621                           ;!               _TMR2_SetInterruptHandler
  3622                           ;!               _TMR2_StartTimer
  3623                           ;!               _TMR2_StopTimer
  3624                           ;!           _Sensor_setActive
  3625                           ;!           _Sensor_setInactive
  3626                           ;!           _abs
  3627                           ;!         _Sensor_DefaultCallback *
  3628                           ;!         _Sensor_RawSample_Update *
  3629                           ;!         _Sensor_setSampled *
  3630                           ;!         ___bmul *
  3631                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3632                           ;!       _Sensor_Sampled_Reset
  3633                           ;!   _SYSTEM_Initialize
  3634                           ;!     _MTOUCH_Initialize
  3635                           ;!       _MTOUCH_Button_InitializeAll
  3636                           ;!       _MTOUCH_Sensor_InitializeAll
  3637                           ;!         _MTOUCH_Sensor_Enable
  3638                           ;!           ___bmul
  3639                           ;!         _Sensor_Sampled_Reset
  3640                           ;!       _MTOUCH_Sensor_Sampled_ResetAll
  3641                           ;!         _Sensor_Sampled_Reset
  3642                           ;!       _MTOUCH_Sensor_Scan_Initialize
  3643                           ;!     _OSCILLATOR_Initialize
  3644                           ;!     _PIN_MANAGER_Initialize
  3645                           ;!     _TMR2_Initialize
  3646                           ;!       _TMR2_SetInterruptHandler
  3647                           ;!     _WDT_Initialize
  3648                           ;!
  3649                           ;! _INTERRUPT_InterruptManager (ROOT)
  3650                           ;!   _TMR2_ISR
  3651                           ;!     Absolute function(Fake) *
  3652                           ;!     _Sensor_Acq_ExecuteScan *
  3653                           ;!       _MTOUCH_CVD_ScanA_0
  3654                           ;!       _MTOUCH_CVD_ScanB_0
  3655                           ;!       i1___bmul
  3656                           ;!       i1_abs
  3657                           ;!     _TMR2_DefaultInterruptHandler *
  3658                           ;!
  3659                           
  3660                           ;! Address spaces:
  3661                           
  3662                           ;!Name               Size   Autos  Total    Cost      Usage
  3663                           ;!BIGRAM              F0      0       0       0        0.0%
  3664                           ;!NULL                 0      0       0       0        0.0%
  3665                           ;!CODE                 0      0       0       0        0.0%
  3666                           ;!BITCOMMON            E      0       0       1        0.0%
  3667                           ;!BITSFR0              0      0       0       1        0.0%
  3668                           ;!SFR0                 0      0       0       1        0.0%
  3669                           ;!COMMON               E      8       E       2      100.0%
  3670                           ;!BITSFR1              0      0       0       2        0.0%
  3671                           ;!SFR1                 0      0       0       2        0.0%
  3672                           ;!BITSFR2              0      0       0       3        0.0%
  3673                           ;!SFR2                 0      0       0       3        0.0%
  3674                           ;!STACK                0      0       0       3        0.0%
  3675                           ;!BITSFR3              0      0       0       4        0.0%
  3676                           ;!SFR3                 0      0       0       4        0.0%
  3677                           ;!ABS                  0      0      58       4        0.0%
  3678                           ;!BITBANK0            50      0       0       5        0.0%
  3679                           ;!BITSFR4              0      0       0       5        0.0%
  3680                           ;!SFR4                 0      0       0       5        0.0%
  3681                           ;!BANK0               50     1D      4A       6       92.5%
  3682                           ;!BITSFR5              0      0       0       6        0.0%
  3683                           ;!SFR5                 0      0       0       6        0.0%
  3684                           ;!BITBANK1            50      0       0       7        0.0%
  3685                           ;!BITSFR6              0      0       0       7        0.0%
  3686                           ;!SFR6                 0      0       0       7        0.0%
  3687                           ;!BANK1               50      0       0       8        0.0%
  3688                           ;!BITSFR7              0      0       0       8        0.0%
  3689                           ;!SFR7                 0      0       0       8        0.0%
  3690                           ;!BITBANK2            50      0       0       9        0.0%
  3691                           ;!BITSFR8              0      0       0       9        0.0%
  3692                           ;!SFR8                 0      0       0       9        0.0%
  3693                           ;!BANK2               50      0       0      10        0.0%
  3694                           ;!BITSFR9              0      0       0      10        0.0%
  3695                           ;!SFR9                 0      0       0      10        0.0%
  3696                           ;!BITSFR10             0      0       0      11        0.0%
  3697                           ;!SFR10                0      0       0      11        0.0%
  3698                           ;!DATA                 0      0      58      11        0.0%
  3699                           ;!BITSFR11             0      0       0      12        0.0%
  3700                           ;!SFR11                0      0       0      12        0.0%
  3701                           ;!BITSFR12             0      0       0      13        0.0%
  3702                           ;!SFR12                0      0       0      13        0.0%
  3703                           ;!BITSFR13             0      0       0      14        0.0%
  3704                           ;!SFR13                0      0       0      14        0.0%
  3705                           ;!BITSFR14             0      0       0      15        0.0%
  3706                           ;!SFR14                0      0       0      15        0.0%
  3707                           ;!BITSFR15             0      0       0      16        0.0%
  3708                           ;!SFR15                0      0       0      16        0.0%
  3709                           ;!BITSFR16             0      0       0      17        0.0%
  3710                           ;!SFR16                0      0       0      17        0.0%
  3711                           ;!BITSFR17             0      0       0      18        0.0%
  3712                           ;!SFR17                0      0       0      18        0.0%
  3713                           ;!BITSFR18             0      0       0      19        0.0%
  3714                           ;!SFR18                0      0       0      19        0.0%
  3715                           ;!BITSFR19             0      0       0      20        0.0%
  3716                           ;!SFR19                0      0       0      20        0.0%
  3717                           ;!BITSFR20             0      0       0      21        0.0%
  3718                           ;!SFR20                0      0       0      21        0.0%
  3719                           ;!BITSFR21             0      0       0      22        0.0%
  3720                           ;!SFR21                0      0       0      22        0.0%
  3721                           ;!BITSFR22             0      0       0      23        0.0%
  3722                           ;!SFR22                0      0       0      23        0.0%
  3723                           ;!BITSFR23             0      0       0      24        0.0%
  3724                           ;!SFR23                0      0       0      24        0.0%
  3725                           ;!BITSFR24             0      0       0      25        0.0%
  3726                           ;!SFR24                0      0       0      25        0.0%
  3727                           ;!BITSFR25             0      0       0      26        0.0%
  3728                           ;!SFR25                0      0       0      26        0.0%
  3729                           ;!BITSFR26             0      0       0      27        0.0%
  3730                           ;!SFR26                0      0       0      27        0.0%
  3731                           ;!BITSFR27             0      0       0      28        0.0%
  3732                           ;!SFR27                0      0       0      28        0.0%
  3733                           ;!BITSFR28             0      0       0      29        0.0%
  3734                           ;!SFR28                0      0       0      29        0.0%
  3735                           ;!BITSFR29             0      0       0      30        0.0%
  3736                           ;!SFR29                0      0       0      30        0.0%
  3737                           ;!BITSFR30             0      0       0      31        0.0%
  3738                           ;!SFR30                0      0       0      31        0.0%
  3739                           ;!BITSFR31             0      0       0      32        0.0%
  3740                           ;!SFR31                0      0       0      32        0.0%
  3741                           
  3742                           	global	_main
  3743                           
  3744 ;; *************** function _main *****************
  3745 ;; Defined at:
  3746 ;;		line 50 in file "main.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : B1F/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3760 ;;      Params:         0       0       0       0
  3761 ;;      Locals:         0       0       0       0
  3762 ;;      Temps:          0       0       0       0
  3763 ;;      Totals:         0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels required when called:   11
  3766 ;; This function calls:
  3767 ;;		_MTOUCH_Button_isPressed
  3768 ;;		_MTOUCH_Service_Mainloop
  3769 ;;		_SYSTEM_Initialize
  3770 ;; This function is called by:
  3771 ;;		Startup code after reset
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3775                           	file	"main.c"
  3776                           	line	50
  3777                           global __pmaintext
  3778                           __pmaintext:	;psect for function _main
  3779  0635                     psect	maintext
  3780                           	file	"main.c"
  3781                           	line	50
  3782                           	global	__size_of_main
  3783                           	__size_of_main	equ	__end_of_main-_main
  3784  001B                     	
  3785                           _main:	
  3786  0635                     ;incstack = 0
  3787                           	opt	stack 5
  3788                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3789                           	line	53
  3790                           	
  3791                           l1986:	
  3792  0635                     ;main.c: 53:     SYSTEM_Initialize();
  3793                           	fcall	_SYSTEM_Initialize
  3794  0635  3187  2721  3186   	goto	l1988
  3795  0638  2E39               	line	70
  3796                           ;main.c: 70:     while (1)
  3797                           	
  3798                           l499:	
  3799  0639                     	line	73
  3800                           	
  3801                           l1988:	
  3802  0639                     ;main.c: 71:     {;main.c: 73:      MTOUCH_Service_Mainloop();
  3803                           	fcall	_MTOUCH_Service_Mainloop
  3804  0639  3187  276C  3186   	line	75
  3805                           	
  3806                           l1990:	
  3807  063C                     ;main.c: 75:             if(MTOUCH_Button_isPressed(Button0))
  3808                           	movlw	low(0)
  3809  063C  3000               	fcall	_MTOUCH_Button_isPressed
  3810  063D  3186  26B9  3186   	xorlw	low(0)&0ffh
  3811  0640  3A00               	skipnz
  3812  0641  1903               	goto	u1141
  3813  0642  2E44               	goto	u1140
  3814  0643  2E45               u1141:
  3815  0644                     	goto	l504
  3816  0644  2E49               u1140:
  3817  0645                     	line	76
  3818                           ;main.c: 76:                 do { LATCbits.LATC5 = 1; } while(0);
  3819                           	
  3820                           l501:	
  3821  0645                     	movlb 2	; select bank2
  3822  0645  0022               	bsf	(270)^0100h,5	;volatile
  3823  0646  168E               	goto	l1988
  3824  0647  2E39               	
  3825                           l502:	
  3826  0648                     	goto	l1988
  3827  0648  2E39               	line	77
  3828                           ;main.c: 77:             else
  3829                           	
  3830                           l500:	
  3831  0649                     	line	78
  3832                           ;main.c: 78:                 do { LATCbits.LATC5 = 0; } while(0);
  3833                           	
  3834                           l504:	
  3835  0649                     	movlb 2	; select bank2
  3836  0649  0022               	bcf	(270)^0100h,5	;volatile
  3837  064A  128E               	goto	l1988
  3838  064B  2E39               	
  3839                           l505:	
  3840  064C                     	goto	l1988
  3841  064C  2E39               	
  3842                           l503:	
  3843  064D                     	goto	l1988
  3844  064D  2E39               	line	81
  3845                           ;main.c: 81: }
  3846                           	
  3847                           l506:	
  3848  064E                     	goto	l1988
  3849  064E  2E39               	
  3850                           l507:	
  3851  064F                     	line	82
  3852                           	
  3853                           l508:	
  3854  064F                     	global	start
  3855                           	ljmp	start
  3856  064F  281D               	opt stack 0
  3857                           GLOBAL	__end_of_main
  3858                           	__end_of_main:
  3859  0650                     	signat	_main,89
  3860                           	global	_SYSTEM_Initialize
  3861                           
  3862 ;; *************** function _SYSTEM_Initialize *****************
  3863 ;; Defined at:
  3864 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3878 ;;      Params:         0       0       0       0
  3879 ;;      Locals:         0       0       0       0
  3880 ;;      Temps:          0       0       0       0
  3881 ;;      Totals:         0       0       0       0
  3882 ;;Total ram usage:        0 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    8
  3885 ;; This function calls:
  3886 ;;		_MTOUCH_Initialize
  3887 ;;		_OSCILLATOR_Initialize
  3888 ;;		_PIN_MANAGER_Initialize
  3889 ;;		_TMR2_Initialize
  3890 ;;		_WDT_Initialize
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3896                           	file	"mcc_generated_files/mcc.c"
  3897                           	line	50
  3898                           global __ptext1
  3899                           __ptext1:	;psect for function _SYSTEM_Initialize
  3900  0721                     psect	text1
  3901                           	file	"mcc_generated_files/mcc.c"
  3902                           	line	50
  3903                           	global	__size_of_SYSTEM_Initialize
  3904                           	__size_of_SYSTEM_Initialize	equ	__end_of_SYSTEM_Initialize-_SYSTEM_Initialize
  3905  0010                     	
  3906                           _SYSTEM_Initialize:	
  3907  0721                     ;incstack = 0
  3908                           	opt	stack 7
  3909                           ; Regs used in _SYSTEM_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3910                           	line	53
  3911                           	
  3912                           l1930:	
  3913  0721                     ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3914                           	fcall	_PIN_MANAGER_Initialize
  3915  0721  3186  26D1  3187   	line	54
  3916                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3917                           	fcall	_OSCILLATOR_Initialize
  3918  0724  3187  2780  3187   	line	55
  3919                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3920                           	fcall	_WDT_Initialize
  3921  0727  3187  27CD  3187   	line	56
  3922                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3923                           	fcall	_TMR2_Initialize
  3924  072A  3186  26FC  3187   	line	57
  3925                           	
  3926                           l1932:	
  3927  072D                     ;mcc_generated_files/mcc.c: 57:     MTOUCH_Initialize();
  3928                           	fcall	_MTOUCH_Initialize
  3929  072D  3187  275F  3187   	line	58
  3930                           	
  3931                           l23:	
  3932  0730                     	return
  3933  0730  0008               	opt stack 0
  3934                           GLOBAL	__end_of_SYSTEM_Initialize
  3935                           	__end_of_SYSTEM_Initialize:
  3936  0731                     	signat	_SYSTEM_Initialize,89
  3937                           	global	_WDT_Initialize
  3938                           
  3939 ;; *************** function _WDT_Initialize *****************
  3940 ;; Defined at:
  3941 ;;		line 72 in file "mcc_generated_files/mcc.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3955 ;;      Params:         0       0       0       0
  3956 ;;      Locals:         0       0       0       0
  3957 ;;      Temps:          0       0       0       0
  3958 ;;      Totals:         0       0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; Hardware stack levels required when called:    4
  3962 ;; This function calls:
  3963 ;;		Nothing
  3964 ;; This function is called by:
  3965 ;;		_SYSTEM_Initialize
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  3969                           	line	72
  3970                           global __ptext2
  3971                           __ptext2:	;psect for function _WDT_Initialize
  3972  07CD                     psect	text2
  3973                           	file	"mcc_generated_files/mcc.c"
  3974                           	line	72
  3975                           	global	__size_of_WDT_Initialize
  3976                           	__size_of_WDT_Initialize	equ	__end_of_WDT_Initialize-_WDT_Initialize
  3977  0004                     	
  3978                           _WDT_Initialize:	
  3979  07CD                     ;incstack = 0
  3980                           	opt	stack 10
  3981                           ; Regs used in _WDT_Initialize: [wreg]
  3982                           	line	75
  3983                           	
  3984                           l1858:	
  3985  07CD                     ;mcc_generated_files/mcc.c: 75:     WDTCON = 0x16;
  3986                           	movlw	low(016h)
  3987  07CD  3016               	movlb 1	; select bank1
  3988  07CE  0021               	movwf	(151)^080h	;volatile
  3989  07CF  0097               	line	76
  3990                           	
  3991                           l29:	
  3992  07D0                     	return
  3993  07D0  0008               	opt stack 0
  3994                           GLOBAL	__end_of_WDT_Initialize
  3995                           	__end_of_WDT_Initialize:
  3996  07D1                     	signat	_WDT_Initialize,89
  3997                           	global	_TMR2_Initialize
  3998                           
  3999 ;; *************** function _TMR2_Initialize *****************
  4000 ;; Defined at:
  4001 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;		None
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;		None
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0, pclath, cstack
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4015 ;;      Params:         0       0       0       0
  4016 ;;      Locals:         0       0       0       0
  4017 ;;      Temps:          0       0       0       0
  4018 ;;      Totals:         0       0       0       0
  4019 ;;Total ram usage:        0 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; Hardware stack levels required when called:    5
  4022 ;; This function calls:
  4023 ;;		_TMR2_SetInterruptHandler
  4024 ;; This function is called by:
  4025 ;;		_SYSTEM_Initialize
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4029                           	file	"mcc_generated_files/tmr2.c"
  4030                           	line	64
  4031                           global __ptext3
  4032                           __ptext3:	;psect for function _TMR2_Initialize
  4033  06FC                     psect	text3
  4034                           	file	"mcc_generated_files/tmr2.c"
  4035                           	line	64
  4036                           	global	__size_of_TMR2_Initialize
  4037                           	__size_of_TMR2_Initialize	equ	__end_of_TMR2_Initialize-_TMR2_Initialize
  4038  0013                     	
  4039                           _TMR2_Initialize:	
  4040  06FC                     ;incstack = 0
  4041                           	opt	stack 9
  4042                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4043                           	line	69
  4044                           	
  4045                           l1860:	
  4046  06FC                     ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
  4047                           	movlw	low(0FFh)
  4048  06FC  30FF               	movlb 0	; select bank0
  4049  06FD  0020               	movwf	(27)	;volatile
  4050  06FE  009B               	line	72
  4051                           	
  4052                           l1862:	
  4053  06FF                     ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  4054                           	clrf	(26)	;volatile
  4055  06FF  019A               	line	75
  4056                           	
  4057                           l1864:	
  4058  0700                     ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  4059                           	bcf	(17),1	;volatile
  4060  0700  1091               	line	78
  4061                           	
  4062                           l1866:	
  4063  0701                     ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  4064                           	movlb 1	; select bank1
  4065  0701  0021               	bsf	(145)^080h,1	;volatile
  4066  0702  1491               	line	81
  4067                           	
  4068                           l1868:	
  4069  0703                     ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
                                 er);
  4070                           	movlw	low(_TMR2_DefaultInterruptHandler)
  4071  0703  30DD               	movlb 0	; select bank0
  4072  0704  0020               	movwf	(TMR2_SetInterruptHandler@InterruptHandler)
  4073  0705  00C6               	movlw	high(_TMR2_DefaultInterruptHandler)
  4074  0706  3007               	movwf	((TMR2_SetInterruptHandler@InterruptHandler))+1
  4075  0707  00C7               	fcall	_TMR2_SetInterruptHandler
  4076  0708  3187  27AE  3186   	line	84
  4077                           	
  4078                           l1870:	
  4079  070B                     ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x04;
  4080                           	movlw	low(04h)
  4081  070B  3004               	movlb 0	; select bank0
  4082  070C  0020               	movwf	(28)	;volatile
  4083  070D  009C               	line	85
  4084                           	
  4085                           l95:	
  4086  070E                     	return
  4087  070E  0008               	opt stack 0
  4088                           GLOBAL	__end_of_TMR2_Initialize
  4089                           	__end_of_TMR2_Initialize:
  4090  070F                     	signat	_TMR2_Initialize,89
  4091                           	global	_PIN_MANAGER_Initialize
  4092                           
  4093 ;; *************** function _PIN_MANAGER_Initialize *****************
  4094 ;; Defined at:
  4095 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2
  4104 ;; Tracked objects:
  4105 ;;		On entry : 0/0
  4106 ;;		On exit  : 0/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4109 ;;      Params:         0       0       0       0
  4110 ;;      Locals:         0       0       0       0
  4111 ;;      Temps:          0       0       0       0
  4112 ;;      Totals:         0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    4
  4116 ;; This function calls:
  4117 ;;		Nothing
  4118 ;; This function is called by:
  4119 ;;		_SYSTEM_Initialize
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4123                           	file	"mcc_generated_files/pin_manager.c"
  4124                           	line	57
  4125                           global __ptext4
  4126                           __ptext4:	;psect for function _PIN_MANAGER_Initialize
  4127  06D1                     psect	text4
  4128                           	file	"mcc_generated_files/pin_manager.c"
  4129                           	line	57
  4130                           	global	__size_of_PIN_MANAGER_Initialize
  4131                           	__size_of_PIN_MANAGER_Initialize	equ	__end_of_PIN_MANAGER_Initialize-_PIN_MANAGER_Initi
                                 alize
  4132  0016                     	
  4133                           _PIN_MANAGER_Initialize:	
  4134  06D1                     ;incstack = 0
  4135                           	opt	stack 10
  4136                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4137                           	line	62
  4138                           	
  4139                           l1838:	
  4140  06D1                     ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4141                           	movlb 2	; select bank2
  4142  06D1  0022               	clrf	(268)^0100h	;volatile
  4143  06D2  018C               	line	63
  4144                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  4145                           	clrf	(270)^0100h	;volatile
  4146  06D3  018E               	line	68
  4147                           	
  4148                           l1840:	
  4149  06D4                     ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4150                           	movlw	low(037h)
  4151  06D4  3037               	movlb 1	; select bank1
  4152  06D5  0021               	movwf	(140)^080h	;volatile
  4153  06D6  008C               	line	69
  4154                           	
  4155                           l1842:	
  4156  06D7                     ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1F;
  4157                           	movlw	low(01Fh)
  4158  06D7  301F               	movwf	(142)^080h	;volatile
  4159  06D8  008E               	line	74
  4160                           	
  4161                           l1844:	
  4162  06D9                     ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x1F;
  4163                           	movlw	low(01Fh)
  4164  06D9  301F               	movlb 3	; select bank3
  4165  06DA  0023               	movwf	(398)^0180h	;volatile
  4166  06DB  008E               	line	75
  4167                           	
  4168                           l1846:	
  4169  06DC                     ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x17;
  4170                           	movlw	low(017h)
  4171  06DC  3017               	movwf	(396)^0180h	;volatile
  4172  06DD  008C               	line	80
  4173                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4174                           	movlb 4	; select bank4
  4175  06DE  0024               	clrf	(524)^0200h	;volatile
  4176  06DF  018C               	line	81
  4177                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  4178                           	clrf	(526)^0200h	;volatile
  4179  06E0  018E               	line	82
  4180                           	
  4181                           l1848:	
  4182  06E1                     ;mcc_generated_files/pin_manager.c: 82:     OPTION_REGbits.nWPUEN = 1;
  4183                           	movlb 1	; select bank1
  4184  06E1  0021               	bsf	(149)^080h,7	;volatile
  4185  06E2  1795               	line	87
  4186                           ;mcc_generated_files/pin_manager.c: 87:     ODCONA = 0x00;
  4187                           	movlb 5	; select bank5
  4188  06E3  0025               	clrf	(652)^0280h	;volatile
  4189  06E4  018C               	line	88
  4190                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
  4191                           	clrf	(654)^0280h	;volatile
  4192  06E5  018E               	line	96
  4193                           	
  4194                           l71:	
  4195  06E6                     	return
  4196  06E6  0008               	opt stack 0
  4197                           GLOBAL	__end_of_PIN_MANAGER_Initialize
  4198                           	__end_of_PIN_MANAGER_Initialize:
  4199  06E7                     	signat	_PIN_MANAGER_Initialize,89
  4200                           	global	_OSCILLATOR_Initialize
  4201                           
  4202 ;; *************** function _OSCILLATOR_Initialize *****************
  4203 ;; Defined at:
  4204 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4205 ;; Parameters:    Size  Location     Type
  4206 ;;		None
  4207 ;; Auto vars:     Size  Location     Type
  4208 ;;		None
  4209 ;; Return value:  Size  Location     Type
  4210 ;;                  1    wreg      void 
  4211 ;; Registers used:
  4212 ;;		wreg, status,2
  4213 ;; Tracked objects:
  4214 ;;		On entry : 0/0
  4215 ;;		On exit  : 0/0
  4216 ;;		Unchanged: 0/0
  4217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4218 ;;      Params:         0       0       0       0
  4219 ;;      Locals:         0       0       0       0
  4220 ;;      Temps:          0       0       0       0
  4221 ;;      Totals:         0       0       0       0
  4222 ;;Total ram usage:        0 bytes
  4223 ;; Hardware stack levels used:    1
  4224 ;; Hardware stack levels required when called:    4
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_SYSTEM_Initialize
  4229 ;; This function uses a non-reentrant model
  4230 ;;
  4231                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4232                           	file	"mcc_generated_files/mcc.c"
  4233                           	line	60
  4234                           global __ptext5
  4235                           __ptext5:	;psect for function _OSCILLATOR_Initialize
  4236  0780                     psect	text5
  4237                           	file	"mcc_generated_files/mcc.c"
  4238                           	line	60
  4239                           	global	__size_of_OSCILLATOR_Initialize
  4240                           	__size_of_OSCILLATOR_Initialize	equ	__end_of_OSCILLATOR_Initialize-_OSCILLATOR_Initiali
                                 ze
  4241  0008                     	
  4242                           _OSCILLATOR_Initialize:	
  4243  0780                     ;incstack = 0
  4244                           	opt	stack 10
  4245                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4246                           	line	63
  4247                           	
  4248                           l1850:	
  4249  0780                     ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x78;
  4250                           	movlw	low(078h)
  4251  0780  3078               	movlb 1	; select bank1
  4252  0781  0021               	movwf	(153)^080h	;volatile
  4253  0782  0099               	line	65
  4254                           	
  4255                           l1852:	
  4256  0783                     ;mcc_generated_files/mcc.c: 65:     OSCSTAT = 0x00;
  4257                           	clrf	(154)^080h	;volatile
  4258  0783  019A               	line	67
  4259                           	
  4260                           l1854:	
  4261  0784                     ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4262                           	clrf	(152)^080h	;volatile
  4263  0784  0198               	line	69
  4264                           	
  4265                           l1856:	
  4266  0785                     ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  4267                           	movlb 2	; select bank2
  4268  0785  0022               	clrf	(278)^0100h	;volatile
  4269  0786  0196               	line	70
  4270                           	
  4271                           l26:	
  4272  0787                     	return
  4273  0787  0008               	opt stack 0
  4274                           GLOBAL	__end_of_OSCILLATOR_Initialize
  4275                           	__end_of_OSCILLATOR_Initialize:
  4276  0788                     	signat	_OSCILLATOR_Initialize,89
  4277                           	global	_MTOUCH_Initialize
  4278                           
  4279 ;; *************** function _MTOUCH_Initialize *****************
  4280 ;; Defined at:
  4281 ;;		line 49 in file "mcc_generated_files/mtouch/mtouch.c"
  4282 ;; Parameters:    Size  Location     Type
  4283 ;;		None
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;		None
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4295 ;;      Params:         0       0       0       0
  4296 ;;      Locals:         0       0       0       0
  4297 ;;      Temps:          0       0       0       0
  4298 ;;      Totals:         0       0       0       0
  4299 ;;Total ram usage:        0 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    7
  4302 ;; This function calls:
  4303 ;;		_MTOUCH_Button_InitializeAll
  4304 ;;		_MTOUCH_Sensor_InitializeAll
  4305 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4306 ;;		_MTOUCH_Sensor_Scan_Initialize
  4307 ;; This function is called by:
  4308 ;;		_SYSTEM_Initialize
  4309 ;; This function uses a non-reentrant model
  4310 ;;
  4311                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4312                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4313                           	line	49
  4314                           global __ptext6
  4315                           __ptext6:	;psect for function _MTOUCH_Initialize
  4316  075F                     psect	text6
  4317                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4318                           	line	49
  4319                           	global	__size_of_MTOUCH_Initialize
  4320                           	__size_of_MTOUCH_Initialize	equ	__end_of_MTOUCH_Initialize-_MTOUCH_Initialize
  4321  000D                     	
  4322                           _MTOUCH_Initialize:	
  4323  075F                     ;incstack = 0
  4324                           	opt	stack 7
  4325                           ; Regs used in _MTOUCH_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4326                           	line	51
  4327                           	
  4328                           l1872:	
  4329  075F                     ;mcc_generated_files/mtouch/mtouch.c: 51:     MTOUCH_Sensor_InitializeAll();
  4330                           	fcall	_MTOUCH_Sensor_InitializeAll
  4331  075F  3187  2741  3187   	line	52
  4332                           	
  4333                           l1874:	
  4334  0762                     ;mcc_generated_files/mtouch/mtouch.c: 52:         MTOUCH_Button_InitializeAll();
  4335                           	fcall	_MTOUCH_Button_InitializeAll
  4336  0762  3187  27DA  3187   	line	53
  4337                           	
  4338                           l1876:	
  4339  0765                     ;mcc_generated_files/mtouch/mtouch.c: 53:     MTOUCH_Sensor_Sampled_ResetAll();
  4340                           	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4341  0765  3187  27B9  3187   	line	54
  4342                           	
  4343                           l1878:	
  4344  0768                     ;mcc_generated_files/mtouch/mtouch.c: 54:     MTOUCH_Sensor_Scan_Initialize();
  4345                           	fcall	_MTOUCH_Sensor_Scan_Initialize
  4346  0768  3187  2777  3187   	line	55
  4347                           	
  4348                           l137:	
  4349  076B                     	return
  4350  076B  0008               	opt stack 0
  4351                           GLOBAL	__end_of_MTOUCH_Initialize
  4352                           	__end_of_MTOUCH_Initialize:
  4353  076C                     	signat	_MTOUCH_Initialize,89
  4354                           	global	_MTOUCH_Sensor_InitializeAll
  4355                           
  4356 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  4357 ;; Defined at:
  4358 ;;		line 112 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4359 ;; Parameters:    Size  Location     Type
  4360 ;;		None
  4361 ;; Auto vars:     Size  Location     Type
  4362 ;;		None
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  1    wreg      void 
  4365 ;; Registers used:
  4366 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4372 ;;      Params:         0       0       0       0
  4373 ;;      Locals:         0       0       0       0
  4374 ;;      Temps:          0       0       0       0
  4375 ;;      Totals:         0       0       0       0
  4376 ;;Total ram usage:        0 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    6
  4379 ;; This function calls:
  4380 ;;		_MTOUCH_Sensor_Enable
  4381 ;;		_Sensor_Sampled_Reset
  4382 ;; This function is called by:
  4383 ;;		_MTOUCH_Initialize
  4384 ;; This function uses a non-reentrant model
  4385 ;;
  4386                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4387                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4388                           	line	112
  4389                           global __ptext7
  4390                           __ptext7:	;psect for function _MTOUCH_Sensor_InitializeAll
  4391  0741                     psect	text7
  4392                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4393                           	line	112
  4394                           	global	__size_of_MTOUCH_Sensor_InitializeAll
  4395                           	__size_of_MTOUCH_Sensor_InitializeAll	equ	__end_of_MTOUCH_Sensor_InitializeAll-_MTOUCH_
                                 Sensor_InitializeAll
  4396  000F                     	
  4397                           _MTOUCH_Sensor_InitializeAll:	
  4398  0741                     ;incstack = 0
  4399                           	opt	stack 7
  4400                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
                                 cstack]
  4401                           	line	114
  4402                           	
  4403                           l1770:	
  4404  0741                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 114:     WPUCbits.WPUC1 = 0;
  4405                           	movlb 4	; select bank4
  4406  0741  0024               	bcf	(526)^0200h,1	;volatile
  4407  0742  108E               	line	115
  4408                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 115:     ANSELCbits.ANSC1 = 0;
  4409                           	movlb 3	; select bank3
  4410  0743  0023               	bcf	(398)^0180h,1	;volatile
  4411  0744  108E               	line	116
  4412                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 116:     TRISCbits.TRISC1 = 0;
  4413                           	movlb 1	; select bank1
  4414  0745  0021               	bcf	(142)^080h,1	;volatile
  4415  0746  108E               	line	117
  4416                           	
  4417                           l1772:	
  4418  0747                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 117:     MTOUCH_Sensor_Enable(0);
  4419                           	movlw	low(0)
  4420  0747  3000               	fcall	_MTOUCH_Sensor_Enable
  4421  0748  3187  2731  3187   	line	118
  4422                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 118:     Sensor_Sampled_Reset(&mtouch_senso
                                 r[0]);
  4423                           	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  4424  074B  303D               	fcall	_Sensor_Sampled_Reset
  4425  074C  3187  2788  3187   	line	119
  4426                           	
  4427                           l220:	
  4428  074F                     	return
  4429  074F  0008               	opt stack 0
  4430                           GLOBAL	__end_of_MTOUCH_Sensor_InitializeAll
  4431                           	__end_of_MTOUCH_Sensor_InitializeAll:
  4432  0750                     	signat	_MTOUCH_Sensor_InitializeAll,89
  4433                           	global	_MTOUCH_Sensor_Enable
  4434                           
  4435 ;; *************** function _MTOUCH_Sensor_Enable *****************
  4436 ;; Defined at:
  4437 ;;		line 444 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  sensor          1    wreg     enum E2110
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  sensor          1    5[BANK0 ] enum E2110
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      void 
  4444 ;; Registers used:
  4445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4451 ;;      Params:         0       0       0       0
  4452 ;;      Locals:         0       1       0       0
  4453 ;;      Temps:          0       1       0       0
  4454 ;;      Totals:         0       2       0       0
  4455 ;;Total ram usage:        2 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    5
  4458 ;; This function calls:
  4459 ;;		___bmul
  4460 ;; This function is called by:
  4461 ;;		_MTOUCH_Sensor_InitializeAll
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4465                           	line	444
  4466                           global __ptext8
  4467                           __ptext8:	;psect for function _MTOUCH_Sensor_Enable
  4468  0731                     psect	text8
  4469                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4470                           	line	444
  4471                           	global	__size_of_MTOUCH_Sensor_Enable
  4472                           	__size_of_MTOUCH_Sensor_Enable	equ	__end_of_MTOUCH_Sensor_Enable-_MTOUCH_Sensor_Enable

  4473  0010                     	
  4474                           _MTOUCH_Sensor_Enable:	
  4475  0731                     ;incstack = 0
  4476                           	opt	stack 7
  4477                           ; Regs used in _MTOUCH_Sensor_Enable: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
                                 
  4478                           ;MTOUCH_Sensor_Enable@sensor stored from wreg
  4479                           	movlb 0	; select bank0
  4480  0731  0020               	movwf	(MTOUCH_Sensor_Enable@sensor)
  4481  0732  00CB               	line	447
  4482                           	
  4483                           l1654:	
  4484  0733                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 444: void MTOUCH_Sensor_Enable(enum mtouch_
                                 sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 445: {;mcc_generated_fi
                                 les/mtouch/mtouch_sensor.c: 447:     mtouch_sensor[sensor].enabled = 1;
  4485                           	movlw	low(09h)
  4486  0733  3009               	movwf	(??_MTOUCH_Sensor_Enable+0)+0
  4487  0734  00CA               	movf	(??_MTOUCH_Sensor_Enable+0)+0,w
  4488  0735  084A               	movwf	(___bmul@multiplicand)
  4489  0736  00C6               	movf	(MTOUCH_Sensor_Enable@sensor),w
  4490  0737  084B               	fcall	___bmul
  4491  0738  3186  2686  3187   	addlw	08h
  4492  073B  3E08               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  4493  073C  3E3D               	movwf	fsr1l
  4494  073D  0086               	clrf fsr1h	
  4495  073E  0187               	
  4496                           	bsf	indf1,0
  4497  073F  1401               	line	448
  4498                           	
  4499                           l309:	
  4500  0740                     	return
  4501  0740  0008               	opt stack 0
  4502                           GLOBAL	__end_of_MTOUCH_Sensor_Enable
  4503                           	__end_of_MTOUCH_Sensor_Enable:
  4504  0741                     	signat	_MTOUCH_Sensor_Enable,4217
  4505                           	global	_MTOUCH_Button_InitializeAll
  4506                           
  4507 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  4508 ;; Defined at:
  4509 ;;		line 130 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4510 ;; Parameters:    Size  Location     Type
  4511 ;;		None
  4512 ;; Auto vars:     Size  Location     Type
  4513 ;;		None
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  1    wreg      void 
  4516 ;; Registers used:
  4517 ;;		None
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4523 ;;      Params:         0       0       0       0
  4524 ;;      Locals:         0       0       0       0
  4525 ;;      Temps:          0       0       0       0
  4526 ;;      Totals:         0       0       0       0
  4527 ;;Total ram usage:        0 bytes
  4528 ;; Hardware stack levels used:    1
  4529 ;; Hardware stack levels required when called:    4
  4530 ;; This function calls:
  4531 ;;		Nothing
  4532 ;; This function is called by:
  4533 ;;		_MTOUCH_Initialize
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4537                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  4538                           	line	130
  4539                           global __ptext9
  4540                           __ptext9:	;psect for function _MTOUCH_Button_InitializeAll
  4541  07DA                     psect	text9
  4542                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  4543                           	line	130
  4544                           	global	__size_of_MTOUCH_Button_InitializeAll
  4545                           	__size_of_MTOUCH_Button_InitializeAll	equ	__end_of_MTOUCH_Button_InitializeAll-_MTOUCH_
                                 Button_InitializeAll
  4546  0001                     	
  4547                           _MTOUCH_Button_InitializeAll:	
  4548  07DA                     ;incstack = 0
  4549                           	opt	stack 9
  4550                           ; Regs used in _MTOUCH_Button_InitializeAll: []
  4551                           	line	133
  4552                           	
  4553                           l391:	
  4554  07DA                     	return
  4555  07DA  0008               	opt stack 0
  4556                           GLOBAL	__end_of_MTOUCH_Button_InitializeAll
  4557                           	__end_of_MTOUCH_Button_InitializeAll:
  4558  07DB                     	signat	_MTOUCH_Button_InitializeAll,89
  4559                           	global	_MTOUCH_Service_Mainloop
  4560                           
  4561 ;; *************** function _MTOUCH_Service_Mainloop *****************
  4562 ;; Defined at:
  4563 ;;		line 63 in file "mcc_generated_files/mtouch/mtouch.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;		None
  4566 ;; Auto vars:     Size  Location     Type
  4567 ;;		None
  4568 ;; Return value:  Size  Location     Type
  4569 ;;                  1    wreg      _Bool 
  4570 ;; Registers used:
  4571 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4572 ;; Tracked objects:
  4573 ;;		On entry : 0/0
  4574 ;;		On exit  : 0/0
  4575 ;;		Unchanged: 0/0
  4576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4577 ;;      Params:         0       0       0       0
  4578 ;;      Locals:         0       0       0       0
  4579 ;;      Temps:          0       0       0       0
  4580 ;;      Totals:         0       0       0       0
  4581 ;;Total ram usage:        0 bytes
  4582 ;; Hardware stack levels used:    1
  4583 ;; Hardware stack levels required when called:   10
  4584 ;; This function calls:
  4585 ;;		_MTOUCH_Button_ServiceAll
  4586 ;;		_MTOUCH_Sensor_SampleAll
  4587 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4588 ;; This function is called by:
  4589 ;;		_main
  4590 ;; This function uses a non-reentrant model
  4591 ;;
  4592                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4593                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4594                           	line	63
  4595                           global __ptext10
  4596                           __ptext10:	;psect for function _MTOUCH_Service_Mainloop
  4597  076C                     psect	text10
  4598                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4599                           	line	63
  4600                           	global	__size_of_MTOUCH_Service_Mainloop
  4601                           	__size_of_MTOUCH_Service_Mainloop	equ	__end_of_MTOUCH_Service_Mainloop-_MTOUCH_Service_
                                 Mainloop
  4602  000B                     	
  4603                           _MTOUCH_Service_Mainloop:	
  4604  076C                     ;incstack = 0
  4605                           	opt	stack 5
  4606                           ; Regs used in _MTOUCH_Service_Mainloop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4607                           	line	65
  4608                           	
  4609                           l1940:	
  4610  076C                     ;mcc_generated_files/mtouch/mtouch.c: 65:     MTOUCH_Sensor_SampleAll();
  4611                           	fcall	_MTOUCH_Sensor_SampleAll
  4612  076C  3187  27BE  3187   	line	66
  4613                           	
  4614                           l1942:	
  4615  076F                     ;mcc_generated_files/mtouch/mtouch.c: 66:     MTOUCH_Button_ServiceAll();
  4616                           	fcall	_MTOUCH_Button_ServiceAll
  4617  076F  3187  27C8  3187   	line	67
  4618                           	
  4619                           l1944:	
  4620  0772                     ;mcc_generated_files/mtouch/mtouch.c: 67:     MTOUCH_Sensor_Sampled_ResetAll();
  4621                           	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4622  0772  3187  27B9  3187   	goto	l140
  4623  0775  2F76               	line	68
  4624                           	
  4625                           l1946:	
  4626  0776                     	line	69
  4627                           ;mcc_generated_files/mtouch/mtouch.c: 68:     return 1;;	Return value of _MTOUCH_Service
                                 _Mainloop is never used
  4628                           	
  4629                           l140:	
  4630  0776                     	return
  4631  0776  0008               	opt stack 0
  4632                           GLOBAL	__end_of_MTOUCH_Service_Mainloop
  4633                           	__end_of_MTOUCH_Service_Mainloop:
  4634  0777                     	signat	_MTOUCH_Service_Mainloop,89
  4635                           	global	_MTOUCH_Sensor_Sampled_ResetAll
  4636                           
  4637 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  4638 ;; Defined at:
  4639 ;;		line 504 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4640 ;; Parameters:    Size  Location     Type
  4641 ;;		None
  4642 ;; Auto vars:     Size  Location     Type
  4643 ;;		None
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  1    wreg      void 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4653 ;;      Params:         0       0       0       0
  4654 ;;      Locals:         0       0       0       0
  4655 ;;      Temps:          0       0       0       0
  4656 ;;      Totals:         0       0       0       0
  4657 ;;Total ram usage:        0 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; Hardware stack levels required when called:    5
  4660 ;; This function calls:
  4661 ;;		_Sensor_Sampled_Reset
  4662 ;; This function is called by:
  4663 ;;		_MTOUCH_Initialize
  4664 ;;		_MTOUCH_Service_Mainloop
  4665 ;; This function uses a non-reentrant model
  4666 ;;
  4667                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4668                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4669                           	line	504
  4670                           global __ptext11
  4671                           __ptext11:	;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  4672  07B9                     psect	text11
  4673                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4674                           	line	504
  4675                           	global	__size_of_MTOUCH_Sensor_Sampled_ResetAll
  4676                           	__size_of_MTOUCH_Sensor_Sampled_ResetAll	equ	__end_of_MTOUCH_Sensor_Sampled_ResetAll-_M
                                 TOUCH_Sensor_Sampled_ResetAll
  4677  0005                     	
  4678                           _MTOUCH_Sensor_Sampled_ResetAll:	
  4679  07B9                     ;incstack = 0
  4680                           	opt	stack 8
  4681                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
                                 th+cstack]
  4682                           	line	506
  4683                           	
  4684                           l1774:	
  4685  07B9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 506:         Sensor_Sampled_Reset(&mtouch_s
                                 ensor[0]);
  4686                           	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  4687  07B9  303D               	fcall	_Sensor_Sampled_Reset
  4688  07BA  3187  2788  3187   	line	507
  4689                           	
  4690                           l333:	
  4691  07BD                     	return
  4692  07BD  0008               	opt stack 0
  4693                           GLOBAL	__end_of_MTOUCH_Sensor_Sampled_ResetAll
  4694                           	__end_of_MTOUCH_Sensor_Sampled_ResetAll:
  4695  07BE                     	signat	_MTOUCH_Sensor_Sampled_ResetAll,89
  4696                           	global	_Sensor_Sampled_Reset
  4697                           
  4698 ;; *************** function _Sensor_Sampled_Reset *****************
  4699 ;; Defined at:
  4700 ;;		line 515 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  sensor          1    wreg     PTR struct .
  4703 ;;		 -> mtouch_sensor(9), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  sensor          1    0[BANK0 ] PTR struct .
  4706 ;;		 -> mtouch_sensor(9), 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4716 ;;      Params:         0       0       0       0
  4717 ;;      Locals:         0       1       0       0
  4718 ;;      Temps:          0       0       0       0
  4719 ;;      Totals:         0       1       0       0
  4720 ;;Total ram usage:        1 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    4
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_MTOUCH_Sensor_InitializeAll
  4727 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           psect	text12,local,class=CODE,delta=2,merge=1,inline,group=0
  4731                           	line	515
  4732                           global __ptext12
  4733                           __ptext12:	;psect for function _Sensor_Sampled_Reset
  4734  0788                     psect	text12
  4735                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4736                           	line	515
  4737                           	global	__size_of_Sensor_Sampled_Reset
  4738                           	__size_of_Sensor_Sampled_Reset	equ	__end_of_Sensor_Sampled_Reset-_Sensor_Sampled_Reset

  4739  0008                     	
  4740                           _Sensor_Sampled_Reset:	
  4741  0788                     ;incstack = 0
  4742                           	opt	stack 8
  4743                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  4744                           ;Sensor_Sampled_Reset@sensor stored from wreg
  4745                           	movlb 0	; select bank0
  4746  0788  0020               	movwf	(Sensor_Sampled_Reset@sensor)
  4747  0789  00C6               	line	517
  4748                           	
  4749                           l1656:	
  4750  078A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 515: static __attribute__((inline)) void Se
                                 nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 516: {;mcc_generated_files/mtouch/mtouch_sensor.c: 517:     sensor->sampled = 0;
  4751                           	movf	(Sensor_Sampled_Reset@sensor),w
  4752  078A  0846               	addlw	08h
  4753  078B  3E08               	movwf	fsr1l
  4754  078C  0086               	clrf fsr1h	
  4755  078D  0187               	
  4756                           	bcf	indf1,1
  4757  078E  1081               	line	518
  4758                           	
  4759                           l339:	
  4760  078F                     	return
  4761  078F  0008               	opt stack 0
  4762                           GLOBAL	__end_of_Sensor_Sampled_Reset
  4763                           	__end_of_Sensor_Sampled_Reset:
  4764  0790                     	signat	_Sensor_Sampled_Reset,4217
  4765                           	global	_MTOUCH_Sensor_SampleAll
  4766                           
  4767 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  4768 ;; Defined at:
  4769 ;;		line 143 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4770 ;; Parameters:    Size  Location     Type
  4771 ;;		None
  4772 ;; Auto vars:     Size  Location     Type
  4773 ;;		None
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      void 
  4776 ;; Registers used:
  4777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4783 ;;      Params:         0       0       0       0
  4784 ;;      Locals:         0       0       0       0
  4785 ;;      Temps:          0       0       0       0
  4786 ;;      Totals:         0       0       0       0
  4787 ;;Total ram usage:        0 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    9
  4790 ;; This function calls:
  4791 ;;		_Sensor_Service
  4792 ;; This function is called by:
  4793 ;;		_MTOUCH_Service_Mainloop
  4794 ;; This function uses a non-reentrant model
  4795 ;;
  4796                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4797                           	line	143
  4798                           global __ptext13
  4799                           __ptext13:	;psect for function _MTOUCH_Sensor_SampleAll
  4800  07BE                     psect	text13
  4801                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4802                           	line	143
  4803                           	global	__size_of_MTOUCH_Sensor_SampleAll
  4804                           	__size_of_MTOUCH_Sensor_SampleAll	equ	__end_of_MTOUCH_Sensor_SampleAll-_MTOUCH_Sensor_S
                                 ampleAll
  4805  0005                     	
  4806                           _MTOUCH_Sensor_SampleAll:	
  4807  07BE                     ;incstack = 0
  4808                           	opt	stack 5
  4809                           ; Regs used in _MTOUCH_Sensor_SampleAll: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4810                           	line	145
  4811                           	
  4812                           l1880:	
  4813  07BE                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 145:     Sensor_Service(0);
  4814                           	movlw	low(0)
  4815  07BE  3000               	fcall	_Sensor_Service
  4816  07BF  3185  253F  3187   	line	146
  4817                           	
  4818                           l226:	
  4819  07C2                     	return
  4820  07C2  0008               	opt stack 0
  4821                           GLOBAL	__end_of_MTOUCH_Sensor_SampleAll
  4822                           	__end_of_MTOUCH_Sensor_SampleAll:
  4823  07C3                     	signat	_MTOUCH_Sensor_SampleAll,89
  4824                           	global	_Sensor_Service
  4825                           
  4826 ;; *************** function _Sensor_Service *****************
  4827 ;; Defined at:
  4828 ;;		line 154 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  name            1    wreg     enum E2110
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  name            1   27[BANK0 ] enum E2110
  4833 ;;  sensor          1   28[BANK0 ] PTR struct .
  4834 ;;		 -> mtouch_sensor(9), 
  4835 ;;  error           1   26[BANK0 ] enum E2112
  4836 ;; Return value:  Size  Location     Type
  4837 ;;                  1    wreg      enum E2112
  4838 ;; Registers used:
  4839 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4840 ;; Tracked objects:
  4841 ;;		On entry : 0/0
  4842 ;;		On exit  : 0/0
  4843 ;;		Unchanged: 0/0
  4844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4845 ;;      Params:         0       0       0       0
  4846 ;;      Locals:         0       3       0       0
  4847 ;;      Temps:          0       2       0       0
  4848 ;;      Totals:         0       5       0       0
  4849 ;;Total ram usage:        5 bytes
  4850 ;; Hardware stack levels used:    1
  4851 ;; Hardware stack levels required when called:    8
  4852 ;; This function calls:
  4853 ;;		_Sensor_Acquisition
  4854 ;;		_Sensor_DefaultCallback
  4855 ;;		_Sensor_RawSample_Update
  4856 ;;		_Sensor_setSampled
  4857 ;;		___bmul
  4858 ;; This function is called by:
  4859 ;;		_MTOUCH_Sensor_SampleAll
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  4863                           	line	154
  4864                           global __ptext14
  4865                           __ptext14:	;psect for function _Sensor_Service
  4866  053F                     psect	text14
  4867                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4868                           	line	154
  4869                           	global	__size_of_Sensor_Service
  4870                           	__size_of_Sensor_Service	equ	__end_of_Sensor_Service-_Sensor_Service
  4871  003F                     	
  4872                           _Sensor_Service:	
  4873  053F                     ;incstack = 0
  4874                           	opt	stack 5
  4875                           ; Regs used in _Sensor_Service: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4876                           ;Sensor_Service@name stored from wreg
  4877                           	movlb 0	; select bank0
  4878  053F  0020               	movwf	(Sensor_Service@name)
  4879  0540  00E1               	line	156
  4880                           	
  4881                           l1776:	
  4882  0541                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 154: static enum mtouch_sensor_error Sensor
                                 _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 155:
                                  {;mcc_generated_files/mtouch/mtouch_sensor.c: 156:     mtouch_sensor_t* sensor = &mtouc
                                 h_sensor[name];
  4883                           	movlw	low(09h)
  4884  0541  3009               	movwf	(??_Sensor_Service+0)+0
  4885  0542  00DE               	movf	(??_Sensor_Service+0)+0,w
  4886  0543  085E               	movwf	(___bmul@multiplicand)
  4887  0544  00C6               	movf	(Sensor_Service@name),w
  4888  0545  0861               	fcall	___bmul
  4889  0546  3186  2686  3185   	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  4890  0549  3E3D               	movlb 0	; select bank0
  4891  054A  0020               	movwf	(??_Sensor_Service+1)+0
  4892  054B  00DF               	movf	(??_Sensor_Service+1)+0,w
  4893  054C  085F               	movwf	(Sensor_Service@sensor)
  4894  054D  00E2               	line	157
  4895                           	
  4896                           l1778:	
  4897  054E                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 157:     enum mtouch_sensor_error error = S
                                 ensor_Acquisition(sensor);
  4898                           	movf	(Sensor_Service@sensor),w
  4899  054E  0862               	fcall	_Sensor_Acquisition
  4900  054F  3184  244D  3185   	movlb 0	; select bank0
  4901  0552  0020               	movwf	(??_Sensor_Service+0)+0
  4902  0553  00DE               	movf	(??_Sensor_Service+0)+0,w
  4903  0554  085E               	movwf	(Sensor_Service@error)
  4904  0555  00E0               	line	160
  4905                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 160:     switch(error)
  4906                           	goto	l1786
  4907  0556  2D6D               	line	162
  4908                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 162:         case MTOUCH_SENSOR_ERROR_none:
  4909                           	
  4910                           l230:	
  4911  0557                     	line	164
  4912                           	
  4913                           l1780:	
  4914  0557                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 163:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 164:             Sensor_RawSample_Update(sensor);
  4915                           	movf	(Sensor_Service@sensor),w
  4916  0557  0862               	fcall	_Sensor_RawSample_Update
  4917  0558  3186  2650  3185   	line	165
  4918                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 165:             Sensor_setSampled(sensor);
                                 
  4919                           	movlb 0	; select bank0
  4920  055B  0020               	movf	(Sensor_Service@sensor),w
  4921  055C  0862               	fcall	_Sensor_setSampled
  4922  055D  3187  2790  3185   	line	166
  4923                           	
  4924                           l1782:	
  4925  0560                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 166:             callback_sampled(name);
  4926                           	movlb 0	; select bank0
  4927  0560  0020               	movf	(Sensor_Service@name),w
  4928  0561  0861               	movwf	(??_Sensor_Service+0)+0
  4929  0562  00DE               	movf	(??_Sensor_Service+0)+0,w
  4930  0563  085E               	movwf	(Sensor_DefaultCallback@sensor)
  4931  0564  00C6               	movf	(_callback_sampled+1),w
  4932  0565  082B               	movwf	pclath
  4933  0566  008A               	movf	(_callback_sampled),w
  4934  0567  082A               	callw
  4935  0568  000A               	pagesel	$
  4936  0569  3185               	line	168
  4937                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 167:         };mcc_generated_files/mtouch/m
                                 touch_sensor.c: 168:         break;
  4938                           	goto	l233
  4939  056A  2D7D               	line	170
  4940                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 170:         default: break;
  4941                           	
  4942                           l232:	
  4943  056B                     	goto	l233
  4944  056B  2D7D               	line	171
  4945                           	
  4946                           l1784:	
  4947  056C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 171:     }
  4948                           	goto	l233
  4949  056C  2D7D               	
  4950                           l229:	
  4951  056D                     	
  4952                           l1786:	
  4953  056D                     	movlb 0	; select bank0
  4954  056D  0020               	movf	(Sensor_Service@error),w
  4955  056E  0860               	movwf	(??_Sensor_Service+0)+0
  4956  056F  00DE               	clrf	(??_Sensor_Service+0)+0+1
  4957  0570  01DF               	btfsc	(??_Sensor_Service+0)+0,7
  4958  0571  1BDE               	decf	(??_Sensor_Service+0)+0+1,f
  4959  0572  03DF               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4960                           ; Switch size 1, requested type "space"
  4961                           ; Number of cases is 1, Range of values is 0 to 0
  4962                           ; switch strategies available:
  4963                           ; Name         Instructions Cycles
  4964                           ; simple_byte            4     3 (average)
  4965                           ; direct_byte            8     6 (fixed)
  4966                           ; jumptable            260     6 (fixed)
  4967                           ;	Chosen strategy is simple_byte
  4968                           
  4969                           	movf 1+(??_Sensor_Service+0)+0,w
  4970  0573  085F               	opt asmopt_push
  4971                           	opt asmopt_off
  4972                           	xorlw	0^0	; case 0
  4973  0574  3A00               	skipnz
  4974  0575  1903               	goto	l2032
  4975  0576  2D78               	goto	l233
  4976  0577  2D7D               	opt asmopt_pop
  4977                           	
  4978                           l2032:	
  4979  0578                     ; Switch size 1, requested type "space"
  4980                           ; Number of cases is 1, Range of values is 0 to 0
  4981                           ; switch strategies available:
  4982                           ; Name         Instructions Cycles
  4983                           ; simple_byte            4     3 (average)
  4984                           ; direct_byte            8     6 (fixed)
  4985                           ; jumptable            260     6 (fixed)
  4986                           ;	Chosen strategy is simple_byte
  4987                           
  4988                           	movf 0+(??_Sensor_Service+0)+0,w
  4989  0578  085E               	opt asmopt_push
  4990                           	opt asmopt_off
  4991                           	xorlw	0^0	; case 0
  4992  0579  3A00               	skipnz
  4993  057A  1903               	goto	l1780
  4994  057B  2D57               	goto	l233
  4995  057C  2D7D               	opt asmopt_pop
  4996                           
  4997                           	
  4998                           l231:	
  4999  057D                     	line	174
  5000                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 173:     return error;;	Return value of _Se
                                 nsor_Service is never used
  5001                           	
  5002                           l233:	
  5003  057D                     	return
  5004  057D  0008               	opt stack 0
  5005                           GLOBAL	__end_of_Sensor_Service
  5006                           	__end_of_Sensor_Service:
  5007  057E                     	signat	_Sensor_Service,4217
  5008                           	global	_Sensor_setSampled
  5009                           
  5010 ;; *************** function _Sensor_setSampled *****************
  5011 ;; Defined at:
  5012 ;;		line 520 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5013 ;; Parameters:    Size  Location     Type
  5014 ;;  sensor          1    wreg     PTR struct .
  5015 ;;		 -> mtouch_sensor(9), 
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;  sensor          1    0[BANK0 ] PTR struct .
  5018 ;;		 -> mtouch_sensor(9), 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  1    wreg      void 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5028 ;;      Params:         0       0       0       0
  5029 ;;      Locals:         0       1       0       0
  5030 ;;      Temps:          0       0       0       0
  5031 ;;      Totals:         0       1       0       0
  5032 ;;Total ram usage:        1 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    4
  5035 ;; This function calls:
  5036 ;;		Nothing
  5037 ;; This function is called by:
  5038 ;;		_Sensor_Service
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           psect	text15,local,class=CODE,delta=2,merge=1,inline,group=0
  5042                           	line	520
  5043                           global __ptext15
  5044                           __ptext15:	;psect for function _Sensor_setSampled
  5045  0790                     psect	text15
  5046                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5047                           	line	520
  5048                           	global	__size_of_Sensor_setSampled
  5049                           	__size_of_Sensor_setSampled	equ	__end_of_Sensor_setSampled-_Sensor_setSampled
  5050  0008                     	
  5051                           _Sensor_setSampled:	
  5052  0790                     ;incstack = 0
  5053                           	opt	stack 8
  5054                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5055                           ;Sensor_setSampled@sensor stored from wreg
  5056                           	movlb 0	; select bank0
  5057  0790  0020               	movwf	(Sensor_setSampled@sensor)
  5058  0791  00C6               	line	522
  5059                           	
  5060                           l1694:	
  5061  0792                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 520: static __attribute__((inline)) void Se
                                 nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 521
                                 : {;mcc_generated_files/mtouch/mtouch_sensor.c: 522:     sensor->sampled = 1;
  5062                           	movf	(Sensor_setSampled@sensor),w
  5063  0792  0846               	addlw	08h
  5064  0793  3E08               	movwf	fsr1l
  5065  0794  0086               	clrf fsr1h	
  5066  0795  0187               	
  5067                           	bsf	indf1,1
  5068  0796  1481               	line	523
  5069                           	
  5070                           l342:	
  5071  0797                     	return
  5072  0797  0008               	opt stack 0
  5073                           GLOBAL	__end_of_Sensor_setSampled
  5074                           	__end_of_Sensor_setSampled:
  5075  0798                     	signat	_Sensor_setSampled,4217
  5076                           	global	_Sensor_RawSample_Update
  5077                           
  5078 ;; *************** function _Sensor_RawSample_Update *****************
  5079 ;; Defined at:
  5080 ;;		line 399 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  sensor          1    wreg     PTR struct .
  5083 ;;		 -> mtouch_sensor(9), 
  5084 ;; Auto vars:     Size  Location     Type
  5085 ;;  sensor          1    0[BANK0 ] PTR struct .
  5086 ;;		 -> mtouch_sensor(9), 
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  1    wreg      void 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5096 ;;      Params:         0       0       0       0
  5097 ;;      Locals:         0       1       0       0
  5098 ;;      Temps:          0       0       0       0
  5099 ;;      Totals:         0       1       0       0
  5100 ;;Total ram usage:        1 bytes
  5101 ;; Hardware stack levels used:    1
  5102 ;; Hardware stack levels required when called:    4
  5103 ;; This function calls:
  5104 ;;		Nothing
  5105 ;; This function is called by:
  5106 ;;		_Sensor_Service
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  5110                           	line	399
  5111                           global __ptext16
  5112                           __ptext16:	;psect for function _Sensor_RawSample_Update
  5113  0650                     psect	text16
  5114                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5115                           	line	399
  5116                           	global	__size_of_Sensor_RawSample_Update
  5117                           	__size_of_Sensor_RawSample_Update	equ	__end_of_Sensor_RawSample_Update-_Sensor_RawSampl
                                 e_Update
  5118  001B                     	
  5119                           _Sensor_RawSample_Update:	
  5120  0650                     ;incstack = 0
  5121                           	opt	stack 8
  5122                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  5123                           ;Sensor_RawSample_Update@sensor stored from wreg
  5124                           	movlb 0	; select bank0
  5125  0650  0020               	movwf	(Sensor_RawSample_Update@sensor)
  5126  0651  00C6               	line	401
  5127                           	
  5128                           l1684:	
  5129  0652                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 399: static void Sensor_RawSample_Update(mt
                                 ouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 400: {;mcc_generated_
                                 files/mtouch/mtouch_sensor.c: 401:     if (INTCONbits.GIE == (uint8_t)1)
  5130                           	btfss	(11),7	;volatile
  5131  0652  1F8B               	goto	u801
  5132  0653  2E55               	goto	u800
  5133  0654  2E56               u801:
  5134  0655                     	goto	l1692
  5135  0655  2E61               u800:
  5136  0656                     	line	403
  5137                           	
  5138                           l1686:	
  5139  0656                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 402:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 403:         INTCONbits.GIE = (uint8_t)0;
  5140                           	bcf	(11),7	;volatile
  5141  0656  138B               	line	404
  5142                           	
  5143                           l1688:	
  5144  0657                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 404:         sensor->rawSample = packet_sam
                                 ple;
  5145                           	movf	(Sensor_RawSample_Update@sensor),w
  5146  0657  0846               	addlw	06h
  5147  0658  3E06               	movwf	fsr1l
  5148  0659  0086               	clrf fsr1h	
  5149  065A  0187               	
  5150                           	movf	(_packet_sample),w
  5151  065B  0865               	movwi	[0]fsr1
  5152  065C  3FC0               	movf	(_packet_sample+1),w
  5153  065D  0866               	movwi	[1]fsr1
  5154  065E  3FC1               	line	405
  5155                           	
  5156                           l1690:	
  5157  065F                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 405:         INTCONbits.GIE = (uint8_t)1;
  5158                           	bsf	(11),7	;volatile
  5159  065F  178B               	line	406
  5160                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 406:     }
  5161                           	goto	l297
  5162  0660  2E6A               	line	407
  5163                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 407:     else
  5164                           	
  5165                           l295:	
  5166  0661                     	line	409
  5167                           	
  5168                           l1692:	
  5169  0661                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 408:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 409:         sensor->rawSample = packet_sample;
  5170                           	movf	(Sensor_RawSample_Update@sensor),w
  5171  0661  0846               	addlw	06h
  5172  0662  3E06               	movwf	fsr1l
  5173  0663  0086               	clrf fsr1h	
  5174  0664  0187               	
  5175                           	movf	(_packet_sample),w
  5176  0665  0865               	movwi	[0]fsr1
  5177  0666  3FC0               	movf	(_packet_sample+1),w
  5178  0667  0866               	movwi	[1]fsr1
  5179  0668  3FC1               	goto	l297
  5180  0669  2E6A               	line	410
  5181                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 410:     }
  5182                           	
  5183                           l296:	
  5184  066A                     	line	411
  5185                           	
  5186                           l297:	
  5187  066A                     	return
  5188  066A  0008               	opt stack 0
  5189                           GLOBAL	__end_of_Sensor_RawSample_Update
  5190                           	__end_of_Sensor_RawSample_Update:
  5191  066B                     	signat	_Sensor_RawSample_Update,4217
  5192                           	global	_Sensor_DefaultCallback
  5193                           
  5194 ;; *************** function _Sensor_DefaultCallback *****************
  5195 ;; Defined at:
  5196 ;;		line 419 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5197 ;; Parameters:    Size  Location     Type
  5198 ;;  sensor          1    0[BANK0 ] enum E2110
  5199 ;; Auto vars:     Size  Location     Type
  5200 ;;		None
  5201 ;; Return value:  Size  Location     Type
  5202 ;;                  1    wreg      void 
  5203 ;; Registers used:
  5204 ;;		None
  5205 ;; Tracked objects:
  5206 ;;		On entry : 0/0
  5207 ;;		On exit  : 0/0
  5208 ;;		Unchanged: 0/0
  5209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5210 ;;      Params:         0       1       0       0
  5211 ;;      Locals:         0       0       0       0
  5212 ;;      Temps:          0       0       0       0
  5213 ;;      Totals:         0       1       0       0
  5214 ;;Total ram usage:        1 bytes
  5215 ;; Hardware stack levels used:    1
  5216 ;; Hardware stack levels required when called:    4
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		_Sensor_Service
  5221 ;; This function uses a non-reentrant model
  5222 ;;
  5223                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5224                           	line	419
  5225                           global __ptext17
  5226                           __ptext17:	;psect for function _Sensor_DefaultCallback
  5227  07DB                     psect	text17
  5228                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5229                           	line	419
  5230                           	global	__size_of_Sensor_DefaultCallback
  5231                           	__size_of_Sensor_DefaultCallback	equ	__end_of_Sensor_DefaultCallback-_Sensor_DefaultCal
                                 lback
  5232  0001                     	
  5233                           _Sensor_DefaultCallback:	
  5234  07DB                     ;incstack = 0
  5235                           	opt	stack 8
  5236                           ; Regs used in _Sensor_DefaultCallback: []
  5237                           	
  5238                           l300:	
  5239  07DB                     	return
  5240  07DB  0008               	opt stack 0
  5241                           GLOBAL	__end_of_Sensor_DefaultCallback
  5242                           	__end_of_Sensor_DefaultCallback:
  5243  07DC                     	signat	_Sensor_DefaultCallback,4217
  5244                           	global	_Sensor_Acquisition
  5245                           
  5246 ;; *************** function _Sensor_Acquisition *****************
  5247 ;; Defined at:
  5248 ;;		line 187 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;  sensor          1    wreg     PTR struct .
  5251 ;;		 -> mtouch_sensor(9), 
  5252 ;; Auto vars:     Size  Location     Type
  5253 ;;  sensor          1   23[BANK0 ] PTR struct .
  5254 ;;		 -> mtouch_sensor(9), 
  5255 ;;  retry           1   22[BANK0 ] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      enum E2112
  5258 ;; Registers used:
  5259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5265 ;;      Params:         0       0       0       0
  5266 ;;      Locals:         0       2       0       0
  5267 ;;      Temps:          0       4       0       0
  5268 ;;      Totals:         0       6       0       0
  5269 ;;Total ram usage:        6 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    7
  5272 ;; This function calls:
  5273 ;;		_Sensor_Acq_ExecutePacket
  5274 ;;		_Sensor_Scanfrequency_Evaluation
  5275 ;;		_Sensor_setActive
  5276 ;;		_Sensor_setInactive
  5277 ;;		_abs
  5278 ;; This function is called by:
  5279 ;;		_Sensor_Service
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5283                           	line	187
  5284                           global __ptext18
  5285                           __ptext18:	;psect for function _Sensor_Acquisition
  5286  044D                     psect	text18
  5287                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5288                           	line	187
  5289                           	global	__size_of_Sensor_Acquisition
  5290                           	__size_of_Sensor_Acquisition	equ	__end_of_Sensor_Acquisition-_Sensor_Acquisition
  5291  005F                     	
  5292                           _Sensor_Acquisition:	
  5293  044D                     ;incstack = 0
  5294                           	opt	stack 5
  5295                           ; Regs used in _Sensor_Acquisition: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5296                           ;Sensor_Acquisition@sensor stored from wreg
  5297                           	movlb 0	; select bank0
  5298  044D  0020               	movwf	(Sensor_Acquisition@sensor)
  5299  044E  00DD               	line	190
  5300                           	
  5301                           l1658:	
  5302  044F                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 187: static enum mtouch_sensor_error Sensor
                                 _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 188: {
                                 ;mcc_generated_files/mtouch/mtouch_sensor.c: 190:     uint8_t retry = (uint8_t)5;
  5303                           	movlw	low(05h)
  5304  044F  3005               	movwf	(??_Sensor_Acquisition+0)+0
  5305  0450  00D8               	movf	(??_Sensor_Acquisition+0)+0,w
  5306  0451  0858               	movwf	(Sensor_Acquisition@retry)
  5307  0452  00DC               	line	193
  5308                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:     while(Sensor_Acq_ExecutePacket(sen
                                 sor))
  5309                           	goto	l1666
  5310  0453  2C60               	
  5311                           l241:	
  5312  0454                     	line	195
  5313                           	
  5314                           l1660:	
  5315  0454                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 195:         retry--;
  5316                           	movlw	01h
  5317  0454  3001               	movlb 0	; select bank0
  5318  0455  0020               	subwf	(Sensor_Acquisition@retry),f
  5319  0456  02DC               	line	196
  5320                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 196:         if(retry == 0)
  5321                           	movf	((Sensor_Acquisition@retry)),w
  5322  0457  085C               	btfss	status,2
  5323  0458  1D03               	goto	u771
  5324  0459  2C5B               	goto	u770
  5325  045A  2C5C               u771:
  5326  045B                     	goto	l1666
  5327  045B  2C60               u770:
  5328  045C                     	line	198
  5329                           	
  5330                           l1662:	
  5331  045C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 197:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 198:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  5332                           	movlw	low(-4)
  5333  045C  30FC               	goto	l243
  5334  045D  2CAB               	
  5335                           l1664:	
  5336  045E                     	goto	l243
  5337  045E  2CAB               	line	199
  5338                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 199:         }
  5339                           	
  5340                           l242:	
  5341  045F                     	goto	l1666
  5342  045F  2C60               	line	200
  5343                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 200:     }
  5344                           	
  5345                           l240:	
  5346  0460                     	line	193
  5347                           	
  5348                           l1666:	
  5349  0460                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:     while(Sensor_Acq_ExecutePacket(sen
                                 sor))
  5350                           	movf	(Sensor_Acquisition@sensor),w
  5351  0460  085D               	fcall	_Sensor_Acq_ExecutePacket
  5352  0461  3183  2383  3184   	xorlw	low(0)&0ffh
  5353  0464  3A00               	skipz
  5354  0465  1D03               	goto	u781
  5355  0466  2C68               	goto	u780
  5356  0467  2C69               u781:
  5357  0468                     	goto	l1660
  5358  0468  2C54               u780:
  5359  0469                     	goto	l1668
  5360  0469  2C6A               	
  5361                           l244:	
  5362  046A                     	line	202
  5363                           	
  5364                           l1668:	
  5365  046A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 202:     if((mtouch_sensor_packetsample_t)a
                                 bs(packet_sample - sensor->rawSample) > (mtouch_sensor_packetsample_t)(sensor->oversampl
                                 ing)<<2)
  5366                           	movlb 0	; select bank0
  5367  046A  0020               	movf	(Sensor_Acquisition@sensor),w
  5368  046B  085D               	addlw	06h
  5369  046C  3E06               	movwf	fsr1l
  5370  046D  0086               	clrf fsr1h	
  5371  046E  0187               	
  5372                           	moviw	[0]fsr1
  5373  046F  3F40               	movwf	(??_Sensor_Acquisition+0)+0
  5374  0470  00D8               	moviw	[1]fsr1
  5375  0471  3F41               	movwf	(??_Sensor_Acquisition+0)+0+1
  5376  0472  00D9               	comf	(??_Sensor_Acquisition+0)+0,f
  5377  0473  09D8               	comf	(??_Sensor_Acquisition+0)+1,f
  5378  0474  09D9               	incf	(??_Sensor_Acquisition+0)+0,f
  5379  0475  0AD8               	skipnz
  5380  0476  1903               	incf	(??_Sensor_Acquisition+0)+1,f
  5381  0477  0AD9               	movf	(_packet_sample),w
  5382  0478  0865               	addwf	0+(??_Sensor_Acquisition+0)+0,w
  5383  0479  0758               	movwf	(abs@a)
  5384  047A  00C6               	movf	(_packet_sample+1),w
  5385  047B  0866               	addwfc	1+(??_Sensor_Acquisition+0)+0,w
  5386  047C  3D59               	movwf	1+(abs@a)
  5387  047D  00C7               	fcall	_abs
  5388  047E  3186  2618  3184   	movlb 0	; select bank0
  5389  0481  0020               	movf	(Sensor_Acquisition@sensor),w
  5390  0482  085D               	addlw	05h
  5391  0483  3E05               	movwf	fsr1l
  5392  0484  0086               	clrf fsr1h	
  5393  0485  0187               	
  5394                           	movf	indf1,w
  5395  0486  0801               	movwf	(??_Sensor_Acquisition+2)+0
  5396  0487  00DA               	clrf	(??_Sensor_Acquisition+2)+0+1
  5397  0488  01DB               	lslf	(??_Sensor_Acquisition+2)+0,f
  5398  0489  35DA               	rlf	(??_Sensor_Acquisition+2)+1,f
  5399  048A  0DDB               	lslf	(??_Sensor_Acquisition+2)+0,f
  5400  048B  35DA               	rlf	(??_Sensor_Acquisition+2)+1,f
  5401  048C  0DDB               	movf	(1+(?_abs)),w
  5402  048D  0847               	subwf	1+(??_Sensor_Acquisition+2)+0,w
  5403  048E  025B               	skipz
  5404  048F  1D03               	goto	u795
  5405  0490  2C93               	movf	(0+(?_abs)),w
  5406  0491  0846               	subwf	0+(??_Sensor_Acquisition+2)+0,w
  5407  0492  025A               u795:
  5408  0493                     	skipnc
  5409  0493  1803               	goto	u791
  5410  0494  2C96               	goto	u790
  5411  0495  2C97               u791:
  5412  0496                     	goto	l1678
  5413  0496  2CA3               u790:
  5414  0497                     	line	204
  5415                           	
  5416                           l1670:	
  5417  0497                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 203:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 204:         Sensor_setActive(sensor);
  5418                           	movf	(Sensor_Acquisition@sensor),w
  5419  0497  085D               	fcall	_Sensor_setActive
  5420  0498  3187  27A0  3184   	line	205
  5421                           	
  5422                           l1672:	
  5423  049B                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 205:         return Sensor_Scanfrequency_Ev
                                 aluation(sensor);
  5424                           	movlb 0	; select bank0
  5425  049B  0020               	movf	(Sensor_Acquisition@sensor),w
  5426  049C  085D               	fcall	_Sensor_Scanfrequency_Evaluation
  5427  049D  3182  228F  3184   	goto	l243
  5428  04A0  2CAB               	
  5429                           l1674:	
  5430  04A1                     	goto	l243
  5431  04A1  2CAB               	line	206
  5432                           	
  5433                           l1676:	
  5434  04A2                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 206:     }
  5435                           	goto	l1680
  5436  04A2  2CA9               	line	207
  5437                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 207:     else
  5438                           	
  5439                           l245:	
  5440  04A3                     	line	209
  5441                           	
  5442                           l1678:	
  5443  04A3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 208:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 209:         Sensor_setInactive(sensor);
  5444                           	movlb 0	; select bank0
  5445  04A3  0020               	movf	(Sensor_Acquisition@sensor),w
  5446  04A4  085D               	fcall	_Sensor_setInactive
  5447  04A5  3187  2798  3184   	goto	l1680
  5448  04A8  2CA9               	line	210
  5449                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 210:     }
  5450                           	
  5451                           l246:	
  5452  04A9                     	line	212
  5453                           	
  5454                           l1680:	
  5455  04A9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 212:     return MTOUCH_SENSOR_ERROR_none;
  5456                           	movlw	low(0)
  5457  04A9  3000               	goto	l243
  5458  04AA  2CAB               	
  5459                           l1682:	
  5460  04AB                     	line	213
  5461                           	
  5462                           l243:	
  5463  04AB                     	return
  5464  04AB  0008               	opt stack 0
  5465                           GLOBAL	__end_of_Sensor_Acquisition
  5466                           	__end_of_Sensor_Acquisition:
  5467  04AC                     	signat	_Sensor_Acquisition,4217
  5468                           	global	_abs
  5469                           
  5470 ;; *************** function _abs *****************
  5471 ;; Defined at:
  5472 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  a               2    0[BANK0 ] int 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;		None
  5477 ;; Return value:  Size  Location     Type
  5478 ;;                  2    0[BANK0 ] int 
  5479 ;; Registers used:
  5480 ;;		wreg, status,2, status,0
  5481 ;; Tracked objects:
  5482 ;;		On entry : 0/0
  5483 ;;		On exit  : 0/0
  5484 ;;		Unchanged: 0/0
  5485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5486 ;;      Params:         0       2       0       0
  5487 ;;      Locals:         0       0       0       0
  5488 ;;      Temps:          0       2       0       0
  5489 ;;      Totals:         0       4       0       0
  5490 ;;Total ram usage:        4 bytes
  5491 ;; Hardware stack levels used:    1
  5492 ;; Hardware stack levels required when called:    4
  5493 ;; This function calls:
  5494 ;;		Nothing
  5495 ;; This function is called by:
  5496 ;;		_Sensor_Acquisition
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           psect	text19,local,class=CODE,delta=2,merge=1,group=2
  5500                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5501                           	line	1
  5502                           global __ptext19
  5503                           __ptext19:	;psect for function _abs
  5504  0618                     psect	text19
  5505                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  5506                           	line	1
  5507                           	global	__size_of_abs
  5508                           	__size_of_abs	equ	__end_of_abs-_abs
  5509  001D                     	
  5510                           _abs:	
  5511  0618                     ;incstack = 0
  5512                           	opt	stack 7
  5513                           ; Regs used in _abs: [wreg+status,2+status,0]
  5514                           	line	3
  5515                           	
  5516                           l1590:	
  5517  0618                     	movlb 0	; select bank0
  5518  0618  0020               	movf	(abs@a+1),w
  5519  0619  0847               	xorlw	80h
  5520  061A  3A80               	movwf	(??_abs+0)+0
  5521  061B  00C8               	movlw	(0)^80h
  5522  061C  3080               	subwf	(??_abs+0)+0,w
  5523  061D  0248               	skipz
  5524  061E  1D03               	goto	u665
  5525  061F  2E22               	movlw	01h
  5526  0620  3001               	subwf	(abs@a),w
  5527  0621  0246               u665:
  5528  0622                     
  5529                           	skipnc
  5530  0622  1803               	goto	u661
  5531  0623  2E25               	goto	u660
  5532  0624  2E26               u661:
  5533  0625                     	goto	l947
  5534  0625  2E33               u660:
  5535  0626                     	
  5536                           l1592:	
  5537  0626                     	movlb 0	; select bank0
  5538  0626  0020               	comf	(abs@a),w
  5539  0627  0946               	movwf	(??_abs+0)+0
  5540  0628  00C8               	comf	(abs@a+1),w
  5541  0629  0947               	movwf	((??_abs+0)+0+1)
  5542  062A  00C9               	incf	(??_abs+0)+0,f
  5543  062B  0AC8               	skipnz
  5544  062C  1903               	incf	((??_abs+0)+0+1),f
  5545  062D  0AC9               	movf	0+(??_abs+0)+0,w
  5546  062E  0848               	movwf	(?_abs)
  5547  062F  00C6               	movf	1+(??_abs+0)+0,w
  5548  0630  0849               	movwf	(?_abs+1)
  5549  0631  00C7               	goto	l950
  5550  0632  2E34               	
  5551                           l947:	
  5552  0633                     	goto	l950
  5553  0633  2E34               	
  5554                           l949:	
  5555  0634                     	line	4
  5556                           	
  5557                           l950:	
  5558  0634                     	return
  5559  0634  0008               	opt stack 0
  5560                           GLOBAL	__end_of_abs
  5561                           	__end_of_abs:
  5562  0635                     	signat	_abs,4218
  5563                           	global	_Sensor_setInactive
  5564                           
  5565 ;; *************** function _Sensor_setInactive *****************
  5566 ;; Defined at:
  5567 ;;		line 473 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  sensor          1    wreg     PTR struct .
  5570 ;;		 -> mtouch_sensor(9), 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  sensor          1    0[BANK0 ] PTR struct .
  5573 ;;		 -> mtouch_sensor(9), 
  5574 ;; Return value:  Size  Location     Type
  5575 ;;                  1    wreg      void 
  5576 ;; Registers used:
  5577 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5578 ;; Tracked objects:
  5579 ;;		On entry : 0/0
  5580 ;;		On exit  : 0/0
  5581 ;;		Unchanged: 0/0
  5582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5583 ;;      Params:         0       0       0       0
  5584 ;;      Locals:         0       1       0       0
  5585 ;;      Temps:          0       0       0       0
  5586 ;;      Totals:         0       1       0       0
  5587 ;;Total ram usage:        1 bytes
  5588 ;; Hardware stack levels used:    1
  5589 ;; Hardware stack levels required when called:    4
  5590 ;; This function calls:
  5591 ;;		Nothing
  5592 ;; This function is called by:
  5593 ;;		_Sensor_Acquisition
  5594 ;; This function uses a non-reentrant model
  5595 ;;
  5596                           psect	text20,local,class=CODE,delta=2,merge=1,inline,group=0
  5597                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5598                           	line	473
  5599                           global __ptext20
  5600                           __ptext20:	;psect for function _Sensor_setInactive
  5601  0798                     psect	text20
  5602                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5603                           	line	473
  5604                           	global	__size_of_Sensor_setInactive
  5605                           	__size_of_Sensor_setInactive	equ	__end_of_Sensor_setInactive-_Sensor_setInactive
  5606  0008                     	
  5607                           _Sensor_setInactive:	
  5608  0798                     ;incstack = 0
  5609                           	opt	stack 7
  5610                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5611                           ;Sensor_setInactive@sensor stored from wreg
  5612                           	movlb 0	; select bank0
  5613  0798  0020               	movwf	(Sensor_setInactive@sensor)
  5614  0799  00C6               	line	475
  5615                           	
  5616                           l1638:	
  5617  079A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 473: static __attribute__((inline)) void Se
                                 nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 47
                                 4: {;mcc_generated_files/mtouch/mtouch_sensor.c: 475:     sensor->acitve = 0;
  5618                           	movf	(Sensor_setInactive@sensor),w
  5619  079A  0846               	addlw	08h
  5620  079B  3E08               	movwf	fsr1l
  5621  079C  0086               	clrf fsr1h	
  5622  079D  0187               	
  5623                           	bcf	indf1,2
  5624  079E  1101               	line	476
  5625                           	
  5626                           l321:	
  5627  079F                     	return
  5628  079F  0008               	opt stack 0
  5629                           GLOBAL	__end_of_Sensor_setInactive
  5630                           	__end_of_Sensor_setInactive:
  5631  07A0                     	signat	_Sensor_setInactive,4217
  5632                           	global	_Sensor_setActive
  5633                           
  5634 ;; *************** function _Sensor_setActive *****************
  5635 ;; Defined at:
  5636 ;;		line 468 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5637 ;; Parameters:    Size  Location     Type
  5638 ;;  sensor          1    wreg     PTR struct .
  5639 ;;		 -> mtouch_sensor(9), 
  5640 ;; Auto vars:     Size  Location     Type
  5641 ;;  sensor          1    0[BANK0 ] PTR struct .
  5642 ;;		 -> mtouch_sensor(9), 
  5643 ;; Return value:  Size  Location     Type
  5644 ;;                  1    wreg      void 
  5645 ;; Registers used:
  5646 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5647 ;; Tracked objects:
  5648 ;;		On entry : 0/0
  5649 ;;		On exit  : 0/0
  5650 ;;		Unchanged: 0/0
  5651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5652 ;;      Params:         0       0       0       0
  5653 ;;      Locals:         0       1       0       0
  5654 ;;      Temps:          0       0       0       0
  5655 ;;      Totals:         0       1       0       0
  5656 ;;Total ram usage:        1 bytes
  5657 ;; Hardware stack levels used:    1
  5658 ;; Hardware stack levels required when called:    4
  5659 ;; This function calls:
  5660 ;;		Nothing
  5661 ;; This function is called by:
  5662 ;;		_Sensor_Acquisition
  5663 ;; This function uses a non-reentrant model
  5664 ;;
  5665                           psect	text21,local,class=CODE,delta=2,merge=1,inline,group=0
  5666                           	line	468
  5667                           global __ptext21
  5668                           __ptext21:	;psect for function _Sensor_setActive
  5669  07A0                     psect	text21
  5670                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5671                           	line	468
  5672                           	global	__size_of_Sensor_setActive
  5673                           	__size_of_Sensor_setActive	equ	__end_of_Sensor_setActive-_Sensor_setActive
  5674  0008                     	
  5675                           _Sensor_setActive:	
  5676  07A0                     ;incstack = 0
  5677                           	opt	stack 7
  5678                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  5679                           ;Sensor_setActive@sensor stored from wreg
  5680                           	movlb 0	; select bank0
  5681  07A0  0020               	movwf	(Sensor_setActive@sensor)
  5682  07A1  00C6               	line	470
  5683                           	
  5684                           l1594:	
  5685  07A2                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 468: static __attribute__((inline)) void Se
                                 nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 469:
                                  {;mcc_generated_files/mtouch/mtouch_sensor.c: 470:     sensor->acitve = 1;
  5686                           	movf	(Sensor_setActive@sensor),w
  5687  07A2  0846               	addlw	08h
  5688  07A3  3E08               	movwf	fsr1l
  5689  07A4  0086               	clrf fsr1h	
  5690  07A5  0187               	
  5691                           	bsf	indf1,2
  5692  07A6  1501               	line	471
  5693                           	
  5694                           l318:	
  5695  07A7                     	return
  5696  07A7  0008               	opt stack 0
  5697                           GLOBAL	__end_of_Sensor_setActive
  5698                           	__end_of_Sensor_setActive:
  5699  07A8                     	signat	_Sensor_setActive,4217
  5700                           	global	_Sensor_Scanfrequency_Evaluation
  5701                           
  5702 ;; *************** function _Sensor_Scanfrequency_Evaluation *****************
  5703 ;; Defined at:
  5704 ;;		line 335 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5705 ;; Parameters:    Size  Location     Type
  5706 ;;  sensor          1    wreg     PTR struct .
  5707 ;;		 -> mtouch_sensor(9), 
  5708 ;; Auto vars:     Size  Location     Type
  5709 ;;  sensor          1   14[BANK0 ] PTR struct .
  5710 ;;		 -> mtouch_sensor(9), 
  5711 ;;  best_packet_    2   12[BANK0 ] unsigned short 
  5712 ;;  packet_noise    2   10[BANK0 ] unsigned short 
  5713 ;;  i               1   17[BANK0 ] unsigned char 
  5714 ;;  retry           1   16[BANK0 ] unsigned char 
  5715 ;;  best_sample_    1   15[BANK0 ] unsigned char 
  5716 ;; Return value:  Size  Location     Type
  5717 ;;                  1    wreg      enum E2112
  5718 ;; Registers used:
  5719 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5720 ;; Tracked objects:
  5721 ;;		On entry : 0/0
  5722 ;;		On exit  : 0/0
  5723 ;;		Unchanged: 0/0
  5724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5725 ;;      Params:         0       0       0       0
  5726 ;;      Locals:         0       8       0       0
  5727 ;;      Temps:          0       2       0       0
  5728 ;;      Totals:         0      10       0       0
  5729 ;;Total ram usage:       10 bytes
  5730 ;; Hardware stack levels used:    1
  5731 ;; Hardware stack levels required when called:    6
  5732 ;; This function calls:
  5733 ;;		_Sensor_Acq_ExecutePacket
  5734 ;; This function is called by:
  5735 ;;		_Sensor_Acquisition
  5736 ;; This function uses a non-reentrant model
  5737 ;;
  5738                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  5739                           	line	335
  5740                           global __ptext22
  5741                           __ptext22:	;psect for function _Sensor_Scanfrequency_Evaluation
  5742  028F                     psect	text22
  5743                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5744                           	line	335
  5745                           	global	__size_of_Sensor_Scanfrequency_Evaluation
  5746                           	__size_of_Sensor_Scanfrequency_Evaluation	equ	__end_of_Sensor_Scanfrequency_Evaluation-
                                 _Sensor_Scanfrequency_Evaluation
  5747  0089                     	
  5748                           _Sensor_Scanfrequency_Evaluation:	
  5749  028F                     ;incstack = 0
  5750                           	opt	stack 5
  5751                           ; Regs used in _Sensor_Scanfrequency_Evaluation: [wreg-fsr1h+status,2+status,0+pclath+cs
                                 tack]
  5752                           ;Sensor_Scanfrequency_Evaluation@sensor stored from wreg
  5753                           	movlb 0	; select bank0
  5754  028F  0020               	movwf	(Sensor_Scanfrequency_Evaluation@sensor)
  5755  0290  00D4               	line	344
  5756                           	
  5757                           l1596:	
  5758  0291                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 335: static enum mtouch_sensor_error Sensor
                                 _Scanfrequency_Evaluation(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sen
                                 sor.c: 336: {;mcc_generated_files/mtouch/mtouch_sensor.c: 337:     uint8_t i;;mcc_genera
                                 ted_files/mtouch/mtouch_sensor.c: 338:     const mtouch_sensor_sampleperiod_t frequency_
                                 hop[5] = {3,13,14,20,13};;mcc_generated_files/mtouch/mtouch_sensor.c: 339:     mtouch_se
                                 nsor_packetnoise_t packet_noise_Max;;mcc_generated_files/mtouch/mtouch_sensor.c: 340:   
                                   mtouch_sensor_sampleperiod_t best_sample_period;
  5759                           	movf	(_packet_noise+1),w
  5760  0291  0864               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0+1
  5761  0292  00CF               	movf	(_packet_noise),w
  5762  0293  0863               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5763  0294  00CE               	lsrf	(??_Sensor_Scanfrequency_Evaluation+0)+1,f
  5764  0295  36CF               	rrf	(??_Sensor_Scanfrequency_Evaluation+0)+0,f
  5765  0296  0CCE               	lsrf	(??_Sensor_Scanfrequency_Evaluation+0)+1,f
  5766  0297  36CF               	rrf	(??_Sensor_Scanfrequency_Evaluation+0)+0,f
  5767  0298  0CCE               	movf	(_packet_noise),w
  5768  0299  0863               	addwf	0+(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5769  029A  074E               	movwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max)
  5770  029B  00D0               	movf	(_packet_noise+1),w
  5771  029C  0864               	addwfc	1+(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5772  029D  3D4F               	movwf	1+(Sensor_Scanfrequency_Evaluation@packet_noise_Max)
  5773  029E  00D1               	line	345
  5774                           	
  5775                           l1598:	
  5776  029F                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     best_sample_period = sample_period
                                 ;
  5777                           	movf	(_sample_period),w
  5778  029F  082C               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5779  02A0  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5780  02A1  084E               	movwf	(Sensor_Scanfrequency_Evaluation@best_sample_period)
  5781  02A2  00D5               	line	346
  5782                           	
  5783                           l1600:	
  5784  02A3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 346:     best_packet_sample = packet_sample
                                 ;
  5785                           	movf	(_packet_sample+1),w
  5786  02A3  0866               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample+1)
  5787  02A4  00D3               	movf	(_packet_sample),w
  5788  02A5  0865               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample)
  5789  02A6  00D2               	line	349
  5790                           	
  5791                           l1602:	
  5792  02A7                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 349:     for(i=(uint8_t)0;i<(uint8_t)5;i++)
                                 
  5793                           	clrf	(Sensor_Scanfrequency_Evaluation@i)
  5794  02A7  01D7               	
  5795                           l1604:	
  5796  02A8                     	movlw	low(05h)
  5797  02A8  3005               	subwf	(Sensor_Scanfrequency_Evaluation@i),w
  5798  02A9  0257               	skipc
  5799  02AA  1C03               	goto	u671
  5800  02AB  2AAD               	goto	u670
  5801  02AC  2AAE               u671:
  5802  02AD                     	goto	l1608
  5803  02AD  2AB0               u670:
  5804  02AE                     	goto	l1634
  5805  02AE  2B0D               	
  5806                           l1606:	
  5807  02AF                     	goto	l1634
  5808  02AF  2B0D               	
  5809                           l279:	
  5810  02B0                     	line	351
  5811                           	
  5812                           l1608:	
  5813  02B0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 350:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 351:         sample_period += frequency_hop[i];
  5814                           	movf	(Sensor_Scanfrequency_Evaluation@i),w
  5815  02B0  0857               	addlw	low(((Sensor_Scanfrequency_Evaluation@frequency_hop)|8000h))
  5816  02B1  3EB4               	movwf	fsr0l
  5817  02B2  0084               	movlw	high(((Sensor_Scanfrequency_Evaluation@frequency_hop)|8000h))
  5818  02B3  3087               	skipnc
  5819  02B4  1803               	addlw	1
  5820  02B5  3E01               	movwf	fsr0h
  5821  02B6  0085               	movf	indf0,w ;code access
  5822  02B7  0800               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5823  02B8  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5824  02B9  084E               	addwf	(_sample_period),f
  5825  02BA  07AC               	line	352
  5826                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 352:         if(sample_period > ((mtouch_se
                                 nsor_sampleperiod_t)255))
  5827                           	goto	l1612
  5828  02BB  2AC3               	line	354
  5829                           	
  5830                           l1610:	
  5831  02BC                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 353:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 354:             sample_period-=((mtouch_sensor_sampleperiod_t)255);
  5832                           	movlw	0FFh
  5833  02BC  30FF               	subwf	(_sample_period),f
  5834  02BD  02AC               	line	355
  5835                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 355:             sample_period+=((mtouch_se
                                 nsor_sampleperiod_t)200);
  5836                           	movlw	low(0C8h)
  5837  02BE  30C8               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5838  02BF  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5839  02C0  084E               	addwf	(_sample_period),f
  5840  02C1  07AC               	line	356
  5841                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 356:         }
  5842                           	goto	l1616
  5843  02C2  2ACF               	line	357
  5844                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 357:         else if(sample_period < ((mtou
                                 ch_sensor_sampleperiod_t)200))
  5845                           	
  5846                           l281:	
  5847  02C3                     	
  5848                           l1612:	
  5849  02C3                     	movlw	low(0C8h)
  5850  02C3  30C8               	subwf	(_sample_period),w
  5851  02C4  022C               	skipnc
  5852  02C5  1803               	goto	u681
  5853  02C6  2AC8               	goto	u680
  5854  02C7  2AC9               u681:
  5855  02C8                     	goto	l1616
  5856  02C8  2ACF               u680:
  5857  02C9                     	line	359
  5858                           	
  5859                           l1614:	
  5860  02C9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 358:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 359:             sample_period += ((mtouch_sensor_sampleperiod_t)200);
  5861                           	movlw	low(0C8h)
  5862  02C9  30C8               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5863  02CA  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5864  02CB  084E               	addwf	(_sample_period),f
  5865  02CC  07AC               	goto	l1616
  5866  02CD  2ACF               	line	360
  5867                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 360:         }
  5868                           	
  5869                           l283:	
  5870  02CE                     	goto	l1616
  5871  02CE  2ACF               	
  5872                           l282:	
  5873  02CF                     	line	362
  5874                           	
  5875                           l1616:	
  5876  02CF                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 362:         retry = (uint8_t)5;
  5877                           	movlw	low(05h)
  5878  02CF  3005               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5879  02D0  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5880  02D1  084E               	movwf	(Sensor_Scanfrequency_Evaluation@retry)
  5881  02D2  00D6               	line	364
  5882                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:         while(Sensor_Acq_ExecutePacket
                                 (sensor))
  5883                           	goto	l1624
  5884  02D3  2AE0               	
  5885                           l285:	
  5886  02D4                     	line	366
  5887                           	
  5888                           l1618:	
  5889  02D4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 366:             retry--;
  5890                           	movlw	01h
  5891  02D4  3001               	movlb 0	; select bank0
  5892  02D5  0020               	subwf	(Sensor_Scanfrequency_Evaluation@retry),f
  5893  02D6  02D6               	line	367
  5894                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:             if(retry == 0)
  5895                           	movf	((Sensor_Scanfrequency_Evaluation@retry)),w
  5896  02D7  0856               	btfss	status,2
  5897  02D8  1D03               	goto	u691
  5898  02D9  2ADB               	goto	u690
  5899  02DA  2ADC               u691:
  5900  02DB                     	goto	l1624
  5901  02DB  2AE0               u690:
  5902  02DC                     	line	369
  5903                           	
  5904                           l1620:	
  5905  02DC                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 368:             {;mcc_generated_files/mtou
                                 ch/mtouch_sensor.c: 369:                 return MTOUCH_SENSOR_ERROR_tooManyRetries;
  5906                           	movlw	low(-4)
  5907  02DC  30FC               	goto	l287
  5908  02DD  2B17               	
  5909                           l1622:	
  5910  02DE                     	goto	l287
  5911  02DE  2B17               	line	370
  5912                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 370:             }
  5913                           	
  5914                           l286:	
  5915  02DF                     	goto	l1624
  5916  02DF  2AE0               	line	371
  5917                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 371:         }
  5918                           	
  5919                           l284:	
  5920  02E0                     	line	364
  5921                           	
  5922                           l1624:	
  5923  02E0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 364:         while(Sensor_Acq_ExecutePacket
                                 (sensor))
  5924                           	movf	(Sensor_Scanfrequency_Evaluation@sensor),w
  5925  02E0  0854               	fcall	_Sensor_Acq_ExecutePacket
  5926  02E1  3183  2383  3182   	xorlw	low(0)&0ffh
  5927  02E4  3A00               	skipz
  5928  02E5  1D03               	goto	u701
  5929  02E6  2AE8               	goto	u700
  5930  02E7  2AE9               u701:
  5931  02E8                     	goto	l1618
  5932  02E8  2AD4               u700:
  5933  02E9                     	goto	l1626
  5934  02E9  2AEA               	
  5935                           l288:	
  5936  02EA                     	line	373
  5937                           	
  5938                           l1626:	
  5939  02EA                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 373:         if(packet_noise_Max < packet_n
                                 oise)
  5940                           	movlb 0	; select bank0
  5941  02EA  0020               	movf	(_packet_noise+1),w
  5942  02EB  0864               	subwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max+1),w
  5943  02EC  0251               	skipz
  5944  02ED  1D03               	goto	u715
  5945  02EE  2AF1               	movf	(_packet_noise),w
  5946  02EF  0863               	subwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max),w
  5947  02F0  0250               u715:
  5948  02F1                     	skipnc
  5949  02F1  1803               	goto	u711
  5950  02F2  2AF4               	goto	u710
  5951  02F3  2AF5               u711:
  5952  02F4                     	goto	l1630
  5953  02F4  2B02               u710:
  5954  02F5                     	line	375
  5955                           	
  5956                           l1628:	
  5957  02F5                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 374:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 375:             packet_noise_Max = packet_noise;
  5958                           	movf	(_packet_noise+1),w
  5959  02F5  0864               	movwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max+1)
  5960  02F6  00D1               	movf	(_packet_noise),w
  5961  02F7  0863               	movwf	(Sensor_Scanfrequency_Evaluation@packet_noise_Max)
  5962  02F8  00D0               	line	376
  5963                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 376:             best_sample_period = sampl
                                 e_period;
  5964                           	movf	(_sample_period),w
  5965  02F9  082C               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5966  02FA  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5967  02FB  084E               	movwf	(Sensor_Scanfrequency_Evaluation@best_sample_period)
  5968  02FC  00D5               	line	377
  5969                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 377:             best_packet_sample = packe
                                 t_sample;
  5970                           	movf	(_packet_sample+1),w
  5971  02FD  0866               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample+1)
  5972  02FE  00D3               	movf	(_packet_sample),w
  5973  02FF  0865               	movwf	(Sensor_Scanfrequency_Evaluation@best_packet_sample)
  5974  0300  00D2               	goto	l1630
  5975  0301  2B02               	line	378
  5976                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 378:         }
  5977                           	
  5978                           l289:	
  5979  0302                     	line	379
  5980                           	
  5981                           l1630:	
  5982  0302                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 379:     }
  5983                           	movlw	low(01h)
  5984  0302  3001               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  5985  0303  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  5986  0304  084E               	addwf	(Sensor_Scanfrequency_Evaluation@i),f
  5987  0305  07D7               	
  5988                           l1632:	
  5989  0306                     	movlw	low(05h)
  5990  0306  3005               	subwf	(Sensor_Scanfrequency_Evaluation@i),w
  5991  0307  0257               	skipc
  5992  0308  1C03               	goto	u721
  5993  0309  2B0B               	goto	u720
  5994  030A  2B0C               u721:
  5995  030B                     	goto	l1608
  5996  030B  2AB0               u720:
  5997  030C                     	goto	l1634
  5998  030C  2B0D               	
  5999                           l280:	
  6000  030D                     	line	381
  6001                           	
  6002                           l1634:	
  6003  030D                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 381:     sample_period = best_sample_period
                                 ;
  6004                           	movf	(Sensor_Scanfrequency_Evaluation@best_sample_period),w
  6005  030D  0855               	movwf	(??_Sensor_Scanfrequency_Evaluation+0)+0
  6006  030E  00CE               	movf	(??_Sensor_Scanfrequency_Evaluation+0)+0,w
  6007  030F  084E               	movwf	(_sample_period)
  6008  0310  00AC               	line	382
  6009                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 382:     packet_sample = best_packet_sample
                                 ;
  6010                           	movf	(Sensor_Scanfrequency_Evaluation@best_packet_sample+1),w
  6011  0311  0853               	movwf	(_packet_sample+1)
  6012  0312  00E6               	movf	(Sensor_Scanfrequency_Evaluation@best_packet_sample),w
  6013  0313  0852               	movwf	(_packet_sample)
  6014  0314  00E5               	line	384
  6015                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 384:     return MTOUCH_SENSOR_ERROR_none;
  6016                           	movlw	low(0)
  6017  0315  3000               	goto	l287
  6018  0316  2B17               	
  6019                           l1636:	
  6020  0317                     	line	385
  6021                           	
  6022                           l287:	
  6023  0317                     	return
  6024  0317  0008               	opt stack 0
  6025                           GLOBAL	__end_of_Sensor_Scanfrequency_Evaluation
  6026                           	__end_of_Sensor_Scanfrequency_Evaluation:
  6027  0318                     	signat	_Sensor_Scanfrequency_Evaluation,4217
  6028                           	global	_Sensor_Acq_ExecutePacket
  6029                           
  6030 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  6031 ;; Defined at:
  6032 ;;		line 221 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6033 ;; Parameters:    Size  Location     Type
  6034 ;;  sensor          1    wreg     PTR struct .
  6035 ;;		 -> mtouch_sensor(9), 
  6036 ;; Auto vars:     Size  Location     Type
  6037 ;;  sensor          1    7[BANK0 ] PTR struct .
  6038 ;;		 -> mtouch_sensor(9), 
  6039 ;;  error           1    6[BANK0 ] enum E2112
  6040 ;;  ADCON2_temp     1    5[BANK0 ] unsigned char 
  6041 ;;  ADCON1_temp     1    4[BANK0 ] unsigned char 
  6042 ;;  ADCON0_temp     1    3[BANK0 ] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      enum E2112
  6045 ;; Registers used:
  6046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6047 ;; Tracked objects:
  6048 ;;		On entry : 0/0
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6052 ;;      Params:         0       0       0       0
  6053 ;;      Locals:         0       5       0       0
  6054 ;;      Temps:          0       1       0       0
  6055 ;;      Totals:         0       6       0       0
  6056 ;;Total ram usage:        6 bytes
  6057 ;; Hardware stack levels used:    1
  6058 ;; Hardware stack levels required when called:    5
  6059 ;; This function calls:
  6060 ;;		_MTOUCH_Sensor_Scan_Initialize
  6061 ;;		_TMR2_LoadPeriodRegister
  6062 ;;		_TMR2_SetInterruptHandler
  6063 ;;		_TMR2_StartTimer
  6064 ;;		_TMR2_StopTimer
  6065 ;; This function is called by:
  6066 ;;		_Sensor_Acquisition
  6067 ;;		_Sensor_Scanfrequency_Evaluation
  6068 ;; This function uses a non-reentrant model
  6069 ;;
  6070                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  6071                           	line	221
  6072                           global __ptext23
  6073                           __ptext23:	;psect for function _Sensor_Acq_ExecutePacket
  6074  0383                     psect	text23
  6075                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6076                           	line	221
  6077                           	global	__size_of_Sensor_Acq_ExecutePacket
  6078                           	__size_of_Sensor_Acq_ExecutePacket	equ	__end_of_Sensor_Acq_ExecutePacket-_Sensor_Acq_Ex
                                 ecutePacket
  6079  0068                     	
  6080                           _Sensor_Acq_ExecutePacket:	
  6081  0383                     ;incstack = 0
  6082                           	opt	stack 5
  6083                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6084                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  6085                           	movlb 0	; select bank0
  6086  0383  0020               	movwf	(Sensor_Acq_ExecutePacket@sensor)
  6087  0384  00CD               	line	226
  6088                           	
  6089                           l1542:	
  6090  0385                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 221: static enum mtouch_sensor_error Sensor
                                 _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 222: {;mcc_generated_files/mtouch/mtouch_sensor.c: 226:     enum mtouch_sensor_error err
                                 or = MTOUCH_SENSOR_ERROR_none;
  6091                           	clrf	(Sensor_Acq_ExecutePacket@error)
  6092  0385  01CC               	line	232
  6093                           	
  6094                           l1544:	
  6095  0386                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 227:     uint8_t ADCON0_temp;;mcc_generated
                                 _files/mtouch/mtouch_sensor.c: 228:     uint8_t ADCON1_temp;;mcc_generated_files/mtouch/
                                 mtouch_sensor.c: 229:     uint8_t ADCON2_temp;;mcc_generated_files/mtouch/mtouch_sensor.
                                 c: 232:     ADCON0_temp = ADCON0;
  6096                           	movlb 1	; select bank1
  6097  0386  0021               	movf	(157)^080h,w	;volatile
  6098  0387  081D               	movlb 0	; select bank0
  6099  0388  0020               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6100  0389  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6101  038A  0848               	movwf	(Sensor_Acq_ExecutePacket@ADCON0_temp)
  6102  038B  00C9               	line	233
  6103                           	
  6104                           l1546:	
  6105  038C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 233:     ADCON1_temp = ADCON1;
  6106                           	movlb 1	; select bank1
  6107  038C  0021               	movf	(158)^080h,w	;volatile
  6108  038D  081E               	movlb 0	; select bank0
  6109  038E  0020               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6110  038F  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6111  0390  0848               	movwf	(Sensor_Acq_ExecutePacket@ADCON1_temp)
  6112  0391  00CA               	line	234
  6113                           	
  6114                           l1548:	
  6115  0392                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 234:     ADCON2_temp = ADCON2;
  6116                           	movlb 1	; select bank1
  6117  0392  0021               	movf	(159)^080h,w	;volatile
  6118  0393  081F               	movlb 0	; select bank0
  6119  0394  0020               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6120  0395  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6121  0396  0848               	movwf	(Sensor_Acq_ExecutePacket@ADCON2_temp)
  6122  0397  00CB               	line	235
  6123                           	
  6124                           l1550:	
  6125  0398                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 235:     MTOUCH_Sensor_Scan_Initialize();
  6126                           	fcall	_MTOUCH_Sensor_Scan_Initialize
  6127  0398  3187  2777  3183   	line	237
  6128                           	
  6129                           l1552:	
  6130  039B                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 237:     currentScannSensor = sensor->senso
                                 r_name;
  6131                           	movlb 0	; select bank0
  6132  039B  0020               	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6133  039C  084D               	movwf	fsr1l
  6134  039D  0086               	clrf fsr1h	
  6135  039E  0187               	
  6136                           	movf	indf1,w
  6137  039F  0801               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6138  03A0  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6139  03A1  0848               	movwf	(_currentScannSensor)
  6140  03A2  00FD               	line	238
  6141                           	
  6142                           l1554:	
  6143  03A3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 238:     packet_counter = sensor->oversampl
                                 ing;
  6144                           	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6145  03A3  084D               	movwf	fsr1l
  6146  03A4  0086               	clrf fsr1h	
  6147  03A5  0187               	
  6148                           	moviw	[05h]fsr1
  6149  03A6  3F45               	movwf	(_packet_counter)
  6150  03A7  00FC               	line	239
  6151                           	
  6152                           l1556:	
  6153  03A8                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 239:     packet_sample = 0;
  6154                           	clrf	(_packet_sample)
  6155  03A8  01E5               	clrf	(_packet_sample+1)
  6156  03A9  01E6               	line	240
  6157                           	
  6158                           l1558:	
  6159  03AA                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 240:     sensor_globalFlags.packet_done = 0
                                 ;
  6160                           	bcf	(_sensor_globalFlags),0	;volatile
  6161  03AA  1067               	line	241
  6162                           	
  6163                           l1560:	
  6164  03AB                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 241:     packet_noise = 0;
  6165                           	clrf	(_packet_noise)
  6166  03AB  01E3               	clrf	(_packet_noise+1)
  6167  03AC  01E4               	line	243
  6168                           	
  6169                           l1562:	
  6170  03AD                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 243:     TMR2_SetInterruptHandler(Sensor_Ac
                                 q_ExecuteScan);
  6171                           	movlw	low(_Sensor_Acq_ExecuteScan)
  6172  03AD  3038               	movwf	(TMR2_SetInterruptHandler@InterruptHandler)
  6173  03AE  00C6               	movlw	high(_Sensor_Acq_ExecuteScan)
  6174  03AF  3000               	movwf	((TMR2_SetInterruptHandler@InterruptHandler))+1
  6175  03B0  00C7               	fcall	_TMR2_SetInterruptHandler
  6176  03B1  3187  27AE  3183   	line	244
  6177                           	
  6178                           l1564:	
  6179  03B4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 244:     TMR2_LoadPeriodRegister(sample_per
                                 iod);
  6180                           	movlb 0	; select bank0
  6181  03B4  0020               	movf	(_sample_period),w
  6182  03B5  082C               	fcall	_TMR2_LoadPeriodRegister
  6183  03B6  3187  27C3  3183   	line	245
  6184                           	
  6185                           l1566:	
  6186  03B9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 245:     TMR2_StartTimer();
  6187                           	fcall	_TMR2_StartTimer
  6188  03B9  3187  27D4  3183   	line	247
  6189                           	
  6190                           l1568:	
  6191  03BC                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 247:     sensor_globalFlags.interrupted = 0
                                 ;
  6192                           	movlb 0	; select bank0
  6193  03BC  0020               	bcf	(_sensor_globalFlags),1	;volatile
  6194  03BD  10E7               	goto	l250
  6195  03BE  2BC6               	line	250
  6196                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 250:     do
  6197                           	
  6198                           l249:	
  6199  03BF                     	line	252
  6200                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 251:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 252:         while(PIR1bits.ADIF == 0)
  6201                           	goto	l250
  6202  03BF  2BC6               	
  6203                           l251:	
  6204  03C0                     	line	254
  6205                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 253:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 254:             if(sensor_globalFlags.packet_done == (uint8_t)1)
  6206                           	btfss	(_sensor_globalFlags),0	;volatile
  6207  03C0  1C67               	goto	u621
  6208  03C1  2BC3               	goto	u620
  6209  03C2  2BC4               u621:
  6210  03C3                     	goto	l250
  6211  03C3  2BC6               u620:
  6212  03C4                     	goto	l253
  6213  03C4  2BCA               	line	255
  6214                           	
  6215                           l1570:	
  6216  03C5                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 255:                 break;
  6217                           	goto	l253
  6218  03C5  2BCA               	
  6219                           l252:	
  6220  03C6                     	line	256
  6221                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 256:         }
  6222                           	
  6223                           l250:	
  6224  03C6                     	line	252
  6225                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 252:         while(PIR1bits.ADIF == 0)
  6226                           	btfss	(17),6	;volatile
  6227  03C6  1F11               	goto	u631
  6228  03C7  2BC9               	goto	u630
  6229  03C8  2BCA               u631:
  6230  03C9                     	goto	l251
  6231  03C9  2BC0               u630:
  6232  03CA                     	
  6233                           l253:	
  6234  03CA                     	line	257
  6235                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 257:         PIR1bits.ADIF = 0;
  6236                           	bcf	(17),6	;volatile
  6237  03CA  1311               	line	258
  6238                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 258:     } while(sensor_globalFlags.packet_
                                 done == 0);
  6239                           	btfss	(_sensor_globalFlags),0	;volatile
  6240  03CB  1C67               	goto	u641
  6241  03CC  2BCE               	goto	u640
  6242  03CD  2BCF               u641:
  6243  03CE                     	goto	l250
  6244  03CE  2BC6               u640:
  6245  03CF                     	goto	l1572
  6246  03CF  2BD0               	
  6247                           l254:	
  6248  03D0                     	line	261
  6249                           	
  6250                           l1572:	
  6251  03D0                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 261:     TMR2_StopTimer();
  6252                           	fcall	_TMR2_StopTimer
  6253  03D0  3187  27D1  3183   	line	262
  6254                           	
  6255                           l1574:	
  6256  03D3                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:     ADCON0 = ADCON0_temp;
  6257                           	movlb 0	; select bank0
  6258  03D3  0020               	movf	(Sensor_Acq_ExecutePacket@ADCON0_temp),w
  6259  03D4  0849               	movlb 1	; select bank1
  6260  03D5  0021               	movwf	(157)^080h	;volatile
  6261  03D6  009D               	line	263
  6262                           	
  6263                           l1576:	
  6264  03D7                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 263:     ADCON1 = ADCON1_temp;
  6265                           	movlb 0	; select bank0
  6266  03D7  0020               	movf	(Sensor_Acq_ExecutePacket@ADCON1_temp),w
  6267  03D8  084A               	movlb 1	; select bank1
  6268  03D9  0021               	movwf	(158)^080h	;volatile
  6269  03DA  009E               	line	264
  6270                           	
  6271                           l1578:	
  6272  03DB                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 264:     ADCON2 = ADCON2_temp;
  6273                           	movlb 0	; select bank0
  6274  03DB  0020               	movf	(Sensor_Acq_ExecutePacket@ADCON2_temp),w
  6275  03DC  084B               	movlb 1	; select bank1
  6276  03DD  0021               	movwf	(159)^080h	;volatile
  6277  03DE  009F               	line	266
  6278                           	
  6279                           l1580:	
  6280  03DF                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:     if(sensor_globalFlags.interrupted)
                                 
  6281                           	movlb 0	; select bank0
  6282  03DF  0020               	btfss	(_sensor_globalFlags),1	;volatile
  6283  03E0  1CE7               	goto	u651
  6284  03E1  2BE3               	goto	u650
  6285  03E2  2BE4               u651:
  6286  03E3                     	goto	l255
  6287  03E3  2BE8               u650:
  6288  03E4                     	line	268
  6289                           	
  6290                           l1582:	
  6291  03E4                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 267:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 268:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  6292                           	movlw	low(-6)
  6293  03E4  30FA               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6294  03E5  00C8               	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6295  03E6  0848               	movwf	(Sensor_Acq_ExecutePacket@error)
  6296  03E7  00CC               	line	269
  6297                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 269:     }
  6298                           	
  6299                           l255:	
  6300  03E8                     	line	271
  6301                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 271:     return error;
  6302                           	movf	(Sensor_Acq_ExecutePacket@error),w
  6303  03E8  084C               	goto	l256
  6304  03E9  2BEA               	
  6305                           l1584:	
  6306  03EA                     	line	272
  6307                           	
  6308                           l256:	
  6309  03EA                     	return
  6310  03EA  0008               	opt stack 0
  6311                           GLOBAL	__end_of_Sensor_Acq_ExecutePacket
  6312                           	__end_of_Sensor_Acq_ExecutePacket:
  6313  03EB                     	signat	_Sensor_Acq_ExecutePacket,4217
  6314                           	global	_TMR2_StopTimer
  6315                           
  6316 ;; *************** function _TMR2_StopTimer *****************
  6317 ;; Defined at:
  6318 ;;		line 93 in file "mcc_generated_files/tmr2.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;		None
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;		None
  6323 ;; Return value:  Size  Location     Type
  6324 ;;                  1    wreg      void 
  6325 ;; Registers used:
  6326 ;;		None
  6327 ;; Tracked objects:
  6328 ;;		On entry : 0/0
  6329 ;;		On exit  : 0/0
  6330 ;;		Unchanged: 0/0
  6331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6332 ;;      Params:         0       0       0       0
  6333 ;;      Locals:         0       0       0       0
  6334 ;;      Temps:          0       0       0       0
  6335 ;;      Totals:         0       0       0       0
  6336 ;;Total ram usage:        0 bytes
  6337 ;; Hardware stack levels used:    1
  6338 ;; Hardware stack levels required when called:    4
  6339 ;; This function calls:
  6340 ;;		Nothing
  6341 ;; This function is called by:
  6342 ;;		_Sensor_Acq_ExecutePacket
  6343 ;; This function uses a non-reentrant model
  6344 ;;
  6345                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  6346                           	file	"mcc_generated_files/tmr2.c"
  6347                           	line	93
  6348                           global __ptext24
  6349                           __ptext24:	;psect for function _TMR2_StopTimer
  6350  07D1                     psect	text24
  6351                           	file	"mcc_generated_files/tmr2.c"
  6352                           	line	93
  6353                           	global	__size_of_TMR2_StopTimer
  6354                           	__size_of_TMR2_StopTimer	equ	__end_of_TMR2_StopTimer-_TMR2_StopTimer
  6355  0003                     	
  6356                           _TMR2_StopTimer:	
  6357  07D1                     ;incstack = 0
  6358                           	opt	stack 5
  6359                           ; Regs used in _TMR2_StopTimer: []
  6360                           	line	96
  6361                           	
  6362                           l1516:	
  6363  07D1                     ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
  6364                           	movlb 0	; select bank0
  6365  07D1  0020               	bcf	(28),2	;volatile
  6366  07D2  111C               	line	97
  6367                           	
  6368                           l101:	
  6369  07D3                     	return
  6370  07D3  0008               	opt stack 0
  6371                           GLOBAL	__end_of_TMR2_StopTimer
  6372                           	__end_of_TMR2_StopTimer:
  6373  07D4                     	signat	_TMR2_StopTimer,89
  6374                           	global	_TMR2_StartTimer
  6375                           
  6376 ;; *************** function _TMR2_StartTimer *****************
  6377 ;; Defined at:
  6378 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;		None
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;		None
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  1    wreg      void 
  6385 ;; Registers used:
  6386 ;;		None
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6392 ;;      Params:         0       0       0       0
  6393 ;;      Locals:         0       0       0       0
  6394 ;;      Temps:          0       0       0       0
  6395 ;;      Totals:         0       0       0       0
  6396 ;;Total ram usage:        0 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    4
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_Sensor_Acq_ExecutePacket
  6403 ;; This function uses a non-reentrant model
  6404 ;;
  6405                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  6406                           	line	87
  6407                           global __ptext25
  6408                           __ptext25:	;psect for function _TMR2_StartTimer
  6409  07D4                     psect	text25
  6410                           	file	"mcc_generated_files/tmr2.c"
  6411                           	line	87
  6412                           	global	__size_of_TMR2_StartTimer
  6413                           	__size_of_TMR2_StartTimer	equ	__end_of_TMR2_StartTimer-_TMR2_StartTimer
  6414  0003                     	
  6415                           _TMR2_StartTimer:	
  6416  07D4                     ;incstack = 0
  6417                           	opt	stack 5
  6418                           ; Regs used in _TMR2_StartTimer: []
  6419                           	line	90
  6420                           	
  6421                           l1514:	
  6422  07D4                     ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  6423                           	movlb 0	; select bank0
  6424  07D4  0020               	bsf	(28),2	;volatile
  6425  07D5  151C               	line	91
  6426                           	
  6427                           l98:	
  6428  07D6                     	return
  6429  07D6  0008               	opt stack 0
  6430                           GLOBAL	__end_of_TMR2_StartTimer
  6431                           	__end_of_TMR2_StartTimer:
  6432  07D7                     	signat	_TMR2_StartTimer,89
  6433                           	global	_TMR2_SetInterruptHandler
  6434                           
  6435 ;; *************** function _TMR2_SetInterruptHandler *****************
  6436 ;; Defined at:
  6437 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  6438 ;; Parameters:    Size  Location     Type
  6439 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  6440 ;;		 -> Sensor_Acq_ExecuteScan(1), TMR2_DefaultInterruptHandler(1), 
  6441 ;; Auto vars:     Size  Location     Type
  6442 ;;		None
  6443 ;; Return value:  Size  Location     Type
  6444 ;;                  1    wreg      void 
  6445 ;; Registers used:
  6446 ;;		wreg
  6447 ;; Tracked objects:
  6448 ;;		On entry : 0/0
  6449 ;;		On exit  : 0/0
  6450 ;;		Unchanged: 0/0
  6451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6452 ;;      Params:         0       2       0       0
  6453 ;;      Locals:         0       0       0       0
  6454 ;;      Temps:          0       0       0       0
  6455 ;;      Totals:         0       2       0       0
  6456 ;;Total ram usage:        2 bytes
  6457 ;; Hardware stack levels used:    1
  6458 ;; Hardware stack levels required when called:    4
  6459 ;; This function calls:
  6460 ;;		Nothing
  6461 ;; This function is called by:
  6462 ;;		_TMR2_Initialize
  6463 ;;		_Sensor_Acq_ExecutePacket
  6464 ;; This function uses a non-reentrant model
  6465 ;;
  6466                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  6467                           	line	132
  6468                           global __ptext26
  6469                           __ptext26:	;psect for function _TMR2_SetInterruptHandler
  6470  07AE                     psect	text26
  6471                           	file	"mcc_generated_files/tmr2.c"
  6472                           	line	132
  6473                           	global	__size_of_TMR2_SetInterruptHandler
  6474                           	__size_of_TMR2_SetInterruptHandler	equ	__end_of_TMR2_SetInterruptHandler-_TMR2_SetInter
                                 ruptHandler
  6475  0006                     	
  6476                           _TMR2_SetInterruptHandler:	
  6477  07AE                     ;incstack = 0
  6478                           	opt	stack 9
  6479                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  6480                           	line	133
  6481                           	
  6482                           l1512:	
  6483  07AE                     ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  6484                           	movlb 0	; select bank0
  6485  07AE  0020               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1),w
  6486  07AF  0847               	movwf	(_TMR2_InterruptHandler+1)
  6487  07B0  00E9               	movf	(TMR2_SetInterruptHandler@InterruptHandler),w
  6488  07B1  0846               	movwf	(_TMR2_InterruptHandler)
  6489  07B2  00E8               	line	134
  6490                           	
  6491                           l117:	
  6492  07B3                     	return
  6493  07B3  0008               	opt stack 0
  6494                           GLOBAL	__end_of_TMR2_SetInterruptHandler
  6495                           	__end_of_TMR2_SetInterruptHandler:
  6496  07B4                     	signat	_TMR2_SetInterruptHandler,4217
  6497                           	global	_TMR2_LoadPeriodRegister
  6498                           
  6499 ;; *************** function _TMR2_LoadPeriodRegister *****************
  6500 ;; Defined at:
  6501 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  periodVal       1    wreg     unsigned char 
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;  periodVal       1    0[BANK0 ] unsigned char 
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6515 ;;      Params:         0       0       0       0
  6516 ;;      Locals:         0       1       0       0
  6517 ;;      Temps:          0       0       0       0
  6518 ;;      Totals:         0       1       0       0
  6519 ;;Total ram usage:        1 bytes
  6520 ;; Hardware stack levels used:    1
  6521 ;; Hardware stack levels required when called:    4
  6522 ;; This function calls:
  6523 ;;		Nothing
  6524 ;; This function is called by:
  6525 ;;		_Sensor_Acq_ExecutePacket
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  6529                           	line	114
  6530                           global __ptext27
  6531                           __ptext27:	;psect for function _TMR2_LoadPeriodRegister
  6532  07C3                     psect	text27
  6533                           	file	"mcc_generated_files/tmr2.c"
  6534                           	line	114
  6535                           	global	__size_of_TMR2_LoadPeriodRegister
  6536                           	__size_of_TMR2_LoadPeriodRegister	equ	__end_of_TMR2_LoadPeriodRegister-_TMR2_LoadPeriod
                                 Register
  6537  0005                     	
  6538                           _TMR2_LoadPeriodRegister:	
  6539  07C3                     ;incstack = 0
  6540                           	opt	stack 5
  6541                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
  6542                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  6543                           	movlb 0	; select bank0
  6544  07C3  0020               	movwf	(TMR2_LoadPeriodRegister@periodVal)
  6545  07C4  00C6               	line	116
  6546                           	
  6547                           l1518:	
  6548  07C5                     ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
                                 nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
  6549                           	movf	(TMR2_LoadPeriodRegister@periodVal),w
  6550  07C5  0846               	movwf	(27)	;volatile
  6551  07C6  009B               	line	117
  6552                           	
  6553                           l110:	
  6554  07C7                     	return
  6555  07C7  0008               	opt stack 0
  6556                           GLOBAL	__end_of_TMR2_LoadPeriodRegister
  6557                           	__end_of_TMR2_LoadPeriodRegister:
  6558  07C8                     	signat	_TMR2_LoadPeriodRegister,4217
  6559                           	global	_MTOUCH_Sensor_Scan_Initialize
  6560                           
  6561 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  6562 ;; Defined at:
  6563 ;;		line 127 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6564 ;; Parameters:    Size  Location     Type
  6565 ;;		None
  6566 ;; Auto vars:     Size  Location     Type
  6567 ;;		None
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6577 ;;      Params:         0       0       0       0
  6578 ;;      Locals:         0       0       0       0
  6579 ;;      Temps:          0       0       0       0
  6580 ;;      Totals:         0       0       0       0
  6581 ;;Total ram usage:        0 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    4
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_MTOUCH_Initialize
  6588 ;;		_Sensor_Acq_ExecutePacket
  6589 ;; This function uses a non-reentrant model
  6590 ;;
  6591                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  6592                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6593                           	line	127
  6594                           global __ptext28
  6595                           __ptext28:	;psect for function _MTOUCH_Sensor_Scan_Initialize
  6596  0777                     psect	text28
  6597                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6598                           	line	127
  6599                           	global	__size_of_MTOUCH_Sensor_Scan_Initialize
  6600                           	__size_of_MTOUCH_Sensor_Scan_Initialize	equ	__end_of_MTOUCH_Sensor_Scan_Initialize-_MTO
                                 UCH_Sensor_Scan_Initialize
  6601  0009                     	
  6602                           _MTOUCH_Sensor_Scan_Initialize:	
  6603  0777                     ;incstack = 0
  6604                           	opt	stack 9
  6605                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0]
  6606                           	line	129
  6607                           	
  6608                           l1520:	
  6609  0777                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 129:     T2CONbits.T2CKPS = 0x0;
  6610                           	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  6611  0777  30FC               	movlb 0	; select bank0
  6612  0778  0020               	andwf	(28),f	;volatile
  6613  0779  059C               	line	130
  6614                           	
  6615                           l1522:	
  6616  077A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 130:     ADCON0 = (uint8_t)0;
  6617                           	movlb 1	; select bank1
  6618  077A  0021               	clrf	(157)^080h	;volatile
  6619  077B  019D               	line	131
  6620                           	
  6621                           l1524:	
  6622  077C                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 131:     ADCON1 = (uint8_t)( 0x1<<7 | 0x5<<
                                 4 | 0x0 );
  6623                           	movlw	low(0D0h)
  6624  077C  30D0               	movwf	(158)^080h	;volatile
  6625  077D  009E               	line	132
  6626                           	
  6627                           l1526:	
  6628  077E                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 132:     ADCON2 = (uint8_t)0;
  6629                           	clrf	(159)^080h	;volatile
  6630  077E  019F               	line	133
  6631                           	
  6632                           l223:	
  6633  077F                     	return
  6634  077F  0008               	opt stack 0
  6635                           GLOBAL	__end_of_MTOUCH_Sensor_Scan_Initialize
  6636                           	__end_of_MTOUCH_Sensor_Scan_Initialize:
  6637  0780                     	signat	_MTOUCH_Sensor_Scan_Initialize,89
  6638                           	global	_MTOUCH_Button_ServiceAll
  6639                           
  6640 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  6641 ;; Defined at:
  6642 ;;		line 141 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;		None
  6645 ;; Auto vars:     Size  Location     Type
  6646 ;;		None
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  1    wreg      void 
  6649 ;; Registers used:
  6650 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6656 ;;      Params:         0       0       0       0
  6657 ;;      Locals:         0       0       0       0
  6658 ;;      Temps:          0       0       0       0
  6659 ;;      Totals:         0       0       0       0
  6660 ;;Total ram usage:        0 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; Hardware stack levels required when called:    9
  6663 ;; This function calls:
  6664 ;;		_Button_Service
  6665 ;; This function is called by:
  6666 ;;		_MTOUCH_Service_Mainloop
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  6670                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  6671                           	line	141
  6672                           global __ptext29
  6673                           __ptext29:	;psect for function _MTOUCH_Button_ServiceAll
  6674  07C8                     psect	text29
  6675                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  6676                           	line	141
  6677                           	global	__size_of_MTOUCH_Button_ServiceAll
  6678                           	__size_of_MTOUCH_Button_ServiceAll	equ	__end_of_MTOUCH_Button_ServiceAll-_MTOUCH_Button
                                 _ServiceAll
  6679  0005                     	
  6680                           _MTOUCH_Button_ServiceAll:	
  6681  07C8                     ;incstack = 0
  6682                           	opt	stack 5
  6683                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6684                           	line	144
  6685                           	
  6686                           l1882:	
  6687  07C8                     ;mcc_generated_files/mtouch/mtouch_button.c: 144:         Button_Service(Button0);
  6688                           	movlw	low(0)
  6689  07C8  3000               	fcall	_Button_Service
  6690  07C9  3184  24FA  3187   	line	146
  6691                           	
  6692                           l394:	
  6693  07CC                     	return
  6694  07CC  0008               	opt stack 0
  6695                           GLOBAL	__end_of_MTOUCH_Button_ServiceAll
  6696                           	__end_of_MTOUCH_Button_ServiceAll:
  6697  07CD                     	signat	_MTOUCH_Button_ServiceAll,89
  6698                           	global	_Button_Service
  6699                           
  6700 ;; *************** function _Button_Service *****************
  6701 ;; Defined at:
  6702 ;;		line 148 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6703 ;; Parameters:    Size  Location     Type
  6704 ;;  name            1    wreg     enum E2327
  6705 ;; Auto vars:     Size  Location     Type
  6706 ;;  name            1   20[BANK0 ] enum E2327
  6707 ;;  button          1   21[BANK0 ] PTR struct .
  6708 ;;		 -> mtouch_button(16), 
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6718 ;;      Params:         0       0       0       0
  6719 ;;      Locals:         0       2       0       0
  6720 ;;      Temps:          0       2       0       0
  6721 ;;      Totals:         0       4       0       0
  6722 ;;Total ram usage:        4 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    8
  6725 ;; This function calls:
  6726 ;;		_Button_Deviation_Update
  6727 ;;		_Button_Reading_Update
  6728 ;;		_Button_State_Initializing
  6729 ;;		_Button_State_NotPressed
  6730 ;;		_Button_State_Pressed
  6731 ;;		_MTOUCH_Sensor_isCalibrated
  6732 ;;		_MTOUCH_Sensor_wasSampled
  6733 ;; This function is called by:
  6734 ;;		_MTOUCH_Button_ServiceAll
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  6738                           	line	148
  6739                           global __ptext30
  6740                           __ptext30:	;psect for function _Button_Service
  6741  04FA                     psect	text30
  6742                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  6743                           	line	148
  6744                           	global	__size_of_Button_Service
  6745                           	__size_of_Button_Service	equ	__end_of_Button_Service-_Button_Service
  6746  0045                     	
  6747                           _Button_Service:	
  6748  04FA                     ;incstack = 0
  6749                           	opt	stack 5
  6750                           ; Regs used in _Button_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6751                           ;Button_Service@name stored from wreg
  6752                           	movlb 0	; select bank0
  6753  04FA  0020               	movwf	(Button_Service@name)
  6754  04FB  00DA               	line	150
  6755                           	
  6756                           l1812:	
  6757  04FC                     ;mcc_generated_files/mtouch/mtouch_button.c: 148: static void Button_Service(enum mtouch
                                 _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 149: {;mcc_generated_fil
                                 es/mtouch/mtouch_button.c: 150:     mtouch_button_t* button = &mtouch_button[name];
  6758                           	movf	(Button_Service@name),w
  6759  04FC  085A               	movwf	(??_Button_Service+0)+0
  6760  04FD  00D8               	movlw	(04h)-1
  6761  04FE  3003               u955:
  6762  04FF                     	lslf	(??_Button_Service+0)+0,f
  6763  04FF  35D8               	addlw	-1
  6764  0500  3EFF               	skipz
  6765  0501  1D03               	goto	u955
  6766  0502  2CFF               	lslf	(??_Button_Service+0)+0,w
  6767  0503  3558               	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  6768  0504  3E2D               	movwf	(??_Button_Service+1)+0
  6769  0505  00D9               	movf	(??_Button_Service+1)+0,w
  6770  0506  0859               	movwf	(Button_Service@button)
  6771  0507  00DB               	line	152
  6772                           	
  6773                           l1814:	
  6774  0508                     ;mcc_generated_files/mtouch/mtouch_button.c: 152:     if (MTOUCH_Sensor_wasSampled(butto
                                 n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  6775                           	incf	(Button_Service@button),w
  6776  0508  0A5B               	movwf	fsr1l
  6777  0509  0086               	clrf fsr1h	
  6778  050A  0187               	
  6779                           	movf	indf1,w
  6780  050B  0801               	fcall	_MTOUCH_Sensor_wasSampled
  6781  050C  3187  270F  3184   	xorlw	low(0)&0ffh
  6782  050F  3A00               	skipnz
  6783  0510  1903               	goto	u961
  6784  0511  2D13               	goto	u960
  6785  0512  2D14               u961:
  6786  0513                     	goto	l398
  6787  0513  2D3E               u960:
  6788  0514                     	
  6789                           l1816:	
  6790  0514                     	movlb 0	; select bank0
  6791  0514  0020               	incf	(Button_Service@button),w
  6792  0515  0A5B               	movwf	fsr1l
  6793  0516  0086               	clrf fsr1h	
  6794  0517  0187               	
  6795                           	movf	indf1,w
  6796  0518  0801               	fcall	_MTOUCH_Sensor_isCalibrated
  6797  0519  3187  27D7  3184   	xorlw	low(0)&0ffh
  6798  051C  3A00               	skipnz
  6799  051D  1903               	goto	u971
  6800  051E  2D20               	goto	u970
  6801  051F  2D21               u971:
  6802  0520                     	goto	l398
  6803  0520  2D3E               u970:
  6804  0521                     	line	154
  6805                           	
  6806                           l1818:	
  6807  0521                     ;mcc_generated_files/mtouch/mtouch_button.c: 153:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 154:         Button_Reading_Update(button);
  6808                           	movlb 0	; select bank0
  6809  0521  0020               	movf	(Button_Service@button),w
  6810  0522  085B               	fcall	_Button_Reading_Update
  6811  0523  3183  2318  3184   	line	155
  6812                           ;mcc_generated_files/mtouch/mtouch_button.c: 155:         Button_Deviation_Update(button
                                 );
  6813                           	movlb 0	; select bank0
  6814  0526  0020               	movf	(Button_Service@button),w
  6815  0527  085B               	fcall	_Button_Deviation_Update
  6816  0528  3180  20E2  3184   	line	156
  6817                           ;mcc_generated_files/mtouch/mtouch_button.c: 156:         Button_StateMachine[button->st
                                 ate](button);
  6818                           	movlb 0	; select bank0
  6819  052B  0020               	movf	(Button_Service@button),w
  6820  052C  085B               	movwf	(??_Button_Service+0)+0
  6821  052D  00D8               	movf	(??_Button_Service+0)+0,w
  6822  052E  0858               	movwf	(Button_State_Pressed@button)
  6823  052F  00D3               	movf	(Button_Service@button),w
  6824  0530  085B               	addlw	02h
  6825  0531  3E02               	movwf	fsr1l
  6826  0532  0086               	clrf fsr1h	
  6827  0533  0187               	
  6828                           	lslf	indf1,w
  6829  0534  3501               	addlw	low(_Button_StateMachine|((0x0)<<8))&0ffh
  6830  0535  3E20               	movwf	fsr1l
  6831  0536  0086               	clrf fsr1h	
  6832  0537  0187               	
  6833                           	moviw	[1]fsr1
  6834  0538  3F41               	movwf	pclath
  6835  0539  008A               	moviw	[0]fsr1
  6836  053A  3F40               	callw
  6837  053B  000A               	pagesel	$
  6838  053C  3185               	goto	l398
  6839  053D  2D3E               	line	157
  6840                           ;mcc_generated_files/mtouch/mtouch_button.c: 157:     }
  6841                           	
  6842                           l397:	
  6843  053E                     	line	158
  6844                           	
  6845                           l398:	
  6846  053E                     	return
  6847  053E  0008               	opt stack 0
  6848                           GLOBAL	__end_of_Button_Service
  6849                           	__end_of_Button_Service:
  6850  053F                     	signat	_Button_Service,4217
  6851                           	global	_MTOUCH_Sensor_wasSampled
  6852                           
  6853 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  6854 ;; Defined at:
  6855 ;;		line 509 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  sensor          1    wreg     enum E2110
  6858 ;; Auto vars:     Size  Location     Type
  6859 ;;  sensor          1    5[BANK0 ] enum E2110
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  1    wreg      _Bool 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6869 ;;      Params:         0       0       0       0
  6870 ;;      Locals:         0       1       0       0
  6871 ;;      Temps:          0       1       0       0
  6872 ;;      Totals:         0       2       0       0
  6873 ;;Total ram usage:        2 bytes
  6874 ;; Hardware stack levels used:    1
  6875 ;; Hardware stack levels required when called:    5
  6876 ;; This function calls:
  6877 ;;		___bmul
  6878 ;; This function is called by:
  6879 ;;		_Button_Service
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  6883                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6884                           	line	509
  6885                           global __ptext31
  6886                           __ptext31:	;psect for function _MTOUCH_Sensor_wasSampled
  6887  070F                     psect	text31
  6888                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6889                           	line	509
  6890                           	global	__size_of_MTOUCH_Sensor_wasSampled
  6891                           	__size_of_MTOUCH_Sensor_wasSampled	equ	__end_of_MTOUCH_Sensor_wasSampled-_MTOUCH_Sensor
                                 _wasSampled
  6892  0012                     	
  6893                           _MTOUCH_Sensor_wasSampled:	
  6894  070F                     ;incstack = 0
  6895                           	opt	stack 7
  6896                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6897                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  6898                           	movlb 0	; select bank0
  6899  070F  0020               	movwf	(MTOUCH_Sensor_wasSampled@sensor)
  6900  0710  00CB               	line	511
  6901                           	
  6902                           l1700:	
  6903  0711                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 509: _Bool MTOUCH_Sensor_wasSampled(enum mt
                                 ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 510: {;mcc_generat
                                 ed_files/mtouch/mtouch_sensor.c: 511:         return (_Bool)mtouch_sensor[sensor].sample
                                 d;
  6904                           	movlw	low(09h)
  6905  0711  3009               	movwf	(??_MTOUCH_Sensor_wasSampled+0)+0
  6906  0712  00CA               	movf	(??_MTOUCH_Sensor_wasSampled+0)+0,w
  6907  0713  084A               	movwf	(___bmul@multiplicand)
  6908  0714  00C6               	movf	(MTOUCH_Sensor_wasSampled@sensor),w
  6909  0715  084B               	fcall	___bmul
  6910  0716  3186  2686  3187   	addlw	08h
  6911  0719  3E08               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  6912  071A  3E3D               	movwf	fsr1l
  6913  071B  0086               	clrf fsr1h	
  6914  071C  0187               	
  6915                           	rrf	indf1,w
  6916  071D  0C01               	andlw	(1<<1)-1
  6917  071E  3901               	goto	l336
  6918  071F  2F20               	
  6919                           l1702:	
  6920  0720                     	line	513
  6921                           	
  6922                           l336:	
  6923  0720                     	return
  6924  0720  0008               	opt stack 0
  6925                           GLOBAL	__end_of_MTOUCH_Sensor_wasSampled
  6926                           	__end_of_MTOUCH_Sensor_wasSampled:
  6927  0721                     	signat	_MTOUCH_Sensor_wasSampled,4217
  6928                           	global	_MTOUCH_Sensor_isCalibrated
  6929                           
  6930 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  6931 ;; Defined at:
  6932 ;;		line 486 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  sensor          1    wreg     enum E2110
  6935 ;; Auto vars:     Size  Location     Type
  6936 ;;  sensor          1    0[COMMON] enum E2110
  6937 ;; Return value:  Size  Location     Type
  6938 ;;                  1    wreg      _Bool 
  6939 ;; Registers used:
  6940 ;;		wreg
  6941 ;; Tracked objects:
  6942 ;;		On entry : 0/0
  6943 ;;		On exit  : 0/0
  6944 ;;		Unchanged: 0/0
  6945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6946 ;;      Params:         0       0       0       0
  6947 ;;      Locals:         0       0       0       0
  6948 ;;      Temps:          0       0       0       0
  6949 ;;      Totals:         0       0       0       0
  6950 ;;Total ram usage:        0 bytes
  6951 ;; Hardware stack levels used:    1
  6952 ;; Hardware stack levels required when called:    4
  6953 ;; This function calls:
  6954 ;;		Nothing
  6955 ;; This function is called by:
  6956 ;;		_Button_Service
  6957 ;; This function uses a non-reentrant model
  6958 ;;
  6959                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  6960                           	line	486
  6961                           global __ptext32
  6962                           __ptext32:	;psect for function _MTOUCH_Sensor_isCalibrated
  6963  07D7                     psect	text32
  6964                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6965                           	line	486
  6966                           	global	__size_of_MTOUCH_Sensor_isCalibrated
  6967                           	__size_of_MTOUCH_Sensor_isCalibrated	equ	__end_of_MTOUCH_Sensor_isCalibrated-_MTOUCH_Se
                                 nsor_isCalibrated
  6968  0003                     	
  6969                           _MTOUCH_Sensor_isCalibrated:	
  6970  07D7                     ;incstack = 0
  6971                           	opt	stack 8
  6972                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  6973                           	line	489
  6974                           	
  6975                           l1696:	
  6976  07D7                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 486: _Bool MTOUCH_Sensor_isCalibrated(enum 
                                 mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 487: {;mcc_gener
                                 ated_files/mtouch/mtouch_sensor.c: 489:     return 1;
  6977                           	movlw	low(01h)
  6978  07D7  3001               	goto	l327
  6979  07D8  2FD9               	
  6980                           l1698:	
  6981  07D9                     	line	490
  6982                           	
  6983                           l327:	
  6984  07D9                     	return
  6985  07D9  0008               	opt stack 0
  6986                           GLOBAL	__end_of_MTOUCH_Sensor_isCalibrated
  6987                           	__end_of_MTOUCH_Sensor_isCalibrated:
  6988  07DA                     	signat	_MTOUCH_Sensor_isCalibrated,4217
  6989                           	global	_Button_State_Pressed
  6990                           	global	_Button_State_Initializing
  6991                           	global	_Button_State_NotPressed
  6992                           
  6993 ;; *************** function _Button_State_NotPressed *****************
  6994 ;; Defined at:
  6995 ;;		line 179 in file "mcc_generated_files/mtouch/mtouch_button.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  button          1   13[BANK0 ] PTR struct .
  6998 ;;		 -> mtouch_button(16), 
  6999 ;; Auto vars:     Size  Location     Type
  7000 ;;		None
  7001 ;; Return value:  Size  Location     Type
  7002 ;;                  1    wreg      void 
  7003 ;; Registers used:
  7004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7005 ;; Tracked objects:
  7006 ;;		On entry : 0/0
  7007 ;;		On exit  : 0/0
  7008 ;;		Unchanged: 0/0
  7009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7010 ;;      Params:         0       1       0       0
  7011 ;;      Locals:         0       0       0       0
  7012 ;;      Temps:          0       2       0       0
  7013 ;;      Totals:         0       3       0       0
  7014 ;;Total ram usage:        3 bytes
  7015 ;; Hardware stack levels used:    1
  7016 ;; Hardware stack levels required when called:    5
  7017 ;; This function calls:
  7018 ;;		_Button_Baseline_Update
  7019 ;;		_Button_DefaultCallback
  7020 ;; This function is called by:
  7021 ;;		_Button_Service
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  7025                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7026                           	line	179
  7027                           global __ptext33
  7028                           __ptext33:	;psect for function _Button_State_NotPressed
  7029  0176                     psect	text33
  7030                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7031                           	line	179
  7032                           	global	__size_of_Button_State_NotPressed
  7033                           	__size_of_Button_State_NotPressed	equ	__end_of_Button_State_NotPressed-_Button_State_No
                                 tPressed
  7034  008E                     	
  7035                           _Button_State_NotPressed:	
  7036  0176                     ;incstack = 0
  7037                           	opt	stack 7
  7038                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
                                 ck]
  7039                           	line	182
  7040                           	
  7041                           l1742:	
  7042  0176                     ;mcc_generated_files/mtouch/mtouch_button.c: 179: static void Button_State_NotPressed(mt
                                 ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 180: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 182:     if ((button->deviation) < (mtouch_button_deviatio
                                 n_t)(mtouch_button_deviation_t)-10)
  7043                           	movlb 0	; select bank0
  7044  0176  0020               	movf	(Button_State_NotPressed@button),w
  7045  0177  0853               	addlw	09h
  7046  0178  3E09               	movwf	fsr1l
  7047  0179  0086               	clrf fsr1h	
  7048  017A  0187               	
  7049                           	movf	indf1,w
  7050  017B  0801               	xorlw	80h
  7051  017C  3A80               	addlw	-((-10)^80h)
  7052  017D  3E8A               	skipnc
  7053  017E  1803               	goto	u891
  7054  017F  2981               	goto	u890
  7055  0180  2982               u891:
  7056  0181                     	goto	l1748
  7057  0181  29A5               u890:
  7058  0182                     	line	184
  7059                           	
  7060                           l1744:	
  7061  0182                     ;mcc_generated_files/mtouch/mtouch_button.c: 183:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 184:         (button->counter)++;
  7062                           	movf	(Button_State_NotPressed@button),w
  7063  0182  0853               	addlw	0Ah
  7064  0183  3E0A               	movwf	fsr1l
  7065  0184  0086               	clrf fsr1h	
  7066  0185  0187               	
  7067                           	movlw	01h
  7068  0186  3001               	addwf	indf1,f
  7069  0187  0781               	addfsr	fsr1,1
  7070  0188  3141               	skipnc
  7071  0189  1803               	incf	indf1,f
  7072  018A  0A81               	line	185
  7073                           ;mcc_generated_files/mtouch/mtouch_button.c: 185:         if ((button->counter) > (mtouc
                                 h_button_statecounter_t)((mtouch_button_statecounter_t)32))
  7074                           	movf	(Button_State_NotPressed@button),w
  7075  018B  0853               	addlw	0Ah
  7076  018C  3E0A               	movwf	fsr1l
  7077  018D  0086               	clrf fsr1h	
  7078  018E  0187               	
  7079                           	moviw	[0]fsr1
  7080  018F  3F40               	movwf	(??_Button_State_NotPressed+0)+0
  7081  0190  00D4               	moviw	[1]fsr1
  7082  0191  3F41               	movwf	(??_Button_State_NotPressed+0)+0+1
  7083  0192  00D5               	movlw	0
  7084  0193  3000               	subwf	1+(??_Button_State_NotPressed+0)+0,w
  7085  0194  0255               	movlw	021h
  7086  0195  3021               	skipnz
  7087  0196  1903               	subwf	0+(??_Button_State_NotPressed+0)+0,w
  7088  0197  0254               	skipc
  7089  0198  1C03               	goto	u901
  7090  0199  299B               	goto	u900
  7091  019A  299C               u901:
  7092  019B                     	goto	l409
  7093  019B  29DC               u900:
  7094  019C                     	line	187
  7095                           	
  7096                           l1746:	
  7097  019C                     ;mcc_generated_files/mtouch/mtouch_button.c: 186:         {;mcc_generated_files/mtouch/m
                                 touch_button.c: 187:             button->counter = (mtouch_button_statecounter_t)0;
  7098                           	movf	(Button_State_NotPressed@button),w
  7099  019C  0853               	addlw	0Ah
  7100  019D  3E0A               	movwf	fsr1l
  7101  019E  0086               	clrf fsr1h	
  7102  019F  0187               	
  7103                           	movlw	0
  7104  01A0  3000               	movwi	[0]fsr1
  7105  01A1  3FC0               	movwi	[1]fsr1
  7106  01A2  3FC1               	goto	l409
  7107  01A3  29DC               	line	188
  7108                           ;mcc_generated_files/mtouch/mtouch_button.c: 188:         }
  7109                           	
  7110                           l408:	
  7111  01A4                     	line	189
  7112                           ;mcc_generated_files/mtouch/mtouch_button.c: 189:     }
  7113                           	goto	l409
  7114  01A4  29DC               	line	191
  7115                           ;mcc_generated_files/mtouch/mtouch_button.c: 191:     else if ((button->deviation) > (bu
                                 tton->threshold))
  7116                           	
  7117                           l407:	
  7118  01A5                     	
  7119                           l1748:	
  7120  01A5                     	movf	(Button_State_NotPressed@button),w
  7121  01A5  0853               	addlw	0Eh
  7122  01A6  3E0E               	movwf	fsr1l
  7123  01A7  0086               	clrf fsr1h	
  7124  01A8  0187               	
  7125                           	movf	indf1,w
  7126  01A9  0801               	xorlw	80h
  7127  01AA  3A80               	movwf	(??_Button_State_NotPressed+0)+0
  7128  01AB  00D4               	movf	(Button_State_NotPressed@button),w
  7129  01AC  0853               	addlw	09h
  7130  01AD  3E09               	movwf	fsr1l
  7131  01AE  0086               	clrf fsr1h	
  7132  01AF  0187               	
  7133                           	movf	indf1,w
  7134  01B0  0801               	xorlw	80h
  7135  01B1  3A80               	subwf	(??_Button_State_NotPressed+0)+0
  7136  01B2  02D4               	skipnc
  7137  01B3  1803               	goto	u911
  7138  01B4  29B6               	goto	u910
  7139  01B5  29B7               u911:
  7140  01B6                     	goto	l1754
  7141  01B6  29D3               u910:
  7142  01B7                     	line	193
  7143                           	
  7144                           l1750:	
  7145  01B7                     ;mcc_generated_files/mtouch/mtouch_button.c: 192:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 193:         button->state = MTOUCH_BUTTON_STATE_pressed;
  7146                           	movlw	low(02h)
  7147  01B7  3002               	movwf	(??_Button_State_NotPressed+0)+0
  7148  01B8  00D4               	movf	(Button_State_NotPressed@button),w
  7149  01B9  0853               	addlw	02h
  7150  01BA  3E02               	movwf	fsr1l
  7151  01BB  0086               	clrf fsr1h	
  7152  01BC  0187               	
  7153                           	movf	(??_Button_State_NotPressed+0)+0,w
  7154  01BD  0854               	movwf	indf1
  7155  01BE  0081               	line	194
  7156                           ;mcc_generated_files/mtouch/mtouch_button.c: 194:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7157                           	movf	(Button_State_NotPressed@button),w
  7158  01BF  0853               	addlw	0Ah
  7159  01C0  3E0A               	movwf	fsr1l
  7160  01C1  0086               	clrf fsr1h	
  7161  01C2  0187               	
  7162                           	movlw	0
  7163  01C3  3000               	movwi	[0]fsr1
  7164  01C4  3FC0               	movwi	[1]fsr1
  7165  01C5  3FC1               	line	195
  7166                           	
  7167                           l1752:	
  7168  01C6                     ;mcc_generated_files/mtouch/mtouch_button.c: 195:         callback_pressed(button->name)
                                 ;
  7169                           	movf	(Button_State_NotPressed@button),w
  7170  01C6  0853               	movwf	fsr1l
  7171  01C7  0086               	clrf fsr1h	
  7172  01C8  0187               	
  7173                           	movf	indf1,w
  7174  01C9  0801               	movwf	(??_Button_State_NotPressed+0)+0
  7175  01CA  00D4               	movf	(??_Button_State_NotPressed+0)+0,w
  7176  01CB  0854               	movwf	(Button_DefaultCallback@button)
  7177  01CC  00C6               	movf	(_callback_pressed+1),w
  7178  01CD  0829               	movwf	pclath
  7179  01CE  008A               	movf	(_callback_pressed),w
  7180  01CF  0828               	callw
  7181  01D0  000A               	pagesel	$
  7182  01D1  3181               	line	196
  7183                           ;mcc_generated_files/mtouch/mtouch_button.c: 196:     }
  7184                           	goto	l409
  7185  01D2  29DC               	line	197
  7186                           ;mcc_generated_files/mtouch/mtouch_button.c: 197:     else
  7187                           	
  7188                           l410:	
  7189  01D3                     	line	200
  7190                           	
  7191                           l1754:	
  7192  01D3                     ;mcc_generated_files/mtouch/mtouch_button.c: 198:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 200:         button->counter = (mtouch_button_statecounter_t)0;
  7193                           	movlb 0	; select bank0
  7194  01D3  0020               	movf	(Button_State_NotPressed@button),w
  7195  01D4  0853               	addlw	0Ah
  7196  01D5  3E0A               	movwf	fsr1l
  7197  01D6  0086               	clrf fsr1h	
  7198  01D7  0187               	
  7199                           	movlw	0
  7200  01D8  3000               	movwi	[0]fsr1
  7201  01D9  3FC0               	movwi	[1]fsr1
  7202  01DA  3FC1               	goto	l409
  7203  01DB  29DC               	line	201
  7204                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:     }
  7205                           	
  7206                           l411:	
  7207  01DC                     	
  7208                           l409:	
  7209  01DC                     	line	204
  7210                           ;mcc_generated_files/mtouch/mtouch_button.c: 204:     (button->baseline_count)++;
  7211                           	movlb 0	; select bank0
  7212  01DC  0020               	movf	(Button_State_NotPressed@button),w
  7213  01DD  0853               	addlw	0Ch
  7214  01DE  3E0C               	movwf	fsr1l
  7215  01DF  0086               	clrf fsr1h	
  7216  01E0  0187               	
  7217                           	movlw	01h
  7218  01E1  3001               	addwf	indf1,f
  7219  01E2  0781               	addfsr	fsr1,1
  7220  01E3  3141               	skipnc
  7221  01E4  1803               	incf	indf1,f
  7222  01E5  0A81               	line	205
  7223                           ;mcc_generated_files/mtouch/mtouch_button.c: 205:     if ((button->baseline_count) > ((m
                                 touch_button_baselinecounter_t)32))
  7224                           	movf	(Button_State_NotPressed@button),w
  7225  01E6  0853               	addlw	0Ch
  7226  01E7  3E0C               	movwf	fsr1l
  7227  01E8  0086               	clrf fsr1h	
  7228  01E9  0187               	
  7229                           	moviw	[0]fsr1
  7230  01EA  3F40               	movwf	(??_Button_State_NotPressed+0)+0
  7231  01EB  00D4               	moviw	[1]fsr1
  7232  01EC  3F41               	movwf	(??_Button_State_NotPressed+0)+0+1
  7233  01ED  00D5               	movlw	0
  7234  01EE  3000               	subwf	1+(??_Button_State_NotPressed+0)+0,w
  7235  01EF  0255               	movlw	021h
  7236  01F0  3021               	skipnz
  7237  01F1  1903               	subwf	0+(??_Button_State_NotPressed+0)+0,w
  7238  01F2  0254               	skipc
  7239  01F3  1C03               	goto	u921
  7240  01F4  29F6               	goto	u920
  7241  01F5  29F7               u921:
  7242  01F6                     	goto	l413
  7243  01F6  2A03               u920:
  7244  01F7                     	line	207
  7245                           	
  7246                           l1756:	
  7247  01F7                     ;mcc_generated_files/mtouch/mtouch_button.c: 206:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 207:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  7248                           	movf	(Button_State_NotPressed@button),w
  7249  01F7  0853               	addlw	0Ch
  7250  01F8  3E0C               	movwf	fsr1l
  7251  01F9  0086               	clrf fsr1h	
  7252  01FA  0187               	
  7253                           	movlw	0
  7254  01FB  3000               	movwi	[0]fsr1
  7255  01FC  3FC0               	movwi	[1]fsr1
  7256  01FD  3FC1               	line	208
  7257                           	
  7258                           l1758:	
  7259  01FE                     ;mcc_generated_files/mtouch/mtouch_button.c: 208:         Button_Baseline_Update(button)
                                 ;
  7260                           	movf	(Button_State_NotPressed@button),w
  7261  01FE  0853               	fcall	_Button_Baseline_Update
  7262  01FF  3182  2204  3181   	goto	l413
  7263  0202  2A03               	line	209
  7264                           ;mcc_generated_files/mtouch/mtouch_button.c: 209:     }
  7265                           	
  7266                           l412:	
  7267  0203                     	line	210
  7268                           	
  7269                           l413:	
  7270  0203                     	return
  7271  0203  0008               	opt stack 0
  7272                           GLOBAL	__end_of_Button_State_NotPressed
  7273                           	__end_of_Button_State_NotPressed:
  7274  0204                     	signat	_Button_State_NotPressed,4217
  7275                           
  7276 ;; *************** function _Button_State_Initializing *****************
  7277 ;; Defined at:
  7278 ;;		line 160 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  button          1   13[BANK0 ] PTR struct .
  7281 ;;		 -> mtouch_button(16), 
  7282 ;; Auto vars:     Size  Location     Type
  7283 ;;		None
  7284 ;; Return value:  Size  Location     Type
  7285 ;;                  1    wreg      void 
  7286 ;; Registers used:
  7287 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7288 ;; Tracked objects:
  7289 ;;		On entry : 0/0
  7290 ;;		On exit  : 0/0
  7291 ;;		Unchanged: 0/0
  7292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7293 ;;      Params:         0       1       0       0
  7294 ;;      Locals:         0       0       0       0
  7295 ;;      Temps:          0       4       0       0
  7296 ;;      Totals:         0       5       0       0
  7297 ;;Total ram usage:        5 bytes
  7298 ;; Hardware stack levels used:    1
  7299 ;; Hardware stack levels required when called:    7
  7300 ;; This function calls:
  7301 ;;		_Button_Baseline_Initialize
  7302 ;;		_Button_Baseline_Update
  7303 ;; This function is called by:
  7304 ;;		_Button_Service
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  7308                           	line	160
  7309                           global __ptext34
  7310                           __ptext34:	;psect for function _Button_State_Initializing
  7311  03EB                     psect	text34
  7312                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7313                           	line	160
  7314                           	global	__size_of_Button_State_Initializing
  7315                           	__size_of_Button_State_Initializing	equ	__end_of_Button_State_Initializing-_Button_Stat
                                 e_Initializing
  7316  0062                     	
  7317                           _Button_State_Initializing:	
  7318  03EB                     ;incstack = 0
  7319                           	opt	stack 5
  7320                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
                                 tack]
  7321                           	line	163
  7322                           	
  7323                           l1730:	
  7324  03EB                     ;mcc_generated_files/mtouch/mtouch_button.c: 160: static void Button_State_Initializing(
                                 mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 161: {;mcc_generate
                                 d_files/mtouch/mtouch_button.c: 163:     if ((button->counter) <= (mtouch_button_stateco
                                 unter_t)((mtouch_button_statecounter_t)16)/2)
  7325                           	movlb 0	; select bank0
  7326  03EB  0020               	movf	(Button_State_Initializing@button),w
  7327  03EC  0853               	addlw	0Ah
  7328  03ED  3E0A               	movwf	fsr1l
  7329  03EE  0086               	clrf fsr1h	
  7330  03EF  0187               	
  7331                           	moviw	[0]fsr1
  7332  03F0  3F40               	movwf	(??_Button_State_Initializing+0)+0
  7333  03F1  00D4               	moviw	[1]fsr1
  7334  03F2  3F41               	movwf	(??_Button_State_Initializing+0)+0+1
  7335  03F3  00D5               	movlw	0
  7336  03F4  3000               	subwf	1+(??_Button_State_Initializing+0)+0,w
  7337  03F5  0255               	movlw	09h
  7338  03F6  3009               	skipnz
  7339  03F7  1903               	subwf	0+(??_Button_State_Initializing+0)+0,w
  7340  03F8  0254               	skipnc
  7341  03F9  1803               	goto	u861
  7342  03FA  2BFC               	goto	u860
  7343  03FB  2BFD               u861:
  7344  03FC                     	goto	l1734
  7345  03FC  2C02               u860:
  7346  03FD                     	line	165
  7347                           	
  7348                           l1732:	
  7349  03FD                     ;mcc_generated_files/mtouch/mtouch_button.c: 164:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 165:         Button_Baseline_Initialize(button);
  7350                           	movf	(Button_State_Initializing@button),w
  7351  03FD  0853               	fcall	_Button_Baseline_Initialize
  7352  03FE  3185  257E  3183   	line	166
  7353                           ;mcc_generated_files/mtouch/mtouch_button.c: 166:     } else {
  7354                           	goto	l1736
  7355  0401  2C08               	
  7356                           l401:	
  7357  0402                     	line	167
  7358                           	
  7359                           l1734:	
  7360  0402                     ;mcc_generated_files/mtouch/mtouch_button.c: 167:         Button_Baseline_Update(button)
                                 ;
  7361                           	movlb 0	; select bank0
  7362  0402  0020               	movf	(Button_State_Initializing@button),w
  7363  0403  0853               	fcall	_Button_Baseline_Update
  7364  0404  3182  2204  3183   	goto	l1736
  7365  0407  2C08               	line	168
  7366                           ;mcc_generated_files/mtouch/mtouch_button.c: 168:     }
  7367                           	
  7368                           l402:	
  7369  0408                     	line	171
  7370                           	
  7371                           l1736:	
  7372  0408                     ;mcc_generated_files/mtouch/mtouch_button.c: 171:     (button->counter)++;
  7373                           	movlb 0	; select bank0
  7374  0408  0020               	movf	(Button_State_Initializing@button),w
  7375  0409  0853               	addlw	0Ah
  7376  040A  3E0A               	movwf	fsr1l
  7377  040B  0086               	clrf fsr1h	
  7378  040C  0187               	
  7379                           	movlw	01h
  7380  040D  3001               	addwf	indf1,f
  7381  040E  0781               	addfsr	fsr1,1
  7382  040F  3141               	skipnc
  7383  0410  1803               	incf	indf1,f
  7384  0411  0A81               	line	172
  7385                           	
  7386                           l1738:	
  7387  0412                     ;mcc_generated_files/mtouch/mtouch_button.c: 172:     if ((button->counter) >= (mtouch_b
                                 utton_statecounter_t)((mtouch_button_statecounter_t)16))
  7388                           	movf	(Button_State_Initializing@button),w
  7389  0412  0853               	addlw	0Ah
  7390  0413  3E0A               	movwf	fsr1l
  7391  0414  0086               	clrf fsr1h	
  7392  0415  0187               	
  7393                           	moviw	[0]fsr1
  7394  0416  3F40               	movwf	(??_Button_State_Initializing+0)+0
  7395  0417  00D4               	moviw	[1]fsr1
  7396  0418  3F41               	movwf	(??_Button_State_Initializing+0)+0+1
  7397  0419  00D5               	movlw	0
  7398  041A  3000               	subwf	1+(??_Button_State_Initializing+0)+0,w
  7399  041B  0255               	movlw	010h
  7400  041C  3010               	skipnz
  7401  041D  1903               	subwf	0+(??_Button_State_Initializing+0)+0,w
  7402  041E  0254               	skipc
  7403  041F  1C03               	goto	u871
  7404  0420  2C22               	goto	u870
  7405  0421  2C23               u871:
  7406  0422                     	goto	l404
  7407  0422  2C4C               u870:
  7408  0423                     	line	174
  7409                           	
  7410                           l1740:	
  7411  0423                     ;mcc_generated_files/mtouch/mtouch_button.c: 173:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 174:         button->reading = (mtouch_button_reading_t)((button->baseline)>
                                 >((uint8_t)4));
  7412                           	movf	(Button_State_Initializing@button),w
  7413  0423  0853               	addlw	05h
  7414  0424  3E05               	movwf	fsr1l
  7415  0425  0086               	clrf fsr1h	
  7416  0426  0187               	
  7417                           	moviw	[0]fsr1
  7418  0427  3F40               	movwf	((??_Button_State_Initializing+0)+0+0)
  7419  0428  00D4               	moviw	[1]fsr1
  7420  0429  3F41               	movwf	((??_Button_State_Initializing+0)+0+1)
  7421  042A  00D5               	moviw	[2]fsr1
  7422  042B  3F42               	movwf	((??_Button_State_Initializing+0)+0+2)
  7423  042C  00D6               	moviw	[3]fsr1
  7424  042D  3F43               	movwf	((??_Button_State_Initializing+0)+0+3)
  7425  042E  00D7               	movlw	04h
  7426  042F  3004               u885:
  7427  0430                     	lsrf	(??_Button_State_Initializing+0)+3,f
  7428  0430  36D7               	rrf	(??_Button_State_Initializing+0)+2,f
  7429  0431  0CD6               	rrf	(??_Button_State_Initializing+0)+1,f
  7430  0432  0CD5               	rrf	(??_Button_State_Initializing+0)+0,f
  7431  0433  0CD4               u880:
  7432  0434                     	decfsz	wreg,f
  7433  0434  0B89               	goto	u885
  7434  0435  2C30               	movf	(Button_State_Initializing@button),w
  7435  0436  0853               	addlw	03h
  7436  0437  3E03               	movwf	fsr1l
  7437  0438  0086               	clrf fsr1h	
  7438  0439  0187               	
  7439                           	movf	0+(??_Button_State_Initializing+0)+0,w
  7440  043A  0854               	movwi	[0]fsr1
  7441  043B  3FC0               	movf	1+(??_Button_State_Initializing+0)+0,w
  7442  043C  0855               	movwi	[1]fsr1
  7443  043D  3FC1               	line	175
  7444                           ;mcc_generated_files/mtouch/mtouch_button.c: 175:         button->state = MTOUCH_BUTTON_
                                 STATE_notPressed;
  7445                           	movf	(Button_State_Initializing@button),w
  7446  043E  0853               	addlw	02h
  7447  043F  3E02               	movwf	fsr1l
  7448  0440  0086               	clrf fsr1h	
  7449  0441  0187               	
  7450                           	clrf	indf1
  7451  0442  0181               	incf	indf1,f
  7452  0443  0A81               	line	176
  7453                           ;mcc_generated_files/mtouch/mtouch_button.c: 176:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7454                           	movf	(Button_State_Initializing@button),w
  7455  0444  0853               	addlw	0Ah
  7456  0445  3E0A               	movwf	fsr1l
  7457  0446  0086               	clrf fsr1h	
  7458  0447  0187               	
  7459                           	movlw	0
  7460  0448  3000               	movwi	[0]fsr1
  7461  0449  3FC0               	movwi	[1]fsr1
  7462  044A  3FC1               	goto	l404
  7463  044B  2C4C               	line	177
  7464                           ;mcc_generated_files/mtouch/mtouch_button.c: 177:     }
  7465                           	
  7466                           l403:	
  7467  044C                     	line	178
  7468                           	
  7469                           l404:	
  7470  044C                     	return
  7471  044C  0008               	opt stack 0
  7472                           GLOBAL	__end_of_Button_State_Initializing
  7473                           	__end_of_Button_State_Initializing:
  7474  044D                     	signat	_Button_State_Initializing,4217
  7475                           
  7476 ;; *************** function _Button_State_Pressed *****************
  7477 ;; Defined at:
  7478 ;;		line 211 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7479 ;; Parameters:    Size  Location     Type
  7480 ;;  button          1   13[BANK0 ] PTR struct .
  7481 ;;		 -> mtouch_button(16), 
  7482 ;; Auto vars:     Size  Location     Type
  7483 ;;		None
  7484 ;; Return value:  Size  Location     Type
  7485 ;;                  1    wreg      void 
  7486 ;; Registers used:
  7487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7488 ;; Tracked objects:
  7489 ;;		On entry : 0/0
  7490 ;;		On exit  : 0/0
  7491 ;;		Unchanged: 0/0
  7492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7493 ;;      Params:         0       1       0       0
  7494 ;;      Locals:         0       0       0       0
  7495 ;;      Temps:          0       2       0       0
  7496 ;;      Totals:         0       3       0       0
  7497 ;;Total ram usage:        3 bytes
  7498 ;; Hardware stack levels used:    1
  7499 ;; Hardware stack levels required when called:    5
  7500 ;; This function calls:
  7501 ;;		_Button_DefaultCallback
  7502 ;; This function is called by:
  7503 ;;		_Button_Service
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  7507                           	line	211
  7508                           global __ptext35
  7509                           __ptext35:	;psect for function _Button_State_Pressed
  7510  04AC                     psect	text35
  7511                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7512                           	line	211
  7513                           	global	__size_of_Button_State_Pressed
  7514                           	__size_of_Button_State_Pressed	equ	__end_of_Button_State_Pressed-_Button_State_Pressed

  7515  004E                     	
  7516                           _Button_State_Pressed:	
  7517  04AC                     ;incstack = 0
  7518                           	opt	stack 7
  7519                           ; Regs used in _Button_State_Pressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
                                 
  7520                           	line	214
  7521                           	
  7522                           l1760:	
  7523  04AC                     ;mcc_generated_files/mtouch/mtouch_button.c: 211: static void Button_State_Pressed(mtouc
                                 h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 212: {;mcc_generated_fil
                                 es/mtouch/mtouch_button.c: 214:     if ((button->counter) >= ((mtouch_button_statecounte
                                 r_t)1000))
  7524                           	movlb 0	; select bank0
  7525  04AC  0020               	movf	(Button_State_Pressed@button),w
  7526  04AD  0853               	addlw	0Ah
  7527  04AE  3E0A               	movwf	fsr1l
  7528  04AF  0086               	clrf fsr1h	
  7529  04B0  0187               	
  7530                           	moviw	[0]fsr1
  7531  04B1  3F40               	movwf	(??_Button_State_Pressed+0)+0
  7532  04B2  00D4               	moviw	[1]fsr1
  7533  04B3  3F41               	movwf	(??_Button_State_Pressed+0)+0+1
  7534  04B4  00D5               	movlw	03h
  7535  04B5  3003               	subwf	1+(??_Button_State_Pressed+0)+0,w
  7536  04B6  0255               	movlw	0E8h
  7537  04B7  30E8               	skipnz
  7538  04B8  1903               	subwf	0+(??_Button_State_Pressed+0)+0,w
  7539  04B9  0254               	skipc
  7540  04BA  1C03               	goto	u931
  7541  04BB  2CBD               	goto	u930
  7542  04BC  2CBE               u931:
  7543  04BD                     	goto	l1764
  7544  04BD  2CCB               u930:
  7545  04BE                     	line	217
  7546                           	
  7547                           l1762:	
  7548  04BE                     ;mcc_generated_files/mtouch/mtouch_button.c: 215:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 217:         callback_notPressed(button->name);
  7549                           	movf	(Button_State_Pressed@button),w
  7550  04BE  0853               	movwf	fsr1l
  7551  04BF  0086               	clrf fsr1h	
  7552  04C0  0187               	
  7553                           	movf	indf1,w
  7554  04C1  0801               	movwf	(??_Button_State_Pressed+0)+0
  7555  04C2  00D4               	movf	(??_Button_State_Pressed+0)+0,w
  7556  04C3  0854               	movwf	(Button_DefaultCallback@button)
  7557  04C4  00C6               	movf	(_callback_notPressed+1),w
  7558  04C5  0827               	movwf	pclath
  7559  04C6  008A               	movf	(_callback_notPressed),w
  7560  04C7  0826               	callw
  7561  04C8  000A               	pagesel	$
  7562  04C9  3184               	line	218
  7563                           ;mcc_generated_files/mtouch/mtouch_button.c: 218:     }
  7564                           	goto	l419
  7565  04CA  2CF9               	line	221
  7566                           ;mcc_generated_files/mtouch/mtouch_button.c: 221:     else if ((button->deviation) < (mt
                                 ouch_button_deviation_t)((button->threshold) >> 1))
  7567                           	
  7568                           l416:	
  7569  04CB                     	
  7570                           l1764:	
  7571  04CB                     	movlb 0	; select bank0
  7572  04CB  0020               	movf	(Button_State_Pressed@button),w
  7573  04CC  0853               	addlw	09h
  7574  04CD  3E09               	movwf	fsr1l
  7575  04CE  0086               	clrf fsr1h	
  7576  04CF  0187               	
  7577                           	movf	indf1,w
  7578  04D0  0801               	xorlw	80h
  7579  04D1  3A80               	movwf	(??_Button_State_Pressed+0)+0
  7580  04D2  00D4               	movf	(Button_State_Pressed@button),w
  7581  04D3  0853               	addlw	0Eh
  7582  04D4  3E0E               	movwf	fsr1l
  7583  04D5  0086               	clrf fsr1h	
  7584  04D6  0187               	
  7585                           	asrf	indf1,w
  7586  04D7  3701               	xorlw	80h
  7587  04D8  3A80               	subwf	(??_Button_State_Pressed+0)+0
  7588  04D9  02D4               	skipnc
  7589  04DA  1803               	goto	u941
  7590  04DB  2CDD               	goto	u940
  7591  04DC  2CDE               u941:
  7592  04DD                     	goto	l419
  7593  04DD  2CF9               u940:
  7594  04DE                     	line	223
  7595                           	
  7596                           l1766:	
  7597  04DE                     ;mcc_generated_files/mtouch/mtouch_button.c: 222:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 223:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  7598                           	movf	(Button_State_Pressed@button),w
  7599  04DE  0853               	addlw	02h
  7600  04DF  3E02               	movwf	fsr1l
  7601  04E0  0086               	clrf fsr1h	
  7602  04E1  0187               	
  7603                           	clrf	indf1
  7604  04E2  0181               	incf	indf1,f
  7605  04E3  0A81               	line	224
  7606                           ;mcc_generated_files/mtouch/mtouch_button.c: 224:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7607                           	movf	(Button_State_Pressed@button),w
  7608  04E4  0853               	addlw	0Ah
  7609  04E5  3E0A               	movwf	fsr1l
  7610  04E6  0086               	clrf fsr1h	
  7611  04E7  0187               	
  7612                           	movlw	0
  7613  04E8  3000               	movwi	[0]fsr1
  7614  04E9  3FC0               	movwi	[1]fsr1
  7615  04EA  3FC1               	line	225
  7616                           	
  7617                           l1768:	
  7618  04EB                     ;mcc_generated_files/mtouch/mtouch_button.c: 225:         callback_notPressed(button->na
                                 me);
  7619                           	movf	(Button_State_Pressed@button),w
  7620  04EB  0853               	movwf	fsr1l
  7621  04EC  0086               	clrf fsr1h	
  7622  04ED  0187               	
  7623                           	movf	indf1,w
  7624  04EE  0801               	movwf	(??_Button_State_Pressed+0)+0
  7625  04EF  00D4               	movf	(??_Button_State_Pressed+0)+0,w
  7626  04F0  0854               	movwf	(Button_DefaultCallback@button)
  7627  04F1  00C6               	movf	(_callback_notPressed+1),w
  7628  04F2  0827               	movwf	pclath
  7629  04F3  008A               	movf	(_callback_notPressed),w
  7630  04F4  0826               	callw
  7631  04F5  000A               	pagesel	$
  7632  04F6  3184               	goto	l419
  7633  04F7  2CF9               	line	226
  7634                           ;mcc_generated_files/mtouch/mtouch_button.c: 226:     }
  7635                           	
  7636                           l418:	
  7637  04F8                     	goto	l419
  7638  04F8  2CF9               	
  7639                           l417:	
  7640  04F9                     	line	227
  7641                           	
  7642                           l419:	
  7643  04F9                     	return
  7644  04F9  0008               	opt stack 0
  7645                           GLOBAL	__end_of_Button_State_Pressed
  7646                           	__end_of_Button_State_Pressed:
  7647  04FA                     	signat	_Button_State_Pressed,4217
  7648                           	global	_Button_DefaultCallback
  7649                           
  7650 ;; *************** function _Button_DefaultCallback *****************
  7651 ;; Defined at:
  7652 ;;		line 397 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7653 ;; Parameters:    Size  Location     Type
  7654 ;;  button          1    0[BANK0 ] enum E2327
  7655 ;; Auto vars:     Size  Location     Type
  7656 ;;		None
  7657 ;; Return value:  Size  Location     Type
  7658 ;;                  1    wreg      void 
  7659 ;; Registers used:
  7660 ;;		None
  7661 ;; Tracked objects:
  7662 ;;		On entry : 0/0
  7663 ;;		On exit  : 0/0
  7664 ;;		Unchanged: 0/0
  7665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7666 ;;      Params:         0       1       0       0
  7667 ;;      Locals:         0       0       0       0
  7668 ;;      Temps:          0       0       0       0
  7669 ;;      Totals:         0       1       0       0
  7670 ;;Total ram usage:        1 bytes
  7671 ;; Hardware stack levels used:    1
  7672 ;; Hardware stack levels required when called:    4
  7673 ;; This function calls:
  7674 ;;		Nothing
  7675 ;; This function is called by:
  7676 ;;		_Button_State_NotPressed
  7677 ;;		_Button_State_Pressed
  7678 ;; This function uses a non-reentrant model
  7679 ;;
  7680                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
  7681                           	line	397
  7682                           global __ptext36
  7683                           __ptext36:	;psect for function _Button_DefaultCallback
  7684  07DC                     psect	text36
  7685                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7686                           	line	397
  7687                           	global	__size_of_Button_DefaultCallback
  7688                           	__size_of_Button_DefaultCallback	equ	__end_of_Button_DefaultCallback-_Button_DefaultCal
                                 lback
  7689  0001                     	
  7690                           _Button_DefaultCallback:	
  7691  07DC                     ;incstack = 0
  7692                           	opt	stack 7
  7693                           ; Regs used in _Button_DefaultCallback: []
  7694                           	
  7695                           l480:	
  7696  07DC                     	return
  7697  07DC  0008               	opt stack 0
  7698                           GLOBAL	__end_of_Button_DefaultCallback
  7699                           	__end_of_Button_DefaultCallback:
  7700  07DD                     	signat	_Button_DefaultCallback,4217
  7701                           	global	_Button_Baseline_Update
  7702                           
  7703 ;; *************** function _Button_Baseline_Update *****************
  7704 ;; Defined at:
  7705 ;;		line 363 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7706 ;; Parameters:    Size  Location     Type
  7707 ;;  button          1    wreg     PTR struct .
  7708 ;;		 -> mtouch_button(16), 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;  button          1    6[BANK0 ] PTR struct .
  7711 ;;		 -> mtouch_button(16), 
  7712 ;; Return value:  Size  Location     Type
  7713 ;;                  1    wreg      void 
  7714 ;; Registers used:
  7715 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7716 ;; Tracked objects:
  7717 ;;		On entry : 0/0
  7718 ;;		On exit  : 0/0
  7719 ;;		Unchanged: 0/0
  7720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7721 ;;      Params:         0       0       0       0
  7722 ;;      Locals:         0       1       0       0
  7723 ;;      Temps:          0       6       0       0
  7724 ;;      Totals:         0       7       0       0
  7725 ;;Total ram usage:        7 bytes
  7726 ;; Hardware stack levels used:    1
  7727 ;; Hardware stack levels required when called:    4
  7728 ;; This function calls:
  7729 ;;		Nothing
  7730 ;; This function is called by:
  7731 ;;		_Button_State_Initializing
  7732 ;;		_Button_State_NotPressed
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
  7736                           	line	363
  7737                           global __ptext37
  7738                           __ptext37:	;psect for function _Button_Baseline_Update
  7739  0204                     psect	text37
  7740                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7741                           	line	363
  7742                           	global	__size_of_Button_Baseline_Update
  7743                           	__size_of_Button_Baseline_Update	equ	__end_of_Button_Baseline_Update-_Button_Baseline_U
                                 pdate
  7744  008B                     	
  7745                           _Button_Baseline_Update:	
  7746  0204                     ;incstack = 0
  7747                           	opt	stack 7
  7748                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  7749                           ;Button_Baseline_Update@button stored from wreg
  7750                           	movlb 0	; select bank0
  7751  0204  0020               	movwf	(Button_Baseline_Update@button)
  7752  0205  00CC               	line	365
  7753                           	
  7754                           l1644:	
  7755  0206                     ;mcc_generated_files/mtouch/mtouch_button.c: 363: static void Button_Baseline_Update(mto
                                 uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 364: {;mcc_generated_f
                                 iles/mtouch/mtouch_button.c: 365:     if (GIE == (uint8_t)1)
  7756                           	btfss	(95/8),(95)&7	;volatile
  7757  0206  1F8B               	goto	u741
  7758  0207  2A09               	goto	u740
  7759  0208  2A0A               u741:
  7760  0209                     	goto	l1652
  7761  0209  2A4D               u740:
  7762  020A                     	line	367
  7763                           	
  7764                           l1646:	
  7765  020A                     ;mcc_generated_files/mtouch/mtouch_button.c: 366:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 367:         GIE = (uint8_t)0;
  7766                           	bcf	(95/8),(95)&7	;volatile
  7767  020A  138B               	line	368
  7768                           	
  7769                           l1648:	
  7770  020B                     ;mcc_generated_files/mtouch/mtouch_button.c: 368:         button->baseline -= (button->b
                                 aseline) >> ((uint8_t)4);
  7771                           	movf	(Button_Baseline_Update@button),w
  7772  020B  084C               	addlw	05h
  7773  020C  3E05               	movwf	fsr1l
  7774  020D  0086               	clrf fsr1h	
  7775  020E  0187               	
  7776                           	moviw	[0]fsr1
  7777  020F  3F40               	movwf	((??_Button_Baseline_Update+0)+0+0)
  7778  0210  00C6               	moviw	[1]fsr1
  7779  0211  3F41               	movwf	((??_Button_Baseline_Update+0)+0+1)
  7780  0212  00C7               	moviw	[2]fsr1
  7781  0213  3F42               	movwf	((??_Button_Baseline_Update+0)+0+2)
  7782  0214  00C8               	moviw	[3]fsr1
  7783  0215  3F43               	movwf	((??_Button_Baseline_Update+0)+0+3)
  7784  0216  00C9               	movlw	04h
  7785  0217  3004               u755:
  7786  0218                     	lsrf	(??_Button_Baseline_Update+0)+3,f
  7787  0218  36C9               	rrf	(??_Button_Baseline_Update+0)+2,f
  7788  0219  0CC8               	rrf	(??_Button_Baseline_Update+0)+1,f
  7789  021A  0CC7               	rrf	(??_Button_Baseline_Update+0)+0,f
  7790  021B  0CC6               u750:
  7791  021C                     	decfsz	wreg,f
  7792  021C  0B89               	goto	u755
  7793  021D  2A18               	movf	(Button_Baseline_Update@button),w
  7794  021E  084C               	addlw	05h
  7795  021F  3E05               	movwf	fsr1l
  7796  0220  0086               	clrf fsr1h	
  7797  0221  0187               	
  7798                           	movf	0+(??_Button_Baseline_Update+0)+0,w
  7799  0222  0846               	subwf	indf1,f
  7800  0223  0281               	addfsr	fsr1,1
  7801  0224  3141               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7802  0225  0847               	subwfb	indf1,f
  7803  0226  3B81               	addfsr	fsr1,1
  7804  0227  3141               	movf	2+(??_Button_Baseline_Update+0)+0,w
  7805  0228  0848               	subwfb	indf1,f
  7806  0229  3B81               	addfsr	fsr1,1
  7807  022A  3141               	movf	3+(??_Button_Baseline_Update+0)+0,w
  7808  022B  0849               	subwfb	indf1,f
  7809  022C  3B81               	addfsr	fsr1,-3
  7810  022D  317D               	line	369
  7811                           ;mcc_generated_files/mtouch/mtouch_button.c: 369:         button->baseline += button->re
                                 ading;
  7812                           	movf	(Button_Baseline_Update@button),w
  7813  022E  084C               	addlw	03h
  7814  022F  3E03               	movwf	fsr1l
  7815  0230  0086               	clrf fsr1h	
  7816  0231  0187               	
  7817                           	moviw	[0]fsr1
  7818  0232  3F40               	movwf	(??_Button_Baseline_Update+0)+0
  7819  0233  00C6               	moviw	[1]fsr1
  7820  0234  3F41               	movwf	(??_Button_Baseline_Update+0)+0+1
  7821  0235  00C7               	movf	0+(??_Button_Baseline_Update+0)+0,w
  7822  0236  0846               	movwf	((??_Button_Baseline_Update+2)+0)
  7823  0237  00C8               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7824  0238  0847               	movwf	((??_Button_Baseline_Update+2)+0+1)
  7825  0239  00C9               	clrf	((??_Button_Baseline_Update+2)+0+2)
  7826  023A  01CA               	clrf	((??_Button_Baseline_Update+2)+0+3)
  7827  023B  01CB               	movf	(Button_Baseline_Update@button),w
  7828  023C  084C               	addlw	05h
  7829  023D  3E05               	movwf	fsr1l
  7830  023E  0086               	clrf fsr1h	
  7831  023F  0187               	
  7832                           	movf	0+(??_Button_Baseline_Update+2)+0,w
  7833  0240  0848               	addwf	indf1,f
  7834  0241  0781               	addfsr	fsr1,1
  7835  0242  3141               	movf	1+(??_Button_Baseline_Update+2)+0,w
  7836  0243  0849               	addwfc	indf1,f
  7837  0244  3D81               	addfsr	fsr1,1
  7838  0245  3141               	movf	2+(??_Button_Baseline_Update+2)+0,w
  7839  0246  084A               	addwfc	indf1,f
  7840  0247  3D81               	addfsr	fsr1,1
  7841  0248  3141               	movf	3+(??_Button_Baseline_Update+2)+0,w
  7842  0249  084B               	addwfc	indf1,f
  7843  024A  3D81               
  7844                           	line	370
  7845                           	
  7846                           l1650:	
  7847  024B                     ;mcc_generated_files/mtouch/mtouch_button.c: 370:         GIE = (uint8_t)1;
  7848                           	bsf	(95/8),(95)&7	;volatile
  7849  024B  178B               	line	371
  7850                           ;mcc_generated_files/mtouch/mtouch_button.c: 371:     }
  7851                           	goto	l471
  7852  024C  2A8E               	line	372
  7853                           ;mcc_generated_files/mtouch/mtouch_button.c: 372:     else
  7854                           	
  7855                           l469:	
  7856  024D                     	line	374
  7857                           	
  7858                           l1652:	
  7859  024D                     ;mcc_generated_files/mtouch/mtouch_button.c: 373:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 374:         button->baseline -= (button->baseline) >> ((uint8_t)4);
  7860                           	movf	(Button_Baseline_Update@button),w
  7861  024D  084C               	addlw	05h
  7862  024E  3E05               	movwf	fsr1l
  7863  024F  0086               	clrf fsr1h	
  7864  0250  0187               	
  7865                           	moviw	[0]fsr1
  7866  0251  3F40               	movwf	((??_Button_Baseline_Update+0)+0+0)
  7867  0252  00C6               	moviw	[1]fsr1
  7868  0253  3F41               	movwf	((??_Button_Baseline_Update+0)+0+1)
  7869  0254  00C7               	moviw	[2]fsr1
  7870  0255  3F42               	movwf	((??_Button_Baseline_Update+0)+0+2)
  7871  0256  00C8               	moviw	[3]fsr1
  7872  0257  3F43               	movwf	((??_Button_Baseline_Update+0)+0+3)
  7873  0258  00C9               	movlw	04h
  7874  0259  3004               u765:
  7875  025A                     	lsrf	(??_Button_Baseline_Update+0)+3,f
  7876  025A  36C9               	rrf	(??_Button_Baseline_Update+0)+2,f
  7877  025B  0CC8               	rrf	(??_Button_Baseline_Update+0)+1,f
  7878  025C  0CC7               	rrf	(??_Button_Baseline_Update+0)+0,f
  7879  025D  0CC6               u760:
  7880  025E                     	decfsz	wreg,f
  7881  025E  0B89               	goto	u765
  7882  025F  2A5A               	movf	(Button_Baseline_Update@button),w
  7883  0260  084C               	addlw	05h
  7884  0261  3E05               	movwf	fsr1l
  7885  0262  0086               	clrf fsr1h	
  7886  0263  0187               	
  7887                           	movf	0+(??_Button_Baseline_Update+0)+0,w
  7888  0264  0846               	subwf	indf1,f
  7889  0265  0281               	addfsr	fsr1,1
  7890  0266  3141               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7891  0267  0847               	subwfb	indf1,f
  7892  0268  3B81               	addfsr	fsr1,1
  7893  0269  3141               	movf	2+(??_Button_Baseline_Update+0)+0,w
  7894  026A  0848               	subwfb	indf1,f
  7895  026B  3B81               	addfsr	fsr1,1
  7896  026C  3141               	movf	3+(??_Button_Baseline_Update+0)+0,w
  7897  026D  0849               	subwfb	indf1,f
  7898  026E  3B81               	addfsr	fsr1,-3
  7899  026F  317D               	line	375
  7900                           ;mcc_generated_files/mtouch/mtouch_button.c: 375:         button->baseline += button->re
                                 ading;
  7901                           	movf	(Button_Baseline_Update@button),w
  7902  0270  084C               	addlw	03h
  7903  0271  3E03               	movwf	fsr1l
  7904  0272  0086               	clrf fsr1h	
  7905  0273  0187               	
  7906                           	moviw	[0]fsr1
  7907  0274  3F40               	movwf	(??_Button_Baseline_Update+0)+0
  7908  0275  00C6               	moviw	[1]fsr1
  7909  0276  3F41               	movwf	(??_Button_Baseline_Update+0)+0+1
  7910  0277  00C7               	movf	0+(??_Button_Baseline_Update+0)+0,w
  7911  0278  0846               	movwf	((??_Button_Baseline_Update+2)+0)
  7912  0279  00C8               	movf	1+(??_Button_Baseline_Update+0)+0,w
  7913  027A  0847               	movwf	((??_Button_Baseline_Update+2)+0+1)
  7914  027B  00C9               	clrf	((??_Button_Baseline_Update+2)+0+2)
  7915  027C  01CA               	clrf	((??_Button_Baseline_Update+2)+0+3)
  7916  027D  01CB               	movf	(Button_Baseline_Update@button),w
  7917  027E  084C               	addlw	05h
  7918  027F  3E05               	movwf	fsr1l
  7919  0280  0086               	clrf fsr1h	
  7920  0281  0187               	
  7921                           	movf	0+(??_Button_Baseline_Update+2)+0,w
  7922  0282  0848               	addwf	indf1,f
  7923  0283  0781               	addfsr	fsr1,1
  7924  0284  3141               	movf	1+(??_Button_Baseline_Update+2)+0,w
  7925  0285  0849               	addwfc	indf1,f
  7926  0286  3D81               	addfsr	fsr1,1
  7927  0287  3141               	movf	2+(??_Button_Baseline_Update+2)+0,w
  7928  0288  084A               	addwfc	indf1,f
  7929  0289  3D81               	addfsr	fsr1,1
  7930  028A  3141               	movf	3+(??_Button_Baseline_Update+2)+0,w
  7931  028B  084B               	addwfc	indf1,f
  7932  028C  3D81               
  7933                           	goto	l471
  7934  028D  2A8E               	line	376
  7935                           ;mcc_generated_files/mtouch/mtouch_button.c: 376:     }
  7936                           	
  7937                           l470:	
  7938  028E                     	line	377
  7939                           	
  7940                           l471:	
  7941  028E                     	return
  7942  028E  0008               	opt stack 0
  7943                           GLOBAL	__end_of_Button_Baseline_Update
  7944                           	__end_of_Button_Baseline_Update:
  7945  028F                     	signat	_Button_Baseline_Update,4217
  7946                           	global	_Button_Baseline_Initialize
  7947                           
  7948 ;; *************** function _Button_Baseline_Initialize *****************
  7949 ;; Defined at:
  7950 ;;		line 357 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  button          1    wreg     PTR struct .
  7953 ;;		 -> mtouch_button(16), 
  7954 ;; Auto vars:     Size  Location     Type
  7955 ;;  button          1   12[BANK0 ] PTR struct .
  7956 ;;		 -> mtouch_button(16), 
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  1    wreg      void 
  7959 ;; Registers used:
  7960 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7966 ;;      Params:         0       0       0       0
  7967 ;;      Locals:         0       1       0       0
  7968 ;;      Temps:          0       4       0       0
  7969 ;;      Totals:         0       5       0       0
  7970 ;;Total ram usage:        5 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; Hardware stack levels required when called:    6
  7973 ;; This function calls:
  7974 ;;		_MTOUCH_Sensor_RawSample_Get
  7975 ;; This function is called by:
  7976 ;;		_Button_State_Initializing
  7977 ;; This function uses a non-reentrant model
  7978 ;;
  7979                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
  7980                           	line	357
  7981                           global __ptext38
  7982                           __ptext38:	;psect for function _Button_Baseline_Initialize
  7983  057E                     psect	text38
  7984                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7985                           	line	357
  7986                           	global	__size_of_Button_Baseline_Initialize
  7987                           	__size_of_Button_Baseline_Initialize	equ	__end_of_Button_Baseline_Initialize-_Button_Ba
                                 seline_Initialize
  7988  002C                     	
  7989                           _Button_Baseline_Initialize:	
  7990  057E                     ;incstack = 0
  7991                           	opt	stack 5
  7992                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
                                 stack]
  7993                           ;Button_Baseline_Initialize@button stored from wreg
  7994                           	movlb 0	; select bank0
  7995  057E  0020               	movwf	(Button_Baseline_Initialize@button)
  7996  057F  00D2               	line	359
  7997                           	
  7998                           l1640:	
  7999  0580                     ;mcc_generated_files/mtouch/mtouch_button.c: 357: static void Button_Baseline_Initialize
                                 (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 358: {;mcc_generat
                                 ed_files/mtouch/mtouch_button.c: 359:     button->baseline = MTOUCH_Sensor_RawSample_Get
                                 (button->sensor);
  8000                           	incf	(Button_Baseline_Initialize@button),w
  8001  0580  0A52               	movwf	fsr1l
  8002  0581  0086               	clrf fsr1h	
  8003  0582  0187               	
  8004                           	movf	indf1,w
  8005  0583  0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8006  0584  3186  26E7  3185   	movlb 0	; select bank0
  8007  0587  0020               	movf	(0+(?_MTOUCH_Sensor_RawSample_Get)),w
  8008  0588  084A               	movwf	((??_Button_Baseline_Initialize+0)+0)
  8009  0589  00CE               	movf	(1+(?_MTOUCH_Sensor_RawSample_Get)),w
  8010  058A  084B               	movwf	((??_Button_Baseline_Initialize+0)+0+1)
  8011  058B  00CF               	clrf	((??_Button_Baseline_Initialize+0)+0+2)
  8012  058C  01D0               	clrf	((??_Button_Baseline_Initialize+0)+0+3)
  8013  058D  01D1               	movf	(Button_Baseline_Initialize@button),w
  8014  058E  0852               	addlw	05h
  8015  058F  3E05               	movwf	fsr1l
  8016  0590  0086               	clrf fsr1h	
  8017  0591  0187               	
  8018                           	movf	0+(??_Button_Baseline_Initialize+0)+0,w
  8019  0592  084E               	movwi	[0]fsr1
  8020  0593  3FC0               	movf	1+(??_Button_Baseline_Initialize+0)+0,w
  8021  0594  084F               	movwi	[1]fsr1
  8022  0595  3FC1               	movf	2+(??_Button_Baseline_Initialize+0)+0,w
  8023  0596  0850               	movwi	[2]fsr1
  8024  0597  3FC2               	movf	3+(??_Button_Baseline_Initialize+0)+0,w
  8025  0598  0851               	movwi	[3]fsr1
  8026  0599  3FC3               	line	360
  8027                           	
  8028                           l1642:	
  8029  059A                     ;mcc_generated_files/mtouch/mtouch_button.c: 360:     button->baseline <<= ((uint8_t)4);
                                 
  8030                           	movf	(Button_Baseline_Initialize@button),w
  8031  059A  0852               	addlw	05h
  8032  059B  3E05               	movwf	fsr1l
  8033  059C  0086               	clrf fsr1h	
  8034  059D  0187               	
  8035                           	movlw	04h
  8036  059E  3004               u735:
  8037  059F                     	lslf	indf1,f
  8038  059F  3581               	addfsr	fsr1,1
  8039  05A0  3141               	rlf	indf1,f
  8040  05A1  0D81               	addfsr	fsr1,1
  8041  05A2  3141               	rlf	indf1,f
  8042  05A3  0D81               	addfsr	fsr1,1
  8043  05A4  3141               	rlf	indf1,f
  8044  05A5  0D81               	addfsr	fsr1,-3
  8045  05A6  317D               	decfsz	wreg,f
  8046  05A7  0B89               	goto	u735
  8047  05A8  2D9F               	line	361
  8048                           	
  8049                           l466:	
  8050  05A9                     	return
  8051  05A9  0008               	opt stack 0
  8052                           GLOBAL	__end_of_Button_Baseline_Initialize
  8053                           	__end_of_Button_Baseline_Initialize:
  8054  05AA                     	signat	_Button_Baseline_Initialize,4217
  8055                           	global	_Button_Reading_Update
  8056                           
  8057 ;; *************** function _Button_Reading_Update *****************
  8058 ;; Defined at:
  8059 ;;		line 341 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  button          1    wreg     PTR struct .
  8062 ;;		 -> mtouch_button(16), 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  button          1   10[BANK0 ] PTR struct .
  8065 ;;		 -> mtouch_button(16), 
  8066 ;; Return value:  Size  Location     Type
  8067 ;;                  1    wreg      void 
  8068 ;; Registers used:
  8069 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8070 ;; Tracked objects:
  8071 ;;		On entry : 0/0
  8072 ;;		On exit  : 0/0
  8073 ;;		Unchanged: 0/0
  8074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8075 ;;      Params:         0       0       0       0
  8076 ;;      Locals:         0       1       0       0
  8077 ;;      Temps:          0       2       0       0
  8078 ;;      Totals:         0       3       0       0
  8079 ;;Total ram usage:        3 bytes
  8080 ;; Hardware stack levels used:    1
  8081 ;; Hardware stack levels required when called:    6
  8082 ;; This function calls:
  8083 ;;		_MTOUCH_Sensor_RawSample_Get
  8084 ;; This function is called by:
  8085 ;;		_Button_Service
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
  8089                           	line	341
  8090                           global __ptext39
  8091                           __ptext39:	;psect for function _Button_Reading_Update
  8092  0318                     psect	text39
  8093                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8094                           	line	341
  8095                           	global	__size_of_Button_Reading_Update
  8096                           	__size_of_Button_Reading_Update	equ	__end_of_Button_Reading_Update-_Button_Reading_Upda
                                 te
  8097  006B                     	
  8098                           _Button_Reading_Update:	
  8099  0318                     ;incstack = 0
  8100                           	opt	stack 6
  8101                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
                                 ]
  8102                           ;Button_Reading_Update@button stored from wreg
  8103                           	movlb 0	; select bank0
  8104  0318  0020               	movwf	(Button_Reading_Update@button)
  8105  0319  00D0               	line	343
  8106                           	
  8107                           l1704:	
  8108  031A                     ;mcc_generated_files/mtouch/mtouch_button.c: 341: static void Button_Reading_Update(mtou
                                 ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 342: {;mcc_generated_fi
                                 les/mtouch/mtouch_button.c: 343:     if (GIE == (uint8_t)1)
  8109                           	btfss	(95/8),(95)&7	;volatile
  8110  031A  1F8B               	goto	u811
  8111  031B  2B1D               	goto	u810
  8112  031C  2B1E               u811:
  8113  031D                     	goto	l1714
  8114  031D  2B51               u810:
  8115  031E                     	line	345
  8116                           	
  8117                           l1706:	
  8118  031E                     ;mcc_generated_files/mtouch/mtouch_button.c: 344:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 345:         GIE = (uint8_t)0;
  8119                           	bcf	(95/8),(95)&7	;volatile
  8120  031E  138B               	line	346
  8121                           	
  8122                           l1708:	
  8123  031F                     ;mcc_generated_files/mtouch/mtouch_button.c: 346:         button->reading -= button->rea
                                 ding>>(uint8_t)2;
  8124                           	movf	(Button_Reading_Update@button),w
  8125  031F  0850               	addlw	03h
  8126  0320  3E03               	movwf	fsr1l
  8127  0321  0086               	clrf fsr1h	
  8128  0322  0187               	
  8129                           	moviw	[0]fsr1
  8130  0323  3F40               	movwf	(??_Button_Reading_Update+0)+0
  8131  0324  00CE               	moviw	[1]fsr1
  8132  0325  3F41               	movwf	(??_Button_Reading_Update+0)+0+1
  8133  0326  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8134  0327  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8135  0328  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8136  0329  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8137  032A  0CCE               	movf	(Button_Reading_Update@button),w
  8138  032B  0850               	addlw	03h
  8139  032C  3E03               	movwf	fsr1l
  8140  032D  0086               	clrf fsr1h	
  8141  032E  0187               	
  8142                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8143  032F  084E               	subwf	indf1,f
  8144  0330  0281               	addfsr	fsr1,1
  8145  0331  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8146  0332  084F               	subwfb	indf1,f
  8147  0333  3B81               	addfsr	fsr1,-1
  8148  0334  317F               	line	347
  8149                           	
  8150                           l1710:	
  8151  0335                     ;mcc_generated_files/mtouch/mtouch_button.c: 347:         button->reading += MTOUCH_Sens
                                 or_RawSample_Get(button->sensor)>>(uint8_t)2;
  8152                           	incf	(Button_Reading_Update@button),w
  8153  0335  0A50               	movwf	fsr1l
  8154  0336  0086               	clrf fsr1h	
  8155  0337  0187               	
  8156                           	movf	indf1,w
  8157  0338  0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8158  0339  3186  26E7  3183   	movlb 0	; select bank0
  8159  033C  0020               	movf	(0+?_MTOUCH_Sensor_RawSample_Get),w
  8160  033D  084A               	movwf	(??_Button_Reading_Update+0)+0
  8161  033E  00CE               	movf	(1+?_MTOUCH_Sensor_RawSample_Get),w
  8162  033F  084B               	movwf	((??_Button_Reading_Update+0)+0+1)
  8163  0340  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8164  0341  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8165  0342  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8166  0343  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8167  0344  0CCE               	movf	(Button_Reading_Update@button),w
  8168  0345  0850               	addlw	03h
  8169  0346  3E03               	movwf	fsr1l
  8170  0347  0086               	clrf fsr1h	
  8171  0348  0187               	
  8172                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8173  0349  084E               	addwf	indf1,f
  8174  034A  0781               	addfsr	fsr1,1
  8175  034B  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8176  034C  084F               	addwfc	indf1,f
  8177  034D  3D81               	addfsr	fsr1,-1
  8178  034E  317F               	line	348
  8179                           	
  8180                           l1712:	
  8181  034F                     ;mcc_generated_files/mtouch/mtouch_button.c: 348:         GIE = (uint8_t)1;
  8182                           	bsf	(95/8),(95)&7	;volatile
  8183  034F  178B               	line	349
  8184                           ;mcc_generated_files/mtouch/mtouch_button.c: 349:     }
  8185                           	goto	l463
  8186  0350  2B82               	line	350
  8187                           ;mcc_generated_files/mtouch/mtouch_button.c: 350:     else
  8188                           	
  8189                           l461:	
  8190  0351                     	line	352
  8191                           	
  8192                           l1714:	
  8193  0351                     ;mcc_generated_files/mtouch/mtouch_button.c: 351:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 352:         button->reading -= button->reading>>(uint8_t)2;
  8194                           	movf	(Button_Reading_Update@button),w
  8195  0351  0850               	addlw	03h
  8196  0352  3E03               	movwf	fsr1l
  8197  0353  0086               	clrf fsr1h	
  8198  0354  0187               	
  8199                           	moviw	[0]fsr1
  8200  0355  3F40               	movwf	(??_Button_Reading_Update+0)+0
  8201  0356  00CE               	moviw	[1]fsr1
  8202  0357  3F41               	movwf	(??_Button_Reading_Update+0)+0+1
  8203  0358  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8204  0359  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8205  035A  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8206  035B  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8207  035C  0CCE               	movf	(Button_Reading_Update@button),w
  8208  035D  0850               	addlw	03h
  8209  035E  3E03               	movwf	fsr1l
  8210  035F  0086               	clrf fsr1h	
  8211  0360  0187               	
  8212                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8213  0361  084E               	subwf	indf1,f
  8214  0362  0281               	addfsr	fsr1,1
  8215  0363  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8216  0364  084F               	subwfb	indf1,f
  8217  0365  3B81               	addfsr	fsr1,-1
  8218  0366  317F               	line	353
  8219                           	
  8220                           l1716:	
  8221  0367                     ;mcc_generated_files/mtouch/mtouch_button.c: 353:         button->reading += MTOUCH_Sens
                                 or_RawSample_Get(button->sensor)>>(uint8_t)2;
  8222                           	incf	(Button_Reading_Update@button),w
  8223  0367  0A50               	movwf	fsr1l
  8224  0368  0086               	clrf fsr1h	
  8225  0369  0187               	
  8226                           	movf	indf1,w
  8227  036A  0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8228  036B  3186  26E7  3183   	movlb 0	; select bank0
  8229  036E  0020               	movf	(0+?_MTOUCH_Sensor_RawSample_Get),w
  8230  036F  084A               	movwf	(??_Button_Reading_Update+0)+0
  8231  0370  00CE               	movf	(1+?_MTOUCH_Sensor_RawSample_Get),w
  8232  0371  084B               	movwf	((??_Button_Reading_Update+0)+0+1)
  8233  0372  00CF               	lsrf	(??_Button_Reading_Update+0)+1,f
  8234  0373  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8235  0374  0CCE               	lsrf	(??_Button_Reading_Update+0)+1,f
  8236  0375  36CF               	rrf	(??_Button_Reading_Update+0)+0,f
  8237  0376  0CCE               	movf	(Button_Reading_Update@button),w
  8238  0377  0850               	addlw	03h
  8239  0378  3E03               	movwf	fsr1l
  8240  0379  0086               	clrf fsr1h	
  8241  037A  0187               	
  8242                           	movf	0+(??_Button_Reading_Update+0)+0,w
  8243  037B  084E               	addwf	indf1,f
  8244  037C  0781               	addfsr	fsr1,1
  8245  037D  3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  8246  037E  084F               	addwfc	indf1,f
  8247  037F  3D81               	addfsr	fsr1,-1
  8248  0380  317F               	goto	l463
  8249  0381  2B82               	line	354
  8250                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     }
  8251                           	
  8252                           l462:	
  8253  0382                     	line	355
  8254                           	
  8255                           l463:	
  8256  0382                     	return
  8257  0382  0008               	opt stack 0
  8258                           GLOBAL	__end_of_Button_Reading_Update
  8259                           	__end_of_Button_Reading_Update:
  8260  0383                     	signat	_Button_Reading_Update,4217
  8261                           	global	_MTOUCH_Sensor_RawSample_Get
  8262                           
  8263 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  8264 ;; Defined at:
  8265 ;;		line 392 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;  name            1    wreg     enum E2110
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;  name            1    7[BANK0 ] enum E2110
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  2    4[BANK0 ] unsigned short 
  8272 ;; Registers used:
  8273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8279 ;;      Params:         0       2       0       0
  8280 ;;      Locals:         0       1       0       0
  8281 ;;      Temps:          0       1       0       0
  8282 ;;      Totals:         0       4       0       0
  8283 ;;Total ram usage:        4 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    5
  8286 ;; This function calls:
  8287 ;;		___bmul
  8288 ;; This function is called by:
  8289 ;;		_Button_Reading_Update
  8290 ;;		_Button_Baseline_Initialize
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
  8294                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  8295                           	line	392
  8296                           global __ptext40
  8297                           __ptext40:	;psect for function _MTOUCH_Sensor_RawSample_Get
  8298  06E7                     psect	text40
  8299                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  8300                           	line	392
  8301                           	global	__size_of_MTOUCH_Sensor_RawSample_Get
  8302                           	__size_of_MTOUCH_Sensor_RawSample_Get	equ	__end_of_MTOUCH_Sensor_RawSample_Get-_MTOUCH_
                                 Sensor_RawSample_Get
  8303  0015                     	
  8304                           _MTOUCH_Sensor_RawSample_Get:	
  8305  06E7                     ;incstack = 0
  8306                           	opt	stack 5
  8307                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
                                 cstack]
  8308                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  8309                           	movlb 0	; select bank0
  8310  06E7  0020               	movwf	(MTOUCH_Sensor_RawSample_Get@name)
  8311  06E8  00CD               	line	395
  8312                           	
  8313                           l1586:	
  8314  06E9                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 392: mtouch_sensor_sample_t MTOUCH_Sensor_R
                                 awSample_Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 393: {;mcc_generated_files/mtouch/mtouch_sensor.c: 395:         return mtouch_sensor[nam
                                 e].rawSample;
  8315                           	movlw	low(09h)
  8316  06E9  3009               	movwf	(??_MTOUCH_Sensor_RawSample_Get+0)+0
  8317  06EA  00CC               	movf	(??_MTOUCH_Sensor_RawSample_Get+0)+0,w
  8318  06EB  084C               	movwf	(___bmul@multiplicand)
  8319  06EC  00C6               	movf	(MTOUCH_Sensor_RawSample_Get@name),w
  8320  06ED  084D               	fcall	___bmul
  8321  06EE  3186  2686  3186   	addlw	06h
  8322  06F1  3E06               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  8323  06F2  3E3D               	movwf	fsr1l
  8324  06F3  0086               	clrf fsr1h	
  8325  06F4  0187               	
  8326                           	moviw	[0]fsr1
  8327  06F5  3F40               	movlb 0	; select bank0
  8328  06F6  0020               	movwf	(?_MTOUCH_Sensor_RawSample_Get)
  8329  06F7  00CA               	moviw	[1]fsr1
  8330  06F8  3F41               	movwf	(?_MTOUCH_Sensor_RawSample_Get+1)
  8331  06F9  00CB               	goto	l292
  8332  06FA  2EFB               	
  8333                           l1588:	
  8334  06FB                     	line	397
  8335                           	
  8336                           l292:	
  8337  06FB                     	return
  8338  06FB  0008               	opt stack 0
  8339                           GLOBAL	__end_of_MTOUCH_Sensor_RawSample_Get
  8340                           	__end_of_MTOUCH_Sensor_RawSample_Get:
  8341  06FC                     	signat	_MTOUCH_Sensor_RawSample_Get,4218
  8342                           	global	___bmul
  8343                           
  8344 ;; *************** function ___bmul *****************
  8345 ;; Defined at:
  8346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  multiplier      1    wreg     unsigned char 
  8349 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  multiplier      1    3[BANK0 ] unsigned char 
  8352 ;;  product         1    2[BANK0 ] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8362 ;;      Params:         0       1       0       0
  8363 ;;      Locals:         0       2       0       0
  8364 ;;      Temps:          0       1       0       0
  8365 ;;      Totals:         0       4       0       0
  8366 ;;Total ram usage:        4 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    4
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_Sensor_Service
  8373 ;;		_Sensor_Acq_ExecuteScan
  8374 ;;		_MTOUCH_Sensor_RawSample_Get
  8375 ;;		_MTOUCH_Sensor_Enable
  8376 ;;		_MTOUCH_Sensor_wasSampled
  8377 ;;		_MTOUCH_Sensor_Disable
  8378 ;;		_MTOUCH_Sensor_isEnabled
  8379 ;;		_MTOUCH_Sensor_isActive
  8380 ;; This function uses a non-reentrant model
  8381 ;;
  8382                           psect	text41,local,class=CODE,delta=2,merge=1,group=1
  8383                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  8384                           	line	4
  8385                           global __ptext41
  8386                           __ptext41:	;psect for function ___bmul
  8387  0686                     psect	text41
  8388                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  8389                           	line	4
  8390                           	global	__size_of___bmul
  8391                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  8392  001A                     	
  8393                           ___bmul:	
  8394  0686                     ;incstack = 0
  8395                           	opt	stack 7
  8396                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  8397                           ;___bmul@multiplier stored from wreg
  8398                           	movlb 0	; select bank0
  8399  0686  0020               	movwf	(___bmul@multiplier)
  8400  0687  00C9               	line	6
  8401                           	
  8402                           l1528:	
  8403  0688                     	clrf	(___bmul@product)
  8404  0688  01C8               	goto	l1530
  8405  0689  2E8A               	line	42
  8406                           	
  8407                           l535:	
  8408  068A                     	line	43
  8409                           	
  8410                           l1530:	
  8411  068A                     	btfss	(___bmul@multiplier),(0)&7
  8412  068A  1C49               	goto	u601
  8413  068B  2E8D               	goto	u600
  8414  068C  2E8E               u601:
  8415  068D                     	goto	l1534
  8416  068D  2E93               u600:
  8417  068E                     	line	44
  8418                           	
  8419                           l1532:	
  8420  068E                     	movf	(___bmul@multiplicand),w
  8421  068E  0846               	movwf	(??___bmul+0)+0
  8422  068F  00C7               	movf	(??___bmul+0)+0,w
  8423  0690  0847               	addwf	(___bmul@product),f
  8424  0691  07C8               	goto	l1534
  8425  0692  2E93               	
  8426                           l536:	
  8427  0693                     	line	45
  8428                           	
  8429                           l1534:	
  8430  0693                     	clrc
  8431  0693  1003               	rlf	(___bmul@multiplicand),f
  8432  0694  0DC6               
  8433                           	line	46
  8434                           	
  8435                           l1536:	
  8436  0695                     	clrc
  8437  0695  1003               	rrf	(___bmul@multiplier),f
  8438  0696  0CC9               
  8439                           	line	47
  8440                           	movf	((___bmul@multiplier)),w
  8441  0697  0849               	btfss	status,2
  8442  0698  1D03               	goto	u611
  8443  0699  2E9B               	goto	u610
  8444  069A  2E9C               u611:
  8445  069B                     	goto	l1530
  8446  069B  2E8A               u610:
  8447  069C                     	goto	l1538
  8448  069C  2E9D               	
  8449                           l537:	
  8450  069D                     	line	50
  8451                           	
  8452                           l1538:	
  8453  069D                     	movf	(___bmul@product),w
  8454  069D  0848               	goto	l538
  8455  069E  2E9F               	
  8456                           l1540:	
  8457  069F                     	line	51
  8458                           	
  8459                           l538:	
  8460  069F                     	return
  8461  069F  0008               	opt stack 0
  8462                           GLOBAL	__end_of___bmul
  8463                           	__end_of___bmul:
  8464  06A0                     	signat	___bmul,8313
  8465                           	global	_Button_Deviation_Update
  8466                           
  8467 ;; *************** function _Button_Deviation_Update *****************
  8468 ;; Defined at:
  8469 ;;		line 296 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;  button          1    wreg     PTR struct .
  8472 ;;		 -> mtouch_button(16), 
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  button          1   10[BANK0 ] PTR struct .
  8475 ;;		 -> mtouch_button(16), 
  8476 ;;  deviation       4   11[BANK0 ] long 
  8477 ;; Return value:  Size  Location     Type
  8478 ;;                  1    wreg      void 
  8479 ;; Registers used:
  8480 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8481 ;; Tracked objects:
  8482 ;;		On entry : 0/0
  8483 ;;		On exit  : 0/0
  8484 ;;		Unchanged: 0/0
  8485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8486 ;;      Params:         0       0       0       0
  8487 ;;      Locals:         0       5       0       0
  8488 ;;      Temps:          0      10       0       0
  8489 ;;      Totals:         0      15       0       0
  8490 ;;Total ram usage:       15 bytes
  8491 ;; Hardware stack levels used:    1
  8492 ;; Hardware stack levels required when called:    4
  8493 ;; This function calls:
  8494 ;;		Nothing
  8495 ;; This function is called by:
  8496 ;;		_Button_Service
  8497 ;; This function uses a non-reentrant model
  8498 ;;
  8499                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
  8500                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8501                           	line	296
  8502                           global __ptext42
  8503                           __ptext42:	;psect for function _Button_Deviation_Update
  8504  00E2                     psect	text42
  8505                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8506                           	line	296
  8507                           	global	__size_of_Button_Deviation_Update
  8508                           	__size_of_Button_Deviation_Update	equ	__end_of_Button_Deviation_Update-_Button_Deviatio
                                 n_Update
  8509  0094                     	
  8510                           _Button_Deviation_Update:	
  8511  00E2                     ;incstack = 0
  8512                           	opt	stack 8
  8513                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8514                           ;Button_Deviation_Update@button stored from wreg
  8515                           	movlb 0	; select bank0
  8516  00E2  0020               	movwf	(Button_Deviation_Update@button)
  8517  00E3  00D0               	line	300
  8518                           	
  8519                           l1718:	
  8520  00E4                     ;mcc_generated_files/mtouch/mtouch_button.c: 296: static void Button_Deviation_Update(mt
                                 ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 297: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 298:     int32_t deviation;;mcc_generated_files/mtouch/mto
                                 uch_button.c: 300:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
                                 ton->baseline)>>((uint8_t)4)));
  8521                           	movf	(Button_Deviation_Update@button),w
  8522  00E4  0850               	addlw	05h
  8523  00E5  3E05               	movwf	fsr1l
  8524  00E6  0086               	clrf fsr1h	
  8525  00E7  0187               	
  8526                           	moviw	[0]fsr1
  8527  00E8  3F40               	movwf	((??_Button_Deviation_Update+0)+0+0)
  8528  00E9  00C6               	moviw	[1]fsr1
  8529  00EA  3F41               	movwf	((??_Button_Deviation_Update+0)+0+1)
  8530  00EB  00C7               	moviw	[2]fsr1
  8531  00EC  3F42               	movwf	((??_Button_Deviation_Update+0)+0+2)
  8532  00ED  00C8               	moviw	[3]fsr1
  8533  00EE  3F43               	movwf	((??_Button_Deviation_Update+0)+0+3)
  8534  00EF  00C9               	movlw	04h
  8535  00F0  3004               u825:
  8536  00F1                     	lsrf	(??_Button_Deviation_Update+0)+3,f
  8537  00F1  36C9               	rrf	(??_Button_Deviation_Update+0)+2,f
  8538  00F2  0CC8               	rrf	(??_Button_Deviation_Update+0)+1,f
  8539  00F3  0CC7               	rrf	(??_Button_Deviation_Update+0)+0,f
  8540  00F4  0CC6               u820:
  8541  00F5                     	decfsz	wreg,f
  8542  00F5  0B89               	goto	u825
  8543  00F6  28F1               	comf	(??_Button_Deviation_Update+0)+0,f
  8544  00F7  09C6               	comf	(??_Button_Deviation_Update+0)+1,f
  8545  00F8  09C7               	comf	(??_Button_Deviation_Update+0)+2,f
  8546  00F9  09C8               	comf	(??_Button_Deviation_Update+0)+3,f
  8547  00FA  09C9               	incf	(??_Button_Deviation_Update+0)+0,f
  8548  00FB  0AC6               	skipnz
  8549  00FC  1903               	incf	(??_Button_Deviation_Update+0)+1,f
  8550  00FD  0AC7               	skipnz
  8551  00FE  1903               	incf	(??_Button_Deviation_Update+0)+2,f
  8552  00FF  0AC8               	skipnz
  8553  0100  1903               	incf	(??_Button_Deviation_Update+0)+3,f
  8554  0101  0AC9               	movf	(Button_Deviation_Update@button),w
  8555  0102  0850               	addlw	03h
  8556  0103  3E03               	movwf	fsr1l
  8557  0104  0086               	clrf fsr1h	
  8558  0105  0187               	
  8559                           	moviw	[0]fsr1
  8560  0106  3F40               	movwf	(??_Button_Deviation_Update+4)+0
  8561  0107  00CA               	moviw	[1]fsr1
  8562  0108  3F41               	movwf	(??_Button_Deviation_Update+4)+0+1
  8563  0109  00CB               	movf	0+(??_Button_Deviation_Update+4)+0,w
  8564  010A  084A               	movwf	((??_Button_Deviation_Update+6)+0)
  8565  010B  00CC               	movf	1+(??_Button_Deviation_Update+4)+0,w
  8566  010C  084B               	movwf	((??_Button_Deviation_Update+6)+0+1)
  8567  010D  00CD               	clrf	((??_Button_Deviation_Update+6)+0+2)
  8568  010E  01CE               	clrf	((??_Button_Deviation_Update+6)+0+3)
  8569  010F  01CF               	movf	0+(??_Button_Deviation_Update+6)+0,w
  8570  0110  084C               	addwf	(??_Button_Deviation_Update+0)+0,f
  8571  0111  07C6               	movf	1+(??_Button_Deviation_Update+6)+0,w
  8572  0112  084D               	addwfc	(??_Button_Deviation_Update+0)+1,f
  8573  0113  3DC7               	movf	2+(??_Button_Deviation_Update+6)+0,w
  8574  0114  084E               	addwfc	(??_Button_Deviation_Update+0)+2,f
  8575  0115  3DC8               	movf	3+(??_Button_Deviation_Update+6)+0,w
  8576  0116  084F               	addwfc	(??_Button_Deviation_Update+0)+3,f
  8577  0117  3DC9               	movf	3+(??_Button_Deviation_Update+0)+0,w
  8578  0118  0849               	movwf	(Button_Deviation_Update@deviation+3)
  8579  0119  00D4               	movf	2+(??_Button_Deviation_Update+0)+0,w
  8580  011A  0848               	movwf	(Button_Deviation_Update@deviation+2)
  8581  011B  00D3               	movf	1+(??_Button_Deviation_Update+0)+0,w
  8582  011C  0847               	movwf	(Button_Deviation_Update@deviation+1)
  8583  011D  00D2               	movf	0+(??_Button_Deviation_Update+0)+0,w
  8584  011E  0846               	movwf	(Button_Deviation_Update@deviation)
  8585  011F  00D1               
  8586                           	line	303
  8587                           ;mcc_generated_files/mtouch/mtouch_button.c: 303:     deviation = deviation >> (button->
                                 scaling);
  8588                           	movf	(Button_Deviation_Update@deviation),w
  8589  0120  0851               	movwf	(??_Button_Deviation_Update+0)+0
  8590  0121  00C6               	movf	(Button_Deviation_Update@deviation+1),w
  8591  0122  0852               	movwf	((??_Button_Deviation_Update+0)+0+1)
  8592  0123  00C7               	movf	(Button_Deviation_Update@deviation+2),w
  8593  0124  0853               	movwf	((??_Button_Deviation_Update+0)+0+2)
  8594  0125  00C8               	movf	(Button_Deviation_Update@deviation+3),w
  8595  0126  0854               	movwf	((??_Button_Deviation_Update+0)+0+3)
  8596  0127  00C9               	movf	(Button_Deviation_Update@button),w
  8597  0128  0850               	addlw	0Fh
  8598  0129  3E0F               	movwf	fsr1l
  8599  012A  0086               	clrf fsr1h	
  8600  012B  0187               	
  8601                           	incf	indf1,w
  8602  012C  0A01               	goto	u830
  8603  012D  2932               u835:
  8604  012E                     	asrf	(??_Button_Deviation_Update+0)+3,f
  8605  012E  37C9               	rrf	(??_Button_Deviation_Update+0)+2,f
  8606  012F  0CC8               	rrf	(??_Button_Deviation_Update+0)+1,f
  8607  0130  0CC7               	rrf	(??_Button_Deviation_Update+0)+0,f
  8608  0131  0CC6               u830:
  8609  0132                     	decfsz	wreg,f
  8610  0132  0B89               	goto	u835
  8611  0133  292E               	movf	3+(??_Button_Deviation_Update+0)+0,w
  8612  0134  0849               	movwf	(Button_Deviation_Update@deviation+3)
  8613  0135  00D4               	movf	2+(??_Button_Deviation_Update+0)+0,w
  8614  0136  0848               	movwf	(Button_Deviation_Update@deviation+2)
  8615  0137  00D3               	movf	1+(??_Button_Deviation_Update+0)+0,w
  8616  0138  0847               	movwf	(Button_Deviation_Update@deviation+1)
  8617  0139  00D2               	movf	0+(??_Button_Deviation_Update+0)+0,w
  8618  013A  0846               	movwf	(Button_Deviation_Update@deviation)
  8619  013B  00D1               
  8620                           	line	306
  8621                           	
  8622                           l1720:	
  8623  013C                     ;mcc_generated_files/mtouch/mtouch_button.c: 306:     if (deviation > ((0x7f)))
  8624                           	btfsc	(Button_Deviation_Update@deviation+3),7
  8625  013C  1BD4               	goto	u841
  8626  013D  294C               	movf	(Button_Deviation_Update@deviation+3),w
  8627  013E  0854               	btfss	status,2
  8628  013F  1D03               	goto	u840
  8629  0140  294D               	movf	(Button_Deviation_Update@deviation+2),w
  8630  0141  0853               	btfss	status,2
  8631  0142  1D03               	goto	u840
  8632  0143  294D               	movf	(Button_Deviation_Update@deviation+1),w
  8633  0144  0852               	btfss	status,2
  8634  0145  1D03               	goto	u840
  8635  0146  294D               	movlw	128
  8636  0147  3080               	subwf	 (Button_Deviation_Update@deviation),w
  8637  0148  0251               	btfss	status,0
  8638  0149  1C03               	goto	u841
  8639  014A  294C               	goto	u840
  8640  014B  294D               
  8641                           u841:
  8642  014C                     	goto	l1724
  8643  014C  2956               u840:
  8644  014D                     	line	308
  8645                           	
  8646                           l1722:	
  8647  014D                     ;mcc_generated_files/mtouch/mtouch_button.c: 307:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 308:         deviation = ((0x7f));
  8648                           	movlw	0
  8649  014D  3000               	movwf	(Button_Deviation_Update@deviation+3)
  8650  014E  00D4               	movlw	0
  8651  014F  3000               	movwf	(Button_Deviation_Update@deviation+2)
  8652  0150  00D3               	movlw	0
  8653  0151  3000               	movwf	(Button_Deviation_Update@deviation+1)
  8654  0152  00D2               	movlw	07Fh
  8655  0153  307F               	movwf	(Button_Deviation_Update@deviation)
  8656  0154  00D1               
  8657                           	goto	l1724
  8658  0155  2956               	line	309
  8659                           ;mcc_generated_files/mtouch/mtouch_button.c: 309:     }
  8660                           	
  8661                           l449:	
  8662  0156                     	line	310
  8663                           	
  8664                           l1724:	
  8665  0156                     ;mcc_generated_files/mtouch/mtouch_button.c: 310:     if (deviation < ((-1-0x7f)))
  8666                           	btfss	(Button_Deviation_Update@deviation+3),7
  8667  0156  1FD4               	goto	u851
  8668  0157  2963               	movlw	128
  8669  0158  3080               	subwf	 (Button_Deviation_Update@deviation),w
  8670  0159  0251               	movlw	255
  8671  015A  30FF               	subwfb	(Button_Deviation_Update@deviation+1),w
  8672  015B  3B52               	movlw	255
  8673  015C  30FF               	subwfb	(Button_Deviation_Update@deviation+2),w
  8674  015D  3B53               	movlw	255
  8675  015E  30FF               	subwfb	(Button_Deviation_Update@deviation+3),w
  8676  015F  3B54               	btfsc	status,0
  8677  0160  1803               	goto	u851
  8678  0161  2963               	goto	u850
  8679  0162  2964               
  8680                           u851:
  8681  0163                     	goto	l1728
  8682  0163  296D               u850:
  8683  0164                     	line	312
  8684                           	
  8685                           l1726:	
  8686  0164                     ;mcc_generated_files/mtouch/mtouch_button.c: 311:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 312:         deviation = ((-1-0x7f));
  8687                           	movlw	0FFh
  8688  0164  30FF               	movwf	(Button_Deviation_Update@deviation+3)
  8689  0165  00D4               	movlw	0FFh
  8690  0166  30FF               	movwf	(Button_Deviation_Update@deviation+2)
  8691  0167  00D3               	movlw	0FFh
  8692  0168  30FF               	movwf	(Button_Deviation_Update@deviation+1)
  8693  0169  00D2               	movlw	080h
  8694  016A  3080               	movwf	(Button_Deviation_Update@deviation)
  8695  016B  00D1               
  8696                           	goto	l1728
  8697  016C  296D               	line	313
  8698                           ;mcc_generated_files/mtouch/mtouch_button.c: 313:     }
  8699                           	
  8700                           l450:	
  8701  016D                     	line	315
  8702                           	
  8703                           l1728:	
  8704  016D                     ;mcc_generated_files/mtouch/mtouch_button.c: 315:     button->deviation = (mtouch_button
                                 _deviation_t)deviation;
  8705                           	movf	(Button_Deviation_Update@deviation),w
  8706  016D  0851               	movwf	(??_Button_Deviation_Update+0)+0
  8707  016E  00C6               	movf	(Button_Deviation_Update@button),w
  8708  016F  0850               	addlw	09h
  8709  0170  3E09               	movwf	fsr1l
  8710  0171  0086               	clrf fsr1h	
  8711  0172  0187               	
  8712                           	movf	(??_Button_Deviation_Update+0)+0,w
  8713  0173  0846               	movwf	indf1
  8714  0174  0081               	line	316
  8715                           	
  8716                           l451:	
  8717  0175                     	return
  8718  0175  0008               	opt stack 0
  8719                           GLOBAL	__end_of_Button_Deviation_Update
  8720                           	__end_of_Button_Deviation_Update:
  8721  0176                     	signat	_Button_Deviation_Update,4217
  8722                           	global	_MTOUCH_Button_isPressed
  8723                           
  8724 ;; *************** function _MTOUCH_Button_isPressed *****************
  8725 ;; Defined at:
  8726 ;;		line 277 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;  name            1    wreg     enum E2327
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;  name            1    1[BANK0 ] enum E2327
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      _Bool 
  8733 ;; Registers used:
  8734 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8740 ;;      Params:         0       0       0       0
  8741 ;;      Locals:         0       1       0       0
  8742 ;;      Temps:          0       1       0       0
  8743 ;;      Totals:         0       2       0       0
  8744 ;;Total ram usage:        2 bytes
  8745 ;; Hardware stack levels used:    1
  8746 ;; Hardware stack levels required when called:    4
  8747 ;; This function calls:
  8748 ;;		Nothing
  8749 ;; This function is called by:
  8750 ;;		_main
  8751 ;;		_MTOUCH_Button_Buttonmask_Get
  8752 ;; This function uses a non-reentrant model
  8753 ;;
  8754                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
  8755                           	line	277
  8756                           global __ptext43
  8757                           __ptext43:	;psect for function _MTOUCH_Button_isPressed
  8758  06B9                     psect	text43
  8759                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8760                           	line	277
  8761                           	global	__size_of_MTOUCH_Button_isPressed
  8762                           	__size_of_MTOUCH_Button_isPressed	equ	__end_of_MTOUCH_Button_isPressed-_MTOUCH_Button_i
                                 sPressed
  8763  0018                     	
  8764                           _MTOUCH_Button_isPressed:	
  8765  06B9                     ;incstack = 0
  8766                           	opt	stack 11
  8767                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  8768                           ;MTOUCH_Button_isPressed@name stored from wreg
  8769                           	movlb 0	; select bank0
  8770  06B9  0020               	movwf	(MTOUCH_Button_isPressed@name)
  8771  06BA  00C7               	line	280
  8772                           	
  8773                           l1948:	
  8774  06BB                     ;mcc_generated_files/mtouch/mtouch_button.c: 277: _Bool MTOUCH_Button_isPressed(enum mto
                                 uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 278: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 280:         return (mtouch_button[name].state == MTOUCH_B
                                 UTTON_STATE_pressed) ? 1 : 0;
  8775                           	movf	(MTOUCH_Button_isPressed@name),w
  8776  06BB  0847               	movwf	(??_MTOUCH_Button_isPressed+0)+0
  8777  06BC  00C6               	movlw	(04h)-1
  8778  06BD  3003               u1065:
  8779  06BE                     	lslf	(??_MTOUCH_Button_isPressed+0)+0,f
  8780  06BE  35C6               	addlw	-1
  8781  06BF  3EFF               	skipz
  8782  06C0  1D03               	goto	u1065
  8783  06C1  2EBE               	lslf	(??_MTOUCH_Button_isPressed+0)+0,w
  8784  06C2  3546               	addlw	02h
  8785  06C3  3E02               	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  8786  06C4  3E2D               	movwf	fsr1l
  8787  06C5  0086               	clrf fsr1h	
  8788  06C6  0187               	
  8789                           		movlw	2
  8790  06C7  3002               	xorwf	(indf1),w
  8791  06C8  0601               	btfsc	status,2
  8792  06C9  1903               	goto	u1071
  8793  06CA  2ECC               	goto	u1070
  8794  06CB  2ECE               u1071:
  8795  06CC                     	movlw	1
  8796  06CC  3001               	goto	u1080
  8797  06CD  2ECF               u1070:
  8798  06CE                     	movlw	0
  8799  06CE  3000               u1080:
  8800  06CF                     	goto	l440
  8801  06CF  2ED0               	
  8802                           l1950:	
  8803  06D0                     	line	282
  8804                           	
  8805                           l440:	
  8806  06D0                     	return
  8807  06D0  0008               	opt stack 0
  8808                           GLOBAL	__end_of_MTOUCH_Button_isPressed
  8809                           	__end_of_MTOUCH_Button_isPressed:
  8810  06D1                     	signat	_MTOUCH_Button_isPressed,4217
  8811                           	global	_INTERRUPT_InterruptManager
  8812                           
  8813 ;; *************** function _INTERRUPT_InterruptManager *****************
  8814 ;; Defined at:
  8815 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;		None
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8829 ;;      Params:         0       0       0       0
  8830 ;;      Locals:         0       0       0       0
  8831 ;;      Temps:          0       0       0       0
  8832 ;;      Totals:         0       0       0       0
  8833 ;;Total ram usage:        0 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    3
  8836 ;; This function calls:
  8837 ;;		_TMR2_ISR
  8838 ;; This function is called by:
  8839 ;;		Interrupt level 1
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           psect	intentry,class=CODE,delta=2
  8843                           global __pintentry
  8844                           __pintentry:
  8845  0004                     psect	intentry
  8846                           	file	"mcc_generated_files/interrupt_manager.c"
  8847                           	line	52
  8848                           	global	__size_of_INTERRUPT_InterruptManager
  8849                           	__size_of_INTERRUPT_InterruptManager	equ	__end_of_INTERRUPT_InterruptManager-_INTERRUPT
                                 _InterruptManager
  8850  0019                     	
  8851                           _INTERRUPT_InterruptManager:	
  8852  0004                     ;incstack = 0
  8853                           	opt	stack 5
  8854                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  8855  0004  147E               ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
                                 
  8856                           psect	intentry
  8857                           	pagesel	$
  8858  0005  3180               	line	55
  8859                           	
  8860                           i1l1952:	
  8861  0006                     ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  8862                           	btfss	(11),6	;volatile
  8863  0006  1F0B               	goto	u109_21
  8864  0007  2809               	goto	u109_20
  8865  0008  280A               u109_21:
  8866  0009                     	goto	i1l46
  8867  0009  281B               u109_20:
  8868  000A                     	line	57
  8869                           	
  8870                           i1l1954:	
  8871  000A                     ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
                                 r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8872                           	movlb 1	; select bank1
  8873  000A  0021               	btfss	(145)^080h,1	;volatile
  8874  000B  1C91               	goto	u110_21
  8875  000C  280E               	goto	u110_20
  8876  000D  280F               u110_21:
  8877  000E                     	goto	i1l46
  8878  000E  281B               u110_20:
  8879  000F                     	
  8880                           i1l1956:	
  8881  000F                     	movlb 0	; select bank0
  8882  000F  0020               	btfss	(17),1	;volatile
  8883  0010  1C91               	goto	u111_21
  8884  0011  2813               	goto	u111_20
  8885  0012  2814               u111_21:
  8886  0013                     	goto	i1l46
  8887  0013  281B               u111_20:
  8888  0014                     	line	59
  8889                           	
  8890                           i1l1958:	
  8891  0014                     ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
                                 nager.c: 59:             TMR2_ISR();
  8892                           	fcall	_TMR2_ISR
  8893  0014  3187  2750  3180   	line	60
  8894                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  8895                           	goto	i1l46
  8896  0017  281B               	line	61
  8897                           ;mcc_generated_files/interrupt_manager.c: 61:         else
  8898                           	
  8899                           i1l43:	
  8900  0018                     	goto	i1l46
  8901  0018  281B               	line	64
  8902                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
                                 nager.c: 64:         }
  8903                           	
  8904                           i1l44:	
  8905  0019                     	line	65
  8906                           ;mcc_generated_files/interrupt_manager.c: 65:     }
  8907                           	goto	i1l46
  8908  0019  281B               	line	66
  8909                           ;mcc_generated_files/interrupt_manager.c: 66:     else
  8910                           	
  8911                           i1l42:	
  8912  001A                     	goto	i1l46
  8913  001A  281B               	line	69
  8914                           ;mcc_generated_files/interrupt_manager.c: 67:     {;mcc_generated_files/interrupt_manage
                                 r.c: 69:     }
  8915                           	
  8916                           i1l45:	
  8917  001B                     	line	70
  8918                           	
  8919                           i1l46:	
  8920  001B                     	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  8921  001B  107E               	retfie
  8922  001C  0009               	opt stack 0
  8923                           GLOBAL	__end_of_INTERRUPT_InterruptManager
  8924                           	__end_of_INTERRUPT_InterruptManager:
  8925  001D                     	signat	_INTERRUPT_InterruptManager,89
  8926                           	global	_TMR2_ISR
  8927                           
  8928 ;; *************** function _TMR2_ISR *****************
  8929 ;; Defined at:
  8930 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;		None
  8933 ;; Auto vars:     Size  Location     Type
  8934 ;;		None
  8935 ;; Return value:  Size  Location     Type
  8936 ;;                  1    wreg      void 
  8937 ;; Registers used:
  8938 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8939 ;; Tracked objects:
  8940 ;;		On entry : 0/0
  8941 ;;		On exit  : 0/0
  8942 ;;		Unchanged: 0/0
  8943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8944 ;;      Params:         0       0       0       0
  8945 ;;      Locals:         0       0       0       0
  8946 ;;      Temps:          0       0       0       0
  8947 ;;      Totals:         0       0       0       0
  8948 ;;Total ram usage:        0 bytes
  8949 ;; Hardware stack levels used:    1
  8950 ;; Hardware stack levels required when called:    2
  8951 ;; This function calls:
  8952 ;;		Absolute function
  8953 ;;		_Sensor_Acq_ExecuteScan
  8954 ;;		_TMR2_DefaultInterruptHandler
  8955 ;; This function is called by:
  8956 ;;		_INTERRUPT_InterruptManager
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
  8960                           	file	"mcc_generated_files/tmr2.c"
  8961                           	line	119
  8962                           global __ptext45
  8963                           __ptext45:	;psect for function _TMR2_ISR
  8964  0750                     psect	text45
  8965                           	file	"mcc_generated_files/tmr2.c"
  8966                           	line	119
  8967                           	global	__size_of_TMR2_ISR
  8968                           	__size_of_TMR2_ISR	equ	__end_of_TMR2_ISR-_TMR2_ISR
  8969  000F                     	
  8970                           _TMR2_ISR:	
  8971  0750                     ;incstack = 0
  8972                           	opt	stack 5
  8973                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8974                           	line	123
  8975                           	
  8976                           i1l1934:	
  8977  0750                     ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  8978                           	movlb 0	; select bank0
  8979  0750  0020               	bcf	(17),1	;volatile
  8980  0751  1091               	line	125
  8981                           	
  8982                           i1l1936:	
  8983  0752                     ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  8984                           	movf	((_TMR2_InterruptHandler)),w
  8985  0752  0868               iorwf	((_TMR2_InterruptHandler+1)),w
  8986  0753  0469               	btfsc	status,2
  8987  0754  1903               	goto	u105_21
  8988  0755  2F57               	goto	u105_20
  8989  0756  2F58               u105_21:
  8990  0757                     	goto	i1l114
  8991  0757  2F5E               u105_20:
  8992  0758                     	line	127
  8993                           	
  8994                           i1l1938:	
  8995  0758                     ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
                                 terruptHandler();
  8996                           	movf	(_TMR2_InterruptHandler+1),w
  8997  0758  0869               	movwf	pclath
  8998  0759  008A               	movf	(_TMR2_InterruptHandler),w
  8999  075A  0868               	callw
  9000  075B  000A               	pagesel	$
  9001  075C  3187               	goto	i1l114
  9002  075D  2F5E               	line	128
  9003                           ;mcc_generated_files/tmr2.c: 128:     }
  9004                           	
  9005                           i1l113:	
  9006  075E                     	line	129
  9007                           	
  9008                           i1l114:	
  9009  075E                     	return
  9010  075E  0008               	opt stack 0
  9011                           GLOBAL	__end_of_TMR2_ISR
  9012                           	__end_of_TMR2_ISR:
  9013  075F                     	signat	_TMR2_ISR,89
  9014                           	global	_TMR2_DefaultInterruptHandler
  9015                           	global	_Sensor_Acq_ExecuteScan
  9016                           
  9017 ;; *************** function _Sensor_Acq_ExecuteScan *****************
  9018 ;; Defined at:
  9019 ;;		line 285 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9020 ;; Parameters:    Size  Location     Type
  9021 ;;		None
  9022 ;; Auto vars:     Size  Location     Type
  9023 ;;  result          2    6[COMMON] unsigned short 
  9024 ;; Return value:  Size  Location     Type
  9025 ;;                  1    wreg      void 
  9026 ;; Registers used:
  9027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9028 ;; Tracked objects:
  9029 ;;		On entry : 0/0
  9030 ;;		On exit  : 0/0
  9031 ;;		Unchanged: 0/0
  9032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9033 ;;      Params:         0       0       0       0
  9034 ;;      Locals:         2       0       0       0
  9035 ;;      Temps:          2       0       0       0
  9036 ;;      Totals:         4       0       0       0
  9037 ;;Total ram usage:        4 bytes
  9038 ;; Hardware stack levels used:    1
  9039 ;; Hardware stack levels required when called:    1
  9040 ;; This function calls:
  9041 ;;		_MTOUCH_CVD_ScanA_0
  9042 ;;		_MTOUCH_CVD_ScanB_0
  9043 ;;		i1___bmul
  9044 ;;		i1_abs
  9045 ;; This function is called by:
  9046 ;;		_Sensor_Acq_ExecutePacket
  9047 ;;		_TMR2_ISR
  9048 ;; This function uses a non-reentrant model
  9049 ;;
  9050                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
  9051                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  9052                           	line	285
  9053                           global __ptext46
  9054                           __ptext46:	;psect for function _Sensor_Acq_ExecuteScan
  9055  0038                     psect	text46
  9056                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  9057                           	line	285
  9058                           	global	__size_of_Sensor_Acq_ExecuteScan
  9059                           	__size_of_Sensor_Acq_ExecuteScan	equ	__end_of_Sensor_Acq_ExecuteScan-_Sensor_Acq_Execut
                                 eScan
  9060  00AA                     	
  9061                           _Sensor_Acq_ExecuteScan:	
  9062  0038                     ;incstack = 0
  9063                           	opt	stack 5
  9064                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9065                           	line	287
  9066                           	
  9067                           i1l1884:	
  9068  0038                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 287:     mtouch_sensor_adcsample_t result =
                                  ADRES;
  9069                           	movlb 1	; select bank1
  9070  0038  0021               	movf	(155+1)^080h,w	;volatile
  9071  0039  081C               	movwf	(Sensor_Acq_ExecuteScan@result+1)
  9072  003A  00F7               	movf	(155)^080h,w	;volatile
  9073  003B  081B               	movwf	(Sensor_Acq_ExecuteScan@result)
  9074  003C  00F6               	line	290
  9075                           	
  9076                           i1l1886:	
  9077  003D                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 288:     static mtouch_sensor_adcsample_t l
                                 ast_a,last_b;;mcc_generated_files/mtouch/mtouch_sensor.c: 290:     if(sensor_globalFlags
                                 .packet_done)
  9078                           	movlb 0	; select bank0
  9079  003D  0020               	btfss	(_sensor_globalFlags),0	;volatile
  9080  003E  1C67               	goto	u101_21
  9081  003F  2841               	goto	u101_20
  9082  0040  2842               u101_21:
  9083  0041                     	goto	i1l1890
  9084  0041  2844               u101_20:
  9085  0042                     	goto	i1l264
  9086  0042  28E1               	line	291
  9087                           	
  9088                           i1l1888:	
  9089  0043                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 291:         return;
  9090                           	goto	i1l264
  9091  0043  28E1               	
  9092                           i1l263:	
  9093  0044                     	line	293
  9094                           	
  9095                           i1l1890:	
  9096  0044                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     if (packet_counter != (uint8_t)0)

  9097                           	movf	((_packet_counter)),w
  9098  0044  087C               	btfsc	status,2
  9099  0045  1903               	goto	u102_21
  9100  0046  2848               	goto	u102_20
  9101  0047  2849               u102_21:
  9102  0048                     	goto	i1l1920
  9103  0048  28C5               u102_20:
  9104  0049                     	goto	i1l1900
  9105  0049  2855               	line	296
  9106                           	
  9107                           i1l1892:	
  9108  004A                     ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:     {
  9109                           	goto	i1l1900
  9110  004A  2855               	line	298
  9111                           	
  9112                           i1l267:	
  9113  004B                     	
  9114                           i1l1894:	
  9115  004B                     	fcall	_MTOUCH_CVD_ScanA_0
  9116  004B  3185  25F4  3180   	goto	i1l1902
  9117  004E  2866               	line	299
  9118                           	
  9119                           i1l269:	
  9120  004F                     	
  9121                           i1l1896:	
  9122  004F                     	fcall	_MTOUCH_CVD_ScanB_0
  9123  004F  3185  25D0  3180   	goto	i1l1902
  9124  0052  2866               	line	300
  9125                           	
  9126                           i1l270:	
  9127  0053                     	goto	i1l1902
  9128  0053  2866               	line	301
  9129                           	
  9130                           i1l1898:	
  9131  0054                     	goto	i1l1902
  9132  0054  2866               	
  9133                           i1l266:	
  9134  0055                     	
  9135                           i1l1900:	
  9136  0055                     	movf	(_packet_counter),w
  9137  0055  087C               	andlw	01h
  9138  0056  3901               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9139  0057  00F4               	clrf	(??_Sensor_Acq_ExecuteScan+0)+0+1
  9140  0058  01F5               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  9141                           ; Switch size 1, requested type "space"
  9142                           ; Number of cases is 1, Range of values is 0 to 0
  9143                           ; switch strategies available:
  9144                           ; Name         Instructions Cycles
  9145                           ; simple_byte            4     3 (average)
  9146                           ; direct_byte            8     6 (fixed)
  9147                           ; jumptable            260     6 (fixed)
  9148                           ;	Chosen strategy is simple_byte
  9149                           
  9150                           	movf 1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9151  0059  0875               	opt asmopt_push
  9152                           	opt asmopt_off
  9153                           	xorlw	0^0	; case 0
  9154  005A  3A00               	skipnz
  9155  005B  1903               	goto	i1l2034
  9156  005C  285E               	goto	i1l1902
  9157  005D  2866               	opt asmopt_pop
  9158                           	
  9159                           i1l2034:	
  9160  005E                     ; Switch size 1, requested type "space"
  9161                           ; Number of cases is 2, Range of values is 0 to 1
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; simple_byte            7     4 (average)
  9165                           ; direct_byte           10     6 (fixed)
  9166                           ; jumptable            260     6 (fixed)
  9167                           ;	Chosen strategy is simple_byte
  9168                           
  9169                           	movf 0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9170  005E  0874               	opt asmopt_push
  9171                           	opt asmopt_off
  9172                           	xorlw	0^0	; case 0
  9173  005F  3A00               	skipnz
  9174  0060  1903               	goto	i1l1894
  9175  0061  284B               	xorlw	1^0	; case 1
  9176  0062  3A01               	skipnz
  9177  0063  1903               	goto	i1l1896
  9178  0064  284F               	goto	i1l1902
  9179  0065  2866               	opt asmopt_pop
  9180                           
  9181                           	
  9182                           i1l268:	
  9183  0066                     	line	303
  9184                           	
  9185                           i1l1902:	
  9186  0066                     	movlw	low(09h)
  9187  0066  3009               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9188  0067  00F4               	movf	(??_Sensor_Acq_ExecuteScan+0)+0,w
  9189  0068  0874               	movwf	(i1___bmul@multiplicand)
  9190  0069  00F0               	movf	(_currentScannSensor),w
  9191  006A  087D               	fcall	i1___bmul
  9192  006B  3186  26A0  3180   	addlw	05h
  9193  006E  3E05               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  9194  006F  3E3D               	movwf	fsr1l
  9195  0070  0086               	clrf fsr1h	
  9196  0071  0187               	
  9197                           	movf	indf1,w
  9198  0072  0801               	xorwf	(_packet_counter),w
  9199  0073  067C               	skipnz
  9200  0074  1903               	goto	u103_21
  9201  0075  2877               	goto	u103_20
  9202  0076  2878               u103_21:
  9203  0077                     	goto	i1l1918
  9204  0077  28C2               u103_20:
  9205  0078                     	line	305
  9206                           	
  9207                           i1l1904:	
  9208  0078                     	btfss	(_packet_counter),(0)&7
  9209  0078  1C7C               	goto	u104_21
  9210  0079  287B               	goto	u104_20
  9211  007A  287C               u104_21:
  9212  007B                     	goto	i1l1912
  9213  007B  28A3               u104_20:
  9214  007C                     	line	307
  9215                           	
  9216                           i1l1906:	
  9217  007C                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9218  007C  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9219  007D  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9220  007E  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9221  007F  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9222  0080  0AF4               	skipnz
  9223  0081  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9224  0082  0AF5               	movf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9225  0083  0874               	addlw	0
  9226  0084  3E00               	movwf	(Sensor_Acq_ExecuteScan@result)
  9227  0085  00F6               	movlw	04h
  9228  0086  3004               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9229  0087  3D75               	movwf	1+(Sensor_Acq_ExecuteScan@result)
  9230  0088  00F7               	line	308
  9231                           	
  9232                           i1l1908:	
  9233  0089                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9234  0089  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9235  008A  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9236  008B  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9237  008C  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9238  008D  0AF4               	skipnz
  9239  008E  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9240  008F  0AF5               	movf	(Sensor_Acq_ExecuteScan@last_a),w
  9241  0090  087A               	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9242  0091  0774               	movwf	(i1abs@a)
  9243  0092  00F0               	movf	(Sensor_Acq_ExecuteScan@last_a+1),w
  9244  0093  087B               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9245  0094  3D75               	movwf	1+(i1abs@a)
  9246  0095  00F1               	fcall	i1_abs
  9247  0096  3186  266B  3180   	movf	(0+(?i1_abs)),w
  9248  0099  0870               	movlb 0	; select bank0
  9249  009A  0020               	addwf	(_packet_noise),f
  9250  009B  07E3               	movf	(1+(?i1_abs)),w
  9251  009C  0871               	addwfc	(_packet_noise+1),f
  9252  009D  3DE4               	line	309
  9253                           	
  9254                           i1l1910:	
  9255  009E                     	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9256  009E  0877               	movwf	(Sensor_Acq_ExecuteScan@last_a+1)
  9257  009F  00FB               	movf	(Sensor_Acq_ExecuteScan@result),w
  9258  00A0  0876               	movwf	(Sensor_Acq_ExecuteScan@last_a)
  9259  00A1  00FA               	line	310
  9260                           	goto	i1l1916
  9261  00A2  28BD               	line	311
  9262                           	
  9263                           i1l272:	
  9264  00A3                     	line	313
  9265                           	
  9266                           i1l1912:	
  9267  00A3                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9268  00A3  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9269  00A4  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9270  00A5  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9271  00A6  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9272  00A7  0AF4               	skipnz
  9273  00A8  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9274  00A9  0AF5               	movf	(Sensor_Acq_ExecuteScan@last_b),w
  9275  00AA  0878               	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9276  00AB  0774               	movwf	(i1abs@a)
  9277  00AC  00F0               	movf	(Sensor_Acq_ExecuteScan@last_b+1),w
  9278  00AD  0879               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9279  00AE  3D75               	movwf	1+(i1abs@a)
  9280  00AF  00F1               	fcall	i1_abs
  9281  00B0  3186  266B  3180   	movf	(0+(?i1_abs)),w
  9282  00B3  0870               	movlb 0	; select bank0
  9283  00B4  0020               	addwf	(_packet_noise),f
  9284  00B5  07E3               	movf	(1+(?i1_abs)),w
  9285  00B6  0871               	addwfc	(_packet_noise+1),f
  9286  00B7  3DE4               	line	314
  9287                           	
  9288                           i1l1914:	
  9289  00B8                     	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9290  00B8  0877               	movwf	(Sensor_Acq_ExecuteScan@last_b+1)
  9291  00B9  00F9               	movf	(Sensor_Acq_ExecuteScan@result),w
  9292  00BA  0876               	movwf	(Sensor_Acq_ExecuteScan@last_b)
  9293  00BB  00F8               	goto	i1l1916
  9294  00BC  28BD               	line	315
  9295                           	
  9296                           i1l273:	
  9297  00BD                     	line	316
  9298                           	
  9299                           i1l1916:	
  9300  00BD                     	movf	(Sensor_Acq_ExecuteScan@result),w
  9301  00BD  0876               	addwf	(_packet_sample),f
  9302  00BE  07E5               	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9303  00BF  0877               	addwfc	(_packet_sample+1),f
  9304  00C0  3DE6               	goto	i1l1918
  9305  00C1  28C2               	line	317
  9306                           	
  9307                           i1l271:	
  9308  00C2                     	line	318
  9309                           	
  9310                           i1l1918:	
  9311  00C2                     	movlw	01h
  9312  00C2  3001               	subwf	(_packet_counter),f
  9313  00C3  02FC               	line	319
  9314                           	goto	i1l264
  9315  00C4  28E1               	line	320
  9316                           	
  9317                           i1l265:	
  9318  00C5                     	line	322
  9319                           	
  9320                           i1l1920:	
  9321  00C5                     	movf	(Sensor_Acq_ExecuteScan@result),w
  9322  00C5  0876               	movlb 0	; select bank0
  9323  00C6  0020               	addwf	(_packet_sample),f
  9324  00C7  07E5               	movf	(Sensor_Acq_ExecuteScan@result+1),w
  9325  00C8  0877               	addwfc	(_packet_sample+1),f
  9326  00C9  3DE6               	line	323
  9327                           	
  9328                           i1l1922:	
  9329  00CA                     	comf	(Sensor_Acq_ExecuteScan@result),w
  9330  00CA  0976               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
  9331  00CB  00F4               	comf	(Sensor_Acq_ExecuteScan@result+1),w
  9332  00CC  0977               	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
  9333  00CD  00F5               	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
  9334  00CE  0AF4               	skipnz
  9335  00CF  1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
  9336  00D0  0AF5               	movf	(Sensor_Acq_ExecuteScan@last_b),w
  9337  00D1  0878               	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9338  00D2  0774               	movwf	(i1abs@a)
  9339  00D3  00F0               	movf	(Sensor_Acq_ExecuteScan@last_b+1),w
  9340  00D4  0879               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
  9341  00D5  3D75               	movwf	1+(i1abs@a)
  9342  00D6  00F1               	fcall	i1_abs
  9343  00D7  3186  266B  3180   	movf	(0+(?i1_abs)),w
  9344  00DA  0870               	movlb 0	; select bank0
  9345  00DB  0020               	addwf	(_packet_noise),f
  9346  00DC  07E3               	movf	(1+(?i1_abs)),w
  9347  00DD  0871               	addwfc	(_packet_noise+1),f
  9348  00DE  3DE4               	line	324
  9349                           	
  9350                           i1l1924:	
  9351  00DF                     	bsf	(_sensor_globalFlags),0	;volatile
  9352  00DF  1467               	goto	i1l264
  9353  00E0  28E1               	line	325
  9354                           	
  9355                           i1l274:	
  9356  00E1                     	line	326
  9357                           	
  9358                           i1l264:	
  9359  00E1                     	return
  9360  00E1  0008               	opt stack 0
  9361                           GLOBAL	__end_of_Sensor_Acq_ExecuteScan
  9362                           	__end_of_Sensor_Acq_ExecuteScan:
  9363  00E2                     	signat	_Sensor_Acq_ExecuteScan,89
  9364                           
  9365 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  9366 ;; Defined at:
  9367 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  9368 ;; Parameters:    Size  Location     Type
  9369 ;;		None
  9370 ;; Auto vars:     Size  Location     Type
  9371 ;;		None
  9372 ;; Return value:  Size  Location     Type
  9373 ;;                  1    wreg      void 
  9374 ;; Registers used:
  9375 ;;		None
  9376 ;; Tracked objects:
  9377 ;;		On entry : 0/0
  9378 ;;		On exit  : 0/0
  9379 ;;		Unchanged: 0/0
  9380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9381 ;;      Params:         0       0       0       0
  9382 ;;      Locals:         0       0       0       0
  9383 ;;      Temps:          0       0       0       0
  9384 ;;      Totals:         0       0       0       0
  9385 ;;Total ram usage:        0 bytes
  9386 ;; Hardware stack levels used:    1
  9387 ;; This function calls:
  9388 ;;		Nothing
  9389 ;; This function is called by:
  9390 ;;		_TMR2_Initialize
  9391 ;;		_TMR2_ISR
  9392 ;; This function uses a non-reentrant model
  9393 ;;
  9394                           psect	text47,local,class=CODE,delta=2,merge=1,group=0
  9395                           	file	"mcc_generated_files/tmr2.c"
  9396                           	line	136
  9397                           global __ptext47
  9398                           __ptext47:	;psect for function _TMR2_DefaultInterruptHandler
  9399  07DD                     psect	text47
  9400                           	file	"mcc_generated_files/tmr2.c"
  9401                           	line	136
  9402                           	global	__size_of_TMR2_DefaultInterruptHandler
  9403                           	__size_of_TMR2_DefaultInterruptHandler	equ	__end_of_TMR2_DefaultInterruptHandler-_TMR2_
                                 DefaultInterruptHandler
  9404  0001                     	
  9405                           _TMR2_DefaultInterruptHandler:	
  9406  07DD                     ;incstack = 0
  9407                           	opt	stack 6
  9408                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  9409                           	line	139
  9410                           	
  9411                           i1l120:	
  9412  07DD                     	return
  9413  07DD  0008               	opt stack 0
  9414                           GLOBAL	__end_of_TMR2_DefaultInterruptHandler
  9415                           	__end_of_TMR2_DefaultInterruptHandler:
  9416  07DE                     	signat	_TMR2_DefaultInterruptHandler,89
  9417                           	global	i1_abs
  9418                           
  9419 ;; *************** function i1_abs *****************
  9420 ;; Defined at:
  9421 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  9422 ;; Parameters:    Size  Location     Type
  9423 ;;  a               2    0[COMMON] int 
  9424 ;; Auto vars:     Size  Location     Type
  9425 ;;		None
  9426 ;; Return value:  Size  Location     Type
  9427 ;;                  2    0[COMMON] int 
  9428 ;; Registers used:
  9429 ;;		wreg, status,2, status,0
  9430 ;; Tracked objects:
  9431 ;;		On entry : 0/0
  9432 ;;		On exit  : 0/0
  9433 ;;		Unchanged: 0/0
  9434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9435 ;;      Params:         2       0       0       0
  9436 ;;      Locals:         0       0       0       0
  9437 ;;      Temps:          2       0       0       0
  9438 ;;      Totals:         4       0       0       0
  9439 ;;Total ram usage:        4 bytes
  9440 ;; Hardware stack levels used:    1
  9441 ;; This function calls:
  9442 ;;		Nothing
  9443 ;; This function is called by:
  9444 ;;		_Sensor_Acq_ExecuteScan
  9445 ;; This function uses a non-reentrant model
  9446 ;;
  9447                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
  9448                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  9449                           	line	1
  9450                           global __ptext48
  9451                           __ptext48:	;psect for function i1_abs
  9452  066B                     psect	text48
  9453                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  9454                           	line	1
  9455                           	global	__size_ofi1_abs
  9456                           	__size_ofi1_abs	equ	__end_ofi1_abs-i1_abs
  9457  001B                     	
  9458                           i1_abs:	
  9459  066B                     ;incstack = 0
  9460                           	opt	stack 5
  9461                           ; Regs used in i1_abs: [wreg+status,2+status,0]
  9462                           	line	3
  9463                           	
  9464                           i1l1820:	
  9465  066B                     	movf	(i1abs@a+1),w
  9466  066B  0871               	xorlw	80h
  9467  066C  3A80               	movwf	(??i1_abs+0)+0
  9468  066D  00F2               	movlw	(0)^80h
  9469  066E  3080               	subwf	(??i1_abs+0)+0,w
  9470  066F  0272               	skipz
  9471  0670  1D03               	goto	u98_25
  9472  0671  2E74               	movlw	01h
  9473  0672  3001               	subwf	(i1abs@a),w
  9474  0673  0270               u98_25:
  9475  0674                     
  9476                           	skipnc
  9477  0674  1803               	goto	u98_21
  9478  0675  2E77               	goto	u98_20
  9479  0676  2E78               u98_21:
  9480  0677                     	goto	i1l947
  9481  0677  2E84               u98_20:
  9482  0678                     	
  9483                           i1l1822:	
  9484  0678                     	comf	(i1abs@a),w
  9485  0678  0970               	movwf	(??i1_abs+0)+0
  9486  0679  00F2               	comf	(i1abs@a+1),w
  9487  067A  0971               	movwf	((??i1_abs+0)+0+1)
  9488  067B  00F3               	incf	(??i1_abs+0)+0,f
  9489  067C  0AF2               	skipnz
  9490  067D  1903               	incf	((??i1_abs+0)+0+1),f
  9491  067E  0AF3               	movf	0+(??i1_abs+0)+0,w
  9492  067F  0872               	movwf	(?i1_abs)
  9493  0680  00F0               	movf	1+(??i1_abs+0)+0,w
  9494  0681  0873               	movwf	(?i1_abs+1)
  9495  0682  00F1               	goto	i1l950
  9496  0683  2E85               	
  9497                           i1l947:	
  9498  0684                     	goto	i1l950
  9499  0684  2E85               	
  9500                           i1l949:	
  9501  0685                     	line	4
  9502                           	
  9503                           i1l950:	
  9504  0685                     	return
  9505  0685  0008               	opt stack 0
  9506                           GLOBAL	__end_ofi1_abs
  9507                           	__end_ofi1_abs:
  9508  0686                     	signat	i1_abs,90
  9509                           	global	i1___bmul
  9510                           
  9511 ;; *************** function i1___bmul *****************
  9512 ;; Defined at:
  9513 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9514 ;; Parameters:    Size  Location     Type
  9515 ;;  multiplier      1    wreg     unsigned char 
  9516 ;;  multiplicand    1    0[COMMON] unsigned char 
  9517 ;; Auto vars:     Size  Location     Type
  9518 ;;  multiplier      1    2[COMMON] unsigned char 
  9519 ;;  __bmul          1    3[COMMON] unsigned char 
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      unsigned char 
  9522 ;; Registers used:
  9523 ;;		wreg, status,2, status,0
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9529 ;;      Params:         1       0       0       0
  9530 ;;      Locals:         2       0       0       0
  9531 ;;      Temps:          1       0       0       0
  9532 ;;      Totals:         4       0       0       0
  9533 ;;Total ram usage:        4 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; This function calls:
  9536 ;;		Nothing
  9537 ;; This function is called by:
  9538 ;;		_Sensor_Acq_ExecuteScan
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
  9542                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9543                           	line	4
  9544                           global __ptext49
  9545                           __ptext49:	;psect for function i1___bmul
  9546  06A0                     psect	text49
  9547                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9548                           	line	4
  9549                           	global	__size_ofi1___bmul
  9550                           	__size_ofi1___bmul	equ	__end_ofi1___bmul-i1___bmul
  9551  0019                     	
  9552                           i1___bmul:	
  9553  06A0                     ;incstack = 0
  9554                           	opt	stack 5
  9555                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  9556                           ;i1___bmul@multiplier stored from wreg
  9557                           	movwf	(i1___bmul@multiplier)
  9558  06A0  00F2               	line	6
  9559                           	
  9560                           i1l1824:	
  9561  06A1                     	clrf	(i1___bmul@product)
  9562  06A1  01F3               	goto	i1l1826
  9563  06A2  2EA3               	line	42
  9564                           	
  9565                           i1l535:	
  9566  06A3                     	line	43
  9567                           	
  9568                           i1l1826:	
  9569  06A3                     	btfss	(i1___bmul@multiplier),(0)&7
  9570  06A3  1C72               	goto	u99_21
  9571  06A4  2EA6               	goto	u99_20
  9572  06A5  2EA7               u99_21:
  9573  06A6                     	goto	i1l1830
  9574  06A6  2EAC               u99_20:
  9575  06A7                     	line	44
  9576                           	
  9577                           i1l1828:	
  9578  06A7                     	movf	(i1___bmul@multiplicand),w
  9579  06A7  0870               	movwf	(??i1___bmul+0)+0
  9580  06A8  00F1               	movf	(??i1___bmul+0)+0,w
  9581  06A9  0871               	addwf	(i1___bmul@product),f
  9582  06AA  07F3               	goto	i1l1830
  9583  06AB  2EAC               	
  9584                           i1l536:	
  9585  06AC                     	line	45
  9586                           	
  9587                           i1l1830:	
  9588  06AC                     	clrc
  9589  06AC  1003               	rlf	(i1___bmul@multiplicand),f
  9590  06AD  0DF0               
  9591                           	line	46
  9592                           	
  9593                           i1l1832:	
  9594  06AE                     	clrc
  9595  06AE  1003               	rrf	(i1___bmul@multiplier),f
  9596  06AF  0CF2               
  9597                           	line	47
  9598                           	movf	((i1___bmul@multiplier)),w
  9599  06B0  0872               	btfss	status,2
  9600  06B1  1D03               	goto	u100_21
  9601  06B2  2EB4               	goto	u100_20
  9602  06B3  2EB5               u100_21:
  9603  06B4                     	goto	i1l1826
  9604  06B4  2EA3               u100_20:
  9605  06B5                     	goto	i1l1834
  9606  06B5  2EB6               	
  9607                           i1l537:	
  9608  06B6                     	line	50
  9609                           	
  9610                           i1l1834:	
  9611  06B6                     	movf	(i1___bmul@product),w
  9612  06B6  0873               	goto	i1l538
  9613  06B7  2EB8               	
  9614                           i1l1836:	
  9615  06B8                     	line	51
  9616                           	
  9617                           i1l538:	
  9618  06B8                     	return
  9619  06B8  0008               	opt stack 0
  9620                           GLOBAL	__end_ofi1___bmul
  9621                           	__end_ofi1___bmul:
  9622  06B9                     	signat	i1___bmul,89
  9623                           	global	_MTOUCH_CVD_ScanB_0
  9624                           
  9625 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
  9626 ;; Defined at:
  9627 ;;		line 131 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9628 ;; Parameters:    Size  Location     Type
  9629 ;;		None
  9630 ;; Auto vars:     Size  Location     Type
  9631 ;;		None
  9632 ;; Return value:  Size  Location     Type
  9633 ;;                  1    wreg      void 
  9634 ;; Registers used:
  9635 ;;		wreg
  9636 ;; Tracked objects:
  9637 ;;		On entry : 0/0
  9638 ;;		On exit  : 0/0
  9639 ;;		Unchanged: 0/0
  9640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9641 ;;      Params:         0       0       0       0
  9642 ;;      Locals:         0       0       0       0
  9643 ;;      Temps:          0       0       0       0
  9644 ;;      Totals:         0       0       0       0
  9645 ;;Total ram usage:        0 bytes
  9646 ;; Hardware stack levels used:    1
  9647 ;; This function calls:
  9648 ;;		Nothing
  9649 ;; This function is called by:
  9650 ;;		_Sensor_Acq_ExecuteScan
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           psect	text50,local,class=CODE,delta=2,merge=1,group=0
  9654                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9655                           	line	131
  9656                           global __ptext50
  9657                           __ptext50:	;psect for function _MTOUCH_CVD_ScanB_0
  9658  05D0                     psect	text50
  9659                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9660                           	line	131
  9661                           	global	__size_of_MTOUCH_CVD_ScanB_0
  9662                           	__size_of_MTOUCH_CVD_ScanB_0	equ	__end_of_MTOUCH_CVD_ScanB_0-_MTOUCH_CVD_ScanB_0
  9663  0024                     	
  9664                           _MTOUCH_CVD_ScanB_0:	
  9665  05D0                     ;incstack = 0
  9666                           	opt	stack 5
  9667                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
  9668                           	line	134
  9669                           	
  9670                           i1l1802:	
  9671  05D0                     # 134 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9672                           BANKSEL LATC ;# 
  9673  05D0  0022               	line	135
  9674                           # 135 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9675                           bcf LATC & 0x7F, 1 ;# 
  9676  05D1  108E               	line	138
  9677                           # 138 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9678                           BANKSEL ADCON0 ;# 
  9679  05D2  0021               	line	139
  9680                           # 139 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9681                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9682  05D3  3015               	line	140
  9683                           # 140 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9684                           movwf ADCON0 & 0x7F ;# 
  9685  05D4  009D               psect	text50
  9686                           	line	143
  9687                           	
  9688                           i1l1804:	
  9689  05D5                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(10);
  9690                           	opt asmopt_push
  9691                           opt asmopt_off
  9692                           	movlw	3
  9693  05D5  3003               u115_27:
  9694  05D6                     decfsz	wreg
  9695  05D6  0B89               	goto	u115_27
  9696  05D7  2DD6               	nop
  9697  05D8  0000               opt asmopt_pop
  9698                           
  9699                           	line	146
  9700                           # 146 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9701                           movlw 113 ;# 
  9702  05D9  3071               	line	147
  9703                           # 147 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9704                           movwf ADCON0 & 0x7F ;# 
  9705  05DA  009D               	line	148
  9706                           # 148 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9707                           BANKSEL LATC ;# 
  9708  05DB  0022               	line	149
  9709                           # 149 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9710                           bsf LATC & 0x7F, 1 ;# 
  9711  05DC  148E               	line	150
  9712                           # 150 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9713                           BANKSEL ADCON0 ;# 
  9714  05DD  0021               	line	153
  9715                           # 153 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9716                           movlw LOW TRISC ;# 
  9717  05DE  308E               	line	154
  9718                           # 154 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9719                           movwf FSR0L & 0x7F ;# 
  9720  05DF  0084               	line	155
  9721                           # 155 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9722                           movlw HIGH TRISC ;# 
  9723  05E0  3000               	line	156
  9724                           # 156 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9725                           movwf FSR0H & 0x7F ;# 
  9726  05E1  0085               	line	159
  9727                           # 159 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9728                           movlw LOW LATC ;# 
  9729  05E2  300E               	line	160
  9730                           # 160 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9731                           movwf FSR1L & 0x7F ;# 
  9732  05E3  0086               	line	161
  9733                           # 161 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9734                           movlw HIGH LATC ;# 
  9735  05E4  3001               	line	162
  9736                           # 162 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9737                           movwf FSR1H & 0x7F ;# 
  9738  05E5  0087               	line	165
  9739                           # 165 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9740                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9741  05E6  3015               	line	166
  9742                           # 166 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9743                           bsf INDF0 & 0x7F, 1 ;# 
  9744  05E7  1480               psect	text50
  9745                           	line	167
  9746                           	
  9747                           i1l1806:	
  9748  05E8                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 167:     _delay(0);
  9749                           		opt asmopt_push
  9750                           	opt asmopt_off
  9751                           	opt asmopt_pop
  9752                           
  9753                           	line	168
  9754                           # 168 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9755                           movwf ADCON0 & 0x7F ;# 
  9756  05E8  009D               psect	text50
  9757                           	line	174
  9758                           	
  9759                           i1l1808:	
  9760  05E9                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 174:     _delay(5);
  9761                           		opt asmopt_push
  9762                           	opt asmopt_off
  9763                           	nop2	;2 cycle nop
  9764  05E9  3200               	nop2	;2 cycle nop
  9765  05EA  3200               	nop
  9766  05EB  0000               	opt asmopt_pop
  9767                           
  9768                           	line	177
  9769                           # 177 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9770                           BANKSEL ADCON0 ;# 
  9771  05EC  0021               	line	178
  9772                           # 178 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9773                           bsf ADCON0 & 0x7F, 1 ;# 
  9774  05ED  149D               psect	text50
  9775                           	line	181
  9776                           	
  9777                           i1l1810:	
  9778  05EE                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 181:     _delay(3);
  9779                           		opt asmopt_push
  9780                           	opt asmopt_off
  9781                           	nop2	;2 cycle nop
  9782  05EE  3200               	nop
  9783  05EF  0000               	opt asmopt_pop
  9784                           
  9785                           	line	184
  9786                           # 184 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9787                           BANKSEL LATC ;# 
  9788  05F0  0022               	line	185
  9789                           # 185 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9790                           bcf LATC & 0x7F, 1 ;# 
  9791  05F1  108E               	line	186
  9792                           # 186 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9793                           bcf INDF0 & 0x7F, 1 ;# 
  9794  05F2  1080               psect	text50
  9795                           	line	188
  9796                           	
  9797                           i1l350:	
  9798  05F3                     	return
  9799  05F3  0008               	opt stack 0
  9800                           GLOBAL	__end_of_MTOUCH_CVD_ScanB_0
  9801                           	__end_of_MTOUCH_CVD_ScanB_0:
  9802  05F4                     	signat	_MTOUCH_CVD_ScanB_0,89
  9803                           	global	_MTOUCH_CVD_ScanA_0
  9804                           
  9805 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
  9806 ;; Defined at:
  9807 ;;		line 62 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9808 ;; Parameters:    Size  Location     Type
  9809 ;;		None
  9810 ;; Auto vars:     Size  Location     Type
  9811 ;;		None
  9812 ;; Return value:  Size  Location     Type
  9813 ;;                  1    wreg      void 
  9814 ;; Registers used:
  9815 ;;		wreg
  9816 ;; Tracked objects:
  9817 ;;		On entry : 0/0
  9818 ;;		On exit  : 0/0
  9819 ;;		Unchanged: 0/0
  9820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9821 ;;      Params:         0       0       0       0
  9822 ;;      Locals:         0       0       0       0
  9823 ;;      Temps:          0       0       0       0
  9824 ;;      Totals:         0       0       0       0
  9825 ;;Total ram usage:        0 bytes
  9826 ;; Hardware stack levels used:    1
  9827 ;; This function calls:
  9828 ;;		Nothing
  9829 ;; This function is called by:
  9830 ;;		_Sensor_Acq_ExecuteScan
  9831 ;; This function uses a non-reentrant model
  9832 ;;
  9833                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
  9834                           	line	62
  9835                           global __ptext51
  9836                           __ptext51:	;psect for function _MTOUCH_CVD_ScanA_0
  9837  05F4                     psect	text51
  9838                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9839                           	line	62
  9840                           	global	__size_of_MTOUCH_CVD_ScanA_0
  9841                           	__size_of_MTOUCH_CVD_ScanA_0	equ	__end_of_MTOUCH_CVD_ScanA_0-_MTOUCH_CVD_ScanA_0
  9842  0024                     	
  9843                           _MTOUCH_CVD_ScanA_0:	
  9844  05F4                     ;incstack = 0
  9845                           	opt	stack 5
  9846                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
  9847                           	line	65
  9848                           	
  9849                           i1l1792:	
  9850  05F4                     # 65 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9851                           BANKSEL LATC ;# 
  9852  05F4  0022               	line	66
  9853                           # 66 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9854                           bsf LATC & 0x7F, 1 ;# 
  9855  05F5  148E               	line	69
  9856                           # 69 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9857                           BANKSEL ADCON0 ;# 
  9858  05F6  0021               	line	70
  9859                           # 70 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9860                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9861  05F7  3015               	line	71
  9862                           # 71 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9863                           movwf ADCON0 & 0x7F ;# 
  9864  05F8  009D               psect	text51
  9865                           	line	74
  9866                           	
  9867                           i1l1794:	
  9868  05F9                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 74:     _delay(10);
  9869                           	opt asmopt_push
  9870                           opt asmopt_off
  9871                           	movlw	3
  9872  05F9  3003               u116_27:
  9873  05FA                     decfsz	wreg
  9874  05FA  0B89               	goto	u116_27
  9875  05FB  2DFA               	nop
  9876  05FC  0000               opt asmopt_pop
  9877                           
  9878                           	line	77
  9879                           # 77 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9880                           movlw 113 ;# 
  9881  05FD  3071               	line	78
  9882                           # 78 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9883                           movwf ADCON0 & 0x7F ;# 
  9884  05FE  009D               	line	79
  9885                           # 79 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9886                           BANKSEL LATC ;# 
  9887  05FF  0022               	line	80
  9888                           # 80 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9889                           bcf LATC & 0x7F, 1 ;# 
  9890  0600  108E               	line	81
  9891                           # 81 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9892                           BANKSEL ADCON0 ;# 
  9893  0601  0021               	line	84
  9894                           # 84 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9895                           movlw LOW TRISC ;# 
  9896  0602  308E               	line	85
  9897                           # 85 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9898                           movwf FSR0L & 0x7F ;# 
  9899  0603  0084               	line	86
  9900                           # 86 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9901                           movlw HIGH TRISC ;# 
  9902  0604  3000               	line	87
  9903                           # 87 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9904                           movwf FSR0H & 0x7F ;# 
  9905  0605  0085               	line	90
  9906                           # 90 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9907                           movlw LOW LATC ;# 
  9908  0606  300E               	line	91
  9909                           # 91 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9910                           movwf FSR1L & 0x7F ;# 
  9911  0607  0086               	line	92
  9912                           # 92 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9913                           movlw HIGH LATC ;# 
  9914  0608  3001               	line	93
  9915                           # 93 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9916                           movwf FSR1H & 0x7F ;# 
  9917  0609  0087               	line	96
  9918                           # 96 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9919                           movlw ( 0x5<<2 | 0x1 ) ;# 
  9920  060A  3015               	line	97
  9921                           # 97 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9922                           bsf INDF0 & 0x7F, 1 ;# 
  9923  060B  1480               psect	text51
  9924                           	line	98
  9925                           	
  9926                           i1l1796:	
  9927  060C                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 98:     _delay(0);
  9928                           		opt asmopt_push
  9929                           	opt asmopt_off
  9930                           	opt asmopt_pop
  9931                           
  9932                           	line	99
  9933                           # 99 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9934                           movwf ADCON0 & 0x7F ;# 
  9935  060C  009D               psect	text51
  9936                           	line	104
  9937                           	
  9938                           i1l1798:	
  9939  060D                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 104:     _delay(5);
  9940                           		opt asmopt_push
  9941                           	opt asmopt_off
  9942                           	nop2	;2 cycle nop
  9943  060D  3200               	nop2	;2 cycle nop
  9944  060E  3200               	nop
  9945  060F  0000               	opt asmopt_pop
  9946                           
  9947                           	line	107
  9948                           # 107 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9949                           BANKSEL ADCON0 ;# 
  9950  0610  0021               	line	108
  9951                           # 108 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9952                           bsf ADCON0 & 0x7F, 1 ;# 
  9953  0611  149D               psect	text51
  9954                           	line	111
  9955                           	
  9956                           i1l1800:	
  9957  0612                     ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 111:     _delay(3);
  9958                           		opt asmopt_push
  9959                           	opt asmopt_off
  9960                           	nop2	;2 cycle nop
  9961  0612  3200               	nop
  9962  0613  0000               	opt asmopt_pop
  9963                           
  9964                           	line	114
  9965                           # 114 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9966                           BANKSEL LATC ;# 
  9967  0614  0022               	line	115
  9968                           # 115 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9969                           bsf LATC & 0x7F, 1 ;# 
  9970  0615  148E               	line	116
  9971                           # 116 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
  9972                           bcf INDF0 & 0x7F, 1 ;# 
  9973  0616  1080               psect	text51
  9974                           	line	118
  9975                           	
  9976                           i1l347:	
  9977  0617                     	return
  9978  0617  0008               	opt stack 0
  9979                           GLOBAL	__end_of_MTOUCH_CVD_ScanA_0
  9980                           	__end_of_MTOUCH_CVD_ScanA_0:
  9981  0618                     	signat	_MTOUCH_CVD_ScanA_0,89
  9982                           global	___latbits
  9983                           ___latbits	equ	0
  9984  0000                     	global	btemp
  9985                           	btemp set 07Eh
  9986  007E                     
  9987                           	DABS	1,126,2	;btemp
  9988                           	global	int$flags
  9989                           	int$flags	set btemp
  9990  007E                     	global	wtemp0
  9991                           	wtemp0 set btemp+0
  9992  007E                     	end


Data Sizes:
    Strings     0
    Constant    5
    Data        38
    BSS         11
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     29      74
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    Sensor_Scanfrequency_Evaluation@sensor.scanB	const PTR FTN()void  size(2) Largest target is 0
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Scanfrequency_Evaluation@sensor.scanA	const PTR FTN()void  size(2) Largest target is 0
		 -> MTOUCH_CVD_ScanA_0(), 

    Button_Service$1511$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Service$1511	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Service@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2327,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_isEnabled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_isEnabled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Scanfrequency_Evaluation@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    S358$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    S358$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2110,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sensor_Acq_ExecuteScan(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sensor_Acq_ExecuteScan(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_ISR->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->i1___bmul
    _Sensor_Acq_ExecuteScan->i1_abs

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Enable
    _MTOUCH_Sensor_Enable->___bmul
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Scanfrequency_Evaluation
    _Sensor_Scanfrequency_Evaluation->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_TMR2_SetInterruptHandler
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _MTOUCH_Sensor_wasSampled->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6122
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     653
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0     479
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          0     0      0     391
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Enable                                 2     2      0     303
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0    5447
           _MTOUCH_Button_ServiceAll
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       0     0      0      88
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              0     0      0    2214
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       5     5      0    2214
                                             24 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback *
            _Sensor_RawSample_Update
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              1     1      0      77
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   6     6      0    1608
                                             18 BANK0      6     6      0
           _Sensor_Acq_ExecutePacket
    _Sensor_Scanfrequency_Evaluation
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     292
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_Scanfrequency_Evaluation                     10    10      0     618
                                              8 BANK0     10    10      0
           _Sensor_Acq_ExecutePacket
 ---------------------------------------------------------------------------------
 (6) _Sensor_Acq_ExecutePacket                             6     6      0     399
                                              2 BANK0      6     6      0
      _MTOUCH_Sensor_Scan_Initialize
            _TMR2_LoadPeriodRegister
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (7) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR2_LoadPeriodRegister                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             0     0      0    3145
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    3145
                                             18 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             2     2      0     303
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1     366
                                             13 BANK0      3     2      1
             _Button_DefaultCallback *
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1     727
                                             13 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_DefaultCallback *
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            5     4      1     869
                                             13 BANK0      5     4      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     260
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0     411
                                              8 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                3     3      0     512
                                              8 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     303
                                              4 BANK0      4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     281
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     213
                                              0 BANK0     15    15      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_isPressed                              2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     409
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0     409
                   Absolute function *
             _Sensor_Acq_ExecuteScan *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Sensor_Acq_ExecuteScan                              4     4      0     409
                                              4 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0
                 _MTOUCH_CVD_ScanB_0
                           i1___bmul
                              i1_abs
 ---------------------------------------------------------------------------------
 (11) i1_abs                                               4     2      2     144
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) i1___bmul                                            4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Button_isPressed
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_DefaultCallback *
         _Button_State_Pressed *
           _Button_DefaultCallback *
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Sensor_Scan_Initialize
             _TMR2_LoadPeriodRegister
             _TMR2_SetInterruptHandler
             _TMR2_StartTimer
             _TMR2_StopTimer
           _Sensor_Scanfrequency_Evaluation
             _Sensor_Acq_ExecutePacket
               _MTOUCH_Sensor_Scan_Initialize
               _TMR2_LoadPeriodRegister
               _TMR2_SetInterruptHandler
               _TMR2_StartTimer
               _TMR2_StopTimer
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback *
         _Sensor_RawSample_Update *
         _Sensor_setSampled *
         ___bmul *
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
   _SYSTEM_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Enable
           ___bmul
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _Sensor_Acq_ExecuteScan *
       _MTOUCH_CVD_ScanA_0
       _MTOUCH_CVD_ScanB_0
       i1___bmul
       i1_abs
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      58       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      4A       6       92.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      58      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Aug 06 22:45:07 2018

                    __end_of_TMR2_SetInterruptHandler 07B4                          ?_MTOUCH_Sensor_RawSample_Get 004A  
                                      ___bmul@product 0048                                           __CFG_CP$OFF 0000  
                                                  l23 0730                                                    l26 0787  
                                                  l29 07D0                                                    l71 06E6  
                                                  l95 070E                                                    l98 07D6  
                     __size_of_Sensor_Acq_ExecuteScan 00AA                            __end_of_Sensor_setInactive 07A0  
                                         __CFG_LVP$ON 0000                                                   LATC 010E  
                                                 l101 07D3                                                   l110 07C7  
                                                 l300 07DB                                                   l140 0776  
                                                 l220 074F                                                   l117 07B3  
                                                 l230 0557                                                   l223 077F  
                                                 l231 057D                                                   l240 0460  
                                                 l232 056B                                                   l401 0402  
                                                 l321 079F                                                   l241 0454  
                                                 l233 057D                                                   l137 076B  
                                                 l402 0408                                                   l410 01D3  
                                                 l250 03C6                                                   l242 045F  
                                                 l226 07C2                                                   l403 044C  
                                                 l411 01DC                                                   l251 03C0  
                                                 l243 04AB                                                   l404 044C  
                                                 l412 0203                                                   l252 03C6  
                                                 l244 046A                                                   l500 0649  
                                                 l413 0203                                                   l253 03CA  
                                                 l245 04A3                                                   l229 056D  
                                                 l333 07BD                                                   l309 0740  
                                                 l501 0645                                                   l254 03D0  
                                                 l318 07A7                                                   l246 04A9  
                                                 l342 0797                                                   l502 0648  
                                                 l407 01A5                                                   l327 07D9  
                                                 l255 03E8                                                   l503 064D  
                                                 l440 06D0                                                   l416 04CB  
                                                 l408 01A4                                                   l336 0720  
                                                 l256 03EA                                                   l280 030D  
                                                 l504 0649                                                   l417 04F9  
                                                 l409 01DC                                                   l249 03BF  
                                                 l281 02C3                                                   l505 064C  
                                                 l450 016D                                                   l418 04F8  
                                                 l282 02CF                                                   l506 064E  
                                                 l451 0175                                                   l419 04F9  
                                                 l283 02CE                                                   l339 078F  
                                                 l507 064F                                                   l292 06FB  
                                                 l284 02E0                                                   l508 064F  
                                                 l461 0351                                                   l285 02D4  
                                                 l462 0382                                                   l470 028E  
                                                 l286 02DF                                                   l535 068A  
                                                 l463 0382                                                   l471 028E  
                                                 l287 0317                                                   l279 02B0  
                                                 l295 0661                                                   l391 07DA  
                                                 l536 0693                                                   l480 07DC  
                                                 l288 02EA                                                   l296 066A  
                                                 l449 0156                                                   l537 069D  
                                                 l289 0302                                                   l297 066A  
                                                 l538 069F                                                   l466 05A9  
                                                 l394 07CC                                                   l469 024D  
                                                 l397 053E                                                   l398 053E  
                                                 l499 0639                                                   l950 0634  
                                                 l947 0633                                                   l949 0634  
                                                 _GIE 005F                                                   _PR2 001B  
                                                 u600 068E                                                   u601 068D  
                                                 u610 069C                                                   u611 069B  
                                                 u620 03C4                                                   u700 02E9  
                                                 u621 03C3                                                   u701 02E8  
                                                 u630 03CA                                                   u710 02F5  
                                                 u631 03C9                                                   u711 02F4  
                                                 u640 03CF                                                   u720 030C  
                                                 u800 0656                                                   u641 03CE  
                                                 u721 030B                                                   u801 0655  
                                                 u810 031E                                                   u650 03E4  
                                                 u811 031D                                                   u651 03E3  
                                                 u715 02F1                                                   u820 00F5  
                                                 u740 020A                                                   u900 019C  
                                                 u660 0626                                                   u741 0209  
                                                 u901 019B                                                   u661 0625  
                                                 u830 0132                                                   u750 021C  
                                                 u910 01B7                                                   u670 02AE  
                                                 u735 059F                                                   u911 01B6  
                                                 u671 02AD                                                   u840 014D  
                                                 u760 025E                                                   u920 01F7  
                                                 u680 02C9                                                   u841 014C  
                                                 u825 00F1                                                   u921 01F6  
                                                 u681 02C8                                                   u665 0622  
                                                 u850 0164                                                   u930 04BE  
                                                 u690 02DC                                                   u770 045C  
                                                 u851 0163                                                   u835 012E  
                                                 u755 0218                                                   u931 04BD  
                                                 u691 02DB                                                   u771 045B  
                                                 u940 04DE                                                   u860 03FD  
                                                 u780 0469                                                   u765 025A  
                                                 u941 04DD                                                   u861 03FC  
                                                 u781 0468                                                   u870 0423  
                                                 u790 0497                                                   u871 0422  
                                                 u791 0496                                                   u880 0434  
                                                 u960 0514                                                   u961 0513  
                                                 u890 0182                                                   u970 0521  
                                                 u891 0181                                                   u971 0520  
                                                 u955 04FF                                                   u795 0493  
                                                 u885 0430                                                   _abs 0618  
                                     _TMR2_Initialize 06FC                                          __CFG_BORV$LO 0000  
                                                 wreg 0009                      ??_MTOUCH_Sensor_Sampled_ResetAll 0047  
                     ?_MTOUCH_Sensor_Sampled_ResetAll 0070                      __size_of_MTOUCH_Sensor_SampleAll 0005  
                                                INDF0 0000                                                  FSR0H 0005  
                                                FSR1H 0007                                                  FSR0L 0004  
                                                FSR1L 0006                                    _MTOUCH_CVD_ScanA_0 05F4  
                                  _MTOUCH_CVD_ScanB_0 05D0                                                  ?_abs 0046  
                                                l2032 0578                                                  l1520 0777  
                                                l1512 07AE                                                  l1600 02A3  
                                                l1530 068A                                                  l1522 077A  
                                                l1514 07D4                                                  l1610 02BC  
                                                l1602 02A7                                                  l1540 069F  
                                                l1532 068E                                                  l1700 0711  
                                                l1524 077C                                                  l1516 07D1  
                                                l1620 02DC                                                  l1612 02C3  
                                                l1604 02A8                                                  l1534 0693  
                                                l1710 0335                                                  l1702 0720  
                                                l1526 077E                                                  l1518 07C5  
                                                l1550 0398                                                  l1542 0385  
                                                l1630 0302                                                  l1622 02DE  
                                                l1614 02C9                                                  l1606 02AF  
                                                l1720 013C                                                  l1536 0695  
                                                l1528 0688                                                  l1712 034F  
                                                l1704 031A                                                  l1640 0580  
                                                l1560 03AB                                                  l1552 039B  
                                                l1544 0386                                                  l1632 0306  
                                                l1624 02E0                                                  l1616 02CF  
                                                l1608 02B0                                                  l1722 014D  
                                                l1538 069D                                                  l1706 031E  
                                                l1714 0351                                                  l1642 059A  
                                                l1650 024B                                                  l1730 03EB  
                                                l1570 03C5                                                  l1562 03AD  
                                                l1554 03A3                                                  l1546 038C  
                                                l1626 02EA                                                  l1618 02D4  
                                                l1634 030D                                                  l1724 0156  
                                                l1716 0367                                                  l1708 031F  
                                                l1652 024D                                                  l1644 0206  
                                                l1740 0423                                                  l1732 03FD  
                                                l1812 04FC                                                  l1580 03DF  
                                                l1572 03D0                                                  l1564 03B4  
                                                l1556 03A8                                                  l1548 0392  
                                                l1636 0317                                                  l1628 02F5  
                                                l1660 0454                                                  l1726 0164  
                                                l1718 00E4                                                  l1646 020A  
                                                l1734 0402                                                  l1750 01B7  
                                                l1742 0176                                                  l1814 0508  
                                                l1582 03E4                                                  l1574 03D3  
                                                l1566 03B9                                                  l1558 03AA  
                                                l1638 079A                                                  l1590 0618  
                                                l1670 0497                                                  l1662 045C  
                                                l1654 0733                                                  l1728 016D  
                                                l1648 020B                                                  l1760 04AC  
                                                l1736 0408                                                  l1752 01C6  
                                                l1744 0182                                                  l1816 0514  
                                                l1584 03EA                                                  l1576 03D7  
                                                l1568 03BC                                                  l1592 0626  
                                                l1680 04A9                                                  l1672 049B  
                                                l1664 045E                                                  l1656 078A  
                                                l1840 06D4                                                  l1586 06E9  
                                                l1762 04BE                                                  l1738 0412  
                                                l1754 01D3                                                  l1746 019C  
                                                l1818 0521                                                  l1578 03DB  
                                                l1594 07A2                                                  l1682 04AB  
                                                l1674 04A1                                                  l1666 0460  
                                                l1658 044F                                                  l1690 065F  
                                                l1770 0741                                                  l1850 0780  
                                                l1842 06D7                                                  l1930 0721  
                                                l1588 06FB                                                  l1764 04CB  
                                                l1756 01F7                                                  l1748 01A5  
                                                l1596 0291                                                  l1676 04A2  
                                                l1668 046A                                                  l1692 0661  
                                                l1684 0652                                                  l1780 0557  
                                                l1940 076C                                                  l1772 0747  
                                                l1852 0783                                                  l1844 06D9  
                                                l1860 06FC                                                  l1932 072D  
                                                l1950 06D0                                                  l1766 04DE  
                                                l1758 01FE                                                  l1598 029F  
                                                l1678 04A3                                                  l1686 0656  
                                                l1694 0792                                                  l1782 0560  
                                                l1774 07B9                                                  l1942 076F  
                                                l1854 0784                                                  l1846 06DC  
                                                l1838 06D1                                                  l1870 070B  
                                                l1862 06FF                                                  l1768 04EB  
                                                l1696 07D7                                                  l1688 0657  
                                                l1784 056C                                                  l1776 0541  
                                                l1880 07BE                                                  l1944 0772  
                                                l1872 075F                                                  l1856 0785  
                                                l1848 06E1                                                  l1864 0700  
                                                l1698 07D9                                                  l1882 07C8  
                                                l1786 056D                                                  l1778 054E  
                                                l1946 0776                                                  l1874 0762  
                                                l1866 0701                                                  l1858 07CD  
                                                l1948 06BB                                                  l1876 0765  
                                                l1868 0703                                                  l1878 0768  
                                                l1990 063C                                                  l1986 0635  
                                                l1988 0639                                                  TRISC 008E  
                                                u1140 0645                                                  u1141 0644  
                                                u1070 06CE                                                  u1071 06CC  
                                                u1080 06CF                                                  u1065 06BE  
                                                _LATA 010C                                                  _LATC 010E  
                                                i1l42 001A                                                  i1l43 0018  
                                                i1l44 0019                                                  i1l45 001B  
                                                i1l46 001B                            Button_State_Pressed@button 0053  
                                                _TMR2 001A                                                  _WPUA 020C  
                                                _WPUC 020E                     __size_of_Sensor_Acq_ExecutePacket 0068  
                           ?_Sensor_Acq_ExecutePacket 0070                                          __CFG_WRT$OFF 0000  
                                                abs@a 0046                                                  _main 0635  
                __size_of_MTOUCH_Button_InitializeAll 0001                                                  fsr0h 0005  
                                                fsr1h 0007                                                  indf0 0000  
                                                fsr0l 0004                                                  indf1 0001  
                                                fsr1l 0006                  __size_of_MTOUCH_Sensor_InitializeAll 000F  
                                                btemp 007E                                   ?_MTOUCH_CVD_ScanA_0 0070  
                                 ?_MTOUCH_CVD_ScanB_0 0070                                                  start 001D  
                                   ___bmul@multiplier 0049                                         __CFG_MCLRE$ON 0000  
                                               ADCON0 009D  __end_ofSensor_Scanfrequency_Evaluation@frequency_hop 07B9  
        Sensor_Scanfrequency_Evaluation@frequency_hop 07B4                              ?_MTOUCH_Service_Mainloop 0070  
                    __size_of_MTOUCH_Button_isPressed 0018                         __size_of_Button_State_Pressed 004E  
                                               ??_abs 0048                           ?_Button_Baseline_Initialize 0070  
                       ??_MTOUCH_Sensor_RawSample_Get 004C                         Sensor_RawSample_Update@sensor 0046  
                                       __CFG_PLLEN$ON 0000                        __size_of_OSCILLATOR_Initialize 0008  
                       __end_of_OSCILLATOR_Initialize 0788     Sensor_Scanfrequency_Evaluation@best_packet_sample 0052  
                                               ?_main 0070                                                 _ADRES 009B  
                                       __CFG_WDTE$OFF 0000                                  ??_MTOUCH_CVD_ScanA_0 0070  
                                ??_MTOUCH_CVD_ScanB_0 0070                                                 _T2CON 001C  
                             __size_of_Button_Service 0045                                                 i1l120 07DD  
                                               i1l113 075E                                                 i1l114 075E  
                                               i1l350 05F3                                                 i1l270 0053  
                                               i1l271 00C2                                                 i1l263 0044  
                                               i1l272 00A3                                                 i1l264 00E1  
                                               i1l265 00C5                                                 i1l273 00BD  
                                               i1l274 00E1                                                 i1l266 0055  
                                               i1l347 0617                                                 i1l267 004B  
                                               i1l268 0066                                                 i1l269 004F  
                                               i1l535 06A3                                                 i1l536 06AC  
                                               i1l537 06B6                                                 i1l538 06B8  
                                               i1l950 0685                                                 i1l947 0684  
                                               i1l949 0685                                                 _TRISA 008C  
                                               _TRISC 008E                                                 i1_abs 066B  
                                               u98_20 0678                                                 u98_21 0677  
                                               u98_25 0674                                                 u99_20 06A7  
                                               u99_21 06A6                       __size_of_Button_DefaultCallback 0001  
                                    __end_of_TMR2_ISR 075F                       __size_of_Sensor_DefaultCallback 0001  
                             __size_of_Sensor_Service 003F                 __end_of_MTOUCH_Sensor_Scan_Initialize 0780  
              __size_of_MTOUCH_Sensor_Scan_Initialize 0009                         _MTOUCH_Sensor_Scan_Initialize 0777  
                                      _WDT_Initialize 07CD                               Sensor_setSampled@sensor 0046  
                              _Sensor_Acq_ExecuteScan 0038                      __size_of_Button_State_NotPressed 008E  
                                    __end_ofi1___bmul 06B9                                        __CFG_BOREN$OFF 0000  
                                               pclath 000A                                  _Sensor_Sampled_Reset 0788  
                                               status 0003                                                 wtemp0 007E  
                                     _TMR2_StartTimer 07D4                      __size_of_TMR2_LoadPeriodRegister 0005  
                           __size_of_Sensor_setActive 0008                                       __initialization 001E  
                                        __end_of_main 0650                               __end_of_TMR2_Initialize 070F  
                                      __CFG_LPBOR$OFF 0000                           ?_INTERRUPT_InterruptManager 0070  
                            _TMR2_SetInterruptHandler 07AE                                                ??_main 0063  
                             ??_Button_Reading_Update 004E                                                ?i1_abs 0070  
                            ?_Button_Deviation_Update 0070                                __end_of_WDT_Initialize 07D1  
                        Button_Baseline_Update@button 004C                                                _ADCON0 009D  
                                              _ADCON1 009E                                                _ADCON2 009F  
                __size_of_MTOUCH_Sensor_RawSample_Get 0015                                        __CFG_ZCDDIS$ON 0000  
                                              _ANSELA 018C                                                _ANSELC 018E  
                                              _BORCON 0116                                                u100_20 06B5  
                                              u100_21 06B4                                                u101_20 0042  
                                              u101_21 0041                                                u102_20 0049  
                                              u110_20 000F                                                u102_21 0048  
                                              u110_21 000E                                                u103_20 0078  
                                              u111_20 0014                                                u103_21 0077  
                                              u111_21 0013                                                i1l2034 005E  
                                              u104_20 007C                                                u104_21 007B  
                                              _ODCONA 028C                                                _ODCONC 028E  
                                              i1l1800 0612                                                u105_20 0758  
                                              u105_21 0757                                                i1l1810 05EE  
                                              i1l1802 05D0                                                i1l1804 05D5  
                                              i1l1820 066B                                                i1l1900 0055  
                                              i1l1806 05E8                                                i1l1830 06AC  
                                              i1l1822 0678                                                i1l1910 009E  
                                              i1l1902 0066                                                i1l1808 05E9  
                                              i1l1832 06AE                                                i1l1824 06A1  
                                              i1l1912 00A3                                                i1l1904 0078  
                                              i1l1920 00C5                                                i1l1834 06B6  
                                              i1l1826 06A3                                                i1l1922 00CA  
                                              i1l1914 00B8                                                i1l1906 007C  
                                              i1l1836 06B8                                                i1l1828 06A7  
                                              i1l1924 00DF                                                i1l1916 00BD  
                                              i1l1908 0089                                                i1l1918 00C2  
                                              i1l1934 0750                                                i1l1792 05F4  
                                              i1l1936 0752                                                i1l1952 0006  
                                              i1l1794 05F9                                                i1l1890 0044  
                                              i1l1938 0758                                                i1l1954 000A  
                                              i1l1796 060C                                                i1l1892 004A  
                                              i1l1884 0038                                                i1l1956 000F  
                                              i1l1798 060D                                                i1l1894 004B  
                                              i1l1886 003D                                                i1l1958 0014  
                                              u115_27 05D6                                                i1l1896 004F  
                                              i1l1888 0043                                                i1l1898 0054  
                                              u116_27 05FA                                                u109_20 000A  
                                              u109_21 0009                                 ?_Sensor_Sampled_Reset 0070  
                                              _OSCCON 0099                                                _WDTCON 0097  
                                              i1abs@a 0070                                _Button_DefaultCallback 07DC  
                     __end_of_MTOUCH_Service_Mainloop 0777                                        __CFG_PWRTE$OFF 0000  
                              _Sensor_DefaultCallback 07DB                                         _packet_sample 0065  
                                              ___bmul 0686                          Sensor_DefaultCallback@sensor 0046  
                                      __CFG_STVREN$ON 0000                      __end_of_MTOUCH_Button_ServiceAll 07CD  
                             _MTOUCH_Sensor_SampleAll 07BE                          Button_DefaultCallback@button 0046  
                                     ?_WDT_Initialize 0070                              ?_Sensor_RawSample_Update 0070  
                          __end_of_Sensor_Acquisition 04AC                               ?_Button_Baseline_Update 0070  
                             __end_of_TMR2_StartTimer 07D7              TMR2_SetInterruptHandler@InterruptHandler 0046  
                     MTOUCH_Sensor_RawSample_Get@name 004D                                     _SYSTEM_Initialize 0721  
                             __end_of__initialization 0035                   __size_of_Button_Baseline_Initialize 002C  
                      ?_MTOUCH_Sensor_Scan_Initialize 0070                 Sensor_Scanfrequency_Evaluation@sensor 0054  
                                  ?_SYSTEM_Initialize 0070                                   _Button_StateMachine 0020  
                                 ___bmul@multiplicand 0046                                         __end_ofi1_abs 0686  
                                      __pcstackCOMMON 0070                               _MTOUCH_Button_isPressed 06B9  
                                        __pidataBANK0 05AA                                   ??_SYSTEM_Initialize 004C  
                                           ?_TMR2_ISR 0070                                      ?_TMR2_Initialize 0070  
                     __end_of_Button_Deviation_Update 0176                                             ?i1___bmul 0070  
                            Sensor_setInactive@sensor 0046                                        _Button_Service 04FA  
                    __end_of_Sensor_Acq_ExecutePacket 03EB                            ?_Button_State_Initializing 0053  
                                Button_Service@button 005B                                        _OPTION_REGbits 0095  
                                             ??i1_abs 0072                        __end_of_Button_Baseline_Update 028F  
                                Sensor_Service@sensor 0062                                        _Sensor_Service 053F  
                                    i1___bmul@product 0073                               _Button_State_NotPressed 0176  
                       __size_of_MTOUCH_Sensor_Enable 0010                                    _Sensor_setInactive 0798  
                           __end_of_SYSTEM_Initialize 0731                      MTOUCH_Sensor_isCalibrated@sensor 0070  
                              ??_Sensor_Sampled_Reset 0046                                            __pbssBANK0 0063  
                             _TMR2_LoadPeriodRegister 07C3                                   ?_Sensor_setInactive 0070  
                                    _Sensor_setActive 07A0                                    Sensor_Service@name 0061  
                                          __pmaintext 0635                                               ?___bmul 0046  
                                     __CFG_PPS1WAY$ON 0000                                            ??_TMR2_ISR 0078  
                      MTOUCH_Sensor_wasSampled@sensor 004B                                            __pintentry 0004  
                              __end_of_Button_Service 053F                   __end_of_MTOUCH_Button_InitializeAll 07DB  
                         _MTOUCH_Button_InitializeAll 07DA                   __end_of_MTOUCH_Sensor_InitializeAll 0750  
                         _MTOUCH_Sensor_InitializeAll 0741                             ??_MTOUCH_Sensor_SampleAll 0063  
                                          ??i1___bmul 0071                       __end_of_Sensor_RawSample_Update 066B  
                                ??_Sensor_setInactive 0046                     __size_of_MTOUCH_Sensor_wasSampled 0012  
                           ?_MTOUCH_Sensor_wasSampled 0070                     __end_of_Button_State_Initializing 044D  
                              __end_of_Sensor_Service 057E                              _MTOUCH_Button_ServiceAll 07C8  
                             ?_Sensor_Acq_ExecuteScan 0070                                               _OSCSTAT 009A  
                                             _OSCTUNE 0098                      __size_of_MTOUCH_Service_Mainloop 000B  
                        __end_of_Button_State_Pressed 04FA                               __size_of_TMR2_StopTimer 0003  
                                    ?_TMR2_StartTimer 0070                      Button_Baseline_Initialize@button 0052  
                           ??_MTOUCH_Button_isPressed 0046                                        _packet_counter 007C  
                          ??_TMR2_SetInterruptHandler 0048                               Sensor_Acquisition@retry 005C  
                                     __size_of___bmul 001A                                       ?_Button_Service 0070  
                                             __ptext1 0721                                               __ptext2 07CD  
                                             __ptext3 06FC                                               __ptext4 06D1  
                                             __ptext5 0780                                               __ptext6 075F  
                                             __ptext7 0741                                               __ptext8 0731  
                                             __ptext9 07DA                           Button_Reading_Update@button 0050  
                         __size_of_MTOUCH_CVD_ScanA_0 0024                           __size_of_MTOUCH_CVD_ScanB_0 0024  
                      __end_of_Sensor_Acq_ExecuteScan 00E2                                 _OSCILLATOR_Initialize 0780  
                                           _T2CONbits 001C                                          __size_of_abs 001D  
                           ??_Button_State_NotPressed 0054                                       ?_Sensor_Service 0070  
                            ??_PIN_MANAGER_Initialize 0046                                   i1___bmul@multiplier 0072  
                      __size_of_Button_Reading_Update 006B                         __end_of_Button_Reading_Update 0383  
                            _Sensor_Acq_ExecutePacket 0383                                      _callback_sampled 002A  
                           ??_TMR2_LoadPeriodRegister 0046                            __size_of_SYSTEM_Initialize 0010  
                                    _callback_pressed 0028                                  end_of_initialization 0035  
                             ?_Button_DefaultCallback 0046                                               init_ram 07A8  
                                             initloop 07A9                               ?_Sensor_DefaultCallback 0046  
                    __size_of_Button_Deviation_Update 0094                          ??_MTOUCH_Sensor_isCalibrated 0046  
                 __end_of_MTOUCH_Sensor_RawSample_Get 06FC                           _MTOUCH_Sensor_RawSample_Get 06E7  
                                    ??_WDT_Initialize 0046                                Sensor_setActive@sensor 0046  
                                    __CFG_FOSC$INTOSC 0000     Sensor_Scanfrequency_Evaluation@best_sample_period 0055  
                       Button_Deviation_Update@button 0050                                             _TRISCbits 008E  
                          MTOUCH_Sensor_Enable@sensor 004B                                   _callback_notPressed 0026  
                 __size_of_MTOUCH_Sensor_isCalibrated 0003                        __end_of_Button_DefaultCallback 07DD  
     Sensor_Scanfrequency_Evaluation@packet_noise_Max 0050                                    _sensor_globalFlags 0067  
                        Sensor_Acq_ExecuteScan@last_a 007A                          Sensor_Acq_ExecuteScan@last_b 0078  
                      __end_of_Sensor_DefaultCallback 07DC                          Sensor_Acq_ExecuteScan@result 0076  
                    __size_of_Sensor_RawSample_Update 001B                                    _Sensor_Acquisition 044D  
                __end_of_TMR2_DefaultInterruptHandler 07DE                 __size_of_TMR2_DefaultInterruptHandler 0001  
                        _TMR2_DefaultInterruptHandler 07DD                                  _Button_State_Pressed 04AC  
                                      __end_of___bmul 06A0                                   ?_Sensor_Acquisition 0070  
                     ??_MTOUCH_Sensor_Scan_Initialize 0046                                     __size_of_TMR2_ISR 000F  
                       Sensor_Acq_ExecutePacket@error 004C                                ?_OSCILLATOR_Initialize 0070  
                            __end_of_Sensor_setActive 07A8                      TMR2_LoadPeriodRegister@periodVal 0046  
                         ??_Button_State_Initializing 0054                                     __size_ofi1___bmul 0019  
                                 start_initialization 001E                               _MTOUCH_Service_Mainloop 076C  
                     __size_of_PIN_MANAGER_Initialize 0016                                           __end_of_abs 0635  
                                      _TMR2_StopTimer 07D1                                  ??_Sensor_Acquisition 0058  
                     Button_State_Initializing@button 0053                      __end_of_MTOUCH_Sensor_wasSampled 0721  
                        __end_of_MTOUCH_Sensor_Enable 0741                                          _packet_noise 0063  
                                            ??___bmul 0047                                 ?_Button_State_Pressed 0053  
                          ??_MTOUCH_Button_ServiceAll 005C                                           __pdataBANK0 0020  
                        ??_Button_Baseline_Initialize 004E                                         _sample_period 002C  
                       ?_TMR2_DefaultInterruptHandler 0070                            Sensor_Sampled_Reset@sensor 0046  
                              __end_of_TMR2_StopTimer 07D4                                           __pbssCOMMON 0078  
                                           ___latbits 0000                                         __pcstackBANK0 0046  
                            __size_of_TMR2_Initialize 0013                                   Sensor_Service@error 0060  
                       __size_of_Sensor_Sampled_Reset 0008                               _Button_Deviation_Update 00E2  
                           _Button_State_Initializing 03EB                    __end_of_MTOUCH_Sensor_isCalibrated 07DA  
                          _MTOUCH_Sensor_isCalibrated 07D7                                             __pnvBANK0 0068  
                                   _Sensor_setSampled 0790                                _PIN_MANAGER_Initialize 06D1  
                                    ??_Button_Service 0058                                    ?_Sensor_setSampled 0070  
                                    ??_Sensor_Service 005E                            ??_Sensor_Acq_ExecutePacket 0048  
                        ??_INTERRUPT_InterruptManager 0078                                   ??_Sensor_setSampled 0046  
                           ??_MTOUCH_Service_Mainloop 0063                           __size_of_Sensor_setInactive 0008  
                                     ?_TMR2_StopTimer 0070                                        __size_ofi1_abs 001B  
                      Sensor_Acq_ExecutePacket@sensor 004D                             __end_of_Sensor_setSampled 0798  
                                            _LATCbits 010E                                    _currentScannSensor 007D  
                             _Sensor_RawSample_Update 0650                                              _PIE1bits 0091  
                            __size_of_TMR2_StartTimer 0003                                 i1___bmul@multiplicand 0070  
                 __size_of_INTERRUPT_InterruptManager 0019                                              _PIR1bits 0011  
                              ??_Button_State_Pressed 0054                __end_of_MTOUCH_Sensor_Sampled_ResetAll 07BE  
             __size_of_MTOUCH_Sensor_Sampled_ResetAll 0005                        _MTOUCH_Sensor_Sampled_ResetAll 07B9  
                            ?_MTOUCH_Sensor_SampleAll 0070                                              _TMR2_ISR 0750  
                            _MTOUCH_Sensor_wasSampled 070F                            __end_of_MTOUCH_CVD_ScanA_0 0618  
                          __end_of_MTOUCH_CVD_ScanB_0 05F4                              ??_Button_Baseline_Update 0046  
                                            i1___bmul 06A0                                              _WPUCbits 020E  
                      ??_TMR2_DefaultInterruptHandler 0070                     __size_of_TMR2_SetInterruptHandler 0006  
                           ?_TMR2_SetInterruptHandler 0046                                  _MTOUCH_Sensor_Enable 0731  
                           ??_Button_Deviation_Update 0046                                 _Button_Reading_Update 0318  
                            ?_MTOUCH_Button_isPressed 0070                                     ??_TMR2_Initialize 0048  
                                   _MTOUCH_Initialize 075F                                    ?_MTOUCH_Initialize 0070  
                             ??_OSCILLATOR_Initialize 0046                    __end_of_Button_Baseline_Initialize 05AA  
                          _Button_Baseline_Initialize 057E                              Sensor_Acquisition@sensor 005D  
                                 ??_MTOUCH_Initialize 004C                              ?_Button_State_NotPressed 0053  
                                          _ANSELCbits 018E                                    Button_Service@name 005A  
                                   ?_Sensor_setActive 0070                              ?_TMR2_LoadPeriodRegister 0070  
                Sensor_Scanfrequency_Evaluation@retry 0056                                    ??_Sensor_setActive 0046  
                               ?_MTOUCH_Sensor_Enable 0070                                              __ptext10 076C  
                                            __ptext11 07B9                                              __ptext20 0798  
                                            __ptext12 0788                                              __ptext21 07A0  
                                            __ptext13 07BE                                              __ptext30 04FA  
                                            __ptext22 028F                                              __ptext14 053F  
                                            __ptext31 070F                                              __ptext23 0383  
                                            __ptext15 0790                                              __ptext40 06E7  
                                            __ptext32 07D7                                              __ptext24 07D1  
                                            __ptext16 0650                                              __ptext41 0686  
                                            __ptext33 0176                                              __ptext25 07D4  
                                            __ptext17 07DB                                              __ptext50 05D0  
                                            __ptext42 00E2                                              __ptext34 03EB  
                                            __ptext26 07AE                                              __ptext18 044D  
                                            __ptext51 05F4                                              __ptext43 06B9  
                                            __ptext35 04AC                                              __ptext27 07C3  
                                            __ptext19 0618                                              __ptext36 07DC  
                                            __ptext28 0777                                              __ptext45 0750  
                                            __ptext37 0204                                              __ptext29 07C8  
                                            __ptext46 0038                                              __ptext38 057E  
                                            __ptext47 07DD                                              __ptext39 0318  
                                            __ptext48 066B                                              __ptext49 06A0  
                           __end_of_MTOUCH_Initialize 076C                             ??_Sensor_RawSample_Update 0046  
                 Sensor_Acq_ExecutePacket@ADCON0_temp 0049                   Sensor_Acq_ExecutePacket@ADCON1_temp 004A  
                 Sensor_Acq_ExecutePacket@ADCON2_temp 004B                            __size_of_Sensor_setSampled 0008  
                                       __size_of_main 001B                       __end_of_MTOUCH_Sensor_SampleAll 07C3  
                    Sensor_Scanfrequency_Evaluation@i 0057                                              int$flags 007E  
                            ??_Sensor_Acq_ExecuteScan 0074                    __size_of_Button_State_Initializing 0062  
                                   ??_TMR2_StartTimer 0046                    __end_of_INTERRUPT_InterruptManager 001D  
                          _INTERRUPT_InterruptManager 0004                       __size_of_Button_Baseline_Update 008B  
                        ?_MTOUCH_Button_InitializeAll 0070                          ?_MTOUCH_Sensor_InitializeAll 0070  
                                       _mtouch_button 002D                                            _INTCONbits 000B  
                                       _mtouch_sensor 003D                       __end_of_MTOUCH_Button_isPressed 06D1  
                              ?_Button_Reading_Update 0070                      Button_Deviation_Update@deviation 0051  
                             __size_of_WDT_Initialize 0004                                              intlevel1 0000  
                         __size_of_Sensor_Acquisition 005F               __end_of_Sensor_Scanfrequency_Evaluation 0318  
            __size_of_Sensor_Scanfrequency_Evaluation 0089                     ??_Sensor_Scanfrequency_Evaluation 004E  
                    ?_Sensor_Scanfrequency_Evaluation 0070                       _Sensor_Scanfrequency_Evaluation 028F  
                             ?_PIN_MANAGER_Initialize 0070                                     __CFG_CLKOUTEN$OFF 0000  
                         ?_MTOUCH_Sensor_isCalibrated 0070                       __end_of_Button_State_NotPressed 0204  
                        __end_of_Sensor_Sampled_Reset 0790                                      ??_TMR2_StopTimer 0046  
                     __end_of_TMR2_LoadPeriodRegister 07C8                                         __pstringtext1 07B4  
                       ??_MTOUCH_Button_InitializeAll 0046                              ??_Button_DefaultCallback 0047  
                       ??_MTOUCH_Sensor_InitializeAll 004C                                ??_MTOUCH_Sensor_Enable 004A  
                            ??_Sensor_DefaultCallback 0047                     __size_of_MTOUCH_Button_ServiceAll 0005  
                           ?_MTOUCH_Button_ServiceAll 0070                         Button_State_NotPressed@button 0053  
                          __size_of_MTOUCH_Initialize 000D                        __end_of_PIN_MANAGER_Initialize 06E7  
                              _Button_Baseline_Update 0204                           MTOUCH_Button_isPressed@name 0047  
                               _TMR2_InterruptHandler 0068                            ??_MTOUCH_Sensor_wasSampled 004A  
