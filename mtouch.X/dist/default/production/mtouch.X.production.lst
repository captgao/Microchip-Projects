

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Aug 06 20:11:15 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F1703 Definitions
    37                           ; 
    38  0008                     fsr0h equ 05h
    39  0005                     fsr0l equ 04h
    40  0004                     fsr1h equ 07h
    41  0007                     fsr1l equ 06h
    42  0006                     indf equ 00h
    43  0000                     indf0 equ 00h
    44  0000                     indf1 equ 01h
    45  0001                     intcon equ 0Bh
    46  000B                     pc equ 02h
    47  0002                     pcl equ 02h
    48  0002                     pclath equ 0Ah
    49  000A                     status equ 03h
    50  0003                     wreg equ 09h
    51  0009                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     pushw	macro
    88                           	movwi fsr1++
    89                           	endm
    90  0000                     popw	macro
    91                           	moviw --fsr1
    92                           	endm
    93  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    94                           INDF0 equ 00h ;# 
    95  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    96                           INDF1 equ 01h ;# 
    97  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
    98                           PCL equ 02h ;# 
    99  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   100                           STATUS equ 03h ;# 
   101  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   102                           FSR0L equ 04h ;# 
   103  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   104                           FSR0H equ 05h ;# 
   105  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   106                           FSR1L equ 06h ;# 
   107  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   108                           FSR1H equ 07h ;# 
   109  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   110                           BSR equ 08h ;# 
   111  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   112                           WREG equ 09h ;# 
   113  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   114                           PCLATH equ 0Ah ;# 
   115  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   116                           INTCON equ 0Bh ;# 
   117  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   118                           PORTA equ 0Ch ;# 
   119  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   120                           PORTC equ 0Eh ;# 
   121  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   122                           PIR1 equ 011h ;# 
   123  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   124                           PIR2 equ 012h ;# 
   125  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   126                           PIR3 equ 013h ;# 
   127  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   128                           TMR0 equ 015h ;# 
   129  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   130                           TMR1 equ 016h ;# 
   131  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   132                           TMR1L equ 016h ;# 
   133  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   134                           TMR1H equ 017h ;# 
   135  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   136                           T1CON equ 018h ;# 
   137  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   138                           T1GCON equ 019h ;# 
   139  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   140                           TMR2 equ 01Ah ;# 
   141  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   142                           PR2 equ 01Bh ;# 
   143  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   144                           T2CON equ 01Ch ;# 
   145  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   146                           TRISA equ 08Ch ;# 
   147  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   148                           TRISC equ 08Eh ;# 
   149  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   150                           PIE1 equ 091h ;# 
   151  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   152                           PIE2 equ 092h ;# 
   153  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   154                           PIE3 equ 093h ;# 
   155  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   156                           OPTION_REG equ 095h ;# 
   157  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   158                           PCON equ 096h ;# 
   159  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   160                           WDTCON equ 097h ;# 
   161  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   162                           OSCTUNE equ 098h ;# 
   163  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   164                           OSCCON equ 099h ;# 
   165  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   166                           OSCSTAT equ 09Ah ;# 
   167  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   168                           ADRES equ 09Bh ;# 
   169  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   170                           ADRESL equ 09Bh ;# 
   171  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   172                           ADRESH equ 09Ch ;# 
   173  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   174                           ADCON0 equ 09Dh ;# 
   175  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   176                           ADCON1 equ 09Eh ;# 
   177  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   178                           ADCON2 equ 09Fh ;# 
   179  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   180                           LATA equ 010Ch ;# 
   181  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   182                           LATC equ 010Eh ;# 
   183  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   184                           BORCON equ 0116h ;# 
   185  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   186                           FVRCON equ 0117h ;# 
   187  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   188                           ZCD1CON equ 011Ch ;# 
   189  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   190                           ANSELA equ 018Ch ;# 
   191  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   192                           ANSELC equ 018Eh ;# 
   193  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   194                           PMADR equ 0191h ;# 
   195  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   196                           PMADRL equ 0191h ;# 
   197  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   198                           PMADRH equ 0192h ;# 
   199  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   200                           PMDAT equ 0193h ;# 
   201  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   202                           PMDATL equ 0193h ;# 
   203  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   204                           PMDATH equ 0194h ;# 
   205  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   206                           PMCON1 equ 0195h ;# 
   207  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   208                           PMCON2 equ 0196h ;# 
   209  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   210                           VREGCON equ 0197h ;# 
   211  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   212                           WPUA equ 020Ch ;# 
   213  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   214                           WPUC equ 020Eh ;# 
   215  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   216                           SSP1BUF equ 0211h ;# 
   217  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   218                           SSPBUF equ 0211h ;# 
   219  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   220                           SSP1ADD equ 0212h ;# 
   221  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   222                           SSPADD equ 0212h ;# 
   223  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   224                           SSP1MSK equ 0213h ;# 
   225  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   226                           SSPMSK equ 0213h ;# 
   227  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   228                           SSP1STAT equ 0214h ;# 
   229  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   230                           SSPSTAT equ 0214h ;# 
   231  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   232                           SSP1CON1 equ 0215h ;# 
   233  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   234                           SSPCON equ 0215h ;# 
   235  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   236                           SSPCON1 equ 0215h ;# 
   237  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   238                           SSP1CON equ 0215h ;# 
   239  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   240                           SSP1CON2 equ 0216h ;# 
   241  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   242                           SSPCON2 equ 0216h ;# 
   243  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   244                           SSP1CON3 equ 0217h ;# 
   245  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   246                           SSPCON3 equ 0217h ;# 
   247  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   248                           ODCONA equ 028Ch ;# 
   249  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   250                           ODCONC equ 028Eh ;# 
   251  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   252                           CCPR1 equ 0291h ;# 
   253  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   254                           CCPR1L equ 0291h ;# 
   255  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   256                           CCPR1H equ 0292h ;# 
   257  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   258                           CCP1CON equ 0293h ;# 
   259  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   260                           ECCP1CON equ 0293h ;# 
   261  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   262                           CCPR2 equ 0298h ;# 
   263  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   264                           CCPR2L equ 0298h ;# 
   265  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   266                           CCPR2H equ 0299h ;# 
   267  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   268                           CCP2CON equ 029Ah ;# 
   269  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   270                           ECCP2CON equ 029Ah ;# 
   271  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   272                           SLRCONA equ 030Ch ;# 
   273  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   274                           SLRCONC equ 030Eh ;# 
   275  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   276                           INLVLA equ 038Ch ;# 
   277  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   278                           INLVLC equ 038Eh ;# 
   279  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   280                           IOCAP equ 0391h ;# 
   281  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   282                           IOCAN equ 0392h ;# 
   283  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   284                           IOCAF equ 0393h ;# 
   285  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   286                           IOCCP equ 0397h ;# 
   287  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   288                           IOCCN equ 0398h ;# 
   289  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   290                           IOCCF equ 0399h ;# 
   291  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   292                           OPA1CON equ 0511h ;# 
   293  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   294                           OPA2CON equ 0515h ;# 
   295  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   296                           PPSLOCK equ 0E0Fh ;# 
   297  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   298                           INTPPS equ 0E10h ;# 
   299  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   300                           T0CKIPPS equ 0E11h ;# 
   301  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   302                           T1CKIPPS equ 0E12h ;# 
   303  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   304                           T1GPPS equ 0E13h ;# 
   305  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   306                           CCP1PPS equ 0E14h ;# 
   307  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   308                           CCP2PPS equ 0E15h ;# 
   309  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   310                           SSPCLKPPS equ 0E20h ;# 
   311  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   312                           SSPDATPPS equ 0E21h ;# 
   313  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   314                           SSPSSPPS equ 0E22h ;# 
   315  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   316                           RA0PPS equ 0E90h ;# 
   317  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   318                           RA1PPS equ 0E91h ;# 
   319  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   320                           RA2PPS equ 0E92h ;# 
   321  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   322                           RA4PPS equ 0E94h ;# 
   323  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   324                           RA5PPS equ 0E95h ;# 
   325  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   326                           RC0PPS equ 0EA0h ;# 
   327  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   328                           RC1PPS equ 0EA1h ;# 
   329  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   330                           RC2PPS equ 0EA2h ;# 
   331  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   332                           RC3PPS equ 0EA3h ;# 
   333  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   334                           RC4PPS equ 0EA4h ;# 
   335  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   336                           RC5PPS equ 0EA5h ;# 
   337  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   338                           ICDBK0H equ 0F9Eh ;# 
   339  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   340                           STATUS_SHAD equ 0FE4h ;# 
   341  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   342                           WREG_SHAD equ 0FE5h ;# 
   343  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   344                           BSR_SHAD equ 0FE6h ;# 
   345  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   346                           PCLATH_SHAD equ 0FE7h ;# 
   347  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   348                           FSR0L_SHAD equ 0FE8h ;# 
   349  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   350                           FSR0H_SHAD equ 0FE9h ;# 
   351  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   352                           FSR1L_SHAD equ 0FEAh ;# 
   353  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   354                           FSR1H_SHAD equ 0FEBh ;# 
   355  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   356                           STKPTR equ 0FEDh ;# 
   357  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   358                           TOSL equ 0FEEh ;# 
   359  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   360                           TOSH equ 0FEFh ;# 
   361  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   362                           INDF0 equ 00h ;# 
   363  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   364                           INDF1 equ 01h ;# 
   365  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   366                           PCL equ 02h ;# 
   367  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   368                           STATUS equ 03h ;# 
   369  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   370                           FSR0L equ 04h ;# 
   371  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   372                           FSR0H equ 05h ;# 
   373  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   374                           FSR1L equ 06h ;# 
   375  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   376                           FSR1H equ 07h ;# 
   377  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   378                           BSR equ 08h ;# 
   379  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   380                           WREG equ 09h ;# 
   381  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   382                           PCLATH equ 0Ah ;# 
   383  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   384                           INTCON equ 0Bh ;# 
   385  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   386                           PORTA equ 0Ch ;# 
   387  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   388                           PORTC equ 0Eh ;# 
   389  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   390                           PIR1 equ 011h ;# 
   391  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   392                           PIR2 equ 012h ;# 
   393  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   394                           PIR3 equ 013h ;# 
   395  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   396                           TMR0 equ 015h ;# 
   397  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   398                           TMR1 equ 016h ;# 
   399  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   400                           TMR1L equ 016h ;# 
   401  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   402                           TMR1H equ 017h ;# 
   403  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   404                           T1CON equ 018h ;# 
   405  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   406                           T1GCON equ 019h ;# 
   407  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   408                           TMR2 equ 01Ah ;# 
   409  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   410                           PR2 equ 01Bh ;# 
   411  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   412                           T2CON equ 01Ch ;# 
   413  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   414                           TRISA equ 08Ch ;# 
   415  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   416                           TRISC equ 08Eh ;# 
   417  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   418                           PIE1 equ 091h ;# 
   419  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   420                           PIE2 equ 092h ;# 
   421  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   422                           PIE3 equ 093h ;# 
   423  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   424                           OPTION_REG equ 095h ;# 
   425  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   426                           PCON equ 096h ;# 
   427  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   428                           WDTCON equ 097h ;# 
   429  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   430                           OSCTUNE equ 098h ;# 
   431  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   432                           OSCCON equ 099h ;# 
   433  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   434                           OSCSTAT equ 09Ah ;# 
   435  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   436                           ADRES equ 09Bh ;# 
   437  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   438                           ADRESL equ 09Bh ;# 
   439  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   440                           ADRESH equ 09Ch ;# 
   441  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   442                           ADCON0 equ 09Dh ;# 
   443  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   444                           ADCON1 equ 09Eh ;# 
   445  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   446                           ADCON2 equ 09Fh ;# 
   447  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   448                           LATA equ 010Ch ;# 
   449  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   450                           LATC equ 010Eh ;# 
   451  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   452                           BORCON equ 0116h ;# 
   453  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   454                           FVRCON equ 0117h ;# 
   455  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   456                           ZCD1CON equ 011Ch ;# 
   457  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   458                           ANSELA equ 018Ch ;# 
   459  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   460                           ANSELC equ 018Eh ;# 
   461  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   462                           PMADR equ 0191h ;# 
   463  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   464                           PMADRL equ 0191h ;# 
   465  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   466                           PMADRH equ 0192h ;# 
   467  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   468                           PMDAT equ 0193h ;# 
   469  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   470                           PMDATL equ 0193h ;# 
   471  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   472                           PMDATH equ 0194h ;# 
   473  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   474                           PMCON1 equ 0195h ;# 
   475  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   476                           PMCON2 equ 0196h ;# 
   477  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   478                           VREGCON equ 0197h ;# 
   479  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   480                           WPUA equ 020Ch ;# 
   481  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   482                           WPUC equ 020Eh ;# 
   483  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   484                           SSP1BUF equ 0211h ;# 
   485  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   486                           SSPBUF equ 0211h ;# 
   487  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   488                           SSP1ADD equ 0212h ;# 
   489  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   490                           SSPADD equ 0212h ;# 
   491  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   492                           SSP1MSK equ 0213h ;# 
   493  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   494                           SSPMSK equ 0213h ;# 
   495  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   496                           SSP1STAT equ 0214h ;# 
   497  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   498                           SSPSTAT equ 0214h ;# 
   499  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   500                           SSP1CON1 equ 0215h ;# 
   501  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   502                           SSPCON equ 0215h ;# 
   503  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   504                           SSPCON1 equ 0215h ;# 
   505  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   506                           SSP1CON equ 0215h ;# 
   507  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   508                           SSP1CON2 equ 0216h ;# 
   509  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   510                           SSPCON2 equ 0216h ;# 
   511  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   512                           SSP1CON3 equ 0217h ;# 
   513  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   514                           SSPCON3 equ 0217h ;# 
   515  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   516                           ODCONA equ 028Ch ;# 
   517  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   518                           ODCONC equ 028Eh ;# 
   519  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   520                           CCPR1 equ 0291h ;# 
   521  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   522                           CCPR1L equ 0291h ;# 
   523  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   524                           CCPR1H equ 0292h ;# 
   525  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   526                           CCP1CON equ 0293h ;# 
   527  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   528                           ECCP1CON equ 0293h ;# 
   529  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   530                           CCPR2 equ 0298h ;# 
   531  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   532                           CCPR2L equ 0298h ;# 
   533  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   534                           CCPR2H equ 0299h ;# 
   535  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   536                           CCP2CON equ 029Ah ;# 
   537  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   538                           ECCP2CON equ 029Ah ;# 
   539  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   540                           SLRCONA equ 030Ch ;# 
   541  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   542                           SLRCONC equ 030Eh ;# 
   543  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   544                           INLVLA equ 038Ch ;# 
   545  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   546                           INLVLC equ 038Eh ;# 
   547  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   548                           IOCAP equ 0391h ;# 
   549  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   550                           IOCAN equ 0392h ;# 
   551  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   552                           IOCAF equ 0393h ;# 
   553  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   554                           IOCCP equ 0397h ;# 
   555  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   556                           IOCCN equ 0398h ;# 
   557  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   558                           IOCCF equ 0399h ;# 
   559  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   560                           OPA1CON equ 0511h ;# 
   561  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   562                           OPA2CON equ 0515h ;# 
   563  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   564                           PPSLOCK equ 0E0Fh ;# 
   565  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   566                           INTPPS equ 0E10h ;# 
   567  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   568                           T0CKIPPS equ 0E11h ;# 
   569  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   570                           T1CKIPPS equ 0E12h ;# 
   571  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   572                           T1GPPS equ 0E13h ;# 
   573  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   574                           CCP1PPS equ 0E14h ;# 
   575  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   576                           CCP2PPS equ 0E15h ;# 
   577  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   578                           SSPCLKPPS equ 0E20h ;# 
   579  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   580                           SSPDATPPS equ 0E21h ;# 
   581  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   582                           SSPSSPPS equ 0E22h ;# 
   583  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   584                           RA0PPS equ 0E90h ;# 
   585  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   586                           RA1PPS equ 0E91h ;# 
   587  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   588                           RA2PPS equ 0E92h ;# 
   589  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   590                           RA4PPS equ 0E94h ;# 
   591  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   592                           RA5PPS equ 0E95h ;# 
   593  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   594                           RC0PPS equ 0EA0h ;# 
   595  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   596                           RC1PPS equ 0EA1h ;# 
   597  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   598                           RC2PPS equ 0EA2h ;# 
   599  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   600                           RC3PPS equ 0EA3h ;# 
   601  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   602                           RC4PPS equ 0EA4h ;# 
   603  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   604                           RC5PPS equ 0EA5h ;# 
   605  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   606                           ICDBK0H equ 0F9Eh ;# 
   607  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   608                           STATUS_SHAD equ 0FE4h ;# 
   609  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   610                           WREG_SHAD equ 0FE5h ;# 
   611  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   612                           BSR_SHAD equ 0FE6h ;# 
   613  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   614                           PCLATH_SHAD equ 0FE7h ;# 
   615  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   616                           FSR0L_SHAD equ 0FE8h ;# 
   617  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   618                           FSR0H_SHAD equ 0FE9h ;# 
   619  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   620                           FSR1L_SHAD equ 0FEAh ;# 
   621  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   622                           FSR1H_SHAD equ 0FEBh ;# 
   623  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   624                           STKPTR equ 0FEDh ;# 
   625  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   626                           TOSL equ 0FEEh ;# 
   627  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   628                           TOSH equ 0FEFh ;# 
   629  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   630                           INDF0 equ 00h ;# 
   631  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   632                           INDF1 equ 01h ;# 
   633  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   634                           PCL equ 02h ;# 
   635  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   636                           STATUS equ 03h ;# 
   637  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   638                           FSR0L equ 04h ;# 
   639  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   640                           FSR0H equ 05h ;# 
   641  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   642                           FSR1L equ 06h ;# 
   643  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   644                           FSR1H equ 07h ;# 
   645  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   646                           BSR equ 08h ;# 
   647  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   648                           WREG equ 09h ;# 
   649  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   650                           PCLATH equ 0Ah ;# 
   651  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   652                           INTCON equ 0Bh ;# 
   653  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   654                           PORTA equ 0Ch ;# 
   655  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   656                           PORTC equ 0Eh ;# 
   657  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   658                           PIR1 equ 011h ;# 
   659  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   660                           PIR2 equ 012h ;# 
   661  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   662                           PIR3 equ 013h ;# 
   663  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   664                           TMR0 equ 015h ;# 
   665  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   666                           TMR1 equ 016h ;# 
   667  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   668                           TMR1L equ 016h ;# 
   669  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   670                           TMR1H equ 017h ;# 
   671  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   672                           T1CON equ 018h ;# 
   673  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   674                           T1GCON equ 019h ;# 
   675  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   676                           TMR2 equ 01Ah ;# 
   677  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   678                           PR2 equ 01Bh ;# 
   679  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   680                           T2CON equ 01Ch ;# 
   681  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   682                           TRISA equ 08Ch ;# 
   683  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   684                           TRISC equ 08Eh ;# 
   685  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   686                           PIE1 equ 091h ;# 
   687  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   688                           PIE2 equ 092h ;# 
   689  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   690                           PIE3 equ 093h ;# 
   691  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   692                           OPTION_REG equ 095h ;# 
   693  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   694                           PCON equ 096h ;# 
   695  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   696                           WDTCON equ 097h ;# 
   697  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   698                           OSCTUNE equ 098h ;# 
   699  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   700                           OSCCON equ 099h ;# 
   701  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   702                           OSCSTAT equ 09Ah ;# 
   703  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   704                           ADRES equ 09Bh ;# 
   705  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   706                           ADRESL equ 09Bh ;# 
   707  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   708                           ADRESH equ 09Ch ;# 
   709  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   710                           ADCON0 equ 09Dh ;# 
   711  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   712                           ADCON1 equ 09Eh ;# 
   713  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   714                           ADCON2 equ 09Fh ;# 
   715  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   716                           LATA equ 010Ch ;# 
   717  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   718                           LATC equ 010Eh ;# 
   719  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   720                           BORCON equ 0116h ;# 
   721  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   722                           FVRCON equ 0117h ;# 
   723  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   724                           ZCD1CON equ 011Ch ;# 
   725  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   726                           ANSELA equ 018Ch ;# 
   727  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   728                           ANSELC equ 018Eh ;# 
   729  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   730                           PMADR equ 0191h ;# 
   731  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   732                           PMADRL equ 0191h ;# 
   733  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   734                           PMADRH equ 0192h ;# 
   735  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   736                           PMDAT equ 0193h ;# 
   737  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   738                           PMDATL equ 0193h ;# 
   739  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   740                           PMDATH equ 0194h ;# 
   741  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   742                           PMCON1 equ 0195h ;# 
   743  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   744                           PMCON2 equ 0196h ;# 
   745  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   746                           VREGCON equ 0197h ;# 
   747  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   748                           WPUA equ 020Ch ;# 
   749  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   750                           WPUC equ 020Eh ;# 
   751  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   752                           SSP1BUF equ 0211h ;# 
   753  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   754                           SSPBUF equ 0211h ;# 
   755  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   756                           SSP1ADD equ 0212h ;# 
   757  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   758                           SSPADD equ 0212h ;# 
   759  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   760                           SSP1MSK equ 0213h ;# 
   761  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   762                           SSPMSK equ 0213h ;# 
   763  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   764                           SSP1STAT equ 0214h ;# 
   765  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   766                           SSPSTAT equ 0214h ;# 
   767  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   768                           SSP1CON1 equ 0215h ;# 
   769  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   770                           SSPCON equ 0215h ;# 
   771  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   772                           SSPCON1 equ 0215h ;# 
   773  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   774                           SSP1CON equ 0215h ;# 
   775  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   776                           SSP1CON2 equ 0216h ;# 
   777  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   778                           SSPCON2 equ 0216h ;# 
   779  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   780                           SSP1CON3 equ 0217h ;# 
   781  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   782                           SSPCON3 equ 0217h ;# 
   783  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   784                           ODCONA equ 028Ch ;# 
   785  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   786                           ODCONC equ 028Eh ;# 
   787  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   788                           CCPR1 equ 0291h ;# 
   789  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   790                           CCPR1L equ 0291h ;# 
   791  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   792                           CCPR1H equ 0292h ;# 
   793  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   794                           CCP1CON equ 0293h ;# 
   795  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   796                           ECCP1CON equ 0293h ;# 
   797  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   798                           CCPR2 equ 0298h ;# 
   799  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   800                           CCPR2L equ 0298h ;# 
   801  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   802                           CCPR2H equ 0299h ;# 
   803  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   804                           CCP2CON equ 029Ah ;# 
   805  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   806                           ECCP2CON equ 029Ah ;# 
   807  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   808                           SLRCONA equ 030Ch ;# 
   809  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   810                           SLRCONC equ 030Eh ;# 
   811  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   812                           INLVLA equ 038Ch ;# 
   813  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   814                           INLVLC equ 038Eh ;# 
   815  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   816                           IOCAP equ 0391h ;# 
   817  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   818                           IOCAN equ 0392h ;# 
   819  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   820                           IOCAF equ 0393h ;# 
   821  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   822                           IOCCP equ 0397h ;# 
   823  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   824                           IOCCN equ 0398h ;# 
   825  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   826                           IOCCF equ 0399h ;# 
   827  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   828                           OPA1CON equ 0511h ;# 
   829  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   830                           OPA2CON equ 0515h ;# 
   831  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   832                           PPSLOCK equ 0E0Fh ;# 
   833  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   834                           INTPPS equ 0E10h ;# 
   835  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   836                           T0CKIPPS equ 0E11h ;# 
   837  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   838                           T1CKIPPS equ 0E12h ;# 
   839  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   840                           T1GPPS equ 0E13h ;# 
   841  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   842                           CCP1PPS equ 0E14h ;# 
   843  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   844                           CCP2PPS equ 0E15h ;# 
   845  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   846                           SSPCLKPPS equ 0E20h ;# 
   847  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   848                           SSPDATPPS equ 0E21h ;# 
   849  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   850                           SSPSSPPS equ 0E22h ;# 
   851  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   852                           RA0PPS equ 0E90h ;# 
   853  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   854                           RA1PPS equ 0E91h ;# 
   855  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   856                           RA2PPS equ 0E92h ;# 
   857  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   858                           RA4PPS equ 0E94h ;# 
   859  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   860                           RA5PPS equ 0E95h ;# 
   861  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   862                           RC0PPS equ 0EA0h ;# 
   863  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   864                           RC1PPS equ 0EA1h ;# 
   865  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   866                           RC2PPS equ 0EA2h ;# 
   867  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   868                           RC3PPS equ 0EA3h ;# 
   869  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   870                           RC4PPS equ 0EA4h ;# 
   871  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   872                           RC5PPS equ 0EA5h ;# 
   873  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   874                           ICDBK0H equ 0F9Eh ;# 
   875  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   876                           STATUS_SHAD equ 0FE4h ;# 
   877  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   878                           WREG_SHAD equ 0FE5h ;# 
   879  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   880                           BSR_SHAD equ 0FE6h ;# 
   881  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   882                           PCLATH_SHAD equ 0FE7h ;# 
   883  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   884                           FSR0L_SHAD equ 0FE8h ;# 
   885  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   886                           FSR0H_SHAD equ 0FE9h ;# 
   887  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   888                           FSR1L_SHAD equ 0FEAh ;# 
   889  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   890                           FSR1H_SHAD equ 0FEBh ;# 
   891  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   892                           STKPTR equ 0FEDh ;# 
   893  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   894                           TOSL equ 0FEEh ;# 
   895  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   896                           TOSH equ 0FEFh ;# 
   897  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   898                           INDF0 equ 00h ;# 
   899  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   900                           INDF1 equ 01h ;# 
   901  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   902                           PCL equ 02h ;# 
   903  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   904                           STATUS equ 03h ;# 
   905  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   906                           FSR0L equ 04h ;# 
   907  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   908                           FSR0H equ 05h ;# 
   909  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   910                           FSR1L equ 06h ;# 
   911  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   912                           FSR1H equ 07h ;# 
   913  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   914                           BSR equ 08h ;# 
   915  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   916                           WREG equ 09h ;# 
   917  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   918                           PCLATH equ 0Ah ;# 
   919  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   920                           INTCON equ 0Bh ;# 
   921  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   922                           PORTA equ 0Ch ;# 
   923  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   924                           PORTC equ 0Eh ;# 
   925  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   926                           PIR1 equ 011h ;# 
   927  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   928                           PIR2 equ 012h ;# 
   929  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   930                           PIR3 equ 013h ;# 
   931  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   932                           TMR0 equ 015h ;# 
   933  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   934                           TMR1 equ 016h ;# 
   935  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   936                           TMR1L equ 016h ;# 
   937  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   938                           TMR1H equ 017h ;# 
   939  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   940                           T1CON equ 018h ;# 
   941  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   942                           T1GCON equ 019h ;# 
   943  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   944                           TMR2 equ 01Ah ;# 
   945  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   946                           PR2 equ 01Bh ;# 
   947  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   948                           T2CON equ 01Ch ;# 
   949  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   950                           TRISA equ 08Ch ;# 
   951  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   952                           TRISC equ 08Eh ;# 
   953  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   954                           PIE1 equ 091h ;# 
   955  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   956                           PIE2 equ 092h ;# 
   957  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   958                           PIE3 equ 093h ;# 
   959  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   960                           OPTION_REG equ 095h ;# 
   961  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   962                           PCON equ 096h ;# 
   963  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   964                           WDTCON equ 097h ;# 
   965  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   966                           OSCTUNE equ 098h ;# 
   967  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   968                           OSCCON equ 099h ;# 
   969  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   970                           OSCSTAT equ 09Ah ;# 
   971  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   972                           ADRES equ 09Bh ;# 
   973  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   974                           ADRESL equ 09Bh ;# 
   975  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   976                           ADRESH equ 09Ch ;# 
   977  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   978                           ADCON0 equ 09Dh ;# 
   979  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   980                           ADCON1 equ 09Eh ;# 
   981  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   982                           ADCON2 equ 09Fh ;# 
   983  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   984                           LATA equ 010Ch ;# 
   985  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   986                           LATC equ 010Eh ;# 
   987  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   988                           BORCON equ 0116h ;# 
   989  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   990                           FVRCON equ 0117h ;# 
   991  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   992                           ZCD1CON equ 011Ch ;# 
   993  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   994                           ANSELA equ 018Ch ;# 
   995  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   996                           ANSELC equ 018Eh ;# 
   997  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
   998                           PMADR equ 0191h ;# 
   999  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1000                           PMADRL equ 0191h ;# 
  1001  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1002                           PMADRH equ 0192h ;# 
  1003  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1004                           PMDAT equ 0193h ;# 
  1005  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1006                           PMDATL equ 0193h ;# 
  1007  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1008                           PMDATH equ 0194h ;# 
  1009  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1010                           PMCON1 equ 0195h ;# 
  1011  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1012                           PMCON2 equ 0196h ;# 
  1013  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1014                           VREGCON equ 0197h ;# 
  1015  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1016                           WPUA equ 020Ch ;# 
  1017  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1018                           WPUC equ 020Eh ;# 
  1019  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1020                           SSP1BUF equ 0211h ;# 
  1021  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1022                           SSPBUF equ 0211h ;# 
  1023  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1024                           SSP1ADD equ 0212h ;# 
  1025  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1026                           SSPADD equ 0212h ;# 
  1027  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1028                           SSP1MSK equ 0213h ;# 
  1029  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1030                           SSPMSK equ 0213h ;# 
  1031  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1032                           SSP1STAT equ 0214h ;# 
  1033  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1034                           SSPSTAT equ 0214h ;# 
  1035  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1036                           SSP1CON1 equ 0215h ;# 
  1037  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1038                           SSPCON equ 0215h ;# 
  1039  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1040                           SSPCON1 equ 0215h ;# 
  1041  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1042                           SSP1CON equ 0215h ;# 
  1043  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1044                           SSP1CON2 equ 0216h ;# 
  1045  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1046                           SSPCON2 equ 0216h ;# 
  1047  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1048                           SSP1CON3 equ 0217h ;# 
  1049  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1050                           SSPCON3 equ 0217h ;# 
  1051  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1052                           ODCONA equ 028Ch ;# 
  1053  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1054                           ODCONC equ 028Eh ;# 
  1055  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1056                           CCPR1 equ 0291h ;# 
  1057  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1058                           CCPR1L equ 0291h ;# 
  1059  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1060                           CCPR1H equ 0292h ;# 
  1061  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1062                           CCP1CON equ 0293h ;# 
  1063  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1064                           ECCP1CON equ 0293h ;# 
  1065  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1066                           CCPR2 equ 0298h ;# 
  1067  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1068                           CCPR2L equ 0298h ;# 
  1069  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1070                           CCPR2H equ 0299h ;# 
  1071  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1072                           CCP2CON equ 029Ah ;# 
  1073  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1074                           ECCP2CON equ 029Ah ;# 
  1075  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1076                           SLRCONA equ 030Ch ;# 
  1077  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1078                           SLRCONC equ 030Eh ;# 
  1079  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1080                           INLVLA equ 038Ch ;# 
  1081  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1082                           INLVLC equ 038Eh ;# 
  1083  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1084                           IOCAP equ 0391h ;# 
  1085  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1086                           IOCAN equ 0392h ;# 
  1087  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1088                           IOCAF equ 0393h ;# 
  1089  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1090                           IOCCP equ 0397h ;# 
  1091  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1092                           IOCCN equ 0398h ;# 
  1093  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1094                           IOCCF equ 0399h ;# 
  1095  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1096                           OPA1CON equ 0511h ;# 
  1097  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1098                           OPA2CON equ 0515h ;# 
  1099  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1100                           PPSLOCK equ 0E0Fh ;# 
  1101  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1102                           INTPPS equ 0E10h ;# 
  1103  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1104                           T0CKIPPS equ 0E11h ;# 
  1105  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1106                           T1CKIPPS equ 0E12h ;# 
  1107  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1108                           T1GPPS equ 0E13h ;# 
  1109  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1110                           CCP1PPS equ 0E14h ;# 
  1111  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1112                           CCP2PPS equ 0E15h ;# 
  1113  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1114                           SSPCLKPPS equ 0E20h ;# 
  1115  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1116                           SSPDATPPS equ 0E21h ;# 
  1117  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1118                           SSPSSPPS equ 0E22h ;# 
  1119  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1120                           RA0PPS equ 0E90h ;# 
  1121  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1122                           RA1PPS equ 0E91h ;# 
  1123  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1124                           RA2PPS equ 0E92h ;# 
  1125  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1126                           RA4PPS equ 0E94h ;# 
  1127  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1128                           RA5PPS equ 0E95h ;# 
  1129  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1130                           RC0PPS equ 0EA0h ;# 
  1131  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1132                           RC1PPS equ 0EA1h ;# 
  1133  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1134                           RC2PPS equ 0EA2h ;# 
  1135  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1136                           RC3PPS equ 0EA3h ;# 
  1137  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1138                           RC4PPS equ 0EA4h ;# 
  1139  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1140                           RC5PPS equ 0EA5h ;# 
  1141  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1142                           ICDBK0H equ 0F9Eh ;# 
  1143  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1144                           STATUS_SHAD equ 0FE4h ;# 
  1145  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1146                           WREG_SHAD equ 0FE5h ;# 
  1147  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1148                           BSR_SHAD equ 0FE6h ;# 
  1149  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1150                           PCLATH_SHAD equ 0FE7h ;# 
  1151  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1152                           FSR0L_SHAD equ 0FE8h ;# 
  1153  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1154                           FSR0H_SHAD equ 0FE9h ;# 
  1155  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1156                           FSR1L_SHAD equ 0FEAh ;# 
  1157  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1158                           FSR1H_SHAD equ 0FEBh ;# 
  1159  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1160                           STKPTR equ 0FEDh ;# 
  1161  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1162                           TOSL equ 0FEEh ;# 
  1163  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1164                           TOSH equ 0FEFh ;# 
  1165  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1166                           INDF0 equ 00h ;# 
  1167  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1168                           INDF1 equ 01h ;# 
  1169  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1170                           PCL equ 02h ;# 
  1171  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1172                           STATUS equ 03h ;# 
  1173  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1174                           FSR0L equ 04h ;# 
  1175  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1176                           FSR0H equ 05h ;# 
  1177  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1178                           FSR1L equ 06h ;# 
  1179  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1180                           FSR1H equ 07h ;# 
  1181  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1182                           BSR equ 08h ;# 
  1183  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1184                           WREG equ 09h ;# 
  1185  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1186                           PCLATH equ 0Ah ;# 
  1187  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1188                           INTCON equ 0Bh ;# 
  1189  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1190                           PORTA equ 0Ch ;# 
  1191  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1192                           PORTC equ 0Eh ;# 
  1193  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1194                           PIR1 equ 011h ;# 
  1195  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1196                           PIR2 equ 012h ;# 
  1197  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1198                           PIR3 equ 013h ;# 
  1199  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1200                           TMR0 equ 015h ;# 
  1201  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1202                           TMR1 equ 016h ;# 
  1203  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1204                           TMR1L equ 016h ;# 
  1205  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1206                           TMR1H equ 017h ;# 
  1207  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1208                           T1CON equ 018h ;# 
  1209  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1210                           T1GCON equ 019h ;# 
  1211  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1212                           TMR2 equ 01Ah ;# 
  1213  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1214                           PR2 equ 01Bh ;# 
  1215  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1216                           T2CON equ 01Ch ;# 
  1217  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1218                           TRISA equ 08Ch ;# 
  1219  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1220                           TRISC equ 08Eh ;# 
  1221  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1222                           PIE1 equ 091h ;# 
  1223  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1224                           PIE2 equ 092h ;# 
  1225  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1226                           PIE3 equ 093h ;# 
  1227  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1228                           OPTION_REG equ 095h ;# 
  1229  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1230                           PCON equ 096h ;# 
  1231  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1232                           WDTCON equ 097h ;# 
  1233  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1234                           OSCTUNE equ 098h ;# 
  1235  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1236                           OSCCON equ 099h ;# 
  1237  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1238                           OSCSTAT equ 09Ah ;# 
  1239  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1240                           ADRES equ 09Bh ;# 
  1241  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1242                           ADRESL equ 09Bh ;# 
  1243  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1244                           ADRESH equ 09Ch ;# 
  1245  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1246                           ADCON0 equ 09Dh ;# 
  1247  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1248                           ADCON1 equ 09Eh ;# 
  1249  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1250                           ADCON2 equ 09Fh ;# 
  1251  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1252                           LATA equ 010Ch ;# 
  1253  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1254                           LATC equ 010Eh ;# 
  1255  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1256                           BORCON equ 0116h ;# 
  1257  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1258                           FVRCON equ 0117h ;# 
  1259  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1260                           ZCD1CON equ 011Ch ;# 
  1261  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1262                           ANSELA equ 018Ch ;# 
  1263  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1264                           ANSELC equ 018Eh ;# 
  1265  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1266                           PMADR equ 0191h ;# 
  1267  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1268                           PMADRL equ 0191h ;# 
  1269  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1270                           PMADRH equ 0192h ;# 
  1271  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1272                           PMDAT equ 0193h ;# 
  1273  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1274                           PMDATL equ 0193h ;# 
  1275  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1276                           PMDATH equ 0194h ;# 
  1277  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1278                           PMCON1 equ 0195h ;# 
  1279  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1280                           PMCON2 equ 0196h ;# 
  1281  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1282                           VREGCON equ 0197h ;# 
  1283  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1284                           WPUA equ 020Ch ;# 
  1285  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1286                           WPUC equ 020Eh ;# 
  1287  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1288                           SSP1BUF equ 0211h ;# 
  1289  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1290                           SSPBUF equ 0211h ;# 
  1291  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1292                           SSP1ADD equ 0212h ;# 
  1293  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1294                           SSPADD equ 0212h ;# 
  1295  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1296                           SSP1MSK equ 0213h ;# 
  1297  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1298                           SSPMSK equ 0213h ;# 
  1299  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1300                           SSP1STAT equ 0214h ;# 
  1301  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1302                           SSPSTAT equ 0214h ;# 
  1303  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1304                           SSP1CON1 equ 0215h ;# 
  1305  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1306                           SSPCON equ 0215h ;# 
  1307  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1308                           SSPCON1 equ 0215h ;# 
  1309  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1310                           SSP1CON equ 0215h ;# 
  1311  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1312                           SSP1CON2 equ 0216h ;# 
  1313  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1314                           SSPCON2 equ 0216h ;# 
  1315  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1316                           SSP1CON3 equ 0217h ;# 
  1317  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1318                           SSPCON3 equ 0217h ;# 
  1319  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1320                           ODCONA equ 028Ch ;# 
  1321  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1322                           ODCONC equ 028Eh ;# 
  1323  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1324                           CCPR1 equ 0291h ;# 
  1325  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1326                           CCPR1L equ 0291h ;# 
  1327  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1328                           CCPR1H equ 0292h ;# 
  1329  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1330                           CCP1CON equ 0293h ;# 
  1331  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1332                           ECCP1CON equ 0293h ;# 
  1333  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1334                           CCPR2 equ 0298h ;# 
  1335  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1336                           CCPR2L equ 0298h ;# 
  1337  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1338                           CCPR2H equ 0299h ;# 
  1339  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1340                           CCP2CON equ 029Ah ;# 
  1341  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1342                           ECCP2CON equ 029Ah ;# 
  1343  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1344                           SLRCONA equ 030Ch ;# 
  1345  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1346                           SLRCONC equ 030Eh ;# 
  1347  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1348                           INLVLA equ 038Ch ;# 
  1349  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1350                           INLVLC equ 038Eh ;# 
  1351  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1352                           IOCAP equ 0391h ;# 
  1353  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1354                           IOCAN equ 0392h ;# 
  1355  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1356                           IOCAF equ 0393h ;# 
  1357  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1358                           IOCCP equ 0397h ;# 
  1359  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1360                           IOCCN equ 0398h ;# 
  1361  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1362                           IOCCF equ 0399h ;# 
  1363  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1364                           OPA1CON equ 0511h ;# 
  1365  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1366                           OPA2CON equ 0515h ;# 
  1367  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1368                           PPSLOCK equ 0E0Fh ;# 
  1369  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1370                           INTPPS equ 0E10h ;# 
  1371  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1372                           T0CKIPPS equ 0E11h ;# 
  1373  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1374                           T1CKIPPS equ 0E12h ;# 
  1375  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1376                           T1GPPS equ 0E13h ;# 
  1377  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1378                           CCP1PPS equ 0E14h ;# 
  1379  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1380                           CCP2PPS equ 0E15h ;# 
  1381  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1382                           SSPCLKPPS equ 0E20h ;# 
  1383  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1384                           SSPDATPPS equ 0E21h ;# 
  1385  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1386                           SSPSSPPS equ 0E22h ;# 
  1387  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1388                           RA0PPS equ 0E90h ;# 
  1389  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1390                           RA1PPS equ 0E91h ;# 
  1391  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1392                           RA2PPS equ 0E92h ;# 
  1393  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1394                           RA4PPS equ 0E94h ;# 
  1395  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1396                           RA5PPS equ 0E95h ;# 
  1397  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1398                           RC0PPS equ 0EA0h ;# 
  1399  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1400                           RC1PPS equ 0EA1h ;# 
  1401  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1402                           RC2PPS equ 0EA2h ;# 
  1403  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1404                           RC3PPS equ 0EA3h ;# 
  1405  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1406                           RC4PPS equ 0EA4h ;# 
  1407  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1408                           RC5PPS equ 0EA5h ;# 
  1409  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1410                           ICDBK0H equ 0F9Eh ;# 
  1411  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1412                           STATUS_SHAD equ 0FE4h ;# 
  1413  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1414                           WREG_SHAD equ 0FE5h ;# 
  1415  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1416                           BSR_SHAD equ 0FE6h ;# 
  1417  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1418                           PCLATH_SHAD equ 0FE7h ;# 
  1419  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1420                           FSR0L_SHAD equ 0FE8h ;# 
  1421  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1422                           FSR0H_SHAD equ 0FE9h ;# 
  1423  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1424                           FSR1L_SHAD equ 0FEAh ;# 
  1425  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1426                           FSR1H_SHAD equ 0FEBh ;# 
  1427  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1428                           STKPTR equ 0FEDh ;# 
  1429  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1430                           TOSL equ 0FEEh ;# 
  1431  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1432                           TOSH equ 0FEFh ;# 
  1433  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1434                           INDF0 equ 00h ;# 
  1435  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1436                           INDF1 equ 01h ;# 
  1437  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1438                           PCL equ 02h ;# 
  1439  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1440                           STATUS equ 03h ;# 
  1441  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1442                           FSR0L equ 04h ;# 
  1443  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1444                           FSR0H equ 05h ;# 
  1445  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1446                           FSR1L equ 06h ;# 
  1447  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1448                           FSR1H equ 07h ;# 
  1449  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1450                           BSR equ 08h ;# 
  1451  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1452                           WREG equ 09h ;# 
  1453  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1454                           PCLATH equ 0Ah ;# 
  1455  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1456                           INTCON equ 0Bh ;# 
  1457  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1458                           PORTA equ 0Ch ;# 
  1459  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1460                           PORTC equ 0Eh ;# 
  1461  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1462                           PIR1 equ 011h ;# 
  1463  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1464                           PIR2 equ 012h ;# 
  1465  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1466                           PIR3 equ 013h ;# 
  1467  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1468                           TMR0 equ 015h ;# 
  1469  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1470                           TMR1 equ 016h ;# 
  1471  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1472                           TMR1L equ 016h ;# 
  1473  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1474                           TMR1H equ 017h ;# 
  1475  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1476                           T1CON equ 018h ;# 
  1477  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1478                           T1GCON equ 019h ;# 
  1479  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1480                           TMR2 equ 01Ah ;# 
  1481  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1482                           PR2 equ 01Bh ;# 
  1483  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1484                           T2CON equ 01Ch ;# 
  1485  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1486                           TRISA equ 08Ch ;# 
  1487  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1488                           TRISC equ 08Eh ;# 
  1489  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1490                           PIE1 equ 091h ;# 
  1491  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1492                           PIE2 equ 092h ;# 
  1493  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1494                           PIE3 equ 093h ;# 
  1495  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1496                           OPTION_REG equ 095h ;# 
  1497  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1498                           PCON equ 096h ;# 
  1499  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1500                           WDTCON equ 097h ;# 
  1501  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1502                           OSCTUNE equ 098h ;# 
  1503  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1504                           OSCCON equ 099h ;# 
  1505  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1506                           OSCSTAT equ 09Ah ;# 
  1507  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1508                           ADRES equ 09Bh ;# 
  1509  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1510                           ADRESL equ 09Bh ;# 
  1511  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1512                           ADRESH equ 09Ch ;# 
  1513  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1514                           ADCON0 equ 09Dh ;# 
  1515  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1516                           ADCON1 equ 09Eh ;# 
  1517  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1518                           ADCON2 equ 09Fh ;# 
  1519  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1520                           LATA equ 010Ch ;# 
  1521  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1522                           LATC equ 010Eh ;# 
  1523  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1524                           BORCON equ 0116h ;# 
  1525  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1526                           FVRCON equ 0117h ;# 
  1527  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1528                           ZCD1CON equ 011Ch ;# 
  1529  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1530                           ANSELA equ 018Ch ;# 
  1531  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1532                           ANSELC equ 018Eh ;# 
  1533  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1534                           PMADR equ 0191h ;# 
  1535  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1536                           PMADRL equ 0191h ;# 
  1537  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1538                           PMADRH equ 0192h ;# 
  1539  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1540                           PMDAT equ 0193h ;# 
  1541  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1542                           PMDATL equ 0193h ;# 
  1543  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1544                           PMDATH equ 0194h ;# 
  1545  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1546                           PMCON1 equ 0195h ;# 
  1547  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1548                           PMCON2 equ 0196h ;# 
  1549  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1550                           VREGCON equ 0197h ;# 
  1551  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1552                           WPUA equ 020Ch ;# 
  1553  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1554                           WPUC equ 020Eh ;# 
  1555  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1556                           SSP1BUF equ 0211h ;# 
  1557  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1558                           SSPBUF equ 0211h ;# 
  1559  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1560                           SSP1ADD equ 0212h ;# 
  1561  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1562                           SSPADD equ 0212h ;# 
  1563  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1564                           SSP1MSK equ 0213h ;# 
  1565  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1566                           SSPMSK equ 0213h ;# 
  1567  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1568                           SSP1STAT equ 0214h ;# 
  1569  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1570                           SSPSTAT equ 0214h ;# 
  1571  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1572                           SSP1CON1 equ 0215h ;# 
  1573  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1574                           SSPCON equ 0215h ;# 
  1575  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1576                           SSPCON1 equ 0215h ;# 
  1577  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1578                           SSP1CON equ 0215h ;# 
  1579  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1580                           SSP1CON2 equ 0216h ;# 
  1581  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1582                           SSPCON2 equ 0216h ;# 
  1583  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1584                           SSP1CON3 equ 0217h ;# 
  1585  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1586                           SSPCON3 equ 0217h ;# 
  1587  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1588                           ODCONA equ 028Ch ;# 
  1589  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1590                           ODCONC equ 028Eh ;# 
  1591  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1592                           CCPR1 equ 0291h ;# 
  1593  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1594                           CCPR1L equ 0291h ;# 
  1595  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1596                           CCPR1H equ 0292h ;# 
  1597  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1598                           CCP1CON equ 0293h ;# 
  1599  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1600                           ECCP1CON equ 0293h ;# 
  1601  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1602                           CCPR2 equ 0298h ;# 
  1603  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1604                           CCPR2L equ 0298h ;# 
  1605  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1606                           CCPR2H equ 0299h ;# 
  1607  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1608                           CCP2CON equ 029Ah ;# 
  1609  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1610                           ECCP2CON equ 029Ah ;# 
  1611  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1612                           SLRCONA equ 030Ch ;# 
  1613  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1614                           SLRCONC equ 030Eh ;# 
  1615  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1616                           INLVLA equ 038Ch ;# 
  1617  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1618                           INLVLC equ 038Eh ;# 
  1619  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1620                           IOCAP equ 0391h ;# 
  1621  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1622                           IOCAN equ 0392h ;# 
  1623  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1624                           IOCAF equ 0393h ;# 
  1625  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1626                           IOCCP equ 0397h ;# 
  1627  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1628                           IOCCN equ 0398h ;# 
  1629  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1630                           IOCCF equ 0399h ;# 
  1631  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1632                           OPA1CON equ 0511h ;# 
  1633  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1634                           OPA2CON equ 0515h ;# 
  1635  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1636                           PPSLOCK equ 0E0Fh ;# 
  1637  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1638                           INTPPS equ 0E10h ;# 
  1639  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1640                           T0CKIPPS equ 0E11h ;# 
  1641  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1642                           T1CKIPPS equ 0E12h ;# 
  1643  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1644                           T1GPPS equ 0E13h ;# 
  1645  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1646                           CCP1PPS equ 0E14h ;# 
  1647  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1648                           CCP2PPS equ 0E15h ;# 
  1649  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1650                           SSPCLKPPS equ 0E20h ;# 
  1651  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1652                           SSPDATPPS equ 0E21h ;# 
  1653  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1654                           SSPSSPPS equ 0E22h ;# 
  1655  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1656                           RA0PPS equ 0E90h ;# 
  1657  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1658                           RA1PPS equ 0E91h ;# 
  1659  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1660                           RA2PPS equ 0E92h ;# 
  1661  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1662                           RA4PPS equ 0E94h ;# 
  1663  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1664                           RA5PPS equ 0E95h ;# 
  1665  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1666                           RC0PPS equ 0EA0h ;# 
  1667  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1668                           RC1PPS equ 0EA1h ;# 
  1669  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1670                           RC2PPS equ 0EA2h ;# 
  1671  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1672                           RC3PPS equ 0EA3h ;# 
  1673  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1674                           RC4PPS equ 0EA4h ;# 
  1675  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1676                           RC5PPS equ 0EA5h ;# 
  1677  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1678                           ICDBK0H equ 0F9Eh ;# 
  1679  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1680                           STATUS_SHAD equ 0FE4h ;# 
  1681  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1682                           WREG_SHAD equ 0FE5h ;# 
  1683  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1684                           BSR_SHAD equ 0FE6h ;# 
  1685  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1686                           PCLATH_SHAD equ 0FE7h ;# 
  1687  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1688                           FSR0L_SHAD equ 0FE8h ;# 
  1689  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1690                           FSR0H_SHAD equ 0FE9h ;# 
  1691  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1692                           FSR1L_SHAD equ 0FEAh ;# 
  1693  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1694                           FSR1H_SHAD equ 0FEBh ;# 
  1695  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1696                           STKPTR equ 0FEDh ;# 
  1697  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1698                           TOSL equ 0FEEh ;# 
  1699  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1700                           TOSH equ 0FEFh ;# 
  1701  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1702                           INDF0 equ 00h ;# 
  1703  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1704                           INDF1 equ 01h ;# 
  1705  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1706                           PCL equ 02h ;# 
  1707  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1708                           STATUS equ 03h ;# 
  1709  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1710                           FSR0L equ 04h ;# 
  1711  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1712                           FSR0H equ 05h ;# 
  1713  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1714                           FSR1L equ 06h ;# 
  1715  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1716                           FSR1H equ 07h ;# 
  1717  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1718                           BSR equ 08h ;# 
  1719  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1720                           WREG equ 09h ;# 
  1721  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1722                           PCLATH equ 0Ah ;# 
  1723  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1724                           INTCON equ 0Bh ;# 
  1725  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1726                           PORTA equ 0Ch ;# 
  1727  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1728                           PORTC equ 0Eh ;# 
  1729  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1730                           PIR1 equ 011h ;# 
  1731  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1732                           PIR2 equ 012h ;# 
  1733  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1734                           PIR3 equ 013h ;# 
  1735  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1736                           TMR0 equ 015h ;# 
  1737  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1738                           TMR1 equ 016h ;# 
  1739  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1740                           TMR1L equ 016h ;# 
  1741  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1742                           TMR1H equ 017h ;# 
  1743  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1744                           T1CON equ 018h ;# 
  1745  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1746                           T1GCON equ 019h ;# 
  1747  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1748                           TMR2 equ 01Ah ;# 
  1749  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1750                           PR2 equ 01Bh ;# 
  1751  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1752                           T2CON equ 01Ch ;# 
  1753  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1754                           TRISA equ 08Ch ;# 
  1755  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1756                           TRISC equ 08Eh ;# 
  1757  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1758                           PIE1 equ 091h ;# 
  1759  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1760                           PIE2 equ 092h ;# 
  1761  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1762                           PIE3 equ 093h ;# 
  1763  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1764                           OPTION_REG equ 095h ;# 
  1765  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1766                           PCON equ 096h ;# 
  1767  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1768                           WDTCON equ 097h ;# 
  1769  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1770                           OSCTUNE equ 098h ;# 
  1771  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1772                           OSCCON equ 099h ;# 
  1773  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1774                           OSCSTAT equ 09Ah ;# 
  1775  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1776                           ADRES equ 09Bh ;# 
  1777  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1778                           ADRESL equ 09Bh ;# 
  1779  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1780                           ADRESH equ 09Ch ;# 
  1781  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1782                           ADCON0 equ 09Dh ;# 
  1783  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1784                           ADCON1 equ 09Eh ;# 
  1785  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1786                           ADCON2 equ 09Fh ;# 
  1787  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1788                           LATA equ 010Ch ;# 
  1789  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1790                           LATC equ 010Eh ;# 
  1791  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1792                           BORCON equ 0116h ;# 
  1793  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1794                           FVRCON equ 0117h ;# 
  1795  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1796                           ZCD1CON equ 011Ch ;# 
  1797  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1798                           ANSELA equ 018Ch ;# 
  1799  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1800                           ANSELC equ 018Eh ;# 
  1801  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1802                           PMADR equ 0191h ;# 
  1803  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1804                           PMADRL equ 0191h ;# 
  1805  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1806                           PMADRH equ 0192h ;# 
  1807  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1808                           PMDAT equ 0193h ;# 
  1809  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1810                           PMDATL equ 0193h ;# 
  1811  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1812                           PMDATH equ 0194h ;# 
  1813  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1814                           PMCON1 equ 0195h ;# 
  1815  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1816                           PMCON2 equ 0196h ;# 
  1817  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1818                           VREGCON equ 0197h ;# 
  1819  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1820                           WPUA equ 020Ch ;# 
  1821  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1822                           WPUC equ 020Eh ;# 
  1823  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1824                           SSP1BUF equ 0211h ;# 
  1825  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1826                           SSPBUF equ 0211h ;# 
  1827  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1828                           SSP1ADD equ 0212h ;# 
  1829  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1830                           SSPADD equ 0212h ;# 
  1831  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1832                           SSP1MSK equ 0213h ;# 
  1833  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1834                           SSPMSK equ 0213h ;# 
  1835  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1836                           SSP1STAT equ 0214h ;# 
  1837  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1838                           SSPSTAT equ 0214h ;# 
  1839  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1840                           SSP1CON1 equ 0215h ;# 
  1841  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1842                           SSPCON equ 0215h ;# 
  1843  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1844                           SSPCON1 equ 0215h ;# 
  1845  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1846                           SSP1CON equ 0215h ;# 
  1847  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1848                           SSP1CON2 equ 0216h ;# 
  1849  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1850                           SSPCON2 equ 0216h ;# 
  1851  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1852                           SSP1CON3 equ 0217h ;# 
  1853  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1854                           SSPCON3 equ 0217h ;# 
  1855  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1856                           ODCONA equ 028Ch ;# 
  1857  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1858                           ODCONC equ 028Eh ;# 
  1859  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1860                           CCPR1 equ 0291h ;# 
  1861  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1862                           CCPR1L equ 0291h ;# 
  1863  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1864                           CCPR1H equ 0292h ;# 
  1865  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1866                           CCP1CON equ 0293h ;# 
  1867  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1868                           ECCP1CON equ 0293h ;# 
  1869  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1870                           CCPR2 equ 0298h ;# 
  1871  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1872                           CCPR2L equ 0298h ;# 
  1873  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1874                           CCPR2H equ 0299h ;# 
  1875  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1876                           CCP2CON equ 029Ah ;# 
  1877  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1878                           ECCP2CON equ 029Ah ;# 
  1879  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1880                           SLRCONA equ 030Ch ;# 
  1881  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1882                           SLRCONC equ 030Eh ;# 
  1883  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1884                           INLVLA equ 038Ch ;# 
  1885  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1886                           INLVLC equ 038Eh ;# 
  1887  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1888                           IOCAP equ 0391h ;# 
  1889  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1890                           IOCAN equ 0392h ;# 
  1891  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1892                           IOCAF equ 0393h ;# 
  1893  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1894                           IOCCP equ 0397h ;# 
  1895  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1896                           IOCCN equ 0398h ;# 
  1897  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1898                           IOCCF equ 0399h ;# 
  1899  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1900                           OPA1CON equ 0511h ;# 
  1901  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1902                           OPA2CON equ 0515h ;# 
  1903  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1904                           PPSLOCK equ 0E0Fh ;# 
  1905  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1906                           INTPPS equ 0E10h ;# 
  1907  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1908                           T0CKIPPS equ 0E11h ;# 
  1909  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1910                           T1CKIPPS equ 0E12h ;# 
  1911  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1912                           T1GPPS equ 0E13h ;# 
  1913  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1914                           CCP1PPS equ 0E14h ;# 
  1915  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1916                           CCP2PPS equ 0E15h ;# 
  1917  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1918                           SSPCLKPPS equ 0E20h ;# 
  1919  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1920                           SSPDATPPS equ 0E21h ;# 
  1921  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1922                           SSPSSPPS equ 0E22h ;# 
  1923  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1924                           RA0PPS equ 0E90h ;# 
  1925  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1926                           RA1PPS equ 0E91h ;# 
  1927  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1928                           RA2PPS equ 0E92h ;# 
  1929  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1930                           RA4PPS equ 0E94h ;# 
  1931  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1932                           RA5PPS equ 0E95h ;# 
  1933  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1934                           RC0PPS equ 0EA0h ;# 
  1935  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1936                           RC1PPS equ 0EA1h ;# 
  1937  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1938                           RC2PPS equ 0EA2h ;# 
  1939  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1940                           RC3PPS equ 0EA3h ;# 
  1941  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1942                           RC4PPS equ 0EA4h ;# 
  1943  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1944                           RC5PPS equ 0EA5h ;# 
  1945  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1946                           ICDBK0H equ 0F9Eh ;# 
  1947  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1948                           STATUS_SHAD equ 0FE4h ;# 
  1949  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1950                           WREG_SHAD equ 0FE5h ;# 
  1951  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1952                           BSR_SHAD equ 0FE6h ;# 
  1953  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1954                           PCLATH_SHAD equ 0FE7h ;# 
  1955  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1956                           FSR0L_SHAD equ 0FE8h ;# 
  1957  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1958                           FSR0H_SHAD equ 0FE9h ;# 
  1959  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1960                           FSR1L_SHAD equ 0FEAh ;# 
  1961  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1962                           FSR1H_SHAD equ 0FEBh ;# 
  1963  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1964                           STKPTR equ 0FEDh ;# 
  1965  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1966                           TOSL equ 0FEEh ;# 
  1967  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1968                           TOSH equ 0FEFh ;# 
  1969  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1970                           INDF0 equ 00h ;# 
  1971  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1972                           INDF1 equ 01h ;# 
  1973  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1974                           PCL equ 02h ;# 
  1975  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1976                           STATUS equ 03h ;# 
  1977  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1978                           FSR0L equ 04h ;# 
  1979  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1980                           FSR0H equ 05h ;# 
  1981  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1982                           FSR1L equ 06h ;# 
  1983  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1984                           FSR1H equ 07h ;# 
  1985  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1986                           BSR equ 08h ;# 
  1987  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1988                           WREG equ 09h ;# 
  1989  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1990                           PCLATH equ 0Ah ;# 
  1991  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1992                           INTCON equ 0Bh ;# 
  1993  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1994                           PORTA equ 0Ch ;# 
  1995  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1996                           PORTC equ 0Eh ;# 
  1997  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  1998                           PIR1 equ 011h ;# 
  1999  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2000                           PIR2 equ 012h ;# 
  2001  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2002                           PIR3 equ 013h ;# 
  2003  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2004                           TMR0 equ 015h ;# 
  2005  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2006                           TMR1 equ 016h ;# 
  2007  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2008                           TMR1L equ 016h ;# 
  2009  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2010                           TMR1H equ 017h ;# 
  2011  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2012                           T1CON equ 018h ;# 
  2013  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2014                           T1GCON equ 019h ;# 
  2015  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2016                           TMR2 equ 01Ah ;# 
  2017  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2018                           PR2 equ 01Bh ;# 
  2019  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2020                           T2CON equ 01Ch ;# 
  2021  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2022                           TRISA equ 08Ch ;# 
  2023  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2024                           TRISC equ 08Eh ;# 
  2025  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2026                           PIE1 equ 091h ;# 
  2027  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2028                           PIE2 equ 092h ;# 
  2029  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2030                           PIE3 equ 093h ;# 
  2031  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2032                           OPTION_REG equ 095h ;# 
  2033  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2034                           PCON equ 096h ;# 
  2035  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2036                           WDTCON equ 097h ;# 
  2037  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2038                           OSCTUNE equ 098h ;# 
  2039  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2040                           OSCCON equ 099h ;# 
  2041  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2042                           OSCSTAT equ 09Ah ;# 
  2043  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2044                           ADRES equ 09Bh ;# 
  2045  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2046                           ADRESL equ 09Bh ;# 
  2047  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2048                           ADRESH equ 09Ch ;# 
  2049  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2050                           ADCON0 equ 09Dh ;# 
  2051  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2052                           ADCON1 equ 09Eh ;# 
  2053  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2054                           ADCON2 equ 09Fh ;# 
  2055  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2056                           LATA equ 010Ch ;# 
  2057  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2058                           LATC equ 010Eh ;# 
  2059  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2060                           BORCON equ 0116h ;# 
  2061  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2062                           FVRCON equ 0117h ;# 
  2063  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2064                           ZCD1CON equ 011Ch ;# 
  2065  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2066                           ANSELA equ 018Ch ;# 
  2067  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2068                           ANSELC equ 018Eh ;# 
  2069  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2070                           PMADR equ 0191h ;# 
  2071  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2072                           PMADRL equ 0191h ;# 
  2073  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2074                           PMADRH equ 0192h ;# 
  2075  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2076                           PMDAT equ 0193h ;# 
  2077  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2078                           PMDATL equ 0193h ;# 
  2079  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2080                           PMDATH equ 0194h ;# 
  2081  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2082                           PMCON1 equ 0195h ;# 
  2083  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2084                           PMCON2 equ 0196h ;# 
  2085  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2086                           VREGCON equ 0197h ;# 
  2087  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2088                           WPUA equ 020Ch ;# 
  2089  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2090                           WPUC equ 020Eh ;# 
  2091  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2092                           SSP1BUF equ 0211h ;# 
  2093  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2094                           SSPBUF equ 0211h ;# 
  2095  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2096                           SSP1ADD equ 0212h ;# 
  2097  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2098                           SSPADD equ 0212h ;# 
  2099  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2100                           SSP1MSK equ 0213h ;# 
  2101  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2102                           SSPMSK equ 0213h ;# 
  2103  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2104                           SSP1STAT equ 0214h ;# 
  2105  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2106                           SSPSTAT equ 0214h ;# 
  2107  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2108                           SSP1CON1 equ 0215h ;# 
  2109  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2110                           SSPCON equ 0215h ;# 
  2111  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2112                           SSPCON1 equ 0215h ;# 
  2113  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2114                           SSP1CON equ 0215h ;# 
  2115  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2116                           SSP1CON2 equ 0216h ;# 
  2117  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2118                           SSPCON2 equ 0216h ;# 
  2119  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2120                           SSP1CON3 equ 0217h ;# 
  2121  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2122                           SSPCON3 equ 0217h ;# 
  2123  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2124                           ODCONA equ 028Ch ;# 
  2125  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2126                           ODCONC equ 028Eh ;# 
  2127  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2128                           CCPR1 equ 0291h ;# 
  2129  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2130                           CCPR1L equ 0291h ;# 
  2131  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2132                           CCPR1H equ 0292h ;# 
  2133  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2134                           CCP1CON equ 0293h ;# 
  2135  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2136                           ECCP1CON equ 0293h ;# 
  2137  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2138                           CCPR2 equ 0298h ;# 
  2139  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2140                           CCPR2L equ 0298h ;# 
  2141  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2142                           CCPR2H equ 0299h ;# 
  2143  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2144                           CCP2CON equ 029Ah ;# 
  2145  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2146                           ECCP2CON equ 029Ah ;# 
  2147  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2148                           SLRCONA equ 030Ch ;# 
  2149  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2150                           SLRCONC equ 030Eh ;# 
  2151  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2152                           INLVLA equ 038Ch ;# 
  2153  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2154                           INLVLC equ 038Eh ;# 
  2155  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2156                           IOCAP equ 0391h ;# 
  2157  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2158                           IOCAN equ 0392h ;# 
  2159  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2160                           IOCAF equ 0393h ;# 
  2161  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2162                           IOCCP equ 0397h ;# 
  2163  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2164                           IOCCN equ 0398h ;# 
  2165  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2166                           IOCCF equ 0399h ;# 
  2167  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2168                           OPA1CON equ 0511h ;# 
  2169  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2170                           OPA2CON equ 0515h ;# 
  2171  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2172                           PPSLOCK equ 0E0Fh ;# 
  2173  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2174                           INTPPS equ 0E10h ;# 
  2175  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2176                           T0CKIPPS equ 0E11h ;# 
  2177  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2178                           T1CKIPPS equ 0E12h ;# 
  2179  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2180                           T1GPPS equ 0E13h ;# 
  2181  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2182                           CCP1PPS equ 0E14h ;# 
  2183  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2184                           CCP2PPS equ 0E15h ;# 
  2185  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2186                           SSPCLKPPS equ 0E20h ;# 
  2187  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2188                           SSPDATPPS equ 0E21h ;# 
  2189  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2190                           SSPSSPPS equ 0E22h ;# 
  2191  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2192                           RA0PPS equ 0E90h ;# 
  2193  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2194                           RA1PPS equ 0E91h ;# 
  2195  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2196                           RA2PPS equ 0E92h ;# 
  2197  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2198                           RA4PPS equ 0E94h ;# 
  2199  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2200                           RA5PPS equ 0E95h ;# 
  2201  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2202                           RC0PPS equ 0EA0h ;# 
  2203  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2204                           RC1PPS equ 0EA1h ;# 
  2205  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2206                           RC2PPS equ 0EA2h ;# 
  2207  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2208                           RC3PPS equ 0EA3h ;# 
  2209  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2210                           RC4PPS equ 0EA4h ;# 
  2211  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2212                           RC5PPS equ 0EA5h ;# 
  2213  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2214                           ICDBK0H equ 0F9Eh ;# 
  2215  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2216                           STATUS_SHAD equ 0FE4h ;# 
  2217  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2218                           WREG_SHAD equ 0FE5h ;# 
  2219  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2220                           BSR_SHAD equ 0FE6h ;# 
  2221  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2222                           PCLATH_SHAD equ 0FE7h ;# 
  2223  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2224                           FSR0L_SHAD equ 0FE8h ;# 
  2225  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2226                           FSR0H_SHAD equ 0FE9h ;# 
  2227  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2228                           FSR1L_SHAD equ 0FEAh ;# 
  2229  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2230                           FSR1H_SHAD equ 0FEBh ;# 
  2231  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2232                           STKPTR equ 0FEDh ;# 
  2233  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2234                           TOSL equ 0FEEh ;# 
  2235  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2236                           TOSH equ 0FEFh ;# 
  2237  0FEF                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2238                           INDF0 equ 00h ;# 
  2239  0000                     # 74 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2240                           INDF1 equ 01h ;# 
  2241  0001                     # 94 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2242                           PCL equ 02h ;# 
  2243  0002                     # 114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2244                           STATUS equ 03h ;# 
  2245  0003                     # 177 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2246                           FSR0L equ 04h ;# 
  2247  0004                     # 197 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2248                           FSR0H equ 05h ;# 
  2249  0005                     # 221 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2250                           FSR1L equ 06h ;# 
  2251  0006                     # 241 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2252                           FSR1H equ 07h ;# 
  2253  0007                     # 261 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2254                           BSR equ 08h ;# 
  2255  0008                     # 313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2256                           WREG equ 09h ;# 
  2257  0009                     # 333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2258                           PCLATH equ 0Ah ;# 
  2259  000A                     # 353 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2260                           INTCON equ 0Bh ;# 
  2261  000B                     # 431 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2262                           PORTA equ 0Ch ;# 
  2263  000C                     # 481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2264                           PORTC equ 0Eh ;# 
  2265  000E                     # 531 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2266                           PIR1 equ 011h ;# 
  2267  0011                     # 591 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2268                           PIR2 equ 012h ;# 
  2269  0012                     # 618 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2270                           PIR3 equ 013h ;# 
  2271  0013                     # 639 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2272                           TMR0 equ 015h ;# 
  2273  0015                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2274                           TMR1 equ 016h ;# 
  2275  0016                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2276                           TMR1L equ 016h ;# 
  2277  0016                     # 686 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2278                           TMR1H equ 017h ;# 
  2279  0017                     # 706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2280                           T1CON equ 018h ;# 
  2281  0018                     # 778 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2282                           T1GCON equ 019h ;# 
  2283  0019                     # 848 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2284                           TMR2 equ 01Ah ;# 
  2285  001A                     # 868 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2286                           PR2 equ 01Bh ;# 
  2287  001B                     # 888 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2288                           T2CON equ 01Ch ;# 
  2289  001C                     # 959 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2290                           TRISA equ 08Ch ;# 
  2291  008C                     # 1004 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2292                           TRISC equ 08Eh ;# 
  2293  008E                     # 1054 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2294                           PIE1 equ 091h ;# 
  2295  0091                     # 1114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2296                           PIE2 equ 092h ;# 
  2297  0092                     # 1141 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2298                           PIE3 equ 093h ;# 
  2299  0093                     # 1162 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2300                           OPTION_REG equ 095h ;# 
  2301  0095                     # 1245 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2302                           PCON equ 096h ;# 
  2303  0096                     # 1302 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2304                           WDTCON equ 097h ;# 
  2305  0097                     # 1361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2306                           OSCTUNE equ 098h ;# 
  2307  0098                     # 1419 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2308                           OSCCON equ 099h ;# 
  2309  0099                     # 1491 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2310                           OSCSTAT equ 09Ah ;# 
  2311  009A                     # 1553 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2312                           ADRES equ 09Bh ;# 
  2313  009B                     # 1560 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2314                           ADRESL equ 09Bh ;# 
  2315  009B                     # 1580 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2316                           ADRESH equ 09Ch ;# 
  2317  009C                     # 1600 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2318                           ADCON0 equ 09Dh ;# 
  2319  009D                     # 1680 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2320                           ADCON1 equ 09Eh ;# 
  2321  009E                     # 1733 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2322                           ADCON2 equ 09Fh ;# 
  2323  009F                     # 1781 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2324                           LATA equ 010Ch ;# 
  2325  010C                     # 1826 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2326                           LATC equ 010Eh ;# 
  2327  010E                     # 1876 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2328                           BORCON equ 0116h ;# 
  2329  0116                     # 1909 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2330                           FVRCON equ 0117h ;# 
  2331  0117                     # 1985 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2332                           ZCD1CON equ 011Ch ;# 
  2333  011C                     # 2031 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2334                           ANSELA equ 018Ch ;# 
  2335  018C                     # 2070 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2336                           ANSELC equ 018Eh ;# 
  2337  018E                     # 2120 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2338                           PMADR equ 0191h ;# 
  2339  0191                     # 2127 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2340                           PMADRL equ 0191h ;# 
  2341  0191                     # 2147 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2342                           PMADRH equ 0192h ;# 
  2343  0192                     # 2167 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2344                           PMDAT equ 0193h ;# 
  2345  0193                     # 2174 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2346                           PMDATL equ 0193h ;# 
  2347  0193                     # 2194 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2348                           PMDATH equ 0194h ;# 
  2349  0194                     # 2214 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2350                           PMCON1 equ 0195h ;# 
  2351  0195                     # 2270 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2352                           PMCON2 equ 0196h ;# 
  2353  0196                     # 2290 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2354                           VREGCON equ 0197h ;# 
  2355  0197                     # 2311 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2356                           WPUA equ 020Ch ;# 
  2357  020C                     # 2361 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2358                           WPUC equ 020Eh ;# 
  2359  020E                     # 2411 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2360                           SSP1BUF equ 0211h ;# 
  2361  0211                     # 2416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2362                           SSPBUF equ 0211h ;# 
  2363  0211                     # 2665 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2364                           SSP1ADD equ 0212h ;# 
  2365  0212                     # 2670 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2366                           SSPADD equ 0212h ;# 
  2367  0212                     # 2919 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2368                           SSP1MSK equ 0213h ;# 
  2369  0213                     # 2924 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2370                           SSPMSK equ 0213h ;# 
  2371  0213                     # 3173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2372                           SSP1STAT equ 0214h ;# 
  2373  0214                     # 3178 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2374                           SSPSTAT equ 0214h ;# 
  2375  0214                     # 3295 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2376                           SSP1CON1 equ 0215h ;# 
  2377  0215                     # 3300 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2378                           SSPCON equ 0215h ;# 
  2379  0215                     # 3304 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2380                           SSPCON1 equ 0215h ;# 
  2381  0215                     # 3308 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2382                           SSP1CON equ 0215h ;# 
  2383  0215                     # 3565 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2384                           SSP1CON2 equ 0216h ;# 
  2385  0216                     # 3570 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2386                           SSPCON2 equ 0216h ;# 
  2387  0216                     # 3687 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2388                           SSP1CON3 equ 0217h ;# 
  2389  0217                     # 3692 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2390                           SSPCON3 equ 0217h ;# 
  2391  0217                     # 3809 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2392                           ODCONA equ 028Ch ;# 
  2393  028C                     # 3854 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2394                           ODCONC equ 028Eh ;# 
  2395  028E                     # 3904 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2396                           CCPR1 equ 0291h ;# 
  2397  0291                     # 3911 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2398                           CCPR1L equ 0291h ;# 
  2399  0291                     # 3931 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2400                           CCPR1H equ 0292h ;# 
  2401  0292                     # 3951 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2402                           CCP1CON equ 0293h ;# 
  2403  0293                     # 3956 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2404                           ECCP1CON equ 0293h ;# 
  2405  0293                     # 4107 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2406                           CCPR2 equ 0298h ;# 
  2407  0298                     # 4114 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2408                           CCPR2L equ 0298h ;# 
  2409  0298                     # 4134 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2410                           CCPR2H equ 0299h ;# 
  2411  0299                     # 4154 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2412                           CCP2CON equ 029Ah ;# 
  2413  029A                     # 4159 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2414                           ECCP2CON equ 029Ah ;# 
  2415  029A                     # 4310 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2416                           SLRCONA equ 030Ch ;# 
  2417  030C                     # 4355 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2418                           SLRCONC equ 030Eh ;# 
  2419  030E                     # 4405 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2420                           INLVLA equ 038Ch ;# 
  2421  038C                     # 4455 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2422                           INLVLC equ 038Eh ;# 
  2423  038E                     # 4505 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2424                           IOCAP equ 0391h ;# 
  2425  0391                     # 4555 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2426                           IOCAN equ 0392h ;# 
  2427  0392                     # 4605 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2428                           IOCAF equ 0393h ;# 
  2429  0393                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2430                           IOCCP equ 0397h ;# 
  2431  0397                     # 4705 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2432                           IOCCN equ 0398h ;# 
  2433  0398                     # 4755 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2434                           IOCCF equ 0399h ;# 
  2435  0399                     # 4805 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2436                           OPA1CON equ 0511h ;# 
  2437  0511                     # 4859 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2438                           OPA2CON equ 0515h ;# 
  2439  0515                     # 4913 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2440                           PPSLOCK equ 0E0Fh ;# 
  2441  0E0F                     # 4933 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2442                           INTPPS equ 0E10h ;# 
  2443  0E10                     # 4953 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2444                           T0CKIPPS equ 0E11h ;# 
  2445  0E11                     # 4973 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2446                           T1CKIPPS equ 0E12h ;# 
  2447  0E12                     # 4993 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2448                           T1GPPS equ 0E13h ;# 
  2449  0E13                     # 5013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2450                           CCP1PPS equ 0E14h ;# 
  2451  0E14                     # 5033 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2452                           CCP2PPS equ 0E15h ;# 
  2453  0E15                     # 5053 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2454                           SSPCLKPPS equ 0E20h ;# 
  2455  0E20                     # 5073 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2456                           SSPDATPPS equ 0E21h ;# 
  2457  0E21                     # 5093 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2458                           SSPSSPPS equ 0E22h ;# 
  2459  0E22                     # 5113 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2460                           RA0PPS equ 0E90h ;# 
  2461  0E90                     # 5133 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2462                           RA1PPS equ 0E91h ;# 
  2463  0E91                     # 5153 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2464                           RA2PPS equ 0E92h ;# 
  2465  0E92                     # 5173 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2466                           RA4PPS equ 0E94h ;# 
  2467  0E94                     # 5193 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2468                           RA5PPS equ 0E95h ;# 
  2469  0E95                     # 5213 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2470                           RC0PPS equ 0EA0h ;# 
  2471  0EA0                     # 5233 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2472                           RC1PPS equ 0EA1h ;# 
  2473  0EA1                     # 5253 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2474                           RC2PPS equ 0EA2h ;# 
  2475  0EA2                     # 5273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2476                           RC3PPS equ 0EA3h ;# 
  2477  0EA3                     # 5293 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2478                           RC4PPS equ 0EA4h ;# 
  2479  0EA4                     # 5313 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2480                           RC5PPS equ 0EA5h ;# 
  2481  0EA5                     # 5333 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2482                           ICDBK0H equ 0F9Eh ;# 
  2483  0F9E                     # 5389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2484                           STATUS_SHAD equ 0FE4h ;# 
  2485  0FE4                     # 5421 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2486                           WREG_SHAD equ 0FE5h ;# 
  2487  0FE5                     # 5441 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2488                           BSR_SHAD equ 0FE6h ;# 
  2489  0FE6                     # 5461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2490                           PCLATH_SHAD equ 0FE7h ;# 
  2491  0FE7                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2492                           FSR0L_SHAD equ 0FE8h ;# 
  2493  0FE8                     # 5501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2494                           FSR0H_SHAD equ 0FE9h ;# 
  2495  0FE9                     # 5521 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2496                           FSR1L_SHAD equ 0FEAh ;# 
  2497  0FEA                     # 5541 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2498                           FSR1H_SHAD equ 0FEBh ;# 
  2499  0FEB                     # 5561 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2500                           STKPTR equ 0FEDh ;# 
  2501  0FED                     # 5581 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2502                           TOSL equ 0FEEh ;# 
  2503  0FEE                     # 5601 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f1703.h"
  2504                           TOSH equ 0FEFh ;# 
  2505  0FEF                     	FNCALL	_main,_MTOUCH_Button_isPressed
  2506                           	FNCALL	_main,_MTOUCH_Service_Mainloop
  2507                           	FNCALL	_main,_SYSTEM_Initialize
  2508                           	FNCALL	_SYSTEM_Initialize,_MTOUCH_Initialize
  2509                           	FNCALL	_SYSTEM_Initialize,_OSCILLATOR_Initialize
  2510                           	FNCALL	_SYSTEM_Initialize,_PIN_MANAGER_Initialize
  2511                           	FNCALL	_SYSTEM_Initialize,_TMR2_Initialize
  2512                           	FNCALL	_SYSTEM_Initialize,_WDT_Initialize
  2513                           	FNCALL	_TMR2_Initialize,_TMR2_SetInterruptHandler
  2514                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Button_InitializeAll
  2515                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_InitializeAll
  2516                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_Sampled_ResetAll
  2517                           	FNCALL	_MTOUCH_Initialize,_MTOUCH_Sensor_Scan_Initialize
  2518                           	FNCALL	_MTOUCH_Sensor_InitializeAll,_MTOUCH_Sensor_Initialize
  2519                           	FNCALL	_MTOUCH_Sensor_Initialize,_MTOUCH_Sensor_Enable
  2520                           	FNCALL	_MTOUCH_Sensor_Initialize,_Sensor_Sampled_Reset
  2521                           	FNCALL	_MTOUCH_Sensor_Initialize,___bmul
  2522                           	FNCALL	_MTOUCH_Button_InitializeAll,_MTOUCH_Button_Initialize
  2523                           	FNCALL	_MTOUCH_Button_InitializeAll,_memcpy
  2524                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Button_ServiceAll
  2525                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Sensor_SampleAll
  2526                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Sensor_Sampled_ResetAll
  2527                           	FNCALL	_MTOUCH_Service_Mainloop,_MTOUCH_Tick
  2528                           	FNCALL	_MTOUCH_Tick,_MTOUCH_Button_Tick
  2529                           	FNCALL	_MTOUCH_Button_Tick,_Button_Tick_helper
  2530                           	FNCALL	_MTOUCH_Sensor_Sampled_ResetAll,_Sensor_Sampled_Reset
  2531                           	FNCALL	_MTOUCH_Sensor_SampleAll,_Sensor_Service
  2532                           	FNCALL	_Sensor_Service,_Sensor_Acquisition
  2533                           	FNCALL	_Sensor_Service,_Sensor_DefaultCallback
  2534                           	FNCALL	_Sensor_Service,_Sensor_RawSample_Update
  2535                           	FNCALL	_Sensor_Service,_Sensor_setSampled
  2536                           	FNCALL	_Sensor_Service,___bmul
  2537                           	FNCALL	_Sensor_Acquisition,_Sensor_Acq_ExecutePacket
  2538                           	FNCALL	_Sensor_Acquisition,_Sensor_isEnabled
  2539                           	FNCALL	_Sensor_Acquisition,_Sensor_setActive
  2540                           	FNCALL	_Sensor_Acquisition,_Sensor_setInactive
  2541                           	FNCALL	_Sensor_Acquisition,_abs
  2542                           	FNCALL	_Sensor_Acq_ExecutePacket,_MTOUCH_Sensor_Scan_Initialize
  2543                           	FNCALL	_Sensor_Acq_ExecutePacket,_Sensor_setScanFunction
  2544                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_LoadPeriodRegister
  2545                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_SetInterruptHandler
  2546                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_StartTimer
  2547                           	FNCALL	_Sensor_Acq_ExecutePacket,_TMR2_StopTimer
  2548                           	FNCALL	_MTOUCH_Button_ServiceAll,_Button_Service
  2549                           	FNCALL	_Button_Service,_Button_Deviation_Update
  2550                           	FNCALL	_Button_Service,_Button_Reading_Update
  2551                           	FNCALL	_Button_Service,_Button_State_Initializing
  2552                           	FNCALL	_Button_Service,_Button_State_NotPressed
  2553                           	FNCALL	_Button_Service,_Button_State_Pressed
  2554                           	FNCALL	_Button_Service,_MTOUCH_Button_Initialize
  2555                           	FNCALL	_Button_Service,_MTOUCH_Sensor_isCalibrated
  2556                           	FNCALL	_Button_Service,_MTOUCH_Sensor_wasSampled
  2557                           	FNCALL	_MTOUCH_Sensor_wasSampled,___bmul
  2558                           	FNCALL	_Button_State_Pressed,_Button_DefaultCallback
  2559                           	FNCALL	_Button_State_Pressed,_MTOUCH_Button_Initialize
  2560                           	FNCALL	_Button_State_NotPressed,_Button_Baseline_Update
  2561                           	FNCALL	_Button_State_NotPressed,_Button_DefaultCallback
  2562                           	FNCALL	_Button_State_NotPressed,_MTOUCH_Button_Initialize
  2563                           	FNCALL	_MTOUCH_Button_Initialize,_MTOUCH_Sensor_Calibrate
  2564                           	FNCALL	_Button_State_Initializing,_Button_Baseline_Initialize
  2565                           	FNCALL	_Button_State_Initializing,_Button_Baseline_Update
  2566                           	FNCALL	_Button_Baseline_Initialize,_MTOUCH_Sensor_RawSample_Get
  2567                           	FNCALL	_Button_Reading_Update,_MTOUCH_Sensor_RawSample_Get
  2568                           	FNCALL	_MTOUCH_Sensor_RawSample_Get,___bmul
  2569                           	FNROOT	_main
  2570                           	FNCALL	_INTERRUPT_InterruptManager,_TMR2_ISR
  2571                           	FNCALL	_TMR2_ISR,_Sensor_Acq_ExecuteScan
  2572                           	FNCALL	_TMR2_ISR,_TMR2_DefaultInterruptHandler
  2573                           	FNCALL	_Sensor_Acq_ExecuteScan,_MTOUCH_CVD_ScanA_0
  2574                           	FNCALL	_Sensor_Acq_ExecuteScan,_MTOUCH_CVD_ScanB_0
  2575                           	FNCALL	_Sensor_Acq_ExecuteScan,i1___bmul
  2576                           	FNCALL	_Sensor_Acq_ExecuteScan,i1_abs
  2577                           	FNCALL	intlevel1,_INTERRUPT_InterruptManager
  2578                           	global	intlevel1
  2579                           	FNROOT	intlevel1
  2580                           	global	_Button_StateMachine
  2581                           	global	_callback_notPressed
  2582                           	global	_callback_pressed
  2583                           	global	_Sensor_scanB
  2584                           	global	_Sensor_scanA
  2585                           	global	_callback_sampled
  2586                           	global	_sample_period
  2587                           	global	_mtouch_sensor
  2588                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  2589                           global __pidataBANK0
  2590                           __pidataBANK0:
  2591  0000'                    	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2592                           	line	116
  2593                           
  2594                           ;initializer for _Button_StateMachine
  2595                           	retlw	low(_Button_State_Initializing)
  2596  0000' 3400'              	retlw	high(_Button_State_Initializing)
  2597  0001' 3400'              
  2598                           	retlw	low(_Button_State_NotPressed)
  2599  0002' 3400'              	retlw	high(_Button_State_NotPressed)
  2600  0003' 3400'              
  2601                           	retlw	low(_Button_State_Pressed)
  2602  0004' 3400'              	retlw	high(_Button_State_Pressed)
  2603  0005' 3400'              
  2604                           	line	108
  2605                           
  2606                           ;initializer for _callback_notPressed
  2607                           	retlw	low(_Button_DefaultCallback)
  2608  0006' 3400'              	retlw	high(_Button_DefaultCallback)
  2609  0007' 3400'              
  2610                           	line	107
  2611                           
  2612                           ;initializer for _callback_pressed
  2613                           	retlw	low(_Button_DefaultCallback)
  2614  0008' 3400'              	retlw	high(_Button_DefaultCallback)
  2615  0009' 3400'              
  2616                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2617                           	line	134
  2618                           
  2619                           ;initializer for _Sensor_scanB
  2620                           	retlw	low(_MTOUCH_CVD_ScanB_0)
  2621  000A' 3400'              	retlw	high(_MTOUCH_CVD_ScanB_0)
  2622  000B' 3400'              
  2623                           	line	133
  2624                           
  2625                           ;initializer for _Sensor_scanA
  2626                           	retlw	low(_MTOUCH_CVD_ScanA_0)
  2627  000C' 3400'              	retlw	high(_MTOUCH_CVD_ScanA_0)
  2628  000D' 3400'              
  2629                           	line	120
  2630                           
  2631                           ;initializer for _callback_sampled
  2632                           	retlw	low(_Sensor_DefaultCallback)
  2633  000E' 3400'              	retlw	high(_Sensor_DefaultCallback)
  2634  000F' 3400'              
  2635                           	line	131
  2636                           
  2637                           ;initializer for _sample_period
  2638                           	retlw	0C8h
  2639  0010' 34C8               	line	140
  2640                           
  2641                           ;initializer for _mtouch_sensor
  2642                           	retlw	low(0)
  2643  0011' 3400               	retlw	low(_MTOUCH_CVD_ScanA_0)
  2644  0012' 3400'              	retlw	high(_MTOUCH_CVD_ScanA_0)
  2645  0013' 3400'              
  2646                           	retlw	low(_MTOUCH_CVD_ScanB_0)
  2647  0014' 3400'              	retlw	high(_MTOUCH_CVD_ScanB_0)
  2648  0015' 3400'              
  2649                           	retlw	020h
  2650  0016' 3420               	retlw	low(0)
  2651  0017' 3400               	retlw	high(0)
  2652  0018' 3400               
  2653                           	retlw	low(0)
  2654  0019' 3400               	global	Sensor_Scanfrequency_Evaluation@frequency_hop
  2655                           psect	stringtext1,class=STRCODE,delta=2,noexec
  2656                           global __pstringtext1
  2657                           __pstringtext1:
  2658  0000'                    	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2659                           	line	412
  2660                           Sensor_Scanfrequency_Evaluation@frequency_hop:
  2661  0000'                    	retlw	03h
  2662  0000' 3403               	retlw	0Dh
  2663  0001' 340D               	retlw	0Eh
  2664  0002' 340E               	retlw	014h
  2665  0003' 3414               	retlw	0Dh
  2666  0004' 340D               	global __end_ofSensor_Scanfrequency_Evaluation@frequency_hop
  2667                           __end_ofSensor_Scanfrequency_Evaluation@frequency_hop:
  2668  0005'                    	global	_mtouch_button_init
  2669                           psect	stringtext2,class=STRCODE,delta=2,noexec
  2670                           global __pstringtext2
  2671                           __pstringtext2:
  2672  0000'                    	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2673                           	line	71
  2674                           _mtouch_button_init:
  2675  0000'                    	retlw	low(0)
  2676  0000' 3400               	retlw	low(0)
  2677  0001' 3400               	retlw	low(0)
  2678  0002' 3400               	retlw	low(0)
  2679  0003' 3400               	retlw	high(0)
  2680  0004' 3400               
  2681                           	retlw	low(0)
  2682  0005' 3400               	retlw	high(0)
  2683  0006' 3400               	retlw	low highword(0)
  2684  0007' 3400               	retlw	high highword(0)
  2685  0008' 3400               
  2686                           	retlw	low(0)
  2687  0009' 3400               	retlw	low(0)
  2688  000A' 3400               	retlw	high(0)
  2689  000B' 3400               
  2690                           	retlw	low(0)
  2691  000C' 3400               	retlw	high(0)
  2692  000D' 3400               
  2693                           	retlw	064h
  2694  000E' 3464               	retlw	01h
  2695  000F' 3401               	global __end_of_mtouch_button_init
  2696                           __end_of_mtouch_button_init:
  2697  0010'                    	global	Sensor_Scanfrequency_Evaluation@frequency_hop
  2698                           	global	_mtouch_button_init
  2699                           	global	_packet_noise
  2700                           	global	_TMR2_InterruptHandler
  2701                           	global	_packet_counter
  2702                           	global	_currentScannSensor
  2703                           	global	Sensor_Acq_ExecuteScan@last_b
  2704                           	global	Sensor_Acq_ExecuteScan@last_a
  2705                           	global	_packet_sample
  2706                           	global	_sensor_globalFlags
  2707                           	global	_mtouch_button
  2708                           	global	_INTCONbits
  2709                           _INTCONbits	set	0xB
  2710  000B                     	global	_T2CONbits
  2711                           _T2CONbits	set	0x1C
  2712  001C                     	global	_T2CON
  2713                           _T2CON	set	0x1C
  2714  001C                     	global	_PIR1bits
  2715                           _PIR1bits	set	0x11
  2716  0011                     	global	_TMR2
  2717                           _TMR2	set	0x1A
  2718  001A                     	global	_PR2
  2719                           _PR2	set	0x1B
  2720  001B                     	global	_GIE
  2721                           _GIE	set	0x5F
  2722  005F                     	global	_ADRES
  2723                           _ADRES	set	0x9B
  2724  009B                     	global	_ADCON2
  2725                           _ADCON2	set	0x9F
  2726  009F                     	global	_ADCON1
  2727                           _ADCON1	set	0x9E
  2728  009E                     	global	_ADCON0
  2729                           _ADCON0	set	0x9D
  2730  009D                     	global	_TRISCbits
  2731                           _TRISCbits	set	0x8E
  2732  008E                     	global	_OPTION_REGbits
  2733                           _OPTION_REGbits	set	0x95
  2734  0095                     	global	_TRISC
  2735                           _TRISC	set	0x8E
  2736  008E                     	global	_TRISA
  2737                           _TRISA	set	0x8C
  2738  008C                     	global	_PIE1bits
  2739                           _PIE1bits	set	0x91
  2740  0091                     	global	_WDTCON
  2741                           _WDTCON	set	0x97
  2742  0097                     	global	_OSCTUNE
  2743                           _OSCTUNE	set	0x98
  2744  0098                     	global	_OSCSTAT
  2745                           _OSCSTAT	set	0x9A
  2746  009A                     	global	_OSCCON
  2747                           _OSCCON	set	0x99
  2748  0099                     	global	_PLLR
  2749                           _PLLR	set	0x4D6
  2750  04D6                     	global	_LATCbits
  2751                           _LATCbits	set	0x10E
  2752  010E                     	global	_LATC
  2753                           _LATC	set	0x10E
  2754  010E                     	global	_LATA
  2755                           _LATA	set	0x10C
  2756  010C                     	global	_BORCON
  2757                           _BORCON	set	0x116
  2758  0116                     	global	_ANSELCbits
  2759                           _ANSELCbits	set	0x18E
  2760  018E                     	global	_ANSELA
  2761                           _ANSELA	set	0x18C
  2762  018C                     	global	_ANSELC
  2763                           _ANSELC	set	0x18E
  2764  018E                     	global	_WPUCbits
  2765                           _WPUCbits	set	0x20E
  2766  020E                     	global	_WPUC
  2767                           _WPUC	set	0x20E
  2768  020E                     	global	_WPUA
  2769                           _WPUA	set	0x20C
  2770  020C                     	global	_ODCONC
  2771                           _ODCONC	set	0x28E
  2772  028E                     	global	_ODCONA
  2773                           _ODCONA	set	0x28C
  2774  028C                     ; #config settings
  2775                           global __CFG_FOSC$INTOSC
  2776                           __CFG_FOSC$INTOSC equ 0x0
  2777  0000                     global __CFG_WDTE$OFF
  2778                           __CFG_WDTE$OFF equ 0x0
  2779  0000                     global __CFG_PWRTE$OFF
  2780                           __CFG_PWRTE$OFF equ 0x0
  2781  0000                     global __CFG_MCLRE$ON
  2782                           __CFG_MCLRE$ON equ 0x0
  2783  0000                     global __CFG_CP$OFF
  2784                           __CFG_CP$OFF equ 0x0
  2785  0000                     global __CFG_BOREN$OFF
  2786                           __CFG_BOREN$OFF equ 0x0
  2787  0000                     global __CFG_CLKOUTEN$OFF
  2788                           __CFG_CLKOUTEN$OFF equ 0x0
  2789  0000                     global __CFG_WRT$OFF
  2790                           __CFG_WRT$OFF equ 0x0
  2791  0000                     global __CFG_PPS1WAY$ON
  2792                           __CFG_PPS1WAY$ON equ 0x0
  2793  0000                     global __CFG_ZCDDIS$ON
  2794                           __CFG_ZCDDIS$ON equ 0x0
  2795  0000                     global __CFG_PLLEN$ON
  2796                           __CFG_PLLEN$ON equ 0x0
  2797  0000                     global __CFG_STVREN$ON
  2798                           __CFG_STVREN$ON equ 0x0
  2799  0000                     global __CFG_BORV$LO
  2800                           __CFG_BORV$LO equ 0x0
  2801  0000                     global __CFG_LPBOR$OFF
  2802                           __CFG_LPBOR$OFF equ 0x0
  2803  0000                     global __CFG_LVP$ON
  2804                           __CFG_LVP$ON equ 0x0
  2805  0000                     	file	"C:\Users\zhgao\AppData\Local\Temp\s4h4."
  2806                           	line	#
  2807                           psect cinit,class=CODE,delta=2
  2808                           global start_initialization
  2809                           start_initialization:
  2810  0000'                    
  2811                           global __initialization
  2812                           __initialization:
  2813  0000'                    psect	bssCOMMON,class=COMMON,space=1,noexec
  2814                           global __pbssCOMMON
  2815                           __pbssCOMMON:
  2816  0000'                    _packet_noise:
  2817  0000'                           ds      2
  2818  0000'                    
  2819                           _TMR2_InterruptHandler:
  2820  0002'                           ds      2
  2821  0002'                    
  2822                           _packet_counter:
  2823  0004'                           ds      1
  2824  0004'                    
  2825                           _currentScannSensor:
  2826  0005'                           ds      1
  2827  0005'                    
  2828                           psect	bssBANK0,class=BANK0,space=1,noexec
  2829                           global __pbssBANK0
  2830                           __pbssBANK0:
  2831  0000'                    Sensor_Acq_ExecuteScan@last_b:
  2832  0000'                           ds      2
  2833  0000'                    
  2834                           Sensor_Acq_ExecuteScan@last_a:
  2835  0002'                           ds      2
  2836  0002'                    
  2837                           _packet_sample:
  2838  0004'                           ds      2
  2839  0004'                    
  2840                           _sensor_globalFlags:
  2841  0006'                           ds      1
  2842  0006'                    
  2843                           _mtouch_button:
  2844  0007'                           ds      16
  2845  0007'                    
  2846                           psect	dataBANK0,class=BANK0,space=1,noexec
  2847                           global __pdataBANK0
  2848                           __pdataBANK0:
  2849  0000'                    	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2850                           	line	116
  2851                           _Button_StateMachine:
  2852  0000'                           ds      6
  2853  0000'                    
  2854                           psect	dataBANK0
  2855                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2856                           	line	108
  2857                           _callback_notPressed:
  2858  0006'                           ds      2
  2859  0006'                    
  2860                           psect	dataBANK0
  2861                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  2862                           	line	107
  2863                           _callback_pressed:
  2864  0008'                           ds      2
  2865  0008'                    
  2866                           psect	dataBANK0
  2867                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2868                           	line	134
  2869                           _Sensor_scanB:
  2870  000A'                           ds      2
  2871  000A'                    
  2872                           psect	dataBANK0
  2873                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2874                           	line	133
  2875                           _Sensor_scanA:
  2876  000C'                           ds      2
  2877  000C'                    
  2878                           psect	dataBANK0
  2879                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2880                           	line	120
  2881                           _callback_sampled:
  2882  000E'                           ds      2
  2883  000E'                    
  2884                           psect	dataBANK0
  2885                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2886                           	line	131
  2887                           _sample_period:
  2888  0010'                           ds      1
  2889  0010'                    
  2890                           psect	dataBANK0
  2891                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  2892                           	line	140
  2893                           _mtouch_sensor:
  2894  0011'                           ds      9
  2895  0011'                    
  2896                           	file	"C:\Users\zhgao\AppData\Local\Temp\s4h4."
  2897                           	line	#
  2898                           psect inittext,class=CODE,delta=2
  2899                           global init_ram,btemp
  2900                           init_ram:
  2901  0000'                    	movwf btemp,f
  2902  0000' 00FE               initloop:
  2903  0001'                    	moviw fsr0++
  2904  0001' 0012               	movwi fsr1++
  2905  0002' 001E               	decfsz btemp
  2906  0003' 0BFE               	goto initloop
  2907  0004' 2801'              	retlw 0
  2908  0005' 3400               ; Initialize objects allocated to BANK0
  2909                           	global __pidataBANK0,__pdataBANK0
  2910                           psect cinit,class=CODE,delta=2,merge=1
  2911                           	movlw low(__pidataBANK0)
  2912  0000' 3000'              	movwf fsr0l
  2913  0001' 0084               	movlw high(__pidataBANK0)|80h
  2914  0002' 3000'              	movwf fsr0h
  2915  0003' 0085               	movlw low(__pdataBANK0)
  2916  0004' 3000'              	movwf fsr1l
  2917  0005' 0086               	movlw high(__pdataBANK0)
  2918  0006' 3000'              	movwf fsr1h
  2919  0007' 0087               	movlw 01Ah
  2920  0008' 301A               	fcall init_ram
  2921  0009' 3180' 2000' 3180'  	line	#
  2922                           psect clrtext,class=CODE,delta=2
  2923                           global clear_ram0
  2924                           ;	Called with FSR0 containing the base address, and
  2925                           ;	WREG with the size to clear
  2926                           clear_ram0:
  2927  0000'                    	clrwdt			;clear the watchdog before getting into this loop
  2928  0000' 0064               clrloop0:
  2929  0001'                    	clrf	indf0		;clear RAM location pointed to by FSR
  2930  0001' 0180               	addfsr	0,1
  2931  0002' 3101               	decfsz wreg		;Have we reached the end of clearing yet?
  2932  0003' 0B89               	goto clrloop0	;have we reached the end yet?
  2933  0004' 2801'              	retlw	0		;all done for this memory range, return
  2934  0005' 3400               ; Clear objects allocated to COMMON
  2935                           psect cinit,class=CODE,delta=2,merge=1
  2936                           	global __pbssCOMMON
  2937                           	clrf	((__pbssCOMMON)+0)&07Fh
  2938  000C' 0180'              	clrf	((__pbssCOMMON)+1)&07Fh
  2939  000D' 0180'              	clrf	((__pbssCOMMON)+2)&07Fh
  2940  000E' 0180'              	clrf	((__pbssCOMMON)+3)&07Fh
  2941  000F' 0180'              	clrf	((__pbssCOMMON)+4)&07Fh
  2942  0010' 0180'              	clrf	((__pbssCOMMON)+5)&07Fh
  2943  0011' 0180'              ; Clear objects allocated to BANK0
  2944                           psect cinit,class=CODE,delta=2,merge=1
  2945                           	global __pbssBANK0
  2946                           	movlw	low(__pbssBANK0)
  2947  0012' 3000'              	movwf	fsr0l
  2948  0013' 0084               	movlw	high(__pbssBANK0)
  2949  0014' 3000'              	movwf	fsr0h
  2950  0015' 0085               	movlw	017h
  2951  0016' 3017               	fcall	clear_ram0
  2952  0017' 3180' 2000' 3180'  psect cinit,class=CODE,delta=2,merge=1
  2953                           global end_of_initialization,__end_of__initialization
  2954                           
  2955                           ;End of C runtime variable initialization code
  2956                           
  2957                           end_of_initialization:
  2958  001A'                    __end_of__initialization:
  2959  001A'                    	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  2960  001A' 107E               movlb 0
  2961  001B' 0020               ljmp _main	;jump to C main() function
  2962  001C' 2800'              psect	cstackCOMMON,class=COMMON,space=1,noexec
  2963                           global __pcstackCOMMON
  2964                           __pcstackCOMMON:
  2965  0000'                    ?_PIN_MANAGER_Initialize:	; 1 bytes @ 0x0
  2966  0000'                    ?_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  2967  0000'                    ?_WDT_Initialize:	; 1 bytes @ 0x0
  2968  0000'                    ?_TMR2_Initialize:	; 1 bytes @ 0x0
  2969  0000'                    ?_MTOUCH_Initialize:	; 1 bytes @ 0x0
  2970  0000'                    ?_TMR2_DefaultInterruptHandler:	; 1 bytes @ 0x0
  2971  0000'                    ??_TMR2_DefaultInterruptHandler:	; 1 bytes @ 0x0
  2972  0000'                    ?_MTOUCH_Sensor_InitializeAll:	; 1 bytes @ 0x0
  2973  0000'                    ?_MTOUCH_Button_InitializeAll:	; 1 bytes @ 0x0
  2974  0000'                    ?_MTOUCH_Sensor_Sampled_ResetAll:	; 1 bytes @ 0x0
  2975  0000'                    ?_MTOUCH_Sensor_Scan_Initialize:	; 1 bytes @ 0x0
  2976  0000'                    ?_MTOUCH_Sensor_SampleAll:	; 1 bytes @ 0x0
  2977  0000'                    ?_MTOUCH_Button_ServiceAll:	; 1 bytes @ 0x0
  2978  0000'                    ?_MTOUCH_Tick:	; 1 bytes @ 0x0
  2979  0000'                    ?_MTOUCH_Button_Tick:	; 1 bytes @ 0x0
  2980  0000'                    ?_MTOUCH_CVD_ScanA_0:	; 1 bytes @ 0x0
  2981  0000'                    ??_MTOUCH_CVD_ScanA_0:	; 1 bytes @ 0x0
  2982  0000'                    ?_MTOUCH_CVD_ScanB_0:	; 1 bytes @ 0x0
  2983  0000'                    ??_MTOUCH_CVD_ScanB_0:	; 1 bytes @ 0x0
  2984  0000'                    ?_MTOUCH_Sensor_Enable:	; 1 bytes @ 0x0
  2985  0000'                    ?_Sensor_Sampled_Reset:	; 1 bytes @ 0x0
  2986  0000'                    ?_Sensor_Service:	; 1 bytes @ 0x0
  2987  0000'                    ?_Sensor_Acquisition:	; 1 bytes @ 0x0
  2988  0000'                    ?_Sensor_RawSample_Update:	; 1 bytes @ 0x0
  2989  0000'                    ?_Sensor_setSampled:	; 1 bytes @ 0x0
  2990  0000'                    ?_Sensor_Acq_ExecutePacket:	; 1 bytes @ 0x0
  2991  0000'                    ?_Sensor_setActive:	; 1 bytes @ 0x0
  2992  0000'                    ?_Sensor_setInactive:	; 1 bytes @ 0x0
  2993  0000'                    ?_Sensor_setScanFunction:	; 1 bytes @ 0x0
  2994  0000'                    ?_Sensor_Acq_ExecuteScan:	; 1 bytes @ 0x0
  2995  0000'                    ?_Button_Service:	; 1 bytes @ 0x0
  2996  0000'                    ?_Button_Reading_Update:	; 1 bytes @ 0x0
  2997  0000'                    ?_Button_Deviation_Update:	; 1 bytes @ 0x0
  2998  0000'                    ?_Button_Baseline_Initialize:	; 1 bytes @ 0x0
  2999  0000'                    ?_Button_Baseline_Update:	; 1 bytes @ 0x0
  3000  0000'                    ?_Button_Tick_helper:	; 1 bytes @ 0x0
  3001  0000'                    ?_SYSTEM_Initialize:	; 1 bytes @ 0x0
  3002  0000'                    ?_TMR2_StartTimer:	; 1 bytes @ 0x0
  3003  0000'                    ?_TMR2_StopTimer:	; 1 bytes @ 0x0
  3004  0000'                    ?_TMR2_LoadPeriodRegister:	; 1 bytes @ 0x0
  3005  0000'                    ?_TMR2_ISR:	; 1 bytes @ 0x0
  3006  0000'                    ?_INTERRUPT_InterruptManager:	; 1 bytes @ 0x0
  3007  0000'                    ?_MTOUCH_Service_Mainloop:	; 1 bytes @ 0x0
  3008  0000'                    ?_MTOUCH_Sensor_Initialize:	; 1 bytes @ 0x0
  3009  0000'                    ?_MTOUCH_Sensor_isCalibrated:	; 1 bytes @ 0x0
  3010  0000'                    ?_MTOUCH_Sensor_Calibrate:	; 1 bytes @ 0x0
  3011  0000'                    ?_MTOUCH_Sensor_wasSampled:	; 1 bytes @ 0x0
  3012  0000'                    ?_MTOUCH_Button_Initialize:	; 1 bytes @ 0x0
  3013  0000'                    ?_MTOUCH_Button_isPressed:	; 1 bytes @ 0x0
  3014  0000'                    ?_main:	; 1 bytes @ 0x0
  3015  0000'                    ?i1___bmul:	; 1 bytes @ 0x0
  3016  0000'                    	global	?i1_abs
  3017                           ?i1_abs:	; 2 bytes @ 0x0
  3018  0000'                    MTOUCH_Sensor_isCalibrated@sensor:	; 1 bytes @ 0x0
  3019  0000'                    MTOUCH_Sensor_Calibrate@sensor:	; 1 bytes @ 0x0
  3020  0000'                    	global	i1___bmul@multiplicand
  3021                           i1___bmul@multiplicand:	; 1 bytes @ 0x0
  3022  0000'                    	global	i1abs@a
  3023                           i1abs@a:	; 2 bytes @ 0x0
  3024  0000'                    	ds	1
  3025  0000'                    ??i1___bmul:	; 1 bytes @ 0x1
  3026  0001'                    	ds	1
  3027  0001'                    ??i1_abs:	; 1 bytes @ 0x2
  3028  0002'                    	global	i1___bmul@multiplier
  3029                           i1___bmul@multiplier:	; 1 bytes @ 0x2
  3030  0002'                    	ds	1
  3031  0002'                    	global	i1___bmul@product
  3032                           i1___bmul@product:	; 1 bytes @ 0x3
  3033  0003'                    	ds	1
  3034  0003'                    ??_Sensor_Acq_ExecuteScan:	; 1 bytes @ 0x4
  3035  0004'                    	ds	2
  3036  0004'                    	global	Sensor_Acq_ExecuteScan@result
  3037                           Sensor_Acq_ExecuteScan@result:	; 2 bytes @ 0x6
  3038  0006'                    	ds	2
  3039  0006'                    ??_TMR2_ISR:	; 1 bytes @ 0x8
  3040  0008'                    ??_INTERRUPT_InterruptManager:	; 1 bytes @ 0x8
  3041  0008'                    psect	cstackBANK0,class=BANK0,space=1,noexec
  3042                           global __pcstackBANK0
  3043                           __pcstackBANK0:
  3044  0000'                    ??_PIN_MANAGER_Initialize:	; 1 bytes @ 0x0
  3045  0000'                    ??_OSCILLATOR_Initialize:	; 1 bytes @ 0x0
  3046  0000'                    ??_WDT_Initialize:	; 1 bytes @ 0x0
  3047  0000'                    ?_TMR2_SetInterruptHandler:	; 1 bytes @ 0x0
  3048  0000'                    ??_MTOUCH_Sensor_Scan_Initialize:	; 1 bytes @ 0x0
  3049  0000'                    ?_Sensor_DefaultCallback:	; 1 bytes @ 0x0
  3050  0000'                    ??_MTOUCH_Sensor_Enable:	; 1 bytes @ 0x0
  3051  0000'                    ??_Sensor_Sampled_Reset:	; 1 bytes @ 0x0
  3052  0000'                    ??_Sensor_RawSample_Update:	; 1 bytes @ 0x0
  3053  0000'                    ??_Sensor_setSampled:	; 1 bytes @ 0x0
  3054  0000'                    ?_Sensor_isEnabled:	; 1 bytes @ 0x0
  3055  0000'                    ??_Sensor_isEnabled:	; 1 bytes @ 0x0
  3056  0000'                    ??_Sensor_setActive:	; 1 bytes @ 0x0
  3057  0000'                    ??_Sensor_setInactive:	; 1 bytes @ 0x0
  3058  0000'                    ??_Sensor_setScanFunction:	; 1 bytes @ 0x0
  3059  0000'                    ?_Button_DefaultCallback:	; 1 bytes @ 0x0
  3060  0000'                    ?_memcpy:	; 1 bytes @ 0x0
  3061  0000'                    ??_Button_Deviation_Update:	; 1 bytes @ 0x0
  3062  0000'                    ??_Button_Baseline_Update:	; 1 bytes @ 0x0
  3063  0000'                    ??_Button_Tick_helper:	; 1 bytes @ 0x0
  3064  0000'                    ??_TMR2_StartTimer:	; 1 bytes @ 0x0
  3065  0000'                    ??_TMR2_StopTimer:	; 1 bytes @ 0x0
  3066  0000'                    ??_TMR2_LoadPeriodRegister:	; 1 bytes @ 0x0
  3067  0000'                    ??_MTOUCH_Sensor_isCalibrated:	; 1 bytes @ 0x0
  3068  0000'                    ??_MTOUCH_Sensor_Calibrate:	; 1 bytes @ 0x0
  3069  0000'                    ??_MTOUCH_Button_Initialize:	; 1 bytes @ 0x0
  3070  0000'                    ??_MTOUCH_Button_isPressed:	; 1 bytes @ 0x0
  3071  0000'                    ?___bmul:	; 1 bytes @ 0x0
  3072  0000'                    	global	?_abs
  3073                           ?_abs:	; 2 bytes @ 0x0
  3074  0000'                    	global	TMR2_LoadPeriodRegister@periodVal
  3075                           TMR2_LoadPeriodRegister@periodVal:	; 1 bytes @ 0x0
  3076  0000'                    	global	_Sensor_isEnabled$0
  3077                           _Sensor_isEnabled$0:	; 1 bytes @ 0x0
  3078  0000'                    	global	Sensor_RawSample_Update@sensor
  3079                           Sensor_RawSample_Update@sensor:	; 1 bytes @ 0x0
  3080  0000'                    	global	Sensor_DefaultCallback@sensor
  3081                           Sensor_DefaultCallback@sensor:	; 1 bytes @ 0x0
  3082  0000'                    	global	Sensor_setScanFunction@sensor
  3083                           Sensor_setScanFunction@sensor:	; 1 bytes @ 0x0
  3084  0000'                    	global	Sensor_setActive@sensor
  3085                           Sensor_setActive@sensor:	; 1 bytes @ 0x0
  3086  0000'                    	global	Sensor_setInactive@sensor
  3087                           Sensor_setInactive@sensor:	; 1 bytes @ 0x0
  3088  0000'                    	global	Sensor_Sampled_Reset@sensor
  3089                           Sensor_Sampled_Reset@sensor:	; 1 bytes @ 0x0
  3090  0000'                    	global	Sensor_setSampled@sensor
  3091                           Sensor_setSampled@sensor:	; 1 bytes @ 0x0
  3092  0000'                    	global	Button_DefaultCallback@button
  3093                           Button_DefaultCallback@button:	; 1 bytes @ 0x0
  3094  0000'                    	global	___bmul@multiplicand
  3095                           ___bmul@multiplicand:	; 1 bytes @ 0x0
  3096  0000'                    	global	TMR2_SetInterruptHandler@InterruptHandler
  3097                           TMR2_SetInterruptHandler@InterruptHandler:	; 2 bytes @ 0x0
  3098  0000'                    	global	abs@a
  3099                           abs@a:	; 2 bytes @ 0x0
  3100  0000'                    	global	memcpy@s1
  3101                           memcpy@s1:	; 2 bytes @ 0x0
  3102  0000'                    	ds	1
  3103  0000'                    ??_MTOUCH_Sensor_Sampled_ResetAll:	; 1 bytes @ 0x1
  3104  0001'                    ??_Sensor_DefaultCallback:	; 1 bytes @ 0x1
  3105  0001'                    ??_Button_DefaultCallback:	; 1 bytes @ 0x1
  3106  0001'                    ??___bmul:	; 1 bytes @ 0x1
  3107  0001'                    	global	MTOUCH_Button_isPressed@name
  3108                           MTOUCH_Button_isPressed@name:	; 1 bytes @ 0x1
  3109  0001'                    	ds	1
  3110  0001'                    ??_TMR2_Initialize:	; 1 bytes @ 0x2
  3111  0002'                    ??_TMR2_SetInterruptHandler:	; 1 bytes @ 0x2
  3112  0002'                    ??_Sensor_Acq_ExecutePacket:	; 1 bytes @ 0x2
  3113  0002'                    ??_abs:	; 1 bytes @ 0x2
  3114  0002'                    	global	MTOUCH_Sensor_Sampled_ResetAll@sensor
  3115                           MTOUCH_Sensor_Sampled_ResetAll@sensor:	; 1 bytes @ 0x2
  3116  0002'                    	global	MTOUCH_Button_Initialize@name
  3117                           MTOUCH_Button_Initialize@name:	; 1 bytes @ 0x2
  3118  0002'                    	global	Button_Tick_helper@button
  3119                           Button_Tick_helper@button:	; 1 bytes @ 0x2
  3120  0002'                    	global	___bmul@product
  3121                           ___bmul@product:	; 1 bytes @ 0x2
  3122  0002'                    	global	memcpy@n
  3123                           memcpy@n:	; 2 bytes @ 0x2
  3124  0002'                    	ds	1
  3125  0002'                    ??_MTOUCH_Tick:	; 1 bytes @ 0x3
  3126  0003'                    ??_MTOUCH_Button_Tick:	; 1 bytes @ 0x3
  3127  0003'                    	global	Sensor_Acq_ExecutePacket@error
  3128                           Sensor_Acq_ExecutePacket@error:	; 1 bytes @ 0x3
  3129  0003'                    	global	MTOUCH_Button_Initialize@button
  3130                           MTOUCH_Button_Initialize@button:	; 1 bytes @ 0x3
  3131  0003'                    	global	___bmul@multiplier
  3132                           ___bmul@multiplier:	; 1 bytes @ 0x3
  3133  0003'                    	ds	1
  3134  0003'                    ??_memcpy:	; 1 bytes @ 0x4
  3135  0004'                    ??_MTOUCH_Sensor_Initialize:	; 1 bytes @ 0x4
  3136  0004'                    ??_MTOUCH_Sensor_wasSampled:	; 1 bytes @ 0x4
  3137  0004'                    	global	?_MTOUCH_Sensor_RawSample_Get
  3138                           ?_MTOUCH_Sensor_RawSample_Get:	; 2 bytes @ 0x4
  3139  0004'                    	global	Sensor_Acq_ExecutePacket@sensor
  3140                           Sensor_Acq_ExecutePacket@sensor:	; 1 bytes @ 0x4
  3141  0004'                    	ds	1
  3142  0004'                    ??_Sensor_Acquisition:	; 1 bytes @ 0x5
  3143  0005'                    	global	MTOUCH_Sensor_wasSampled@sensor
  3144                           MTOUCH_Sensor_wasSampled@sensor:	; 1 bytes @ 0x5
  3145  0005'                    	global	memcpy@s
  3146                           memcpy@s:	; 2 bytes @ 0x5
  3147  0005'                    	ds	1
  3148  0005'                    ??_MTOUCH_Sensor_RawSample_Get:	; 1 bytes @ 0x6
  3149  0006'                    	global	MTOUCH_Sensor_Initialize@sensor
  3150                           MTOUCH_Sensor_Initialize@sensor:	; 1 bytes @ 0x6
  3151  0006'                    	global	Button_Baseline_Update@button
  3152                           Button_Baseline_Update@button:	; 1 bytes @ 0x6
  3153  0006'                    	ds	1
  3154  0006'                    ??_MTOUCH_Sensor_InitializeAll:	; 1 bytes @ 0x7
  3155  0007'                    	global	MTOUCH_Sensor_RawSample_Get@name
  3156                           MTOUCH_Sensor_RawSample_Get@name:	; 1 bytes @ 0x7
  3157  0007'                    	global	memcpy@tmp
  3158                           memcpy@tmp:	; 1 bytes @ 0x7
  3159  0007'                    	ds	1
  3160  0007'                    ??_Button_Reading_Update:	; 1 bytes @ 0x8
  3161  0008'                    ??_Button_Baseline_Initialize:	; 1 bytes @ 0x8
  3162  0008'                    	global	MTOUCH_Sensor_InitializeAll@sensor
  3163                           MTOUCH_Sensor_InitializeAll@sensor:	; 1 bytes @ 0x8
  3164  0008'                    	global	memcpy@d1
  3165                           memcpy@d1:	; 1 bytes @ 0x8
  3166  0008'                    	ds	1
  3167  0008'                    	global	Sensor_Acquisition@retry
  3168                           Sensor_Acquisition@retry:	; 1 bytes @ 0x9
  3169  0009'                    	global	memcpy@d
  3170                           memcpy@d:	; 1 bytes @ 0x9
  3171  0009'                    	ds	1
  3172  0009'                    ??_MTOUCH_Button_InitializeAll:	; 1 bytes @ 0xA
  3173  000A'                    	global	Sensor_Acquisition@sensor
  3174                           Sensor_Acquisition@sensor:	; 1 bytes @ 0xA
  3175  000A'                    	global	Button_Deviation_Update@button
  3176                           Button_Deviation_Update@button:	; 1 bytes @ 0xA
  3177  000A'                    	global	Button_Reading_Update@button
  3178                           Button_Reading_Update@button:	; 1 bytes @ 0xA
  3179  000A'                    	ds	1
  3180  000A'                    ??_Sensor_Service:	; 1 bytes @ 0xB
  3181  000B'                    	global	MTOUCH_Button_InitializeAll@button
  3182                           MTOUCH_Button_InitializeAll@button:	; 1 bytes @ 0xB
  3183  000B'                    	global	Button_Deviation_Update@deviation
  3184                           Button_Deviation_Update@deviation:	; 4 bytes @ 0xB
  3185  000B'                    	ds	1
  3186  000B'                    ??_MTOUCH_Initialize:	; 1 bytes @ 0xC
  3187  000C'                    ??_SYSTEM_Initialize:	; 1 bytes @ 0xC
  3188  000C'                    	global	Button_Baseline_Initialize@button
  3189                           Button_Baseline_Initialize@button:	; 1 bytes @ 0xC
  3190  000C'                    	ds	1
  3191  000C'                    ?_Button_State_Initializing:	; 1 bytes @ 0xD
  3192  000D'                    ?_Button_State_NotPressed:	; 1 bytes @ 0xD
  3193  000D'                    ?_Button_State_Pressed:	; 1 bytes @ 0xD
  3194  000D'                    	global	Sensor_Service@name
  3195                           Sensor_Service@name:	; 1 bytes @ 0xD
  3196  000D'                    	global	Button_State_Initializing@button
  3197                           Button_State_Initializing@button:	; 1 bytes @ 0xD
  3198  000D'                    	global	Button_State_NotPressed@button
  3199                           Button_State_NotPressed@button:	; 1 bytes @ 0xD
  3200  000D'                    	global	Button_State_Pressed@button
  3201                           Button_State_Pressed@button:	; 1 bytes @ 0xD
  3202  000D'                    	ds	1
  3203  000D'                    ??_Button_State_Initializing:	; 1 bytes @ 0xE
  3204  000E'                    ??_Button_State_NotPressed:	; 1 bytes @ 0xE
  3205  000E'                    ??_Button_State_Pressed:	; 1 bytes @ 0xE
  3206  000E'                    	global	Sensor_Service@error
  3207                           Sensor_Service@error:	; 1 bytes @ 0xE
  3208  000E'                    	ds	1
  3209  000E'                    	global	Sensor_Service@sensor
  3210                           Sensor_Service@sensor:	; 1 bytes @ 0xF
  3211  000F'                    	ds	1
  3212  000F'                    ??_MTOUCH_Sensor_SampleAll:	; 1 bytes @ 0x10
  3213  0010'                    	ds	1
  3214  0010'                    	global	MTOUCH_Sensor_SampleAll@sensor
  3215                           MTOUCH_Sensor_SampleAll@sensor:	; 1 bytes @ 0x11
  3216  0011'                    	ds	1
  3217  0011'                    ??_Button_Service:	; 1 bytes @ 0x12
  3218  0012'                    	ds	2
  3219  0012'                    	global	Button_Service@name
  3220                           Button_Service@name:	; 1 bytes @ 0x14
  3221  0014'                    	ds	1
  3222  0014'                    	global	Button_Service@button
  3223                           Button_Service@button:	; 1 bytes @ 0x15
  3224  0015'                    	ds	1
  3225  0015'                    ??_MTOUCH_Button_ServiceAll:	; 1 bytes @ 0x16
  3226  0016'                    	ds	1
  3227  0016'                    	global	MTOUCH_Button_ServiceAll@button
  3228                           MTOUCH_Button_ServiceAll@button:	; 1 bytes @ 0x17
  3229  0017'                    	ds	1
  3230  0017'                    ??_MTOUCH_Service_Mainloop:	; 1 bytes @ 0x18
  3231  0018'                    ??_main:	; 1 bytes @ 0x18
  3232  0018'                    ;!
  3233                           ;!Data Sizes:
  3234                           ;!    Strings     0
  3235                           ;!    Constant    21
  3236                           ;!    Data        26
  3237                           ;!    BSS         29
  3238                           ;!    Persistent  0
  3239                           ;!    Stack       0
  3240                           ;!
  3241                           ;!Auto Spaces:
  3242                           ;!    Space          Size  Autos    Used
  3243                           ;!    COMMON           14      8      14
  3244                           ;!    BANK0            80     24      73
  3245                           ;!    BANK1            80      0       0
  3246                           ;!    BANK2            80      0       0
  3247                           
  3248                           ;!
  3249                           ;!Pointer List with Targets:
  3250                           ;!
  3251                           ;!    Sensor_Scanfrequency_Evaluation@sensor.scanB	const PTR FTN()void  size(2) Largest 
                                 target is 0
  3252                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3253                           ;!
  3254                           ;!    Sensor_Scanfrequency_Evaluation@sensor.scanA	const PTR FTN()void  size(2) Largest 
                                 target is 0
  3255                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3256                           ;!
  3257                           ;!    Button_Service$1586$0	PTR struct . size(1) Largest target is 16
  3258                           ;!		 -> mtouch_button(BANK0[16]), 
  3259                           ;!
  3260                           ;!    Button_Service$1586	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
  3261                           ;!		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 
                                 
  3262                           ;!
  3263                           ;!    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
  3264                           ;!		 -> mtouch_button(BANK0[16]), 
  3265                           ;!
  3266                           ;!    Sensor_isEnabled$0	PTR struct . size(1) Largest target is 9
  3267                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3268                           ;!
  3269                           ;!    memcpy@d1	PTR void  size(1) Largest target is 16
  3270                           ;!		 -> mtouch_button(BANK0[16]), 
  3271                           ;!
  3272                           ;!    memcpy@d	PTR unsigned char  size(1) Largest target is 16
  3273                           ;!		 -> mtouch_button(BANK0[16]), 
  3274                           ;!
  3275                           ;!    memcpy@s1	PTR const void  size(2) Largest target is 16
  3276                           ;!		 -> mtouch_button_init(CODE[16]), 
  3277                           ;!
  3278                           ;!    memcpy@s	PTR const unsigned char  size(2) Largest target is 16
  3279                           ;!		 -> mtouch_button_init(CODE[16]), 
  3280                           ;!
  3281                           ;!    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
  3282                           ;!		 -> mtouch_button(BANK0[16]), 
  3283                           ;!
  3284                           ;!    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
  3285                           ;!		 -> mtouch_button(BANK0[16]), 
  3286                           ;!
  3287                           ;!    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
  3288                           ;!		 -> mtouch_button(BANK0[16]), 
  3289                           ;!
  3290                           ;!    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
  3291                           ;!		 -> mtouch_button(BANK0[16]), 
  3292                           ;!
  3293                           ;!    Button_Tick_helper@button	PTR struct . size(1) Largest target is 16
  3294                           ;!		 -> mtouch_button(BANK0[16]), 
  3295                           ;!
  3296                           ;!    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
  3297                           ;!		 -> mtouch_button(BANK0[16]), 
  3298                           ;!
  3299                           ;!    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
  3300                           ;!		 -> mtouch_button(BANK0[16]), 
  3301                           ;!
  3302                           ;!    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
  3303                           ;!		 -> mtouch_button(BANK0[16]), 
  3304                           ;!
  3305                           ;!    Button_Service@button	PTR struct . size(1) Largest target is 16
  3306                           ;!		 -> mtouch_button(BANK0[16]), 
  3307                           ;!
  3308                           ;!    sp__memcpy	PTR void  size(1) Largest target is 16
  3309                           ;!		 -> mtouch_button(BANK0[16]), 
  3310                           ;!
  3311                           ;!    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 16
  3312                           ;!		 -> mtouch_button(BANK0[16]), 
  3313                           ;!
  3314                           ;!    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
  3315                           ;!		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 
                                 
  3316                           ;!
  3317                           ;!    callback_notPressed	PTR FTN(enum E2303,)void  size(2) Largest target is 1
  3318                           ;!		 -> Button_DefaultCallback(), 
  3319                           ;!
  3320                           ;!    callback_pressed	PTR FTN(enum E2303,)void  size(2) Largest target is 1
  3321                           ;!		 -> Button_DefaultCallback(), 
  3322                           ;!
  3323                           ;!    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3324                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3325                           ;!
  3326                           ;!    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3327                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3328                           ;!
  3329                           ;!    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
  3330                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3331                           ;!
  3332                           ;!    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
                                 
  3333                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3334                           ;!
  3335                           ;!    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
                                 
  3336                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3337                           ;!
  3338                           ;!    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
  3339                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3340                           ;!
  3341                           ;!    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 9
  3342                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3343                           ;!
  3344                           ;!    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3345                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3346                           ;!
  3347                           ;!    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3348                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3349                           ;!
  3350                           ;!    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 9
  3351                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3352                           ;!
  3353                           ;!    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3354                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3355                           ;!
  3356                           ;!    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3357                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3358                           ;!
  3359                           ;!    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 9
  3360                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3361                           ;!
  3362                           ;!    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is
                                  1
  3363                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3364                           ;!
  3365                           ;!    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is
                                  1
  3366                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3367                           ;!
  3368                           ;!    Sensor_setScanFunction@sensor	PTR struct . size(1) Largest target is 9
  3369                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3370                           ;!
  3371                           ;!    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target i
                                 s 1
  3372                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3373                           ;!
  3374                           ;!    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target i
                                 s 1
  3375                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3376                           ;!
  3377                           ;!    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
  3378                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3379                           ;!
  3380                           ;!    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target 
                                 is 1
  3381                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3382                           ;!
  3383                           ;!    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target 
                                 is 1
  3384                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3385                           ;!
  3386                           ;!    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 9
  3387                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3388                           ;!
  3389                           ;!    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3390                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3391                           ;!
  3392                           ;!    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3393                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3394                           ;!
  3395                           ;!    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 9
  3396                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3397                           ;!
  3398                           ;!    Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
  3399                           ;!		 -> mtouch_sensor(BANK0[9]), 
  3400                           ;!
  3401                           ;!    S371$scanB	const PTR FTN()void  size(2) Largest target is 1
  3402                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3403                           ;!
  3404                           ;!    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
  3405                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3406                           ;!
  3407                           ;!    S371$scanA	const PTR FTN()void  size(2) Largest target is 1
  3408                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3409                           ;!
  3410                           ;!    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
  3411                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3412                           ;!
  3413                           ;!    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
  3414                           ;!		 -> MTOUCH_CVD_ScanB_0(), 
  3415                           ;!
  3416                           ;!    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
  3417                           ;!		 -> MTOUCH_CVD_ScanA_0(), 
  3418                           ;!
  3419                           ;!    callback_sampled	PTR FTN(enum E2110,)void  size(2) Largest target is 1
  3420                           ;!		 -> Sensor_DefaultCallback(), 
  3421                           ;!
  3422                           ;!    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is
                                  1
  3423                           ;!		 -> Sensor_Acq_ExecuteScan(), TMR2_DefaultInterruptHandler(), 
  3424                           ;!
  3425                           ;!    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
  3426                           ;!		 -> Sensor_Acq_ExecuteScan(), Absolute function(), TMR2_DefaultInterruptHandler(), 

  3427                           ;!
  3428                           
  3429                           
  3430                           ;!
  3431                           ;!Critical Paths under _main in COMMON
  3432                           ;!
  3433                           ;!    None.
  3434                           ;!
  3435                           ;!Critical Paths under _INTERRUPT_InterruptManager in COMMON
  3436                           ;!
  3437                           ;!    _TMR2_ISR->_Sensor_Acq_ExecuteScan
  3438                           ;!    _Sensor_Acq_ExecuteScan->i1___bmul
  3439                           ;!    _Sensor_Acq_ExecuteScan->i1_abs
  3440                           ;!
  3441                           ;!Critical Paths under _main in BANK0
  3442                           ;!
  3443                           ;!    _TMR2_Initialize->_TMR2_SetInterruptHandler
  3444                           ;!    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
  3445                           ;!    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
  3446                           ;!    _MTOUCH_Sensor_Initialize->___bmul
  3447                           ;!    _MTOUCH_Button_InitializeAll->_memcpy
  3448                           ;!    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
  3449                           ;!    _MTOUCH_Button_Tick->_Button_Tick_helper
  3450                           ;!    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
  3451                           ;!    _MTOUCH_Sensor_SampleAll->_Sensor_Service
  3452                           ;!    _Sensor_Service->_Sensor_Acquisition
  3453                           ;!    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
  3454                           ;!    _Sensor_Acq_ExecutePacket->_TMR2_SetInterruptHandler
  3455                           ;!    _MTOUCH_Button_ServiceAll->_Button_Service
  3456                           ;!    _Button_Service->_Button_State_Initializing
  3457                           ;!    _MTOUCH_Sensor_wasSampled->___bmul
  3458                           ;!    _Button_State_Initializing->_Button_Baseline_Initialize
  3459                           ;!    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
  3460                           ;!    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
  3461                           ;!    _MTOUCH_Sensor_RawSample_Get->___bmul
  3462                           ;!
  3463                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK0
  3464                           ;!
  3465                           ;!    None.
  3466                           ;!
  3467                           ;!Critical Paths under _main in BANK1
  3468                           ;!
  3469                           ;!    None.
  3470                           ;!
  3471                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK1
  3472                           ;!
  3473                           ;!    None.
  3474                           ;!
  3475                           ;!Critical Paths under _main in BANK2
  3476                           ;!
  3477                           ;!    None.
  3478                           ;!
  3479                           ;!Critical Paths under _INTERRUPT_InterruptManager in BANK2
  3480                           ;!
  3481                           ;!    None.
  3482                           
  3483 ;;
  3484 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3485 ;;
  3486                           
  3487                           ;!
  3488                           ;!Call Graph Tables:
  3489                           ;!
  3490                           ;! ---------------------------------------------------------------------------------
  3491                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3492                           ;! ---------------------------------------------------------------------------------
  3493                           ;! (0) _main                                                 0     0      0    6933
  3494                           ;!            _MTOUCH_Button_isPressed
  3495                           ;!            _MTOUCH_Service_Mainloop
  3496                           ;!                  _SYSTEM_Initialize
  3497                           ;! ---------------------------------------------------------------------------------
  3498                           ;! (1) _SYSTEM_Initialize                                    0     0      0    1284
  3499                           ;!                  _MTOUCH_Initialize
  3500                           ;!              _OSCILLATOR_Initialize
  3501                           ;!             _PIN_MANAGER_Initialize
  3502                           ;!                    _TMR2_Initialize
  3503                           ;!                     _WDT_Initialize
  3504                           ;! ---------------------------------------------------------------------------------
  3505                           ;! (2) _WDT_Initialize                                       0     0      0       0
  3506                           ;! ---------------------------------------------------------------------------------
  3507                           ;! (2) _TMR2_Initialize                                      0     0      0     174
  3508                           ;!           _TMR2_SetInterruptHandler
  3509                           ;! ---------------------------------------------------------------------------------
  3510                           ;! (2) _PIN_MANAGER_Initialize                               0     0      0       0
  3511                           ;! ---------------------------------------------------------------------------------
  3512                           ;! (2) _OSCILLATOR_Initialize                                0     0      0       0
  3513                           ;! ---------------------------------------------------------------------------------
  3514                           ;! (2) _MTOUCH_Initialize                                    0     0      0    1110
  3515                           ;!        _MTOUCH_Button_InitializeAll
  3516                           ;!        _MTOUCH_Sensor_InitializeAll
  3517                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3518                           ;!      _MTOUCH_Sensor_Scan_Initialize
  3519                           ;! ---------------------------------------------------------------------------------
  3520                           ;! (3) _MTOUCH_Sensor_InitializeAll                          2     2      0     425
  3521                           ;!                                              7 BANK0      2     2      0
  3522                           ;!           _MTOUCH_Sensor_Initialize
  3523                           ;! ---------------------------------------------------------------------------------
  3524                           ;! (4) _MTOUCH_Sensor_Initialize                             3     3      0     357
  3525                           ;!                                              4 BANK0      3     3      0
  3526                           ;!               _MTOUCH_Sensor_Enable
  3527                           ;!               _Sensor_Sampled_Reset
  3528                           ;!                             ___bmul
  3529                           ;! ---------------------------------------------------------------------------------
  3530                           ;! (5) _MTOUCH_Sensor_Enable                                 0     0      0       0
  3531                           ;! ---------------------------------------------------------------------------------
  3532                           ;! (3) _MTOUCH_Button_InitializeAll                          2     2      0     529
  3533                           ;!                                             10 BANK0      2     2      0
  3534                           ;!           _MTOUCH_Button_Initialize
  3535                           ;!                             _memcpy
  3536                           ;! ---------------------------------------------------------------------------------
  3537                           ;! (4) _memcpy                                              10     6      4     328
  3538                           ;!                                              0 BANK0     10     6      4
  3539                           ;! ---------------------------------------------------------------------------------
  3540                           ;! (1) _MTOUCH_Service_Mainloop                              0     0      0    5605
  3541                           ;!           _MTOUCH_Button_ServiceAll
  3542                           ;!            _MTOUCH_Sensor_SampleAll
  3543                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3544                           ;!                        _MTOUCH_Tick
  3545                           ;! ---------------------------------------------------------------------------------
  3546                           ;! (2) _MTOUCH_Tick                                          0     0      0     121
  3547                           ;!                 _MTOUCH_Button_Tick
  3548                           ;! ---------------------------------------------------------------------------------
  3549                           ;! (3) _MTOUCH_Button_Tick                                   0     0      0     121
  3550                           ;!                 _Button_Tick_helper
  3551                           ;! ---------------------------------------------------------------------------------
  3552                           ;! (4) _Button_Tick_helper                                   3     3      0     121
  3553                           ;!                                              0 BANK0      3     3      0
  3554                           ;! ---------------------------------------------------------------------------------
  3555                           ;! (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
  3556                           ;!                                              1 BANK0      2     2      0
  3557                           ;!               _Sensor_Sampled_Reset
  3558                           ;! ---------------------------------------------------------------------------------
  3559                           ;! (4) _Sensor_Sampled_Reset                                 1     1      0      88
  3560                           ;!                                              0 BANK0      1     1      0
  3561                           ;! ---------------------------------------------------------------------------------
  3562                           ;! (2) _MTOUCH_Sensor_SampleAll                              2     2      0    1818
  3563                           ;!                                             16 BANK0      2     2      0
  3564                           ;!                     _Sensor_Service
  3565                           ;! ---------------------------------------------------------------------------------
  3566                           ;! (3) _Sensor_Service                                       5     5      0    1719
  3567                           ;!                                             11 BANK0      5     5      0
  3568                           ;!                 _Sensor_Acquisition
  3569                           ;!             _Sensor_DefaultCallback *
  3570                           ;!            _Sensor_RawSample_Update
  3571                           ;!                  _Sensor_setSampled
  3572                           ;!                             ___bmul
  3573                           ;! ---------------------------------------------------------------------------------
  3574                           ;! (4) _Sensor_setSampled                                    1     1      0      55
  3575                           ;!                                              0 BANK0      1     1      0
  3576                           ;! ---------------------------------------------------------------------------------
  3577                           ;! (4) _Sensor_RawSample_Update                              1     1      0      77
  3578                           ;!                                              0 BANK0      1     1      0
  3579                           ;! ---------------------------------------------------------------------------------
  3580                           ;! (4) _Sensor_DefaultCallback                               1     0      1      53
  3581                           ;!                                              0 BANK0      1     0      1
  3582                           ;! ---------------------------------------------------------------------------------
  3583                           ;! (4) _Sensor_Acquisition                                   6     6      0    1108
  3584                           ;!                                              5 BANK0      6     6      0
  3585                           ;!           _Sensor_Acq_ExecutePacket
  3586                           ;!                   _Sensor_isEnabled
  3587                           ;!                   _Sensor_setActive
  3588                           ;!                 _Sensor_setInactive
  3589                           ;!                                _abs
  3590                           ;! ---------------------------------------------------------------------------------
  3591                           ;! (5) _abs                                                  4     2      2     292
  3592                           ;!                                              0 BANK0      4     2      2
  3593                           ;! ---------------------------------------------------------------------------------
  3594                           ;! (5) _Sensor_setInactive                                   1     1      0      55
  3595                           ;!                                              0 BANK0      1     1      0
  3596                           ;! ---------------------------------------------------------------------------------
  3597                           ;! (5) _Sensor_setActive                                     1     1      0      55
  3598                           ;!                                              0 BANK0      1     1      0
  3599                           ;! ---------------------------------------------------------------------------------
  3600                           ;! (5) _Sensor_isEnabled                                     0     0      0      18
  3601                           ;! ---------------------------------------------------------------------------------
  3602                           ;! (5) _Sensor_Acq_ExecutePacket                             3     3      0     429
  3603                           ;!                                              2 BANK0      3     3      0
  3604                           ;!      _MTOUCH_Sensor_Scan_Initialize
  3605                           ;!             _Sensor_setScanFunction
  3606                           ;!            _TMR2_LoadPeriodRegister
  3607                           ;!           _TMR2_SetInterruptHandler
  3608                           ;!                    _TMR2_StartTimer
  3609                           ;!                     _TMR2_StopTimer
  3610                           ;! ---------------------------------------------------------------------------------
  3611                           ;! (6) _TMR2_StopTimer                                       0     0      0       0
  3612                           ;! ---------------------------------------------------------------------------------
  3613                           ;! (6) _TMR2_StartTimer                                      0     0      0       0
  3614                           ;! ---------------------------------------------------------------------------------
  3615                           ;! (3) _TMR2_SetInterruptHandler                             2     0      2     174
  3616                           ;!                                              0 BANK0      2     0      2
  3617                           ;! ---------------------------------------------------------------------------------
  3618                           ;! (6) _TMR2_LoadPeriodRegister                              1     1      0      22
  3619                           ;!                                              0 BANK0      1     1      0
  3620                           ;! ---------------------------------------------------------------------------------
  3621                           ;! (6) _Sensor_setScanFunction                               1     1      0      77
  3622                           ;!                                              0 BANK0      1     1      0
  3623                           ;! ---------------------------------------------------------------------------------
  3624                           ;! (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
  3625                           ;! ---------------------------------------------------------------------------------
  3626                           ;! (2) _MTOUCH_Button_ServiceAll                             2     2      0    3510
  3627                           ;!                                             22 BANK0      2     2      0
  3628                           ;!                     _Button_Service
  3629                           ;! ---------------------------------------------------------------------------------
  3630                           ;! (3) _Button_Service                                       4     4      0    3442
  3631                           ;!                                             18 BANK0      4     4      0
  3632                           ;!            _Button_Deviation_Update
  3633                           ;!              _Button_Reading_Update
  3634                           ;!          _Button_State_Initializing *
  3635                           ;!            _Button_State_NotPressed *
  3636                           ;!               _Button_State_Pressed *
  3637                           ;!           _MTOUCH_Button_Initialize
  3638                           ;!         _MTOUCH_Sensor_isCalibrated
  3639                           ;!           _MTOUCH_Sensor_wasSampled
  3640                           ;! ---------------------------------------------------------------------------------
  3641                           ;! (4) _MTOUCH_Sensor_wasSampled                             2     2      0     225
  3642                           ;!                                              4 BANK0      2     2      0
  3643                           ;!                             ___bmul
  3644                           ;! ---------------------------------------------------------------------------------
  3645                           ;! (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
  3646                           ;! ---------------------------------------------------------------------------------
  3647                           ;! (4) _Button_State_Pressed                                 3     2      1     521
  3648                           ;!                                             13 BANK0      3     2      1
  3649                           ;!             _Button_DefaultCallback *
  3650                           ;!           _MTOUCH_Button_Initialize
  3651                           ;! ---------------------------------------------------------------------------------
  3652                           ;! (4) _Button_State_NotPressed                              3     2      1     882
  3653                           ;!                                             13 BANK0      3     2      1
  3654                           ;!             _Button_Baseline_Update
  3655                           ;!             _Button_DefaultCallback *
  3656                           ;!           _MTOUCH_Button_Initialize
  3657                           ;! ---------------------------------------------------------------------------------
  3658                           ;! (4) _MTOUCH_Button_Initialize                             4     4      0     133
  3659                           ;!                                              0 BANK0      4     4      0
  3660                           ;!            _MTOUCH_Sensor_Calibrate
  3661                           ;! ---------------------------------------------------------------------------------
  3662                           ;! (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
  3663                           ;! ---------------------------------------------------------------------------------
  3664                           ;! (5) _Button_DefaultCallback                               1     0      1     159
  3665                           ;!                                              0 BANK0      1     0      1
  3666                           ;! ---------------------------------------------------------------------------------
  3667                           ;! (4) _Button_State_Initializing                            5     4      1     813
  3668                           ;!                                             13 BANK0      5     4      1
  3669                           ;!         _Button_Baseline_Initialize
  3670                           ;!             _Button_Baseline_Update
  3671                           ;! ---------------------------------------------------------------------------------
  3672                           ;! (5) _Button_Baseline_Update                               7     7      0     260
  3673                           ;!                                              0 BANK0      7     7      0
  3674                           ;! ---------------------------------------------------------------------------------
  3675                           ;! (5) _Button_Baseline_Initialize                           5     5      0     355
  3676                           ;!                                              8 BANK0      5     5      0
  3677                           ;!        _MTOUCH_Sensor_RawSample_Get
  3678                           ;! ---------------------------------------------------------------------------------
  3679                           ;! (4) _Button_Reading_Update                                3     3      0     456
  3680                           ;!                                              8 BANK0      3     3      0
  3681                           ;!        _MTOUCH_Sensor_RawSample_Get
  3682                           ;! ---------------------------------------------------------------------------------
  3683                           ;! (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     247
  3684                           ;!                                              4 BANK0      4     2      2
  3685                           ;!                             ___bmul
  3686                           ;! ---------------------------------------------------------------------------------
  3687                           ;! (5) ___bmul                                               4     3      1     203
  3688                           ;!                                              0 BANK0      4     3      1
  3689                           ;! ---------------------------------------------------------------------------------
  3690                           ;! (4) _Button_Deviation_Update                             15    15      0     213
  3691                           ;!                                              0 BANK0     15    15      0
  3692                           ;! ---------------------------------------------------------------------------------
  3693                           ;! (1) _MTOUCH_Button_isPressed                              2     2      0      44
  3694                           ;!                                              0 BANK0      2     2      0
  3695                           ;! ---------------------------------------------------------------------------------
  3696                           ;! Estimated maximum stack depth 6
  3697                           ;! ---------------------------------------------------------------------------------
  3698                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3699                           ;! ---------------------------------------------------------------------------------
  3700                           ;! (8) _INTERRUPT_InterruptManager                           0     0      0     409
  3701                           ;!                           _TMR2_ISR
  3702                           ;! ---------------------------------------------------------------------------------
  3703                           ;! (9) _TMR2_ISR                                             0     0      0     409
  3704                           ;!                   Absolute function *
  3705                           ;!             _Sensor_Acq_ExecuteScan *
  3706                           ;!       _TMR2_DefaultInterruptHandler *
  3707                           ;! ---------------------------------------------------------------------------------
  3708                           ;! (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
  3709                           ;! ---------------------------------------------------------------------------------
  3710                           ;! (10) _Sensor_Acq_ExecuteScan                              4     4      0     409
  3711                           ;!                                              4 COMMON     4     4      0
  3712                           ;!                 _MTOUCH_CVD_ScanA_0 *
  3713                           ;!                 _MTOUCH_CVD_ScanB_0 *
  3714                           ;!                           i1___bmul
  3715                           ;!                              i1_abs
  3716                           ;! ---------------------------------------------------------------------------------
  3717                           ;! (11) i1_abs                                               4     2      2     144
  3718                           ;!                                              0 COMMON     4     2      2
  3719                           ;! ---------------------------------------------------------------------------------
  3720                           ;! (11) i1___bmul                                            4     3      1      87
  3721                           ;!                                              0 COMMON     4     3      1
  3722                           ;! ---------------------------------------------------------------------------------
  3723                           ;! (11) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
  3724                           ;! ---------------------------------------------------------------------------------
  3725                           ;! (11) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
  3726                           ;! ---------------------------------------------------------------------------------
  3727                           ;! (10) Absolute function(Fake)                              0     0      0       0
  3728                           ;! ---------------------------------------------------------------------------------
  3729                           ;! Estimated maximum stack depth 11
  3730                           ;! ---------------------------------------------------------------------------------
  3731                           ;!
  3732                           ;! Call Graph Graphs:
  3733                           ;!
  3734                           ;! _main (ROOT)
  3735                           ;!   _MTOUCH_Button_isPressed
  3736                           ;!   _MTOUCH_Service_Mainloop
  3737                           ;!     _MTOUCH_Button_ServiceAll
  3738                           ;!       _Button_Service
  3739                           ;!         _Button_Deviation_Update
  3740                           ;!         _Button_Reading_Update
  3741                           ;!           _MTOUCH_Sensor_RawSample_Get
  3742                           ;!             ___bmul
  3743                           ;!         _Button_State_Initializing *
  3744                           ;!           _Button_Baseline_Initialize
  3745                           ;!             _MTOUCH_Sensor_RawSample_Get
  3746                           ;!               ___bmul
  3747                           ;!           _Button_Baseline_Update
  3748                           ;!         _Button_State_NotPressed *
  3749                           ;!           _Button_Baseline_Update
  3750                           ;!           _Button_DefaultCallback *
  3751                           ;!           _MTOUCH_Button_Initialize *
  3752                           ;!             _MTOUCH_Sensor_Calibrate
  3753                           ;!         _Button_State_Pressed *
  3754                           ;!           _Button_DefaultCallback *
  3755                           ;!           _MTOUCH_Button_Initialize *
  3756                           ;!             _MTOUCH_Sensor_Calibrate
  3757                           ;!         _MTOUCH_Button_Initialize *
  3758                           ;!           _MTOUCH_Sensor_Calibrate
  3759                           ;!         _MTOUCH_Sensor_isCalibrated *
  3760                           ;!         _MTOUCH_Sensor_wasSampled *
  3761                           ;!           ___bmul
  3762                           ;!     _MTOUCH_Sensor_SampleAll
  3763                           ;!       _Sensor_Service
  3764                           ;!         _Sensor_Acquisition
  3765                           ;!           _Sensor_Acq_ExecutePacket
  3766                           ;!             _MTOUCH_Sensor_Scan_Initialize
  3767                           ;!             _Sensor_setScanFunction
  3768                           ;!             _TMR2_LoadPeriodRegister
  3769                           ;!             _TMR2_SetInterruptHandler
  3770                           ;!             _TMR2_StartTimer
  3771                           ;!             _TMR2_StopTimer
  3772                           ;!           _Sensor_isEnabled
  3773                           ;!           _Sensor_setActive
  3774                           ;!           _Sensor_setInactive
  3775                           ;!           _abs
  3776                           ;!         _Sensor_DefaultCallback *
  3777                           ;!         _Sensor_RawSample_Update *
  3778                           ;!         _Sensor_setSampled *
  3779                           ;!         ___bmul *
  3780                           ;!     _MTOUCH_Sensor_Sampled_ResetAll
  3781                           ;!       _Sensor_Sampled_Reset
  3782                           ;!     _MTOUCH_Tick
  3783                           ;!       _MTOUCH_Button_Tick
  3784                           ;!         _Button_Tick_helper
  3785                           ;!   _SYSTEM_Initialize
  3786                           ;!     _MTOUCH_Initialize
  3787                           ;!       _MTOUCH_Button_InitializeAll
  3788                           ;!         _MTOUCH_Button_Initialize
  3789                           ;!           _MTOUCH_Sensor_Calibrate
  3790                           ;!         _memcpy
  3791                           ;!       _MTOUCH_Sensor_InitializeAll
  3792                           ;!         _MTOUCH_Sensor_Initialize
  3793                           ;!           _MTOUCH_Sensor_Enable
  3794                           ;!           _Sensor_Sampled_Reset
  3795                           ;!           ___bmul
  3796                           ;!       _MTOUCH_Sensor_Sampled_ResetAll
  3797                           ;!         _Sensor_Sampled_Reset
  3798                           ;!       _MTOUCH_Sensor_Scan_Initialize
  3799                           ;!     _OSCILLATOR_Initialize
  3800                           ;!     _PIN_MANAGER_Initialize
  3801                           ;!     _TMR2_Initialize
  3802                           ;!       _TMR2_SetInterruptHandler
  3803                           ;!     _WDT_Initialize
  3804                           ;!
  3805                           ;! _INTERRUPT_InterruptManager (ROOT)
  3806                           ;!   _TMR2_ISR
  3807                           ;!     Absolute function(Fake) *
  3808                           ;!     _Sensor_Acq_ExecuteScan *
  3809                           ;!       _MTOUCH_CVD_ScanA_0 *
  3810                           ;!       _MTOUCH_CVD_ScanB_0 *
  3811                           ;!       i1___bmul *
  3812                           ;!       i1_abs *
  3813                           ;!     _TMR2_DefaultInterruptHandler *
  3814                           ;!
  3815                           
  3816                           ;! Address spaces:
  3817                           
  3818                           ;!Name               Size   Autos  Total    Cost      Usage
  3819                           ;!BIGRAM              F0      0       0       0        0.0%
  3820                           ;!NULL                 0      0       0       0        0.0%
  3821                           ;!CODE                 0      0       0       0        0.0%
  3822                           ;!BITCOMMON            E      0       0       1        0.0%
  3823                           ;!BITSFR0              0      0       0       1        0.0%
  3824                           ;!SFR0                 0      0       0       1        0.0%
  3825                           ;!COMMON               E      8       E       2      100.0%
  3826                           ;!BITSFR1              0      0       0       2        0.0%
  3827                           ;!SFR1                 0      0       0       2        0.0%
  3828                           ;!BITSFR2              0      0       0       3        0.0%
  3829                           ;!SFR2                 0      0       0       3        0.0%
  3830                           ;!STACK                0      0       0       3        0.0%
  3831                           ;!BITSFR3              0      0       0       4        0.0%
  3832                           ;!SFR3                 0      0       0       4        0.0%
  3833                           ;!ABS                  0      0      57       4        0.0%
  3834                           ;!BITBANK0            50      0       0       5        0.0%
  3835                           ;!BITSFR4              0      0       0       5        0.0%
  3836                           ;!SFR4                 0      0       0       5        0.0%
  3837                           ;!BANK0               50     18      49       6       91.3%
  3838                           ;!BITSFR5              0      0       0       6        0.0%
  3839                           ;!SFR5                 0      0       0       6        0.0%
  3840                           ;!BITBANK1            50      0       0       7        0.0%
  3841                           ;!BITSFR6              0      0       0       7        0.0%
  3842                           ;!SFR6                 0      0       0       7        0.0%
  3843                           ;!BANK1               50      0       0       8        0.0%
  3844                           ;!BITSFR7              0      0       0       8        0.0%
  3845                           ;!SFR7                 0      0       0       8        0.0%
  3846                           ;!BITBANK2            50      0       0       9        0.0%
  3847                           ;!BITSFR8              0      0       0       9        0.0%
  3848                           ;!SFR8                 0      0       0       9        0.0%
  3849                           ;!BANK2               50      0       0      10        0.0%
  3850                           ;!BITSFR9              0      0       0      10        0.0%
  3851                           ;!SFR9                 0      0       0      10        0.0%
  3852                           ;!BITSFR10             0      0       0      11        0.0%
  3853                           ;!SFR10                0      0       0      11        0.0%
  3854                           ;!DATA                 0      0      57      11        0.0%
  3855                           ;!BITSFR11             0      0       0      12        0.0%
  3856                           ;!SFR11                0      0       0      12        0.0%
  3857                           ;!BITSFR12             0      0       0      13        0.0%
  3858                           ;!SFR12                0      0       0      13        0.0%
  3859                           ;!BITSFR13             0      0       0      14        0.0%
  3860                           ;!SFR13                0      0       0      14        0.0%
  3861                           ;!BITSFR14             0      0       0      15        0.0%
  3862                           ;!SFR14                0      0       0      15        0.0%
  3863                           ;!BITSFR15             0      0       0      16        0.0%
  3864                           ;!SFR15                0      0       0      16        0.0%
  3865                           ;!BITSFR16             0      0       0      17        0.0%
  3866                           ;!SFR16                0      0       0      17        0.0%
  3867                           ;!BITSFR17             0      0       0      18        0.0%
  3868                           ;!SFR17                0      0       0      18        0.0%
  3869                           ;!BITSFR18             0      0       0      19        0.0%
  3870                           ;!SFR18                0      0       0      19        0.0%
  3871                           ;!BITSFR19             0      0       0      20        0.0%
  3872                           ;!SFR19                0      0       0      20        0.0%
  3873                           ;!BITSFR20             0      0       0      21        0.0%
  3874                           ;!SFR20                0      0       0      21        0.0%
  3875                           ;!BITSFR21             0      0       0      22        0.0%
  3876                           ;!SFR21                0      0       0      22        0.0%
  3877                           ;!BITSFR22             0      0       0      23        0.0%
  3878                           ;!SFR22                0      0       0      23        0.0%
  3879                           ;!BITSFR23             0      0       0      24        0.0%
  3880                           ;!SFR23                0      0       0      24        0.0%
  3881                           ;!BITSFR24             0      0       0      25        0.0%
  3882                           ;!SFR24                0      0       0      25        0.0%
  3883                           ;!BITSFR25             0      0       0      26        0.0%
  3884                           ;!SFR25                0      0       0      26        0.0%
  3885                           ;!BITSFR26             0      0       0      27        0.0%
  3886                           ;!SFR26                0      0       0      27        0.0%
  3887                           ;!BITSFR27             0      0       0      28        0.0%
  3888                           ;!SFR27                0      0       0      28        0.0%
  3889                           ;!BITSFR28             0      0       0      29        0.0%
  3890                           ;!SFR28                0      0       0      29        0.0%
  3891                           ;!BITSFR29             0      0       0      30        0.0%
  3892                           ;!SFR29                0      0       0      30        0.0%
  3893                           ;!BITSFR30             0      0       0      31        0.0%
  3894                           ;!SFR30                0      0       0      31        0.0%
  3895                           ;!BITSFR31             0      0       0      32        0.0%
  3896                           ;!SFR31                0      0       0      32        0.0%
  3897                           
  3898                           	global	_main
  3899                           
  3900 ;; *************** function _main *****************
  3901 ;; Defined at:
  3902 ;;		line 49 in file "main.c"
  3903 ;; Parameters:    Size  Location     Type
  3904 ;;		None
  3905 ;; Auto vars:     Size  Location     Type
  3906 ;;		None
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : B1F/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3916 ;;      Params:         0       0       0       0
  3917 ;;      Locals:         0       0       0       0
  3918 ;;      Temps:          0       0       0       0
  3919 ;;      Totals:         0       0       0       0
  3920 ;;Total ram usage:        0 bytes
  3921 ;; Hardware stack levels required when called:   11
  3922 ;; This function calls:
  3923 ;;		_MTOUCH_Button_isPressed
  3924 ;;		_MTOUCH_Service_Mainloop
  3925 ;;		_SYSTEM_Initialize
  3926 ;; This function is called by:
  3927 ;;		Startup code after reset
  3928 ;; This function uses a non-reentrant model
  3929 ;;
  3930                           psect	maintext,global,class=CODE,delta=2,merge=1,split=1,group=0
  3931                           	file	"main.c"
  3932                           	line	49
  3933                           global __pmaintext
  3934                           __pmaintext:	;psect for function _main
  3935  0000'                    psect	maintext
  3936                           	file	"main.c"
  3937                           	line	49
  3938                           	global	__size_of_main
  3939                           	__size_of_main	equ	__end_of_main-_main
  3940  0022                     	
  3941                           _main:	
  3942  0000'                    ;incstack = 0
  3943                           	opt	stack 5
  3944                           ; Regs used in _main: [allreg]
  3945                           	line	52
  3946                           	
  3947                           l2505:	
  3948  0000'                    ;main.c: 52:     SYSTEM_Initialize();
  3949                           	fcall	_SYSTEM_Initialize
  3950  0000' 3180' 2000' 3180'  	line	58
  3951                           	
  3952                           l2507:	
  3953  0003'                    ;main.c: 58:     (INTCONbits.GIE = 1);
  3954                           	bsf	(11),7	;volatile
  3955  0003' 178B               	line	61
  3956                           	
  3957                           l2509:	
  3958  0004'                    ;main.c: 61:     (INTCONbits.PEIE = 1);
  3959                           	bsf	(11),6	;volatile
  3960  0004' 170B               	line	69
  3961                           ;main.c: 69:     while (1)
  3962                           	
  3963                           l557:	
  3964  0005'                    	line	72
  3965                           ;main.c: 70:     {;main.c: 72:                 if(MTOUCH_Service_Mainloop())
  3966                           	fcall	_MTOUCH_Service_Mainloop
  3967  0005' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  3968  0008' 3A00               	skipnz
  3969  0009' 1903               	goto	u1811
  3970  000A' 280C'              	goto	u1810
  3971  000B' 280D'              u1811:
  3972  000C'                    	goto	l557
  3973  000C' 2805'              u1810:
  3974  000D'                    	line	74
  3975                           	
  3976                           l2511:	
  3977  000D'                    ;main.c: 73:         {;main.c: 74:             if(MTOUCH_Button_isPressed(Button0))
  3978                           	movlw	low(0)
  3979  000D' 3000               	fcall	_MTOUCH_Button_isPressed
  3980  000E' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  3981  0011' 3A00               	skipnz
  3982  0012' 1903               	goto	u1821
  3983  0013' 2815'              	goto	u1820
  3984  0014' 2816'              u1821:
  3985  0015'                    	goto	l563
  3986  0015' 281A'              u1820:
  3987  0016'                    	line	75
  3988                           ;main.c: 75:                 do { LATCbits.LATC5 = 1; } while(0);
  3989                           	
  3990                           l560:	
  3991  0016'                    	movlb 2	; select bank2
  3992  0016' 0022               	bsf	(270)^0100h,5	;volatile
  3993  0017' 168E               	goto	l557
  3994  0018' 2805'              	
  3995                           l561:	
  3996  0019'                    	goto	l557
  3997  0019' 2805'              	line	76
  3998                           ;main.c: 76:             else
  3999                           	
  4000                           l559:	
  4001  001A'                    	line	77
  4002                           ;main.c: 77:                 do { LATCbits.LATC5 = 0; } while(0);
  4003                           	
  4004                           l563:	
  4005  001A'                    	movlb 2	; select bank2
  4006  001A' 0022               	bcf	(270)^0100h,5	;volatile
  4007  001B' 128E               	goto	l557
  4008  001C' 2805'              	
  4009                           l564:	
  4010  001D'                    	goto	l557
  4011  001D' 2805'              	
  4012                           l562:	
  4013  001E'                    	goto	l557
  4014  001E' 2805'              	line	78
  4015                           ;main.c: 78:          }
  4016                           	
  4017                           l558:	
  4018  001F'                    	goto	l557
  4019  001F' 2805'              	line	80
  4020                           ;main.c: 80:     }
  4021                           	
  4022                           l565:	
  4023  0020'                    	goto	l557
  4024  0020' 2805'              	
  4025                           l566:	
  4026  0021'                    	line	81
  4027                           	
  4028                           l567:	
  4029  0021'                    	global	start
  4030                           	ljmp	start
  4031  0021' 2800'              	opt stack 0
  4032                           GLOBAL	__end_of_main
  4033                           	__end_of_main:
  4034  0022'                    	signat	_main,89
  4035                           	global	_SYSTEM_Initialize
  4036                           
  4037 ;; *************** function _SYSTEM_Initialize *****************
  4038 ;; Defined at:
  4039 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4040 ;; Parameters:    Size  Location     Type
  4041 ;;		None
  4042 ;; Auto vars:     Size  Location     Type
  4043 ;;		None
  4044 ;; Return value:  Size  Location     Type
  4045 ;;                  1    wreg      void 
  4046 ;; Registers used:
  4047 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4048 ;; Tracked objects:
  4049 ;;		On entry : 0/0
  4050 ;;		On exit  : 0/0
  4051 ;;		Unchanged: 0/0
  4052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4053 ;;      Params:         0       0       0       0
  4054 ;;      Locals:         0       0       0       0
  4055 ;;      Temps:          0       0       0       0
  4056 ;;      Totals:         0       0       0       0
  4057 ;;Total ram usage:        0 bytes
  4058 ;; Hardware stack levels used:    1
  4059 ;; Hardware stack levels required when called:    8
  4060 ;; This function calls:
  4061 ;;		_MTOUCH_Initialize
  4062 ;;		_OSCILLATOR_Initialize
  4063 ;;		_PIN_MANAGER_Initialize
  4064 ;;		_TMR2_Initialize
  4065 ;;		_WDT_Initialize
  4066 ;; This function is called by:
  4067 ;;		_main
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4071                           	file	"mcc_generated_files/mcc.c"
  4072                           	line	50
  4073                           global __ptext1
  4074                           __ptext1:	;psect for function _SYSTEM_Initialize
  4075  0000'                    psect	text1
  4076                           	file	"mcc_generated_files/mcc.c"
  4077                           	line	50
  4078                           	global	__size_of_SYSTEM_Initialize
  4079                           	__size_of_SYSTEM_Initialize	equ	__end_of_SYSTEM_Initialize-_SYSTEM_Initialize
  4080  0010                     	
  4081                           _SYSTEM_Initialize:	
  4082  0000'                    ;incstack = 0
  4083                           	opt	stack 7
  4084                           ; Regs used in _SYSTEM_Initialize: [allreg]
  4085                           	line	53
  4086                           	
  4087                           l2249:	
  4088  0000'                    ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4089                           	fcall	_PIN_MANAGER_Initialize
  4090  0000' 3180' 2000' 3180'  	line	54
  4091                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4092                           	fcall	_OSCILLATOR_Initialize
  4093  0003' 3180' 2000' 3180'  	line	55
  4094                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  4095                           	fcall	_WDT_Initialize
  4096  0006' 3180' 2000' 3180'  	line	56
  4097                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  4098                           	fcall	_TMR2_Initialize
  4099  0009' 3180' 2000' 3180'  	line	57
  4100                           	
  4101                           l2251:	
  4102  000C'                    ;mcc_generated_files/mcc.c: 57:     MTOUCH_Initialize();
  4103                           	fcall	_MTOUCH_Initialize
  4104  000C' 3180' 2000' 3180'  	line	58
  4105                           	
  4106                           l25:	
  4107  000F'                    	return
  4108  000F' 0008               	opt stack 0
  4109                           GLOBAL	__end_of_SYSTEM_Initialize
  4110                           	__end_of_SYSTEM_Initialize:
  4111  0010'                    	signat	_SYSTEM_Initialize,89
  4112                           	global	_WDT_Initialize
  4113                           
  4114 ;; *************** function _WDT_Initialize *****************
  4115 ;; Defined at:
  4116 ;;		line 76 in file "mcc_generated_files/mcc.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4130 ;;      Params:         0       0       0       0
  4131 ;;      Locals:         0       0       0       0
  4132 ;;      Temps:          0       0       0       0
  4133 ;;      Totals:         0       0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    4
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_SYSTEM_Initialize
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4144                           	line	76
  4145                           global __ptext2
  4146                           __ptext2:	;psect for function _WDT_Initialize
  4147  0000'                    psect	text2
  4148                           	file	"mcc_generated_files/mcc.c"
  4149                           	line	76
  4150                           	global	__size_of_WDT_Initialize
  4151                           	__size_of_WDT_Initialize	equ	__end_of_WDT_Initialize-_WDT_Initialize
  4152  0004                     	
  4153                           _WDT_Initialize:	
  4154  0000'                    ;incstack = 0
  4155                           	opt	stack 10
  4156                           ; Regs used in _WDT_Initialize: [wreg]
  4157                           	line	79
  4158                           	
  4159                           l2149:	
  4160  0000'                    ;mcc_generated_files/mcc.c: 79:     WDTCON = 0x16;
  4161                           	movlw	low(016h)
  4162  0000' 3016               	movlb 1	; select bank1
  4163  0001' 0021               	movwf	(151)^080h	;volatile
  4164  0002' 0097               	line	80
  4165                           	
  4166                           l34:	
  4167  0003'                    	return
  4168  0003' 0008               	opt stack 0
  4169                           GLOBAL	__end_of_WDT_Initialize
  4170                           	__end_of_WDT_Initialize:
  4171  0004'                    	signat	_WDT_Initialize,89
  4172                           	global	_TMR2_Initialize
  4173                           
  4174 ;; *************** function _TMR2_Initialize *****************
  4175 ;; Defined at:
  4176 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0, pclath, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4190 ;;      Params:         0       0       0       0
  4191 ;;      Locals:         0       0       0       0
  4192 ;;      Temps:          0       0       0       0
  4193 ;;      Totals:         0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    5
  4197 ;; This function calls:
  4198 ;;		_TMR2_SetInterruptHandler
  4199 ;; This function is called by:
  4200 ;;		_SYSTEM_Initialize
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4204                           	file	"mcc_generated_files/tmr2.c"
  4205                           	line	64
  4206                           global __ptext3
  4207                           __ptext3:	;psect for function _TMR2_Initialize
  4208  0000'                    psect	text3
  4209                           	file	"mcc_generated_files/tmr2.c"
  4210                           	line	64
  4211                           	global	__size_of_TMR2_Initialize
  4212                           	__size_of_TMR2_Initialize	equ	__end_of_TMR2_Initialize-_TMR2_Initialize
  4213  0013                     	
  4214                           _TMR2_Initialize:	
  4215  0000'                    ;incstack = 0
  4216                           	opt	stack 9
  4217                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4218                           	line	69
  4219                           	
  4220                           l2151:	
  4221  0000'                    ;mcc_generated_files/tmr2.c: 69:     PR2 = 0xFF;
  4222                           	movlw	low(0FFh)
  4223  0000' 30FF               	movlb 0	; select bank0
  4224  0001' 0020               	movwf	(27)	;volatile
  4225  0002' 009B               	line	72
  4226                           	
  4227                           l2153:	
  4228  0003'                    ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  4229                           	clrf	(26)	;volatile
  4230  0003' 019A               	line	75
  4231                           	
  4232                           l2155:	
  4233  0004'                    ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  4234                           	bcf	(17),1	;volatile
  4235  0004' 1091               	line	78
  4236                           	
  4237                           l2157:	
  4238  0005'                    ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  4239                           	movlb 1	; select bank1
  4240  0005' 0021               	bsf	(145)^080h,1	;volatile
  4241  0006' 1491               	line	81
  4242                           	
  4243                           l2159:	
  4244  0007'                    ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
                                 er);
  4245                           	movlw	low(_TMR2_DefaultInterruptHandler)
  4246  0007' 3000'              	movlb 0	; select bank0
  4247  0008' 0020               	movwf	(TMR2_SetInterruptHandler@InterruptHandler)
  4248  0009' 0080'              	movlw	high(_TMR2_DefaultInterruptHandler)
  4249  000A' 3000'              	movwf	((TMR2_SetInterruptHandler@InterruptHandler))+1
  4250  000B' 0081'              	fcall	_TMR2_SetInterruptHandler
  4251  000C' 3180' 2000' 3180'  	line	84
  4252                           	
  4253                           l2161:	
  4254  000F'                    ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x04;
  4255                           	movlw	low(04h)
  4256  000F' 3004               	movlb 0	; select bank0
  4257  0010' 0020               	movwf	(28)	;volatile
  4258  0011' 009C               	line	85
  4259                           	
  4260                           l55:	
  4261  0012'                    	return
  4262  0012' 0008               	opt stack 0
  4263                           GLOBAL	__end_of_TMR2_Initialize
  4264                           	__end_of_TMR2_Initialize:
  4265  0013'                    	signat	_TMR2_Initialize,89
  4266                           	global	_PIN_MANAGER_Initialize
  4267                           
  4268 ;; *************** function _PIN_MANAGER_Initialize *****************
  4269 ;; Defined at:
  4270 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;		None
  4275 ;; Return value:  Size  Location     Type
  4276 ;;                  1    wreg      void 
  4277 ;; Registers used:
  4278 ;;		wreg, status,2
  4279 ;; Tracked objects:
  4280 ;;		On entry : 0/0
  4281 ;;		On exit  : 0/0
  4282 ;;		Unchanged: 0/0
  4283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4284 ;;      Params:         0       0       0       0
  4285 ;;      Locals:         0       0       0       0
  4286 ;;      Temps:          0       0       0       0
  4287 ;;      Totals:         0       0       0       0
  4288 ;;Total ram usage:        0 bytes
  4289 ;; Hardware stack levels used:    1
  4290 ;; Hardware stack levels required when called:    4
  4291 ;; This function calls:
  4292 ;;		Nothing
  4293 ;; This function is called by:
  4294 ;;		_SYSTEM_Initialize
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4298                           	file	"mcc_generated_files/pin_manager.c"
  4299                           	line	57
  4300                           global __ptext4
  4301                           __ptext4:	;psect for function _PIN_MANAGER_Initialize
  4302  0000'                    psect	text4
  4303                           	file	"mcc_generated_files/pin_manager.c"
  4304                           	line	57
  4305                           	global	__size_of_PIN_MANAGER_Initialize
  4306                           	__size_of_PIN_MANAGER_Initialize	equ	__end_of_PIN_MANAGER_Initialize-_PIN_MANAGER_Initi
                                 alize
  4307  0016                     	
  4308                           _PIN_MANAGER_Initialize:	
  4309  0000'                    ;incstack = 0
  4310                           	opt	stack 10
  4311                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4312                           	line	62
  4313                           	
  4314                           l2129:	
  4315  0000'                    ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4316                           	movlb 2	; select bank2
  4317  0000' 0022               	clrf	(268)^0100h	;volatile
  4318  0001' 018C               	line	63
  4319                           ;mcc_generated_files/pin_manager.c: 63:     LATC = 0x00;
  4320                           	clrf	(270)^0100h	;volatile
  4321  0002' 018E               	line	68
  4322                           	
  4323                           l2131:	
  4324  0003'                    ;mcc_generated_files/pin_manager.c: 68:     TRISA = 0x37;
  4325                           	movlw	low(037h)
  4326  0003' 3037               	movlb 1	; select bank1
  4327  0004' 0021               	movwf	(140)^080h	;volatile
  4328  0005' 008C               	line	69
  4329                           	
  4330                           l2133:	
  4331  0006'                    ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x1F;
  4332                           	movlw	low(01Fh)
  4333  0006' 301F               	movwf	(142)^080h	;volatile
  4334  0007' 008E               	line	74
  4335                           	
  4336                           l2135:	
  4337  0008'                    ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x3F;
  4338                           	movlw	low(03Fh)
  4339  0008' 303F               	movlb 3	; select bank3
  4340  0009' 0023               	movwf	(398)^0180h	;volatile
  4341  000A' 008E               	line	75
  4342                           	
  4343                           l2137:	
  4344  000B'                    ;mcc_generated_files/pin_manager.c: 75:     ANSELA = 0x17;
  4345                           	movlw	low(017h)
  4346  000B' 3017               	movwf	(396)^0180h	;volatile
  4347  000C' 008C               	line	80
  4348                           ;mcc_generated_files/pin_manager.c: 80:     WPUA = 0x00;
  4349                           	movlb 4	; select bank4
  4350  000D' 0024               	clrf	(524)^0200h	;volatile
  4351  000E' 018C               	line	81
  4352                           ;mcc_generated_files/pin_manager.c: 81:     WPUC = 0x00;
  4353                           	clrf	(526)^0200h	;volatile
  4354  000F' 018E               	line	82
  4355                           	
  4356                           l2139:	
  4357  0010'                    ;mcc_generated_files/pin_manager.c: 82:     OPTION_REGbits.nWPUEN = 1;
  4358                           	movlb 1	; select bank1
  4359  0010' 0021               	bsf	(149)^080h,7	;volatile
  4360  0011' 1795               	line	87
  4361                           ;mcc_generated_files/pin_manager.c: 87:     ODCONA = 0x00;
  4362                           	movlb 5	; select bank5
  4363  0012' 0025               	clrf	(652)^0280h	;volatile
  4364  0013' 018C               	line	88
  4365                           ;mcc_generated_files/pin_manager.c: 88:     ODCONC = 0x00;
  4366                           	clrf	(654)^0280h	;volatile
  4367  0014' 018E               	line	96
  4368                           	
  4369                           l105:	
  4370  0015'                    	return
  4371  0015' 0008               	opt stack 0
  4372                           GLOBAL	__end_of_PIN_MANAGER_Initialize
  4373                           	__end_of_PIN_MANAGER_Initialize:
  4374  0016'                    	signat	_PIN_MANAGER_Initialize,89
  4375                           	global	_OSCILLATOR_Initialize
  4376                           
  4377 ;; *************** function _OSCILLATOR_Initialize *****************
  4378 ;; Defined at:
  4379 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;		None
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;		None
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, status,2
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4393 ;;      Params:         0       0       0       0
  4394 ;;      Locals:         0       0       0       0
  4395 ;;      Temps:          0       0       0       0
  4396 ;;      Totals:         0       0       0       0
  4397 ;;Total ram usage:        0 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    4
  4400 ;; This function calls:
  4401 ;;		Nothing
  4402 ;; This function is called by:
  4403 ;;		_SYSTEM_Initialize
  4404 ;; This function uses a non-reentrant model
  4405 ;;
  4406                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4407                           	file	"mcc_generated_files/mcc.c"
  4408                           	line	60
  4409                           global __ptext5
  4410                           __ptext5:	;psect for function _OSCILLATOR_Initialize
  4411  0000'                    psect	text5
  4412                           	file	"mcc_generated_files/mcc.c"
  4413                           	line	60
  4414                           	global	__size_of_OSCILLATOR_Initialize
  4415                           	__size_of_OSCILLATOR_Initialize	equ	__end_of_OSCILLATOR_Initialize-_OSCILLATOR_Initiali
                                 ze
  4416  000F                     	
  4417                           _OSCILLATOR_Initialize:	
  4418  0000'                    ;incstack = 0
  4419                           	opt	stack 10
  4420                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4421                           	line	63
  4422                           	
  4423                           l2141:	
  4424  0000'                    ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x70;
  4425                           	movlw	low(070h)
  4426  0000' 3070               	movlb 1	; select bank1
  4427  0001' 0021               	movwf	(153)^080h	;volatile
  4428  0002' 0099               	line	65
  4429                           	
  4430                           l2143:	
  4431  0003'                    ;mcc_generated_files/mcc.c: 65:     OSCSTAT = 0x00;
  4432                           	clrf	(154)^080h	;volatile
  4433  0003' 019A               	line	67
  4434                           	
  4435                           l2145:	
  4436  0004'                    ;mcc_generated_files/mcc.c: 67:     OSCTUNE = 0x00;
  4437                           	clrf	(152)^080h	;volatile
  4438  0004' 0198               	line	69
  4439                           	
  4440                           l2147:	
  4441  0005'                    ;mcc_generated_files/mcc.c: 69:     BORCON = 0x00;
  4442                           	movlb 2	; select bank2
  4443  0005' 0022               	clrf	(278)^0100h	;volatile
  4444  0006' 0196               	line	71
  4445                           ;mcc_generated_files/mcc.c: 71:     while(PLLR == 0)
  4446                           	goto	l28
  4447  0007' 2808'              	
  4448                           l29:	
  4449  0008'                    	line	73
  4450                           ;mcc_generated_files/mcc.c: 72:     {;mcc_generated_files/mcc.c: 73:     }
  4451                           	
  4452                           l28:	
  4453  0008'                    	line	71
  4454                           ;mcc_generated_files/mcc.c: 71:     while(PLLR == 0)
  4455                           	movlb 1	; select bank1
  4456  0008' 0021               	btfss	(1238/8)^080h,(1238)&7	;volatile
  4457  0009' 1F1A               	goto	u1411
  4458  000A' 280C'              	goto	u1410
  4459  000B' 280D'              u1411:
  4460  000C'                    	goto	l28
  4461  000C' 2808'              u1410:
  4462  000D'                    	goto	l31
  4463  000D' 280E'              	
  4464                           l30:	
  4465  000E'                    	line	74
  4466                           	
  4467                           l31:	
  4468  000E'                    	return
  4469  000E' 0008               	opt stack 0
  4470                           GLOBAL	__end_of_OSCILLATOR_Initialize
  4471                           	__end_of_OSCILLATOR_Initialize:
  4472  000F'                    	signat	_OSCILLATOR_Initialize,89
  4473                           	global	_MTOUCH_Initialize
  4474                           
  4475 ;; *************** function _MTOUCH_Initialize *****************
  4476 ;; Defined at:
  4477 ;;		line 49 in file "mcc_generated_files/mtouch/mtouch.c"
  4478 ;; Parameters:    Size  Location     Type
  4479 ;;		None
  4480 ;; Auto vars:     Size  Location     Type
  4481 ;;		None
  4482 ;; Return value:  Size  Location     Type
  4483 ;;                  1    wreg      void 
  4484 ;; Registers used:
  4485 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4486 ;; Tracked objects:
  4487 ;;		On entry : 0/0
  4488 ;;		On exit  : 0/0
  4489 ;;		Unchanged: 0/0
  4490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4491 ;;      Params:         0       0       0       0
  4492 ;;      Locals:         0       0       0       0
  4493 ;;      Temps:          0       0       0       0
  4494 ;;      Totals:         0       0       0       0
  4495 ;;Total ram usage:        0 bytes
  4496 ;; Hardware stack levels used:    1
  4497 ;; Hardware stack levels required when called:    7
  4498 ;; This function calls:
  4499 ;;		_MTOUCH_Button_InitializeAll
  4500 ;;		_MTOUCH_Sensor_InitializeAll
  4501 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  4502 ;;		_MTOUCH_Sensor_Scan_Initialize
  4503 ;; This function is called by:
  4504 ;;		_SYSTEM_Initialize
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  4508                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4509                           	line	49
  4510                           global __ptext6
  4511                           __ptext6:	;psect for function _MTOUCH_Initialize
  4512  0000'                    psect	text6
  4513                           	file	"mcc_generated_files/mtouch/mtouch.c"
  4514                           	line	49
  4515                           	global	__size_of_MTOUCH_Initialize
  4516                           	__size_of_MTOUCH_Initialize	equ	__end_of_MTOUCH_Initialize-_MTOUCH_Initialize
  4517  000D                     	
  4518                           _MTOUCH_Initialize:	
  4519  0000'                    ;incstack = 0
  4520                           	opt	stack 7
  4521                           ; Regs used in _MTOUCH_Initialize: [allreg]
  4522                           	line	51
  4523                           	
  4524                           l2163:	
  4525  0000'                    ;mcc_generated_files/mtouch/mtouch.c: 51:     MTOUCH_Sensor_InitializeAll();
  4526                           	fcall	_MTOUCH_Sensor_InitializeAll
  4527  0000' 3180' 2000' 3180'  	line	52
  4528                           	
  4529                           l2165:	
  4530  0003'                    ;mcc_generated_files/mtouch/mtouch.c: 52:     MTOUCH_Button_InitializeAll();
  4531                           	fcall	_MTOUCH_Button_InitializeAll
  4532  0003' 3180' 2000' 3180'  	line	53
  4533                           	
  4534                           l2167:	
  4535  0006'                    ;mcc_generated_files/mtouch/mtouch.c: 53:     MTOUCH_Sensor_Sampled_ResetAll();
  4536                           	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  4537  0006' 3180' 2000' 3180'  	line	54
  4538                           	
  4539                           l2169:	
  4540  0009'                    ;mcc_generated_files/mtouch/mtouch.c: 54:     MTOUCH_Sensor_Scan_Initialize();
  4541                           	fcall	_MTOUCH_Sensor_Scan_Initialize
  4542  0009' 3180' 2000' 3180'  	line	55
  4543                           	
  4544                           l144:	
  4545  000C'                    	return
  4546  000C' 0008               	opt stack 0
  4547                           GLOBAL	__end_of_MTOUCH_Initialize
  4548                           	__end_of_MTOUCH_Initialize:
  4549  000D'                    	signat	_MTOUCH_Initialize,89
  4550                           	global	_MTOUCH_Sensor_InitializeAll
  4551                           
  4552 ;; *************** function _MTOUCH_Sensor_InitializeAll *****************
  4553 ;; Defined at:
  4554 ;;		line 173 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;		None
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  sensor          1    8[BANK0 ] enum E2110
  4559 ;; Return value:  Size  Location     Type
  4560 ;;                  1    wreg      void 
  4561 ;; Registers used:
  4562 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4563 ;; Tracked objects:
  4564 ;;		On entry : 0/0
  4565 ;;		On exit  : 0/0
  4566 ;;		Unchanged: 0/0
  4567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4568 ;;      Params:         0       0       0       0
  4569 ;;      Locals:         0       1       0       0
  4570 ;;      Temps:          0       1       0       0
  4571 ;;      Totals:         0       2       0       0
  4572 ;;Total ram usage:        2 bytes
  4573 ;; Hardware stack levels used:    1
  4574 ;; Hardware stack levels required when called:    6
  4575 ;; This function calls:
  4576 ;;		_MTOUCH_Sensor_Initialize
  4577 ;; This function is called by:
  4578 ;;		_MTOUCH_Initialize
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  4582                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4583                           	line	173
  4584                           global __ptext7
  4585                           __ptext7:	;psect for function _MTOUCH_Sensor_InitializeAll
  4586  0000'                    psect	text7
  4587                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4588                           	line	173
  4589                           	global	__size_of_MTOUCH_Sensor_InitializeAll
  4590                           	__size_of_MTOUCH_Sensor_InitializeAll	equ	__end_of_MTOUCH_Sensor_InitializeAll-_MTOUCH_
                                 Sensor_InitializeAll
  4591  0019                     	
  4592                           _MTOUCH_Sensor_InitializeAll:	
  4593  0000'                    ;incstack = 0
  4594                           	opt	stack 7
  4595                           ; Regs used in _MTOUCH_Sensor_InitializeAll: [allreg]
  4596                           	line	176
  4597                           	
  4598                           l2021:	
  4599  0000'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 175:     enum mtouch_sensor_names sensor;;m
                                 cc_generated_files/mtouch/mtouch_sensor.c: 176:     for (sensor = 0; sensor < 1; sensor+
                                 +)
  4600                           	movlb 0	; select bank0
  4601  0000' 0020               	clrf	(MTOUCH_Sensor_InitializeAll@sensor)
  4602  0001' 0188'              	
  4603                           l2023:	
  4604  0002'                    	movf	((MTOUCH_Sensor_InitializeAll@sensor)),w
  4605  0002' 0808'              	btfsc	status,2
  4606  0003' 1903               	goto	u1281
  4607  0004' 2806'              	goto	u1280
  4608  0005' 2807'              u1281:
  4609  0006'                    	goto	l2027
  4610  0006' 2809'              u1280:
  4611  0007'                    	goto	l243
  4612  0007' 2818'              	
  4613                           l2025:	
  4614  0008'                    	goto	l243
  4615  0008' 2818'              	
  4616                           l241:	
  4617  0009'                    	line	178
  4618                           	
  4619                           l2027:	
  4620  0009'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 177:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 178:         MTOUCH_Sensor_Initialize(sensor);
  4621                           	movf	(MTOUCH_Sensor_InitializeAll@sensor),w
  4622  0009' 0808'              	fcall	_MTOUCH_Sensor_Initialize
  4623  000A' 3180' 2000' 3180'  	line	179
  4624                           	
  4625                           l2029:	
  4626  000D'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 179:     }
  4627                           	movlw	low(01h)
  4628  000D' 3001               	movlb 0	; select bank0
  4629  000E' 0020               	movwf	(??_MTOUCH_Sensor_InitializeAll+0)+0
  4630  000F' 0087'              	movf	(??_MTOUCH_Sensor_InitializeAll+0)+0,w
  4631  0010' 0807'              	addwf	(MTOUCH_Sensor_InitializeAll@sensor),f
  4632  0011' 0788'              	
  4633                           l2031:	
  4634  0012'                    	movf	((MTOUCH_Sensor_InitializeAll@sensor)),w
  4635  0012' 0808'              	btfsc	status,2
  4636  0013' 1903               	goto	u1291
  4637  0014' 2816'              	goto	u1290
  4638  0015' 2817'              u1291:
  4639  0016'                    	goto	l2027
  4640  0016' 2809'              u1290:
  4641  0017'                    	goto	l243
  4642  0017' 2818'              	
  4643                           l242:	
  4644  0018'                    	line	180
  4645                           	
  4646                           l243:	
  4647  0018'                    	return
  4648  0018' 0008               	opt stack 0
  4649                           GLOBAL	__end_of_MTOUCH_Sensor_InitializeAll
  4650                           	__end_of_MTOUCH_Sensor_InitializeAll:
  4651  0019'                    	signat	_MTOUCH_Sensor_InitializeAll,89
  4652                           	global	_MTOUCH_Sensor_Initialize
  4653                           
  4654 ;; *************** function _MTOUCH_Sensor_Initialize *****************
  4655 ;; Defined at:
  4656 ;;		line 149 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  4657 ;; Parameters:    Size  Location     Type
  4658 ;;  sensor          1    wreg     enum E2110
  4659 ;; Auto vars:     Size  Location     Type
  4660 ;;  sensor          1    6[BANK0 ] enum E2110
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  1    wreg      enum E2112
  4663 ;; Registers used:
  4664 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4670 ;;      Params:         0       0       0       0
  4671 ;;      Locals:         0       1       0       0
  4672 ;;      Temps:          0       2       0       0
  4673 ;;      Totals:         0       3       0       0
  4674 ;;Total ram usage:        3 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    5
  4677 ;; This function calls:
  4678 ;;		_MTOUCH_Sensor_Enable
  4679 ;;		_Sensor_Sampled_Reset
  4680 ;;		___bmul
  4681 ;; This function is called by:
  4682 ;;		_MTOUCH_Sensor_InitializeAll
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  4686                           	line	149
  4687                           global __ptext8
  4688                           __ptext8:	;psect for function _MTOUCH_Sensor_Initialize
  4689  0000'                    psect	text8
  4690                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  4691                           	line	149
  4692                           	global	__size_of_MTOUCH_Sensor_Initialize
  4693                           	__size_of_MTOUCH_Sensor_Initialize	equ	__end_of_MTOUCH_Sensor_Initialize-_MTOUCH_Sensor
                                 _Initialize
  4694  002E                     	
  4695                           _MTOUCH_Sensor_Initialize:	
  4696  0000'                    ;incstack = 0
  4697                           	opt	stack 7
  4698                           ; Regs used in _MTOUCH_Sensor_Initialize: [allreg]
  4699                           ;MTOUCH_Sensor_Initialize@sensor stored from wreg
  4700                           	movlb 0	; select bank0
  4701  0000' 0020               	movwf	(MTOUCH_Sensor_Initialize@sensor)
  4702  0001' 0086'              	line	151
  4703                           	
  4704                           l1871:	
  4705  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 149: enum mtouch_sensor_error MTOUCH_Sensor
                                 _Initialize(enum mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c:
                                  150: {;mcc_generated_files/mtouch/mtouch_sensor.c: 151:     switch(sensor)
  4706                           	goto	l1875
  4707  0002' 280C'              	line	153
  4708                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 152:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 153:         case 0:
  4709                           	
  4710                           l235:	
  4711  0003'                    	line	154
  4712                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 154:             WPUCbits.WPUC1 = 0;
  4713                           	movlb 4	; select bank4
  4714  0003' 0024               	bcf	(526)^0200h,1	;volatile
  4715  0004' 108E               	line	155
  4716                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 155:             ANSELCbits.ANSC1 = 0;
  4717                           	movlb 3	; select bank3
  4718  0005' 0023               	bcf	(398)^0180h,1	;volatile
  4719  0006' 108E               	line	156
  4720                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 156:             TRISCbits.TRISC1 = 0;
  4721                           	movlb 1	; select bank1
  4722  0007' 0021               	bcf	(142)^080h,1	;volatile
  4723  0008' 108E               	line	157
  4724                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 157:             break;
  4725                           	goto	l1877
  4726  0009' 281A'              	line	158
  4727                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 158:         default: return MTOUCH_SENSOR_
                                 ERROR_invalid_index;
  4728                           	
  4729                           l237:	
  4730  000A'                    ;	Return value of _MTOUCH_Sensor_Initialize is never used
  4731                           	goto	l238
  4732  000A' 282D'              	line	159
  4733                           	
  4734                           l1873:	
  4735  000B'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 159:     }
  4736                           	goto	l1877
  4737  000B' 281A'              	
  4738                           l234:	
  4739  000C'                    	
  4740                           l1875:	
  4741  000C'                    	movlb 0	; select bank0
  4742  000C' 0020               	movf	(MTOUCH_Sensor_Initialize@sensor),w
  4743  000D' 0806'              	movwf	(??_MTOUCH_Sensor_Initialize+0)+0
  4744  000E' 0084'              	clrf	(??_MTOUCH_Sensor_Initialize+0)+0+1
  4745  000F' 0185'              	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4746                           ; Switch size 1, requested type "space"
  4747                           ; Number of cases is 1, Range of values is 0 to 0
  4748                           ; switch strategies available:
  4749                           ; Name         Instructions Cycles
  4750                           ; simple_byte            4     3 (average)
  4751                           ; direct_byte            8     6 (fixed)
  4752                           ; jumptable            260     6 (fixed)
  4753                           ;	Chosen strategy is simple_byte
  4754                           
  4755                           	movf 1+(??_MTOUCH_Sensor_Initialize+0)+0,w
  4756  0010' 0805'              	opt asmopt_push
  4757                           	opt asmopt_off
  4758                           	xorlw	0^0	; case 0
  4759  0011' 3A00               	skipnz
  4760  0012' 1903               	goto	l2583
  4761  0013' 2815'              	goto	l238
  4762  0014' 282D'              	opt asmopt_pop
  4763                           	
  4764                           l2583:	
  4765  0015'                    ; Switch size 1, requested type "space"
  4766                           ; Number of cases is 1, Range of values is 0 to 0
  4767                           ; switch strategies available:
  4768                           ; Name         Instructions Cycles
  4769                           ; simple_byte            4     3 (average)
  4770                           ; direct_byte            8     6 (fixed)
  4771                           ; jumptable            260     6 (fixed)
  4772                           ;	Chosen strategy is simple_byte
  4773                           
  4774                           	movf 0+(??_MTOUCH_Sensor_Initialize+0)+0,w
  4775  0015' 0804'              	opt asmopt_push
  4776                           	opt asmopt_off
  4777                           	xorlw	0^0	; case 0
  4778  0016' 3A00               	skipnz
  4779  0017' 1903               	goto	l235
  4780  0018' 2803'              	goto	l238
  4781  0019' 282D'              	opt asmopt_pop
  4782                           
  4783                           	
  4784                           l236:	
  4785  001A'                    	line	161
  4786                           	
  4787                           l1877:	
  4788  001A'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 161:     MTOUCH_Sensor_Enable(sensor);
  4789                           	movlb 0	; select bank0
  4790  001A' 0020               	movf	(MTOUCH_Sensor_Initialize@sensor),w
  4791  001B' 0806'              	fcall	_MTOUCH_Sensor_Enable
  4792  001C' 3180' 2000' 3180'  	line	162
  4793                           	
  4794                           l1879:	
  4795  001F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 162:     Sensor_Sampled_Reset(&mtouch_senso
                                 r[sensor]);
  4796                           	movlw	low(09h)
  4797  001F' 3009               	movlb 0	; select bank0
  4798  0020' 0020               	movwf	(??_MTOUCH_Sensor_Initialize+0)+0
  4799  0021' 0084'              	movf	(??_MTOUCH_Sensor_Initialize+0)+0,w
  4800  0022' 0804'              	movwf	(___bmul@multiplicand)
  4801  0023' 0080'              	movf	(MTOUCH_Sensor_Initialize@sensor),w
  4802  0024' 0806'              	fcall	___bmul
  4803  0025' 3180' 2000' 3180'  	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  4804  0028' 3E00'              	fcall	_Sensor_Sampled_Reset
  4805  0029' 3180' 2000' 3180'  	goto	l238
  4806  002C' 282D'              	line	164
  4807                           	
  4808                           l1881:	
  4809  002D'                    	line	165
  4810                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 164:     return MTOUCH_SENSOR_ERROR_none;;	
                                 Return value of _MTOUCH_Sensor_Initialize is never used
  4811                           	
  4812                           l238:	
  4813  002D'                    	return
  4814  002D' 0008               	opt stack 0
  4815                           GLOBAL	__end_of_MTOUCH_Sensor_Initialize
  4816                           	__end_of_MTOUCH_Sensor_Initialize:
  4817  002E'                    	signat	_MTOUCH_Sensor_Initialize,4217
  4818                           	global	_MTOUCH_Sensor_Enable
  4819                           	global	_MTOUCH_Button_InitializeAll
  4820                           
  4821 ;; *************** function _MTOUCH_Button_InitializeAll *****************
  4822 ;; Defined at:
  4823 ;;		line 141 in file "mcc_generated_files/mtouch/mtouch_button.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;  button          1   11[BANK0 ] enum E2303
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4837 ;;      Params:         0       0       0       0
  4838 ;;      Locals:         0       1       0       0
  4839 ;;      Temps:          0       1       0       0
  4840 ;;      Totals:         0       2       0       0
  4841 ;;Total ram usage:        2 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; Hardware stack levels required when called:    6
  4844 ;; This function calls:
  4845 ;;		_MTOUCH_Button_Initialize
  4846 ;;		_memcpy
  4847 ;; This function is called by:
  4848 ;;		_MTOUCH_Initialize
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4852                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  4853                           	line	141
  4854                           global __ptext9
  4855                           __ptext9:	;psect for function _MTOUCH_Button_InitializeAll
  4856  0000'                    psect	text9
  4857                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  4858                           	line	141
  4859                           	global	__size_of_MTOUCH_Button_InitializeAll
  4860                           	__size_of_MTOUCH_Button_InitializeAll	equ	__end_of_MTOUCH_Button_InitializeAll-_MTOUCH_
                                 Button_InitializeAll
  4861  0026                     	
  4862                           _MTOUCH_Button_InitializeAll:	
  4863  0000'                    ;incstack = 0
  4864                           	opt	stack 7
  4865                           ; Regs used in _MTOUCH_Button_InitializeAll: [wreg-fsr1h+status,2+status,0+pclath+cstack
                                 ]
  4866                           	line	145
  4867                           	
  4868                           l2033:	
  4869  0000'                    ;mcc_generated_files/mtouch/mtouch_button.c: 143:     enum mtouch_button_names button;;m
                                 cc_generated_files/mtouch/mtouch_button.c: 145:     memcpy(mtouch_button,mtouch_button_i
                                 nit,sizeof(mtouch_button_init));
  4870                           	movlw	low(((_mtouch_button_init)|8000h))
  4871  0000' 3000'              	movlb 0	; select bank0
  4872  0001' 0020               	movwf	(memcpy@s1)
  4873  0002' 0080'              	movlw	high(((_mtouch_button_init)|8000h))
  4874  0003' 3000'              	movwf	((memcpy@s1))+1
  4875  0004' 0081'              	movlw	010h
  4876  0005' 3010               	movwf	(memcpy@n)
  4877  0006' 0082'              	movlw	0
  4878  0007' 3000               	movwf	((memcpy@n))+1
  4879  0008' 0083'              	movlw	(low(_mtouch_button|((0x0)<<8)))&0ffh
  4880  0009' 3000'              	fcall	_memcpy
  4881  000A' 3180' 2000' 3180'  	line	147
  4882                           	
  4883                           l2035:	
  4884  000D'                    ;mcc_generated_files/mtouch/mtouch_button.c: 147:     for (button = 0; button < (u_int)1
                                 ; button++)
  4885                           	movlb 0	; select bank0
  4886  000D' 0020               	clrf	(MTOUCH_Button_InitializeAll@button)
  4887  000E' 018B'              	
  4888                           l2037:	
  4889  000F'                    	movf	((MTOUCH_Button_InitializeAll@button)),w
  4890  000F' 080B'              	btfsc	status,2
  4891  0010' 1903               	goto	u1301
  4892  0011' 2813'              	goto	u1300
  4893  0012' 2814'              u1301:
  4894  0013'                    	goto	l2041
  4895  0013' 2816'              u1300:
  4896  0014'                    	goto	l422
  4897  0014' 2825'              	
  4898                           l2039:	
  4899  0015'                    	goto	l422
  4900  0015' 2825'              	
  4901                           l420:	
  4902  0016'                    	line	149
  4903                           	
  4904                           l2041:	
  4905  0016'                    ;mcc_generated_files/mtouch/mtouch_button.c: 148:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 149:         MTOUCH_Button_Initialize(button);
  4906                           	movf	(MTOUCH_Button_InitializeAll@button),w
  4907  0016' 080B'              	fcall	_MTOUCH_Button_Initialize
  4908  0017' 3180' 2000' 3180'  	line	150
  4909                           	
  4910                           l2043:	
  4911  001A'                    ;mcc_generated_files/mtouch/mtouch_button.c: 150:     }
  4912                           	movlw	low(01h)
  4913  001A' 3001               	movlb 0	; select bank0
  4914  001B' 0020               	movwf	(??_MTOUCH_Button_InitializeAll+0)+0
  4915  001C' 008A'              	movf	(??_MTOUCH_Button_InitializeAll+0)+0,w
  4916  001D' 080A'              	addwf	(MTOUCH_Button_InitializeAll@button),f
  4917  001E' 078B'              	
  4918                           l2045:	
  4919  001F'                    	movf	((MTOUCH_Button_InitializeAll@button)),w
  4920  001F' 080B'              	btfsc	status,2
  4921  0020' 1903               	goto	u1311
  4922  0021' 2823'              	goto	u1310
  4923  0022' 2824'              u1311:
  4924  0023'                    	goto	l2041
  4925  0023' 2816'              u1310:
  4926  0024'                    	goto	l422
  4927  0024' 2825'              	
  4928                           l421:	
  4929  0025'                    	line	151
  4930                           	
  4931                           l422:	
  4932  0025'                    	return
  4933  0025' 0008               	opt stack 0
  4934                           GLOBAL	__end_of_MTOUCH_Button_InitializeAll
  4935                           	__end_of_MTOUCH_Button_InitializeAll:
  4936  0026'                    	signat	_MTOUCH_Button_InitializeAll,89
  4937                           	global	_memcpy
  4938                           
  4939 ;; *************** function _memcpy *****************
  4940 ;; Defined at:
  4941 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;  d1              1    wreg     PTR void 
  4944 ;;		 -> mtouch_button(16), 
  4945 ;;  s1              2    0[BANK0 ] PTR const void 
  4946 ;;		 -> mtouch_button_init(16), 
  4947 ;;  n               2    2[BANK0 ] unsigned int 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  d1              1    8[BANK0 ] PTR void 
  4950 ;;		 -> mtouch_button(16), 
  4951 ;;  s               2    5[BANK0 ] PTR const unsigned char 
  4952 ;;		 -> mtouch_button_init(16), 
  4953 ;;  d               1    9[BANK0 ] PTR unsigned char 
  4954 ;;		 -> mtouch_button(16), 
  4955 ;;  tmp             1    7[BANK0 ] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      PTR void 
  4958 ;; Registers used:
  4959 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4965 ;;      Params:         0       4       0       0
  4966 ;;      Locals:         0       5       0       0
  4967 ;;      Temps:          0       1       0       0
  4968 ;;      Totals:         0      10       0       0
  4969 ;;Total ram usage:       10 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    4
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_MTOUCH_Button_InitializeAll
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           psect	text10,local,class=CODE,delta=2,merge=1,group=2
  4979                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  4980                           	line	4
  4981                           global __ptext10
  4982                           __ptext10:	;psect for function _memcpy
  4983  0000'                    psect	text10
  4984                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\memcpy.c"
  4985                           	line	4
  4986                           	global	__size_of_memcpy
  4987                           	__size_of_memcpy	equ	__end_of_memcpy-_memcpy
  4988  0031                     	
  4989                           _memcpy:	
  4990  0000'                    ;incstack = 0
  4991                           	opt	stack 8
  4992                           ; Regs used in _memcpy: [wreg-fsr1h+status,2+status,0+pclath]
  4993                           ;memcpy@d1 stored from wreg
  4994                           	movlb 0	; select bank0
  4995  0000' 0020               	movwf	(memcpy@d1)
  4996  0001' 0088'              	line	11
  4997                           	
  4998                           l1935:	
  4999  0002'                    	movf	(memcpy@s1+1),w
  5000  0002' 0801'              	movwf	(memcpy@s+1)
  5001  0003' 0086'              	movf	(memcpy@s1),w
  5002  0004' 0800'              	movwf	(memcpy@s)
  5003  0005' 0085'              	line	12
  5004                           	movf	(memcpy@d1),w
  5005  0006' 0808'              	movwf	(??_memcpy+0)+0
  5006  0007' 0084'              	movf	(??_memcpy+0)+0,w
  5007  0008' 0804'              	movwf	(memcpy@d)
  5008  0009' 0089'              	line	13
  5009                           	goto	l1945
  5010  000A' 2823'              	
  5011                           l1013:	
  5012  000B'                    	line	14
  5013                           	
  5014                           l1937:	
  5015  000B'                    	movf	(memcpy@s),w
  5016  000B' 0805'              	movwf	fsr0l
  5017  000C' 0084               	movf	((memcpy@s+1)),w
  5018  000D' 0806'              	movwf	fsr0h
  5019  000E' 0085               	movf	indf0,w ;code access
  5020  000F' 0800               	movwf	(??_memcpy+0)+0
  5021  0010' 0084'              	movf	(??_memcpy+0)+0,w
  5022  0011' 0804'              	movwf	(memcpy@tmp)
  5023  0012' 0087'              	
  5024                           l1939:	
  5025  0013'                    	movlw	01h
  5026  0013' 3001               	addwf	(memcpy@s),f
  5027  0014' 0785'              	movlw	0
  5028  0015' 3000               	addwfc	(memcpy@s+1),f
  5029  0016' 3D86'              	line	15
  5030                           	
  5031                           l1941:	
  5032  0017'                    	movf	(memcpy@tmp),w
  5033  0017' 0807'              	movwf	(??_memcpy+0)+0
  5034  0018' 0084'              	movf	(memcpy@d),w
  5035  0019' 0809'              	movwf	fsr1l
  5036  001A' 0086               	clrf fsr1h	
  5037  001B' 0187               	
  5038                           	movf	(??_memcpy+0)+0,w
  5039  001C' 0804'              	movwf	indf1
  5040  001D' 0081               	
  5041                           l1943:	
  5042  001E'                    	movlw	low(01h)
  5043  001E' 3001               	movwf	(??_memcpy+0)+0
  5044  001F' 0084'              	movf	(??_memcpy+0)+0,w
  5045  0020' 0804'              	addwf	(memcpy@d),f
  5046  0021' 0789'              	goto	l1945
  5047  0022' 2823'              	line	16
  5048                           	
  5049                           l1012:	
  5050  0023'                    	line	13
  5051                           	
  5052                           l1945:	
  5053  0023'                    	movlw	01h
  5054  0023' 3001               	subwf	(memcpy@n),f
  5055  0024' 0282'              	movlw	0
  5056  0025' 3000               	subwfb	(memcpy@n+1),f
  5057  0026' 3B83'              		incf	(((memcpy@n))),w
  5058  0027' 0A02'              	skipz
  5059  0028' 1D03               	goto	u1111
  5060  0029' 282E'              	incf	(((memcpy@n+1))),w
  5061  002A' 0A03'              	btfss	status,2
  5062  002B' 1D03               	goto	u1111
  5063  002C' 282E'              	goto	u1110
  5064  002D' 282F'              u1111:
  5065  002E'                    	goto	l1937
  5066  002E' 280B'              u1110:
  5067  002F'                    	goto	l1015
  5068  002F' 2830'              	
  5069                           l1014:	
  5070  0030'                    	line	18
  5071                           ;	Return value of _memcpy is never used
  5072                           	
  5073                           l1015:	
  5074  0030'                    	return
  5075  0030' 0008               	opt stack 0
  5076                           GLOBAL	__end_of_memcpy
  5077                           	__end_of_memcpy:
  5078  0031'                    	signat	_memcpy,12409
  5079                           	global	_MTOUCH_Service_Mainloop
  5080                           
  5081 ;; *************** function _MTOUCH_Service_Mainloop *****************
  5082 ;; Defined at:
  5083 ;;		line 63 in file "mcc_generated_files/mtouch/mtouch.c"
  5084 ;; Parameters:    Size  Location     Type
  5085 ;;		None
  5086 ;; Auto vars:     Size  Location     Type
  5087 ;;		None
  5088 ;; Return value:  Size  Location     Type
  5089 ;;                  1    wreg      _Bool 
  5090 ;; Registers used:
  5091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5092 ;; Tracked objects:
  5093 ;;		On entry : 0/0
  5094 ;;		On exit  : 0/0
  5095 ;;		Unchanged: 0/0
  5096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5097 ;;      Params:         0       0       0       0
  5098 ;;      Locals:         0       0       0       0
  5099 ;;      Temps:          0       0       0       0
  5100 ;;      Totals:         0       0       0       0
  5101 ;;Total ram usage:        0 bytes
  5102 ;; Hardware stack levels used:    1
  5103 ;; Hardware stack levels required when called:   10
  5104 ;; This function calls:
  5105 ;;		_MTOUCH_Button_ServiceAll
  5106 ;;		_MTOUCH_Sensor_SampleAll
  5107 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  5108 ;;		_MTOUCH_Tick
  5109 ;; This function is called by:
  5110 ;;		_main
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  5114                           	file	"mcc_generated_files/mtouch/mtouch.c"
  5115                           	line	63
  5116                           global __ptext11
  5117                           __ptext11:	;psect for function _MTOUCH_Service_Mainloop
  5118  0000'                    psect	text11
  5119                           	file	"mcc_generated_files/mtouch/mtouch.c"
  5120                           	line	63
  5121                           	global	__size_of_MTOUCH_Service_Mainloop
  5122                           	__size_of_MTOUCH_Service_Mainloop	equ	__end_of_MTOUCH_Service_Mainloop-_MTOUCH_Service_
                                 Mainloop
  5123  0017                     	
  5124                           _MTOUCH_Service_Mainloop:	
  5125  0000'                    ;incstack = 0
  5126                           	opt	stack 5
  5127                           ; Regs used in _MTOUCH_Service_Mainloop: [allreg]
  5128                           	line	65
  5129                           	
  5130                           l2493:	
  5131  0000'                    ;mcc_generated_files/mtouch/mtouch.c: 65:     if(MTOUCH_Sensor_SampleAll() == 0)
  5132                           	fcall	_MTOUCH_Sensor_SampleAll
  5133  0000' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  5134  0003' 3A00               	skipz
  5135  0004' 1D03               	goto	u1801
  5136  0005' 2807'              	goto	u1800
  5137  0006' 2808'              u1801:
  5138  0007'                    	goto	l2499
  5139  0007' 280B'              u1800:
  5140  0008'                    	line	66
  5141                           	
  5142                           l2495:	
  5143  0008'                    ;mcc_generated_files/mtouch/mtouch.c: 66:         return 0;
  5144                           	movlw	low(0)
  5145  0008' 3000               	goto	l148
  5146  0009' 2816'              	
  5147                           l2497:	
  5148  000A'                    	goto	l148
  5149  000A' 2816'              	
  5150                           l147:	
  5151  000B'                    	line	67
  5152                           	
  5153                           l2499:	
  5154  000B'                    ;mcc_generated_files/mtouch/mtouch.c: 67:     MTOUCH_Button_ServiceAll();
  5155                           	fcall	_MTOUCH_Button_ServiceAll
  5156  000B' 3180' 2000' 3180'  	line	68
  5157                           ;mcc_generated_files/mtouch/mtouch.c: 68:     MTOUCH_Sensor_Sampled_ResetAll();
  5158                           	fcall	_MTOUCH_Sensor_Sampled_ResetAll
  5159  000E' 3180' 2000' 3180'  	line	69
  5160                           ;mcc_generated_files/mtouch/mtouch.c: 69:     MTOUCH_Tick();
  5161                           	fcall	_MTOUCH_Tick
  5162  0011' 3180' 2000' 3180'  	line	70
  5163                           	
  5164                           l2501:	
  5165  0014'                    ;mcc_generated_files/mtouch/mtouch.c: 70:     return 1;
  5166                           	movlw	low(01h)
  5167  0014' 3001               	goto	l148
  5168  0015' 2816'              	
  5169                           l2503:	
  5170  0016'                    	line	71
  5171                           	
  5172                           l148:	
  5173  0016'                    	return
  5174  0016' 0008               	opt stack 0
  5175                           GLOBAL	__end_of_MTOUCH_Service_Mainloop
  5176                           	__end_of_MTOUCH_Service_Mainloop:
  5177  0017'                    	signat	_MTOUCH_Service_Mainloop,89
  5178                           	global	_MTOUCH_Tick
  5179                           
  5180 ;; *************** function _MTOUCH_Tick *****************
  5181 ;; Defined at:
  5182 ;;		line 78 in file "mcc_generated_files/mtouch/mtouch.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;		None
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5196 ;;      Params:         0       0       0       0
  5197 ;;      Locals:         0       0       0       0
  5198 ;;      Temps:          0       0       0       0
  5199 ;;      Totals:         0       0       0       0
  5200 ;;Total ram usage:        0 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    6
  5203 ;; This function calls:
  5204 ;;		_MTOUCH_Button_Tick
  5205 ;; This function is called by:
  5206 ;;		_MTOUCH_Service_Mainloop
  5207 ;; This function uses a non-reentrant model
  5208 ;;
  5209                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5210                           	line	78
  5211                           global __ptext12
  5212                           __ptext12:	;psect for function _MTOUCH_Tick
  5213  0000'                    psect	text12
  5214                           	file	"mcc_generated_files/mtouch/mtouch.c"
  5215                           	line	78
  5216                           	global	__size_of_MTOUCH_Tick
  5217                           	__size_of_MTOUCH_Tick	equ	__end_of_MTOUCH_Tick-_MTOUCH_Tick
  5218  0004                     	
  5219                           _MTOUCH_Tick:	
  5220  0000'                    ;incstack = 0
  5221                           	opt	stack 8
  5222                           ; Regs used in _MTOUCH_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5223                           	line	80
  5224                           	
  5225                           l2201:	
  5226  0000'                    ;mcc_generated_files/mtouch/mtouch.c: 80:     MTOUCH_Button_Tick();
  5227                           	fcall	_MTOUCH_Button_Tick
  5228  0000' 3180' 2000' 3180'  	line	81
  5229                           	
  5230                           l151:	
  5231  0003'                    	return
  5232  0003' 0008               	opt stack 0
  5233                           GLOBAL	__end_of_MTOUCH_Tick
  5234                           	__end_of_MTOUCH_Tick:
  5235  0004'                    	signat	_MTOUCH_Tick,89
  5236                           	global	_MTOUCH_Button_Tick
  5237                           
  5238 ;; *************** function _MTOUCH_Button_Tick *****************
  5239 ;; Defined at:
  5240 ;;		line 260 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;		None
  5243 ;; Auto vars:     Size  Location     Type
  5244 ;;		None
  5245 ;; Return value:  Size  Location     Type
  5246 ;;                  1    wreg      void 
  5247 ;; Registers used:
  5248 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5249 ;; Tracked objects:
  5250 ;;		On entry : 0/0
  5251 ;;		On exit  : 0/0
  5252 ;;		Unchanged: 0/0
  5253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5254 ;;      Params:         0       0       0       0
  5255 ;;      Locals:         0       0       0       0
  5256 ;;      Temps:          0       0       0       0
  5257 ;;      Totals:         0       0       0       0
  5258 ;;Total ram usage:        0 bytes
  5259 ;; Hardware stack levels used:    1
  5260 ;; Hardware stack levels required when called:    5
  5261 ;; This function calls:
  5262 ;;		_Button_Tick_helper
  5263 ;; This function is called by:
  5264 ;;		_MTOUCH_Tick
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5268                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  5269                           	line	260
  5270                           global __ptext13
  5271                           __ptext13:	;psect for function _MTOUCH_Button_Tick
  5272  0000'                    psect	text13
  5273                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  5274                           	line	260
  5275                           	global	__size_of_MTOUCH_Button_Tick
  5276                           	__size_of_MTOUCH_Button_Tick	equ	__end_of_MTOUCH_Button_Tick-_MTOUCH_Button_Tick
  5277  0005                     	
  5278                           _MTOUCH_Button_Tick:	
  5279  0000'                    ;incstack = 0
  5280                           	opt	stack 8
  5281                           ; Regs used in _MTOUCH_Button_Tick: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5282                           	line	262
  5283                           	
  5284                           l2057:	
  5285  0000'                    ;mcc_generated_files/mtouch/mtouch_button.c: 262:     Button_Tick_helper(&mtouch_button[
                                 0]);
  5286                           	movlw	(low(_mtouch_button|((0x0)<<8)))&0ffh
  5287  0000' 3000'              	fcall	_Button_Tick_helper
  5288  0001' 3180' 2000' 3180'  	line	263
  5289                           	
  5290                           l456:	
  5291  0004'                    	return
  5292  0004' 0008               	opt stack 0
  5293                           GLOBAL	__end_of_MTOUCH_Button_Tick
  5294                           	__end_of_MTOUCH_Button_Tick:
  5295  0005'                    	signat	_MTOUCH_Button_Tick,89
  5296                           	global	_Button_Tick_helper
  5297                           
  5298 ;; *************** function _Button_Tick_helper *****************
  5299 ;; Defined at:
  5300 ;;		line 264 in file "mcc_generated_files/mtouch/mtouch_button.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;  button          1    wreg     PTR struct .
  5303 ;;		 -> mtouch_button(16), 
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;  button          1    2[BANK0 ] PTR struct .
  5306 ;;		 -> mtouch_button(16), 
  5307 ;; Return value:  Size  Location     Type
  5308 ;;                  1    wreg      void 
  5309 ;; Registers used:
  5310 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5311 ;; Tracked objects:
  5312 ;;		On entry : 0/0
  5313 ;;		On exit  : 0/0
  5314 ;;		Unchanged: 0/0
  5315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5316 ;;      Params:         0       0       0       0
  5317 ;;      Locals:         0       1       0       0
  5318 ;;      Temps:          0       2       0       0
  5319 ;;      Totals:         0       3       0       0
  5320 ;;Total ram usage:        3 bytes
  5321 ;; Hardware stack levels used:    1
  5322 ;; Hardware stack levels required when called:    4
  5323 ;; This function calls:
  5324 ;;		Nothing
  5325 ;; This function is called by:
  5326 ;;		_MTOUCH_Button_Tick
  5327 ;; This function uses a non-reentrant model
  5328 ;;
  5329                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  5330                           	line	264
  5331                           global __ptext14
  5332                           __ptext14:	;psect for function _Button_Tick_helper
  5333  0000'                    psect	text14
  5334                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  5335                           	line	264
  5336                           	global	__size_of_Button_Tick_helper
  5337                           	__size_of_Button_Tick_helper	equ	__end_of_Button_Tick_helper-_Button_Tick_helper
  5338  002A                     	
  5339                           _Button_Tick_helper:	
  5340  0000'                    ;incstack = 0
  5341                           	opt	stack 8
  5342                           ; Regs used in _Button_Tick_helper: [wreg+fsr1l+fsr1h+status,2+status,0]
  5343                           ;Button_Tick_helper@button stored from wreg
  5344                           	movlb 0	; select bank0
  5345  0000' 0020               	movwf	(Button_Tick_helper@button)
  5346  0001' 0082'              	line	267
  5347                           	
  5348                           l2015:	
  5349  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 264: static void Button_Tick_helper(mtouch_
                                 button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 265: {;mcc_generated_files
                                 /mtouch/mtouch_button.c: 267:     if ((button->state) == MTOUCH_BUTTON_STATE_pressed)
  5350                           	movf	(Button_Tick_helper@button),w
  5351  0002' 0802'              	addlw	02h
  5352  0003' 3E02               	movwf	fsr1l
  5353  0004' 0086               	clrf fsr1h	
  5354  0005' 0187               	
  5355                           		movlw	2
  5356  0006' 3002               	xorwf	(indf1),w
  5357  0007' 0601               	btfss	status,2
  5358  0008' 1D03               	goto	u1261
  5359  0009' 280B'              	goto	u1260
  5360  000A' 280C'              u1261:
  5361  000B'                    	goto	l461
  5362  000B' 2829'              u1260:
  5363  000C'                    	line	269
  5364                           	
  5365                           l2017:	
  5366  000C'                    ;mcc_generated_files/mtouch/mtouch_button.c: 268:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 269:         (button->counter)++;
  5367                           	movf	(Button_Tick_helper@button),w
  5368  000C' 0802'              	addlw	0Ah
  5369  000D' 3E0A               	movwf	fsr1l
  5370  000E' 0086               	clrf fsr1h	
  5371  000F' 0187               	
  5372                           	movlw	01h
  5373  0010' 3001               	addwf	indf1,f
  5374  0011' 0781               	addfsr	fsr1,1
  5375  0012' 3141               	skipnc
  5376  0013' 1803               	incf	indf1,f
  5377  0014' 0A81               	line	270
  5378                           ;mcc_generated_files/mtouch/mtouch_button.c: 270:         if (button->counter == (mtouch
                                 _button_statecounter_t)0)
  5379                           	movf	(Button_Tick_helper@button),w
  5380  0015' 0802'              	addlw	0Ah
  5381  0016' 3E0A               	movwf	fsr1l
  5382  0017' 0086               	clrf fsr1h	
  5383  0018' 0187               	
  5384                           		moviw	fsr1++
  5385  0019' 0016               	iorwf	indf1,w
  5386  001A' 0401               	btfss	status,2
  5387  001B' 1D03               	goto	u1271
  5388  001C' 281E'              	goto	u1270
  5389  001D' 281F'              
  5390                           u1271:
  5391  001E'                    	goto	l461
  5392  001E' 2829'              u1270:
  5393  001F'                    	line	272
  5394                           	
  5395                           l2019:	
  5396  001F'                    ;mcc_generated_files/mtouch/mtouch_button.c: 271:         {;mcc_generated_files/mtouch/m
                                 touch_button.c: 272:             button->counter = (mtouch_button_statecounter_t)0xFFFF;
                                 
  5397                           	movf	(Button_Tick_helper@button),w
  5398  001F' 0802'              	addlw	0Ah
  5399  0020' 3E0A               	movwf	fsr1l
  5400  0021' 0086               	clrf fsr1h	
  5401  0022' 0187               	
  5402                           	movlw	0FFh
  5403  0023' 30FF               	movwi	[0]fsr1
  5404  0024' 3FC0               	movlw	0FFh
  5405  0025' 30FF               	movwi	[1]fsr1
  5406  0026' 3FC1               	goto	l461
  5407  0027' 2829'              	line	273
  5408                           ;mcc_generated_files/mtouch/mtouch_button.c: 273:         }
  5409                           	
  5410                           l460:	
  5411  0028'                    	goto	l461
  5412  0028' 2829'              	line	274
  5413                           ;mcc_generated_files/mtouch/mtouch_button.c: 274:     }
  5414                           	
  5415                           l459:	
  5416  0029'                    	line	275
  5417                           	
  5418                           l461:	
  5419  0029'                    	return
  5420  0029' 0008               	opt stack 0
  5421                           GLOBAL	__end_of_Button_Tick_helper
  5422                           	__end_of_Button_Tick_helper:
  5423  002A'                    	signat	_Button_Tick_helper,4217
  5424                           	global	_MTOUCH_Sensor_Sampled_ResetAll
  5425                           
  5426 ;; *************** function _MTOUCH_Sensor_Sampled_ResetAll *****************
  5427 ;; Defined at:
  5428 ;;		line 594 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5429 ;; Parameters:    Size  Location     Type
  5430 ;;		None
  5431 ;; Auto vars:     Size  Location     Type
  5432 ;;  sensor          1    2[BANK0 ] PTR struct .
  5433 ;;		 -> mtouch_sensor(9), 
  5434 ;; Return value:  Size  Location     Type
  5435 ;;                  1    wreg      void 
  5436 ;; Registers used:
  5437 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5438 ;; Tracked objects:
  5439 ;;		On entry : 0/0
  5440 ;;		On exit  : 0/0
  5441 ;;		Unchanged: 0/0
  5442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5443 ;;      Params:         0       0       0       0
  5444 ;;      Locals:         0       1       0       0
  5445 ;;      Temps:          0       1       0       0
  5446 ;;      Totals:         0       2       0       0
  5447 ;;Total ram usage:        2 bytes
  5448 ;; Hardware stack levels used:    1
  5449 ;; Hardware stack levels required when called:    5
  5450 ;; This function calls:
  5451 ;;		_Sensor_Sampled_Reset
  5452 ;; This function is called by:
  5453 ;;		_MTOUCH_Initialize
  5454 ;;		_MTOUCH_Service_Mainloop
  5455 ;; This function uses a non-reentrant model
  5456 ;;
  5457                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  5458                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5459                           	line	594
  5460                           global __ptext15
  5461                           __ptext15:	;psect for function _MTOUCH_Sensor_Sampled_ResetAll
  5462  0000'                    psect	text15
  5463                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5464                           	line	594
  5465                           	global	__size_of_MTOUCH_Sensor_Sampled_ResetAll
  5466                           	__size_of_MTOUCH_Sensor_Sampled_ResetAll	equ	__end_of_MTOUCH_Sensor_Sampled_ResetAll-_M
                                 TOUCH_Sensor_Sampled_ResetAll
  5467  0022                     	
  5468                           _MTOUCH_Sensor_Sampled_ResetAll:	
  5469  0000'                    ;incstack = 0
  5470                           	opt	stack 8
  5471                           ; Regs used in _MTOUCH_Sensor_Sampled_ResetAll: [wreg+fsr1l+fsr1h+status,2+status,0+pcla
                                 th+cstack]
  5472                           	line	597
  5473                           	
  5474                           l2047:	
  5475  0000'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 596:     mtouch_sensor_t* sensor;;mcc_gener
                                 ated_files/mtouch/mtouch_sensor.c: 597:     for(sensor = &mtouch_sensor[0];sensor<= &mto
                                 uch_sensor[1 -1];sensor++)
  5476                           	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  5477  0000' 3000'              	movlb 0	; select bank0
  5478  0001' 0020               	movwf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0
  5479  0002' 0081'              	movf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0,w
  5480  0003' 0801'              	movwf	(MTOUCH_Sensor_Sampled_ResetAll@sensor)
  5481  0004' 0082'              	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  5482  0005' 3000'              	movwf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0
  5483  0006' 0081'              	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor),w
  5484  0007' 0802'              	subwf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0,w
  5485  0008' 0201'              	skipnc
  5486  0009' 1803               	goto	u1321
  5487  000A' 280C'              	goto	u1320
  5488  000B' 280D'              u1321:
  5489  000C'                    	goto	l2051
  5490  000C' 280F'              u1320:
  5491  000D'                    	goto	l353
  5492  000D' 2821'              	
  5493                           l2049:	
  5494  000E'                    	goto	l353
  5495  000E' 2821'              	
  5496                           l351:	
  5497  000F'                    	line	599
  5498                           	
  5499                           l2051:	
  5500  000F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 598:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 599:         Sensor_Sampled_Reset(sensor);
  5501                           	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor),w
  5502  000F' 0802'              	fcall	_Sensor_Sampled_Reset
  5503  0010' 3180' 2000' 3180'  	line	600
  5504                           	
  5505                           l2053:	
  5506  0013'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 600:     }
  5507                           	movlw	low(09h)
  5508  0013' 3009               	movlb 0	; select bank0
  5509  0014' 0020               	movwf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0
  5510  0015' 0081'              	movf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0,w
  5511  0016' 0801'              	addwf	(MTOUCH_Sensor_Sampled_ResetAll@sensor),f
  5512  0017' 0782'              	
  5513                           l2055:	
  5514  0018'                    	movlw	(low(_mtouch_sensor|((0x0)<<8)))&0ffh
  5515  0018' 3000'              	movwf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0
  5516  0019' 0081'              	movf	(MTOUCH_Sensor_Sampled_ResetAll@sensor),w
  5517  001A' 0802'              	subwf	(??_MTOUCH_Sensor_Sampled_ResetAll+0)+0,w
  5518  001B' 0201'              	skipnc
  5519  001C' 1803               	goto	u1331
  5520  001D' 281F'              	goto	u1330
  5521  001E' 2820'              u1331:
  5522  001F'                    	goto	l2051
  5523  001F' 280F'              u1330:
  5524  0020'                    	goto	l353
  5525  0020' 2821'              	
  5526                           l352:	
  5527  0021'                    	line	601
  5528                           	
  5529                           l353:	
  5530  0021'                    	return
  5531  0021' 0008               	opt stack 0
  5532                           GLOBAL	__end_of_MTOUCH_Sensor_Sampled_ResetAll
  5533                           	__end_of_MTOUCH_Sensor_Sampled_ResetAll:
  5534  0022'                    	signat	_MTOUCH_Sensor_Sampled_ResetAll,89
  5535                           	global	_Sensor_Sampled_Reset
  5536                           
  5537 ;; *************** function _Sensor_Sampled_Reset *****************
  5538 ;; Defined at:
  5539 ;;		line 611 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5540 ;; Parameters:    Size  Location     Type
  5541 ;;  sensor          1    wreg     PTR struct .
  5542 ;;		 -> mtouch_sensor(9), 
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;  sensor          1    0[BANK0 ] PTR struct .
  5545 ;;		 -> mtouch_sensor(9), 
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5555 ;;      Params:         0       0       0       0
  5556 ;;      Locals:         0       1       0       0
  5557 ;;      Temps:          0       0       0       0
  5558 ;;      Totals:         0       1       0       0
  5559 ;;Total ram usage:        1 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    4
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_MTOUCH_Sensor_Initialize
  5566 ;;		_MTOUCH_Sensor_Sampled_ResetAll
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           psect	text16,local,class=CODE,delta=2,merge=1,inline,group=0
  5570                           	line	611
  5571                           global __ptext16
  5572                           __ptext16:	;psect for function _Sensor_Sampled_Reset
  5573  0000'                    psect	text16
  5574                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5575                           	line	611
  5576                           	global	__size_of_Sensor_Sampled_Reset
  5577                           	__size_of_Sensor_Sampled_Reset	equ	__end_of_Sensor_Sampled_Reset-_Sensor_Sampled_Reset

  5578  0008                     	
  5579                           _Sensor_Sampled_Reset:	
  5580  0000'                    ;incstack = 0
  5581                           	opt	stack 8
  5582                           ; Regs used in _Sensor_Sampled_Reset: [wreg+fsr1l+fsr1h+status,2+status,0]
  5583                           ;Sensor_Sampled_Reset@sensor stored from wreg
  5584                           	movlb 0	; select bank0
  5585  0000' 0020               	movwf	(Sensor_Sampled_Reset@sensor)
  5586  0001' 0080'              	line	613
  5587                           	
  5588                           l1795:	
  5589  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 611: static __attribute__((inline)) void Se
                                 nsor_Sampled_Reset(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 612: {;mcc_generated_files/mtouch/mtouch_sensor.c: 613:     sensor->sampled = 0;
  5590                           	movf	(Sensor_Sampled_Reset@sensor),w
  5591  0002' 0800'              	addlw	08h
  5592  0003' 3E08               	movwf	fsr1l
  5593  0004' 0086               	clrf fsr1h	
  5594  0005' 0187               	
  5595                           	bcf	indf1,1
  5596  0006' 1081               	line	614
  5597                           	
  5598                           l359:	
  5599  0007'                    	return
  5600  0007' 0008               	opt stack 0
  5601                           GLOBAL	__end_of_Sensor_Sampled_Reset
  5602                           	__end_of_Sensor_Sampled_Reset:
  5603  0008'                    	signat	_Sensor_Sampled_Reset,4217
  5604                           	global	_MTOUCH_Sensor_SampleAll
  5605                           
  5606 ;; *************** function _MTOUCH_Sensor_SampleAll *****************
  5607 ;; Defined at:
  5608 ;;		line 205 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;		None
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  sensor          1   17[BANK0 ] enum E2110
  5613 ;; Return value:  Size  Location     Type
  5614 ;;                  1    wreg      _Bool 
  5615 ;; Registers used:
  5616 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5617 ;; Tracked objects:
  5618 ;;		On entry : 0/0
  5619 ;;		On exit  : 0/0
  5620 ;;		Unchanged: 0/0
  5621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5622 ;;      Params:         0       0       0       0
  5623 ;;      Locals:         0       1       0       0
  5624 ;;      Temps:          0       1       0       0
  5625 ;;      Totals:         0       2       0       0
  5626 ;;Total ram usage:        2 bytes
  5627 ;; Hardware stack levels used:    1
  5628 ;; Hardware stack levels required when called:    8
  5629 ;; This function calls:
  5630 ;;		_Sensor_Service
  5631 ;; This function is called by:
  5632 ;;		_MTOUCH_Service_Mainloop
  5633 ;; This function uses a non-reentrant model
  5634 ;;
  5635                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  5636                           	line	205
  5637                           global __ptext17
  5638                           __ptext17:	;psect for function _MTOUCH_Sensor_SampleAll
  5639  0000'                    psect	text17
  5640                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5641                           	line	205
  5642                           	global	__size_of_MTOUCH_Sensor_SampleAll
  5643                           	__size_of_MTOUCH_Sensor_SampleAll	equ	__end_of_MTOUCH_Sensor_SampleAll-_MTOUCH_Sensor_S
                                 ampleAll
  5644  0023                     	
  5645                           _MTOUCH_Sensor_SampleAll:	
  5646  0000'                    ;incstack = 0
  5647                           	opt	stack 6
  5648                           ; Regs used in _MTOUCH_Sensor_SampleAll: [allreg]
  5649                           	line	208
  5650                           	
  5651                           l2475:	
  5652  0000'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 207:     enum mtouch_sensor_names sensor;;m
                                 cc_generated_files/mtouch/mtouch_sensor.c: 208:     for (sensor = 0; sensor < 1; sensor+
                                 +)
  5653                           	movlb 0	; select bank0
  5654  0000' 0020               	clrf	(MTOUCH_Sensor_SampleAll@sensor)
  5655  0001' 0191'              	
  5656                           l2477:	
  5657  0002'                    	movf	((MTOUCH_Sensor_SampleAll@sensor)),w
  5658  0002' 0811'              	btfsc	status,2
  5659  0003' 1903               	goto	u1771
  5660  0004' 2806'              	goto	u1770
  5661  0005' 2807'              u1771:
  5662  0006'                    	goto	l2481
  5663  0006' 2809'              u1770:
  5664  0007'                    	goto	l2489
  5665  0007' 2820'              	
  5666                           l2479:	
  5667  0008'                    	goto	l2489
  5668  0008' 2820'              	
  5669                           l249:	
  5670  0009'                    	line	210
  5671                           	
  5672                           l2481:	
  5673  0009'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 209:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 210:         if(Sensor_Service(sensor)!= MTOUCH_SENSOR_ERROR_none)
  5674                           	movf	(MTOUCH_Sensor_SampleAll@sensor),w
  5675  0009' 0811'              	fcall	_Sensor_Service
  5676  000A' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  5677  000D' 3A00               	skipnz
  5678  000E' 1903               	goto	u1781
  5679  000F' 2811'              	goto	u1780
  5680  0010' 2812'              u1781:
  5681  0011'                    	goto	l2487
  5682  0011' 2815'              u1780:
  5683  0012'                    	line	211
  5684                           	
  5685                           l2483:	
  5686  0012'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 211:             return 0;
  5687                           	movlw	low(0)
  5688  0012' 3000               	goto	l252
  5689  0013' 2822'              	
  5690                           l2485:	
  5691  0014'                    	goto	l252
  5692  0014' 2822'              	
  5693                           l251:	
  5694  0015'                    	line	212
  5695                           	
  5696                           l2487:	
  5697  0015'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 212:     }
  5698                           	movlw	low(01h)
  5699  0015' 3001               	movlb 0	; select bank0
  5700  0016' 0020               	movwf	(??_MTOUCH_Sensor_SampleAll+0)+0
  5701  0017' 0090'              	movf	(??_MTOUCH_Sensor_SampleAll+0)+0,w
  5702  0018' 0810'              	addwf	(MTOUCH_Sensor_SampleAll@sensor),f
  5703  0019' 0791'              	movf	((MTOUCH_Sensor_SampleAll@sensor)),w
  5704  001A' 0811'              	btfsc	status,2
  5705  001B' 1903               	goto	u1791
  5706  001C' 281E'              	goto	u1790
  5707  001D' 281F'              u1791:
  5708  001E'                    	goto	l2481
  5709  001E' 2809'              u1790:
  5710  001F'                    	goto	l2489
  5711  001F' 2820'              	
  5712                           l250:	
  5713  0020'                    	line	213
  5714                           	
  5715                           l2489:	
  5716  0020'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 213:     return 1;
  5717                           	movlw	low(01h)
  5718  0020' 3001               	goto	l252
  5719  0021' 2822'              	
  5720                           l2491:	
  5721  0022'                    	line	214
  5722                           	
  5723                           l252:	
  5724  0022'                    	return
  5725  0022' 0008               	opt stack 0
  5726                           GLOBAL	__end_of_MTOUCH_Sensor_SampleAll
  5727                           	__end_of_MTOUCH_Sensor_SampleAll:
  5728  0023'                    	signat	_MTOUCH_Sensor_SampleAll,89
  5729                           	global	_Sensor_Service
  5730                           
  5731 ;; *************** function _Sensor_Service *****************
  5732 ;; Defined at:
  5733 ;;		line 222 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  name            1    wreg     enum E2110
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;  name            1   13[BANK0 ] enum E2110
  5738 ;;  sensor          1   15[BANK0 ] PTR struct .
  5739 ;;		 -> mtouch_sensor(9), 
  5740 ;;  error           1   14[BANK0 ] enum E2112
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  1    wreg      enum E2112
  5743 ;; Registers used:
  5744 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5750 ;;      Params:         0       0       0       0
  5751 ;;      Locals:         0       3       0       0
  5752 ;;      Temps:          0       2       0       0
  5753 ;;      Totals:         0       5       0       0
  5754 ;;Total ram usage:        5 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    7
  5757 ;; This function calls:
  5758 ;;		_Sensor_Acquisition
  5759 ;;		_Sensor_DefaultCallback
  5760 ;;		_Sensor_RawSample_Update
  5761 ;;		_Sensor_setSampled
  5762 ;;		___bmul
  5763 ;; This function is called by:
  5764 ;;		_MTOUCH_Sensor_SampleAll
  5765 ;; This function uses a non-reentrant model
  5766 ;;
  5767                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  5768                           	line	222
  5769                           global __ptext18
  5770                           __ptext18:	;psect for function _Sensor_Service
  5771  0000'                    psect	text18
  5772                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5773                           	line	222
  5774                           	global	__size_of_Sensor_Service
  5775                           	__size_of_Sensor_Service	equ	__end_of_Sensor_Service-_Sensor_Service
  5776  0042                     	
  5777                           _Sensor_Service:	
  5778  0000'                    ;incstack = 0
  5779                           	opt	stack 6
  5780                           ; Regs used in _Sensor_Service: [allreg]
  5781                           ;Sensor_Service@name stored from wreg
  5782                           	movlb 0	; select bank0
  5783  0000' 0020               	movwf	(Sensor_Service@name)
  5784  0001' 008D'              	line	224
  5785                           	
  5786                           l2455:	
  5787  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 222: static enum mtouch_sensor_error Sensor
                                 _Service(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 223:
                                  {;mcc_generated_files/mtouch/mtouch_sensor.c: 224:     mtouch_sensor_t* sensor = &mtouc
                                 h_sensor[name];
  5788                           	movlw	low(09h)
  5789  0002' 3009               	movwf	(??_Sensor_Service+0)+0
  5790  0003' 008B'              	movf	(??_Sensor_Service+0)+0,w
  5791  0004' 080B'              	movwf	(___bmul@multiplicand)
  5792  0005' 0080'              	movf	(Sensor_Service@name),w
  5793  0006' 080D'              	fcall	___bmul
  5794  0007' 3180' 2000' 3180'  	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  5795  000A' 3E00'              	movlb 0	; select bank0
  5796  000B' 0020               	movwf	(??_Sensor_Service+1)+0
  5797  000C' 008C'              	movf	(??_Sensor_Service+1)+0,w
  5798  000D' 080C'              	movwf	(Sensor_Service@sensor)
  5799  000E' 008F'              	line	225
  5800                           	
  5801                           l2457:	
  5802  000F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 225:     enum mtouch_sensor_error error = S
                                 ensor_Acquisition(sensor);
  5803                           	movf	(Sensor_Service@sensor),w
  5804  000F' 080F'              	fcall	_Sensor_Acquisition
  5805  0010' 3180' 2000' 3180'  	movlb 0	; select bank0
  5806  0013' 0020               	movwf	(??_Sensor_Service+0)+0
  5807  0014' 008B'              	movf	(??_Sensor_Service+0)+0,w
  5808  0015' 080B'              	movwf	(Sensor_Service@error)
  5809  0016' 008E'              	line	228
  5810                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 228:     switch(error)
  5811                           	goto	l2465
  5812  0017' 282E'              	line	230
  5813                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 229:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 230:         case MTOUCH_SENSOR_ERROR_none:
  5814                           	
  5815                           l256:	
  5816  0018'                    	line	232
  5817                           	
  5818                           l2459:	
  5819  0018'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 231:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 232:             Sensor_RawSample_Update(sensor);
  5820                           	movf	(Sensor_Service@sensor),w
  5821  0018' 080F'              	fcall	_Sensor_RawSample_Update
  5822  0019' 3180' 2000' 3180'  	line	233
  5823                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 233:             Sensor_setSampled(sensor);
                                 
  5824                           	movlb 0	; select bank0
  5825  001C' 0020               	movf	(Sensor_Service@sensor),w
  5826  001D' 080F'              	fcall	_Sensor_setSampled
  5827  001E' 3180' 2000' 3180'  	line	234
  5828                           	
  5829                           l2461:	
  5830  0021'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 234:             callback_sampled(name);
  5831                           	movlb 0	; select bank0
  5832  0021' 0020               	movf	(Sensor_Service@name),w
  5833  0022' 080D'              	movwf	(??_Sensor_Service+0)+0
  5834  0023' 008B'              	movf	(??_Sensor_Service+0)+0,w
  5835  0024' 080B'              	movwf	(Sensor_DefaultCallback@sensor)
  5836  0025' 0080'              	movf	(_callback_sampled+1),w
  5837  0026' 080F'              	movwf	pclath
  5838  0027' 008A               	movf	(_callback_sampled),w
  5839  0028' 080E'              	callw
  5840  0029' 000A               	pagesel	$
  5841  002A' 3180'              	line	236
  5842                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 235:         };mcc_generated_files/mtouch/m
                                 touch_sensor.c: 236:         break;
  5843                           	goto	l2467
  5844  002B' 283E'              	line	237
  5845                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 237:         default: break;
  5846                           	
  5847                           l258:	
  5848  002C'                    	goto	l2467
  5849  002C' 283E'              	line	238
  5850                           	
  5851                           l2463:	
  5852  002D'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 238:     }
  5853                           	goto	l2467
  5854  002D' 283E'              	
  5855                           l255:	
  5856  002E'                    	
  5857                           l2465:	
  5858  002E'                    	movlb 0	; select bank0
  5859  002E' 0020               	movf	(Sensor_Service@error),w
  5860  002F' 080E'              	movwf	(??_Sensor_Service+0)+0
  5861  0030' 008B'              	clrf	(??_Sensor_Service+0)+0+1
  5862  0031' 018C'              	btfsc	(??_Sensor_Service+0)+0,7
  5863  0032' 1B8B'              	decf	(??_Sensor_Service+0)+0+1,f
  5864  0033' 038C'              	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5865                           ; Switch size 1, requested type "space"
  5866                           ; Number of cases is 1, Range of values is 0 to 0
  5867                           ; switch strategies available:
  5868                           ; Name         Instructions Cycles
  5869                           ; simple_byte            4     3 (average)
  5870                           ; direct_byte            8     6 (fixed)
  5871                           ; jumptable            260     6 (fixed)
  5872                           ;	Chosen strategy is simple_byte
  5873                           
  5874                           	movf 1+(??_Sensor_Service+0)+0,w
  5875  0034' 080C'              	opt asmopt_push
  5876                           	opt asmopt_off
  5877                           	xorlw	0^0	; case 0
  5878  0035' 3A00               	skipnz
  5879  0036' 1903               	goto	l2585
  5880  0037' 2839'              	goto	l2467
  5881  0038' 283E'              	opt asmopt_pop
  5882                           	
  5883                           l2585:	
  5884  0039'                    ; Switch size 1, requested type "space"
  5885                           ; Number of cases is 1, Range of values is 0 to 0
  5886                           ; switch strategies available:
  5887                           ; Name         Instructions Cycles
  5888                           ; simple_byte            4     3 (average)
  5889                           ; direct_byte            8     6 (fixed)
  5890                           ; jumptable            260     6 (fixed)
  5891                           ;	Chosen strategy is simple_byte
  5892                           
  5893                           	movf 0+(??_Sensor_Service+0)+0,w
  5894  0039' 080B'              	opt asmopt_push
  5895                           	opt asmopt_off
  5896                           	xorlw	0^0	; case 0
  5897  003A' 3A00               	skipnz
  5898  003B' 1903               	goto	l2459
  5899  003C' 2818'              	goto	l2467
  5900  003D' 283E'              	opt asmopt_pop
  5901                           
  5902                           	
  5903                           l257:	
  5904  003E'                    	line	240
  5905                           	
  5906                           l2467:	
  5907  003E'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 240:     return error;
  5908                           	movlb 0	; select bank0
  5909  003E' 0020               	movf	(Sensor_Service@error),w
  5910  003F' 080E'              	goto	l259
  5911  0040' 2841'              	
  5912                           l2469:	
  5913  0041'                    	line	241
  5914                           	
  5915                           l259:	
  5916  0041'                    	return
  5917  0041' 0008               	opt stack 0
  5918                           GLOBAL	__end_of_Sensor_Service
  5919                           	__end_of_Sensor_Service:
  5920  0042'                    	signat	_Sensor_Service,4217
  5921                           	global	_Sensor_setSampled
  5922                           
  5923 ;; *************** function _Sensor_setSampled *****************
  5924 ;; Defined at:
  5925 ;;		line 616 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  sensor          1    wreg     PTR struct .
  5928 ;;		 -> mtouch_sensor(9), 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;  sensor          1    0[BANK0 ] PTR struct .
  5931 ;;		 -> mtouch_sensor(9), 
  5932 ;; Return value:  Size  Location     Type
  5933 ;;                  1    wreg      void 
  5934 ;; Registers used:
  5935 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5936 ;; Tracked objects:
  5937 ;;		On entry : 0/0
  5938 ;;		On exit  : 0/0
  5939 ;;		Unchanged: 0/0
  5940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5941 ;;      Params:         0       0       0       0
  5942 ;;      Locals:         0       1       0       0
  5943 ;;      Temps:          0       0       0       0
  5944 ;;      Totals:         0       1       0       0
  5945 ;;Total ram usage:        1 bytes
  5946 ;; Hardware stack levels used:    1
  5947 ;; Hardware stack levels required when called:    4
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_Sensor_Service
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           psect	text19,local,class=CODE,delta=2,merge=1,inline,group=0
  5955                           	line	616
  5956                           global __ptext19
  5957                           __ptext19:	;psect for function _Sensor_setSampled
  5958  0000'                    psect	text19
  5959                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  5960                           	line	616
  5961                           	global	__size_of_Sensor_setSampled
  5962                           	__size_of_Sensor_setSampled	equ	__end_of_Sensor_setSampled-_Sensor_setSampled
  5963  0008                     	
  5964                           _Sensor_setSampled:	
  5965  0000'                    ;incstack = 0
  5966                           	opt	stack 8
  5967                           ; Regs used in _Sensor_setSampled: [wreg+fsr1l+fsr1h+status,2+status,0]
  5968                           ;Sensor_setSampled@sensor stored from wreg
  5969                           	movlb 0	; select bank0
  5970  0000' 0020               	movwf	(Sensor_setSampled@sensor)
  5971  0001' 0080'              	line	618
  5972                           	
  5973                           l1925:	
  5974  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 616: static __attribute__((inline)) void Se
                                 nsor_setSampled(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 617
                                 : {;mcc_generated_files/mtouch/mtouch_sensor.c: 618:     sensor->sampled = 1;
  5975                           	movf	(Sensor_setSampled@sensor),w
  5976  0002' 0800'              	addlw	08h
  5977  0003' 3E08               	movwf	fsr1l
  5978  0004' 0086               	clrf fsr1h	
  5979  0005' 0187               	
  5980                           	bsf	indf1,1
  5981  0006' 1481               	line	619
  5982                           	
  5983                           l362:	
  5984  0007'                    	return
  5985  0007' 0008               	opt stack 0
  5986                           GLOBAL	__end_of_Sensor_setSampled
  5987                           	__end_of_Sensor_setSampled:
  5988  0008'                    	signat	_Sensor_setSampled,4217
  5989                           	global	_Sensor_RawSample_Update
  5990                           
  5991 ;; *************** function _Sensor_RawSample_Update *****************
  5992 ;; Defined at:
  5993 ;;		line 476 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  5994 ;; Parameters:    Size  Location     Type
  5995 ;;  sensor          1    wreg     PTR struct .
  5996 ;;		 -> mtouch_sensor(9), 
  5997 ;; Auto vars:     Size  Location     Type
  5998 ;;  sensor          1    0[BANK0 ] PTR struct .
  5999 ;;		 -> mtouch_sensor(9), 
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6009 ;;      Params:         0       0       0       0
  6010 ;;      Locals:         0       1       0       0
  6011 ;;      Temps:          0       0       0       0
  6012 ;;      Totals:         0       1       0       0
  6013 ;;Total ram usage:        1 bytes
  6014 ;; Hardware stack levels used:    1
  6015 ;; Hardware stack levels required when called:    4
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_Sensor_Service
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  6023                           	line	476
  6024                           global __ptext20
  6025                           __ptext20:	;psect for function _Sensor_RawSample_Update
  6026  0000'                    psect	text20
  6027                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6028                           	line	476
  6029                           	global	__size_of_Sensor_RawSample_Update
  6030                           	__size_of_Sensor_RawSample_Update	equ	__end_of_Sensor_RawSample_Update-_Sensor_RawSampl
                                 e_Update
  6031  001B                     	
  6032                           _Sensor_RawSample_Update:	
  6033  0000'                    ;incstack = 0
  6034                           	opt	stack 8
  6035                           ; Regs used in _Sensor_RawSample_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  6036                           ;Sensor_RawSample_Update@sensor stored from wreg
  6037                           	movlb 0	; select bank0
  6038  0000' 0020               	movwf	(Sensor_RawSample_Update@sensor)
  6039  0001' 0080'              	line	478
  6040                           	
  6041                           l1915:	
  6042  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 476: static void Sensor_RawSample_Update(mt
                                 ouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 477: {;mcc_generated_
                                 files/mtouch/mtouch_sensor.c: 478:     if (INTCONbits.GIE == (uint8_t)1)
  6043                           	btfss	(11),7	;volatile
  6044  0002' 1F8B               	goto	u1101
  6045  0003' 2805'              	goto	u1100
  6046  0004' 2806'              u1101:
  6047  0005'                    	goto	l1923
  6048  0005' 2811'              u1100:
  6049  0006'                    	line	480
  6050                           	
  6051                           l1917:	
  6052  0006'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 479:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 480:         INTCONbits.GIE = (uint8_t)0;
  6053                           	bcf	(11),7	;volatile
  6054  0006' 138B               	line	481
  6055                           	
  6056                           l1919:	
  6057  0007'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 481:         sensor->rawSample = packet_sam
                                 ple;
  6058                           	movf	(Sensor_RawSample_Update@sensor),w
  6059  0007' 0800'              	addlw	06h
  6060  0008' 3E06               	movwf	fsr1l
  6061  0009' 0086               	clrf fsr1h	
  6062  000A' 0187               	
  6063                           	movf	(_packet_sample),w
  6064  000B' 0804'              	movwi	[0]fsr1
  6065  000C' 3FC0               	movf	(_packet_sample+1),w
  6066  000D' 0805'              	movwi	[1]fsr1
  6067  000E' 3FC1               	line	482
  6068                           	
  6069                           l1921:	
  6070  000F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 482:         INTCONbits.GIE = (uint8_t)1;
  6071                           	bsf	(11),7	;volatile
  6072  000F' 178B               	line	483
  6073                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 483:     }
  6074                           	goto	l327
  6075  0010' 281A'              	line	484
  6076                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 484:     else
  6077                           	
  6078                           l325:	
  6079  0011'                    	line	486
  6080                           	
  6081                           l1923:	
  6082  0011'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 485:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 486:         sensor->rawSample = packet_sample;
  6083                           	movf	(Sensor_RawSample_Update@sensor),w
  6084  0011' 0800'              	addlw	06h
  6085  0012' 3E06               	movwf	fsr1l
  6086  0013' 0086               	clrf fsr1h	
  6087  0014' 0187               	
  6088                           	movf	(_packet_sample),w
  6089  0015' 0804'              	movwi	[0]fsr1
  6090  0016' 3FC0               	movf	(_packet_sample+1),w
  6091  0017' 0805'              	movwi	[1]fsr1
  6092  0018' 3FC1               	goto	l327
  6093  0019' 281A'              	line	487
  6094                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 487:     }
  6095                           	
  6096                           l326:	
  6097  001A'                    	line	488
  6098                           	
  6099                           l327:	
  6100  001A'                    	return
  6101  001A' 0008               	opt stack 0
  6102                           GLOBAL	__end_of_Sensor_RawSample_Update
  6103                           	__end_of_Sensor_RawSample_Update:
  6104  001B'                    	signat	_Sensor_RawSample_Update,4217
  6105                           	global	_Sensor_DefaultCallback
  6106                           
  6107 ;; *************** function _Sensor_DefaultCallback *****************
  6108 ;; Defined at:
  6109 ;;		line 496 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  sensor          1    0[BANK0 ] enum E2110
  6112 ;; Auto vars:     Size  Location     Type
  6113 ;;		None
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  1    wreg      void 
  6116 ;; Registers used:
  6117 ;;		None
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6123 ;;      Params:         0       1       0       0
  6124 ;;      Locals:         0       0       0       0
  6125 ;;      Temps:          0       0       0       0
  6126 ;;      Totals:         0       1       0       0
  6127 ;;Total ram usage:        1 bytes
  6128 ;; Hardware stack levels used:    1
  6129 ;; Hardware stack levels required when called:    4
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_Sensor_Service
  6134 ;; This function uses a non-reentrant model
  6135 ;;
  6136                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  6137                           	line	496
  6138                           global __ptext21
  6139                           __ptext21:	;psect for function _Sensor_DefaultCallback
  6140  0000'                    psect	text21
  6141                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6142                           	line	496
  6143                           	global	__size_of_Sensor_DefaultCallback
  6144                           	__size_of_Sensor_DefaultCallback	equ	__end_of_Sensor_DefaultCallback-_Sensor_DefaultCal
                                 lback
  6145  0001                     	
  6146                           _Sensor_DefaultCallback:	
  6147  0000'                    ;incstack = 0
  6148                           	opt	stack 8
  6149                           ; Regs used in _Sensor_DefaultCallback: []
  6150                           	
  6151                           l330:	
  6152  0000'                    	return
  6153  0000' 0008               	opt stack 0
  6154                           GLOBAL	__end_of_Sensor_DefaultCallback
  6155                           	__end_of_Sensor_DefaultCallback:
  6156  0001'                    	signat	_Sensor_DefaultCallback,4217
  6157                           	global	_Sensor_Acquisition
  6158                           
  6159 ;; *************** function _Sensor_Acquisition *****************
  6160 ;; Defined at:
  6161 ;;		line 254 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  sensor          1    wreg     PTR struct .
  6164 ;;		 -> mtouch_sensor(9), 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  sensor          1   10[BANK0 ] PTR struct .
  6167 ;;		 -> mtouch_sensor(9), 
  6168 ;;  retry           1    9[BANK0 ] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      enum E2112
  6171 ;; Registers used:
  6172 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6178 ;;      Params:         0       0       0       0
  6179 ;;      Locals:         0       2       0       0
  6180 ;;      Temps:          0       4       0       0
  6181 ;;      Totals:         0       6       0       0
  6182 ;;Total ram usage:        6 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; Hardware stack levels required when called:    6
  6185 ;; This function calls:
  6186 ;;		_Sensor_Acq_ExecutePacket
  6187 ;;		_Sensor_isEnabled
  6188 ;;		_Sensor_setActive
  6189 ;;		_Sensor_setInactive
  6190 ;;		_abs
  6191 ;; This function is called by:
  6192 ;;		_Sensor_Service
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  6196                           	line	254
  6197                           global __ptext22
  6198                           __ptext22:	;psect for function _Sensor_Acquisition
  6199  0000'                    psect	text22
  6200                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6201                           	line	254
  6202                           	global	__size_of_Sensor_Acquisition
  6203                           	__size_of_Sensor_Acquisition	equ	__end_of_Sensor_Acquisition-_Sensor_Acquisition
  6204  0065                     	
  6205                           _Sensor_Acquisition:	
  6206  0000'                    ;incstack = 0
  6207                           	opt	stack 6
  6208                           ; Regs used in _Sensor_Acquisition: [allreg]
  6209                           ;Sensor_Acquisition@sensor stored from wreg
  6210                           	movlb 0	; select bank0
  6211  0000' 0020               	movwf	(Sensor_Acquisition@sensor)
  6212  0001' 008A'              	line	257
  6213                           	
  6214                           l2429:	
  6215  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 254: static enum mtouch_sensor_error Sensor
                                 _Acquisition(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 255: {
                                 ;mcc_generated_files/mtouch/mtouch_sensor.c: 257:     uint8_t retry = (uint8_t)5;
  6216                           	movlw	low(05h)
  6217  0002' 3005               	movwf	(??_Sensor_Acquisition+0)+0
  6218  0003' 0085'              	movf	(??_Sensor_Acquisition+0)+0,w
  6219  0004' 0805'              	movwf	(Sensor_Acquisition@retry)
  6220  0005' 0089'              	line	259
  6221                           	
  6222                           l2431:	
  6223  0006'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 259:     if(!Sensor_isEnabled(sensor))
  6224                           	movf	(Sensor_Acquisition@sensor),w
  6225  0006' 080A'              	fcall	_Sensor_isEnabled
  6226  0007' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  6227  000A' 3A00               	skipz
  6228  000B' 1D03               	goto	u1731
  6229  000C' 280E'              	goto	u1730
  6230  000D' 280F'              u1731:
  6231  000E'                    	goto	l2443
  6232  000E' 281F'              u1730:
  6233  000F'                    	line	260
  6234                           	
  6235                           l2433:	
  6236  000F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 260:         return MTOUCH_SENSOR_ERROR_non
                                 e;
  6237                           	movlw	low(0)
  6238  000F' 3000               	goto	l267
  6239  0010' 2864'              	
  6240                           l2435:	
  6241  0011'                    	goto	l267
  6242  0011' 2864'              	
  6243                           l266:	
  6244  0012'                    	line	262
  6245                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:     while(Sensor_Acq_ExecutePacket(sen
                                 sor))
  6246                           	goto	l2443
  6247  0012' 281F'              	
  6248                           l269:	
  6249  0013'                    	line	264
  6250                           	
  6251                           l2437:	
  6252  0013'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 263:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 264:         retry--;
  6253                           	movlw	01h
  6254  0013' 3001               	movlb 0	; select bank0
  6255  0014' 0020               	subwf	(Sensor_Acquisition@retry),f
  6256  0015' 0289'              	line	265
  6257                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 265:         if(retry == 0)
  6258                           	movf	((Sensor_Acquisition@retry)),w
  6259  0016' 0809'              	btfss	status,2
  6260  0017' 1D03               	goto	u1741
  6261  0018' 281A'              	goto	u1740
  6262  0019' 281B'              u1741:
  6263  001A'                    	goto	l2443
  6264  001A' 281F'              u1740:
  6265  001B'                    	line	267
  6266                           	
  6267                           l2439:	
  6268  001B'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 266:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 267:             return MTOUCH_SENSOR_ERROR_tooManyRetries;
  6269                           	movlw	low(-4)
  6270  001B' 30FC               	goto	l267
  6271  001C' 2864'              	
  6272                           l2441:	
  6273  001D'                    	goto	l267
  6274  001D' 2864'              	line	268
  6275                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 268:         }
  6276                           	
  6277                           l270:	
  6278  001E'                    	goto	l2443
  6279  001E' 281F'              	line	269
  6280                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 269:     }
  6281                           	
  6282                           l268:	
  6283  001F'                    	line	262
  6284                           	
  6285                           l2443:	
  6286  001F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 262:     while(Sensor_Acq_ExecutePacket(sen
                                 sor))
  6287                           	movlb 0	; select bank0
  6288  001F' 0020               	movf	(Sensor_Acquisition@sensor),w
  6289  0020' 080A'              	fcall	_Sensor_Acq_ExecutePacket
  6290  0021' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  6291  0024' 3A00               	skipz
  6292  0025' 1D03               	goto	u1751
  6293  0026' 2828'              	goto	u1750
  6294  0027' 2829'              u1751:
  6295  0028'                    	goto	l2437
  6296  0028' 2813'              u1750:
  6297  0029'                    	goto	l2445
  6298  0029' 282A'              	
  6299                           l271:	
  6300  002A'                    	line	271
  6301                           	
  6302                           l2445:	
  6303  002A'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 271:     if((mtouch_sensor_packetsample_t)a
                                 bs(packet_sample - sensor->rawSample) > (mtouch_sensor_packetsample_t)(sensor->oversampl
                                 ing)<<2)
  6304                           	movlb 0	; select bank0
  6305  002A' 0020               	movf	(Sensor_Acquisition@sensor),w
  6306  002B' 080A'              	addlw	06h
  6307  002C' 3E06               	movwf	fsr1l
  6308  002D' 0086               	clrf fsr1h	
  6309  002E' 0187               	
  6310                           	moviw	[0]fsr1
  6311  002F' 3F40               	movwf	(??_Sensor_Acquisition+0)+0
  6312  0030' 0085'              	moviw	[1]fsr1
  6313  0031' 3F41               	movwf	(??_Sensor_Acquisition+0)+0+1
  6314  0032' 0086'              	comf	(??_Sensor_Acquisition+0)+0,f
  6315  0033' 0985'              	comf	(??_Sensor_Acquisition+0)+1,f
  6316  0034' 0986'              	incf	(??_Sensor_Acquisition+0)+0,f
  6317  0035' 0A85'              	skipnz
  6318  0036' 1903               	incf	(??_Sensor_Acquisition+0)+1,f
  6319  0037' 0A86'              	movf	(_packet_sample),w
  6320  0038' 0804'              	addwf	0+(??_Sensor_Acquisition+0)+0,w
  6321  0039' 0705'              	movwf	(abs@a)
  6322  003A' 0080'              	movf	(_packet_sample+1),w
  6323  003B' 0805'              	addwfc	1+(??_Sensor_Acquisition+0)+0,w
  6324  003C' 3D06'              	movwf	1+(abs@a)
  6325  003D' 0081'              	fcall	_abs
  6326  003E' 3180' 2000' 3180'  	movlb 0	; select bank0
  6327  0041' 0020               	movf	(Sensor_Acquisition@sensor),w
  6328  0042' 080A'              	addlw	05h
  6329  0043' 3E05               	movwf	fsr1l
  6330  0044' 0086               	clrf fsr1h	
  6331  0045' 0187               	
  6332                           	movf	indf1,w
  6333  0046' 0801               	movwf	(??_Sensor_Acquisition+2)+0
  6334  0047' 0087'              	clrf	(??_Sensor_Acquisition+2)+0+1
  6335  0048' 0188'              	lslf	(??_Sensor_Acquisition+2)+0,f
  6336  0049' 3587'              	rlf	(??_Sensor_Acquisition+2)+1,f
  6337  004A' 0D88'              	lslf	(??_Sensor_Acquisition+2)+0,f
  6338  004B' 3587'              	rlf	(??_Sensor_Acquisition+2)+1,f
  6339  004C' 0D88'              	movf	(1+(?_abs)),w
  6340  004D' 0801'              	subwf	1+(??_Sensor_Acquisition+2)+0,w
  6341  004E' 0208'              	skipz
  6342  004F' 1D03               	goto	u1765
  6343  0050' 2853'              	movf	(0+(?_abs)),w
  6344  0051' 0800'              	subwf	0+(??_Sensor_Acquisition+2)+0,w
  6345  0052' 0207'              u1765:
  6346  0053'                    	skipnc
  6347  0053' 1803               	goto	u1761
  6348  0054' 2856'              	goto	u1760
  6349  0055' 2857'              u1761:
  6350  0056'                    	goto	l2449
  6351  0056' 285C'              u1760:
  6352  0057'                    	line	273
  6353                           	
  6354                           l2447:	
  6355  0057'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 272:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 273:         Sensor_setActive(sensor);
  6356                           	movf	(Sensor_Acquisition@sensor),w
  6357  0057' 080A'              	fcall	_Sensor_setActive
  6358  0058' 3180' 2000' 3180'  	line	275
  6359                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 275:     }
  6360                           	goto	l2451
  6361  005B' 2862'              	line	276
  6362                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 276:     else
  6363                           	
  6364                           l272:	
  6365  005C'                    	line	278
  6366                           	
  6367                           l2449:	
  6368  005C'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 277:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 278:         Sensor_setInactive(sensor);
  6369                           	movlb 0	; select bank0
  6370  005C' 0020               	movf	(Sensor_Acquisition@sensor),w
  6371  005D' 080A'              	fcall	_Sensor_setInactive
  6372  005E' 3180' 2000' 3180'  	goto	l2451
  6373  0061' 2862'              	line	279
  6374                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 279:     }
  6375                           	
  6376                           l273:	
  6377  0062'                    	line	281
  6378                           	
  6379                           l2451:	
  6380  0062'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 281:     return MTOUCH_SENSOR_ERROR_none;
  6381                           	movlw	low(0)
  6382  0062' 3000               	goto	l267
  6383  0063' 2864'              	
  6384                           l2453:	
  6385  0064'                    	line	282
  6386                           	
  6387                           l267:	
  6388  0064'                    	return
  6389  0064' 0008               	opt stack 0
  6390                           GLOBAL	__end_of_Sensor_Acquisition
  6391                           	__end_of_Sensor_Acquisition:
  6392  0065'                    	signat	_Sensor_Acquisition,4217
  6393                           	global	_abs
  6394                           
  6395 ;; *************** function _abs *****************
  6396 ;; Defined at:
  6397 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  a               2    0[BANK0 ] int 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  2    0[BANK0 ] int 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6411 ;;      Params:         0       2       0       0
  6412 ;;      Locals:         0       0       0       0
  6413 ;;      Temps:          0       2       0       0
  6414 ;;      Totals:         0       4       0       0
  6415 ;;Total ram usage:        4 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    4
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_Sensor_Acquisition
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           psect	text23,local,class=CODE,delta=2,merge=1,group=2
  6425                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  6426                           	line	1
  6427                           global __ptext23
  6428                           __ptext23:	;psect for function _abs
  6429  0000'                    psect	text23
  6430                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
  6431                           	line	1
  6432                           	global	__size_of_abs
  6433                           	__size_of_abs	equ	__end_of_abs-_abs
  6434  001D                     	
  6435                           _abs:	
  6436  0000'                    ;incstack = 0
  6437                           	opt	stack 7
  6438                           ; Regs used in _abs: [wreg+status,2+status,0]
  6439                           	line	3
  6440                           	
  6441                           l1837:	
  6442  0000'                    	movlb 0	; select bank0
  6443  0000' 0020               	movf	(abs@a+1),w
  6444  0001' 0801'              	xorlw	80h
  6445  0002' 3A80               	movwf	(??_abs+0)+0
  6446  0003' 0082'              	movlw	(0)^80h
  6447  0004' 3080               	subwf	(??_abs+0)+0,w
  6448  0005' 0202'              	skipz
  6449  0006' 1D03               	goto	u1005
  6450  0007' 280A'              	movlw	01h
  6451  0008' 3001               	subwf	(abs@a),w
  6452  0009' 0200'              u1005:
  6453  000A'                    
  6454                           	skipnc
  6455  000A' 1803               	goto	u1001
  6456  000B' 280D'              	goto	u1000
  6457  000C' 280E'              u1001:
  6458  000D'                    	goto	l1006
  6459  000D' 281B'              u1000:
  6460  000E'                    	
  6461                           l1839:	
  6462  000E'                    	movlb 0	; select bank0
  6463  000E' 0020               	comf	(abs@a),w
  6464  000F' 0900'              	movwf	(??_abs+0)+0
  6465  0010' 0082'              	comf	(abs@a+1),w
  6466  0011' 0901'              	movwf	((??_abs+0)+0+1)
  6467  0012' 0083'              	incf	(??_abs+0)+0,f
  6468  0013' 0A82'              	skipnz
  6469  0014' 1903               	incf	((??_abs+0)+0+1),f
  6470  0015' 0A83'              	movf	0+(??_abs+0)+0,w
  6471  0016' 0802'              	movwf	(?_abs)
  6472  0017' 0080'              	movf	1+(??_abs+0)+0,w
  6473  0018' 0803'              	movwf	(?_abs+1)
  6474  0019' 0081'              	goto	l1009
  6475  001A' 281C'              	
  6476                           l1006:	
  6477  001B'                    	goto	l1009
  6478  001B' 281C'              	
  6479                           l1008:	
  6480  001C'                    	line	4
  6481                           	
  6482                           l1009:	
  6483  001C'                    	return
  6484  001C' 0008               	opt stack 0
  6485                           GLOBAL	__end_of_abs
  6486                           	__end_of_abs:
  6487  001D'                    	signat	_abs,4218
  6488                           	global	_Sensor_setInactive
  6489                           
  6490 ;; *************** function _Sensor_setInactive *****************
  6491 ;; Defined at:
  6492 ;;		line 562 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  sensor          1    wreg     PTR struct .
  6495 ;;		 -> mtouch_sensor(9), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  sensor          1    0[BANK0 ] PTR struct .
  6498 ;;		 -> mtouch_sensor(9), 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;                  1    wreg      void 
  6501 ;; Registers used:
  6502 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6508 ;;      Params:         0       0       0       0
  6509 ;;      Locals:         0       1       0       0
  6510 ;;      Temps:          0       0       0       0
  6511 ;;      Totals:         0       1       0       0
  6512 ;;Total ram usage:        1 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    4
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_Sensor_Acquisition
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           psect	text24,local,class=CODE,delta=2,merge=1,inline,group=0
  6522                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6523                           	line	562
  6524                           global __ptext24
  6525                           __ptext24:	;psect for function _Sensor_setInactive
  6526  0000'                    psect	text24
  6527                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6528                           	line	562
  6529                           	global	__size_of_Sensor_setInactive
  6530                           	__size_of_Sensor_setInactive	equ	__end_of_Sensor_setInactive-_Sensor_setInactive
  6531  0008                     	
  6532                           _Sensor_setInactive:	
  6533  0000'                    ;incstack = 0
  6534                           	opt	stack 7
  6535                           ; Regs used in _Sensor_setInactive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6536                           ;Sensor_setInactive@sensor stored from wreg
  6537                           	movlb 0	; select bank0
  6538  0000' 0020               	movwf	(Sensor_setInactive@sensor)
  6539  0001' 0080'              	line	564
  6540                           	
  6541                           l1843:	
  6542  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 562: static __attribute__((inline)) void Se
                                 nsor_setInactive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 56
                                 3: {;mcc_generated_files/mtouch/mtouch_sensor.c: 564:     sensor->acitve = 0;
  6543                           	movf	(Sensor_setInactive@sensor),w
  6544  0002' 0800'              	addlw	08h
  6545  0003' 3E08               	movwf	fsr1l
  6546  0004' 0086               	clrf fsr1h	
  6547  0005' 0187               	
  6548                           	bcf	indf1,2
  6549  0006' 1101               	line	565
  6550                           	
  6551                           l342:	
  6552  0007'                    	return
  6553  0007' 0008               	opt stack 0
  6554                           GLOBAL	__end_of_Sensor_setInactive
  6555                           	__end_of_Sensor_setInactive:
  6556  0008'                    	signat	_Sensor_setInactive,4217
  6557                           	global	_Sensor_setActive
  6558                           
  6559 ;; *************** function _Sensor_setActive *****************
  6560 ;; Defined at:
  6561 ;;		line 557 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  sensor          1    wreg     PTR struct .
  6564 ;;		 -> mtouch_sensor(9), 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  sensor          1    0[BANK0 ] PTR struct .
  6567 ;;		 -> mtouch_sensor(9), 
  6568 ;; Return value:  Size  Location     Type
  6569 ;;                  1    wreg      void 
  6570 ;; Registers used:
  6571 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6572 ;; Tracked objects:
  6573 ;;		On entry : 0/0
  6574 ;;		On exit  : 0/0
  6575 ;;		Unchanged: 0/0
  6576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6577 ;;      Params:         0       0       0       0
  6578 ;;      Locals:         0       1       0       0
  6579 ;;      Temps:          0       0       0       0
  6580 ;;      Totals:         0       1       0       0
  6581 ;;Total ram usage:        1 bytes
  6582 ;; Hardware stack levels used:    1
  6583 ;; Hardware stack levels required when called:    4
  6584 ;; This function calls:
  6585 ;;		Nothing
  6586 ;; This function is called by:
  6587 ;;		_Sensor_Acquisition
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           psect	text25,local,class=CODE,delta=2,merge=1,inline,group=0
  6591                           	line	557
  6592                           global __ptext25
  6593                           __ptext25:	;psect for function _Sensor_setActive
  6594  0000'                    psect	text25
  6595                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6596                           	line	557
  6597                           	global	__size_of_Sensor_setActive
  6598                           	__size_of_Sensor_setActive	equ	__end_of_Sensor_setActive-_Sensor_setActive
  6599  0008                     	
  6600                           _Sensor_setActive:	
  6601  0000'                    ;incstack = 0
  6602                           	opt	stack 7
  6603                           ; Regs used in _Sensor_setActive: [wreg+fsr1l+fsr1h+status,2+status,0]
  6604                           ;Sensor_setActive@sensor stored from wreg
  6605                           	movlb 0	; select bank0
  6606  0000' 0020               	movwf	(Sensor_setActive@sensor)
  6607  0001' 0080'              	line	559
  6608                           	
  6609                           l1841:	
  6610  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 557: static __attribute__((inline)) void Se
                                 nsor_setActive(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 558:
                                  {;mcc_generated_files/mtouch/mtouch_sensor.c: 559:     sensor->acitve = 1;
  6611                           	movf	(Sensor_setActive@sensor),w
  6612  0002' 0800'              	addlw	08h
  6613  0003' 3E08               	movwf	fsr1l
  6614  0004' 0086               	clrf fsr1h	
  6615  0005' 0187               	
  6616                           	bsf	indf1,2
  6617  0006' 1501               	line	560
  6618                           	
  6619                           l339:	
  6620  0007'                    	return
  6621  0007' 0008               	opt stack 0
  6622                           GLOBAL	__end_of_Sensor_setActive
  6623                           	__end_of_Sensor_setActive:
  6624  0008'                    	signat	_Sensor_setActive,4217
  6625                           	global	_Sensor_isEnabled
  6626                           	global	_Sensor_Acq_ExecutePacket
  6627                           
  6628 ;; *************** function _Sensor_Acq_ExecutePacket *****************
  6629 ;; Defined at:
  6630 ;;		line 290 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  sensor          1    wreg     PTR struct .
  6633 ;;		 -> mtouch_sensor(9), 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  sensor          1    4[BANK0 ] PTR struct .
  6636 ;;		 -> mtouch_sensor(9), 
  6637 ;;  error           1    3[BANK0 ] enum E2112
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      enum E2112
  6640 ;; Registers used:
  6641 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6647 ;;      Params:         0       0       0       0
  6648 ;;      Locals:         0       2       0       0
  6649 ;;      Temps:          0       1       0       0
  6650 ;;      Totals:         0       3       0       0
  6651 ;;Total ram usage:        3 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    5
  6654 ;; This function calls:
  6655 ;;		_MTOUCH_Sensor_Scan_Initialize
  6656 ;;		_Sensor_setScanFunction
  6657 ;;		_TMR2_LoadPeriodRegister
  6658 ;;		_TMR2_SetInterruptHandler
  6659 ;;		_TMR2_StartTimer
  6660 ;;		_TMR2_StopTimer
  6661 ;; This function is called by:
  6662 ;;		_Sensor_Acquisition
  6663 ;;		_Sensor_Scanfrequency_Evaluation
  6664 ;; This function uses a non-reentrant model
  6665 ;;
  6666                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  6667                           	line	290
  6668                           global __ptext26
  6669                           __ptext26:	;psect for function _Sensor_Acq_ExecutePacket
  6670  0000'                    psect	text26
  6671                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  6672                           	line	290
  6673                           	global	__size_of_Sensor_Acq_ExecutePacket
  6674                           	__size_of_Sensor_Acq_ExecutePacket	equ	__end_of_Sensor_Acq_ExecutePacket-_Sensor_Acq_Ex
                                 ecutePacket
  6675  005F                     	
  6676                           _Sensor_Acq_ExecutePacket:	
  6677  0000'                    ;incstack = 0
  6678                           	opt	stack 6
  6679                           ; Regs used in _Sensor_Acq_ExecutePacket: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  6680                           ;Sensor_Acq_ExecutePacket@sensor stored from wreg
  6681                           	movlb 0	; select bank0
  6682  0000' 0020               	movwf	(Sensor_Acq_ExecutePacket@sensor)
  6683  0001' 0084'              	line	293
  6684                           	
  6685                           l1797:	
  6686  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 290: static enum mtouch_sensor_error Sensor
                                 _Acq_ExecutePacket(mtouch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 291: {;mcc_generated_files/mtouch/mtouch_sensor.c: 293:     if(!(INTCONbits.GIE & INTCON
                                 bits.PEIE))
  6687                           	swapf	(11),w	;volatile
  6688  0002' 0E0B               	rrf	wreg,f
  6689  0003' 0C89               	rrf	wreg,f
  6690  0004' 0C89               	andlw	(1<<1)-1
  6691  0005' 3901               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6692  0006' 0082'              	rlf	(11),w	;volatile
  6693  0007' 0D0B               	rlf	(11),w	;volatile
  6694  0008' 0D0B               	andlw	1
  6695  0009' 3901               	andwf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6696  000A' 0502'              	btfss	status,2
  6697  000B' 1D03               	goto	u951
  6698  000C' 280E'              	goto	u950
  6699  000D' 280F'              u951:
  6700  000E'                    	goto	l1803
  6701  000E' 2812'              u950:
  6702  000F'                    	line	294
  6703                           	
  6704                           l1799:	
  6705  000F'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 294:         return MTOUCH_SENSOR_ERROR_int
                                 errupt_notEnabled;
  6706                           	movlw	low(-2)
  6707  000F' 30FE               	goto	l277
  6708  0010' 285E'              	
  6709                           l1801:	
  6710  0011'                    	goto	l277
  6711  0011' 285E'              	
  6712                           l276:	
  6713  0012'                    	line	296
  6714                           	
  6715                           l1803:	
  6716  0012'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 296:     enum mtouch_sensor_error error = M
                                 TOUCH_SENSOR_ERROR_none;
  6717                           	clrf	(Sensor_Acq_ExecutePacket@error)
  6718  0012' 0183'              	line	305
  6719                           	
  6720                           l1805:	
  6721  0013'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 305:     MTOUCH_Sensor_Scan_Initialize();
  6722                           	fcall	_MTOUCH_Sensor_Scan_Initialize
  6723  0013' 3180' 2000' 3180'  	line	308
  6724                           	
  6725                           l1807:	
  6726  0016'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 308:     Sensor_setScanFunction(sensor);
  6727                           	movlb 0	; select bank0
  6728  0016' 0020               	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6729  0017' 0804'              	fcall	_Sensor_setScanFunction
  6730  0018' 3180' 2000' 3180'  	line	310
  6731                           	
  6732                           l1809:	
  6733  001B'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 310:     currentScannSensor = sensor->senso
                                 r_name;
  6734                           	movlb 0	; select bank0
  6735  001B' 0020               	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6736  001C' 0804'              	movwf	fsr1l
  6737  001D' 0086               	clrf fsr1h	
  6738  001E' 0187               	
  6739                           	movf	indf1,w
  6740  001F' 0801               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6741  0020' 0082'              	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6742  0021' 0802'              	movwf	(_currentScannSensor)
  6743  0022' 0085'              	line	311
  6744                           	
  6745                           l1811:	
  6746  0023'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 311:     packet_counter = sensor->oversampl
                                 ing;
  6747                           	movf	(Sensor_Acq_ExecutePacket@sensor),w
  6748  0023' 0804'              	movwf	fsr1l
  6749  0024' 0086               	clrf fsr1h	
  6750  0025' 0187               	
  6751                           	moviw	[05h]fsr1
  6752  0026' 3F45               	movwf	(_packet_counter)
  6753  0027' 0084'              	line	312
  6754                           	
  6755                           l1813:	
  6756  0028'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 312:     packet_sample = 0;
  6757                           	clrf	(_packet_sample)
  6758  0028' 0184'              	clrf	(_packet_sample+1)
  6759  0029' 0185'              	line	313
  6760                           	
  6761                           l1815:	
  6762  002A'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 313:     sensor_globalFlags.packet_done = 0
                                 ;
  6763                           	bcf	(_sensor_globalFlags),0	;volatile
  6764  002A' 1006'              	line	314
  6765                           	
  6766                           l1817:	
  6767  002B'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 314:     packet_noise = 0;
  6768                           	clrf	(_packet_noise)
  6769  002B' 0180'              	clrf	(_packet_noise+1)
  6770  002C' 0181'              	line	316
  6771                           	
  6772                           l1819:	
  6773  002D'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 316:     TMR2_SetInterruptHandler(Sensor_Ac
                                 q_ExecuteScan);
  6774                           	movlw	low(_Sensor_Acq_ExecuteScan)
  6775  002D' 3000'              	movwf	(TMR2_SetInterruptHandler@InterruptHandler)
  6776  002E' 0080'              	movlw	high(_Sensor_Acq_ExecuteScan)
  6777  002F' 3000'              	movwf	((TMR2_SetInterruptHandler@InterruptHandler))+1
  6778  0030' 0081'              	fcall	_TMR2_SetInterruptHandler
  6779  0031' 3180' 2000' 3180'  	line	317
  6780                           	
  6781                           l1821:	
  6782  0034'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 317:     TMR2_LoadPeriodRegister(sample_per
                                 iod);
  6783                           	movlb 0	; select bank0
  6784  0034' 0020               	movf	(_sample_period),w
  6785  0035' 0810'              	fcall	_TMR2_LoadPeriodRegister
  6786  0036' 3180' 2000' 3180'  	line	318
  6787                           	
  6788                           l1823:	
  6789  0039'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 318:     TMR2_StartTimer();
  6790                           	fcall	_TMR2_StartTimer
  6791  0039' 3180' 2000' 3180'  	line	320
  6792                           	
  6793                           l1825:	
  6794  003C'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 320:     sensor_globalFlags.interrupted = 0
                                 ;
  6795                           	movlb 0	; select bank0
  6796  003C' 0020               	bcf	(_sensor_globalFlags),1	;volatile
  6797  003D' 1086'              	goto	l279
  6798  003E' 2846'              	line	323
  6799                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 323:     do
  6800                           	
  6801                           l278:	
  6802  003F'                    	line	325
  6803                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 324:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 325:         while(PIR1bits.ADIF == 0)
  6804                           	goto	l279
  6805  003F' 2846'              	
  6806                           l280:	
  6807  0040'                    	line	327
  6808                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 326:         {;mcc_generated_files/mtouch/m
                                 touch_sensor.c: 327:             if(sensor_globalFlags.packet_done == (uint8_t)1)
  6809                           	btfss	(_sensor_globalFlags),0	;volatile
  6810  0040' 1C06'              	goto	u961
  6811  0041' 2843'              	goto	u960
  6812  0042' 2844'              u961:
  6813  0043'                    	goto	l279
  6814  0043' 2846'              u960:
  6815  0044'                    	goto	l282
  6816  0044' 284A'              	line	328
  6817                           	
  6818                           l1827:	
  6819  0045'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 328:                 break;
  6820                           	goto	l282
  6821  0045' 284A'              	
  6822                           l281:	
  6823  0046'                    	line	329
  6824                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 329:         }
  6825                           	
  6826                           l279:	
  6827  0046'                    	line	325
  6828                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 325:         while(PIR1bits.ADIF == 0)
  6829                           	btfss	(17),6	;volatile
  6830  0046' 1F11               	goto	u971
  6831  0047' 2849'              	goto	u970
  6832  0048' 284A'              u971:
  6833  0049'                    	goto	l280
  6834  0049' 2840'              u970:
  6835  004A'                    	
  6836                           l282:	
  6837  004A'                    	line	330
  6838                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 330:         PIR1bits.ADIF = 0;
  6839                           	bcf	(17),6	;volatile
  6840  004A' 1311               	line	331
  6841                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 331:     } while(sensor_globalFlags.packet_
                                 done == 0);
  6842                           	btfss	(_sensor_globalFlags),0	;volatile
  6843  004B' 1C06'              	goto	u981
  6844  004C' 284E'              	goto	u980
  6845  004D' 284F'              u981:
  6846  004E'                    	goto	l279
  6847  004E' 2846'              u980:
  6848  004F'                    	goto	l1829
  6849  004F' 2850'              	
  6850                           l283:	
  6851  0050'                    	line	334
  6852                           	
  6853                           l1829:	
  6854  0050'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 334:     TMR2_StopTimer();
  6855                           	fcall	_TMR2_StopTimer
  6856  0050' 3180' 2000' 3180'  	line	340
  6857                           	
  6858                           l1831:	
  6859  0053'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 340:     if(sensor_globalFlags.interrupted)
                                 
  6860                           	movlb 0	; select bank0
  6861  0053' 0020               	btfss	(_sensor_globalFlags),1	;volatile
  6862  0054' 1C86'              	goto	u991
  6863  0055' 2857'              	goto	u990
  6864  0056' 2858'              u991:
  6865  0057'                    	goto	l284
  6866  0057' 285C'              u990:
  6867  0058'                    	line	342
  6868                           	
  6869                           l1833:	
  6870  0058'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 341:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 342:         error = MTOUCH_SENSOR_ERROR_interruptedScan;
  6871                           	movlw	low(-6)
  6872  0058' 30FA               	movwf	(??_Sensor_Acq_ExecutePacket+0)+0
  6873  0059' 0082'              	movf	(??_Sensor_Acq_ExecutePacket+0)+0,w
  6874  005A' 0802'              	movwf	(Sensor_Acq_ExecutePacket@error)
  6875  005B' 0083'              	line	343
  6876                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 343:     }
  6877                           	
  6878                           l284:	
  6879  005C'                    	line	345
  6880                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 345:     return error;
  6881                           	movf	(Sensor_Acq_ExecutePacket@error),w
  6882  005C' 0803'              	goto	l277
  6883  005D' 285E'              	
  6884                           l1835:	
  6885  005E'                    	line	346
  6886                           	
  6887                           l277:	
  6888  005E'                    	return
  6889  005E' 0008               	opt stack 0
  6890                           GLOBAL	__end_of_Sensor_Acq_ExecutePacket
  6891                           	__end_of_Sensor_Acq_ExecutePacket:
  6892  005F'                    	signat	_Sensor_Acq_ExecutePacket,4217
  6893                           	global	_TMR2_StopTimer
  6894                           
  6895 ;; *************** function _TMR2_StopTimer *****************
  6896 ;; Defined at:
  6897 ;;		line 93 in file "mcc_generated_files/tmr2.c"
  6898 ;; Parameters:    Size  Location     Type
  6899 ;;		None
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;		None
  6902 ;; Return value:  Size  Location     Type
  6903 ;;                  1    wreg      void 
  6904 ;; Registers used:
  6905 ;;		None
  6906 ;; Tracked objects:
  6907 ;;		On entry : 0/0
  6908 ;;		On exit  : 0/0
  6909 ;;		Unchanged: 0/0
  6910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6911 ;;      Params:         0       0       0       0
  6912 ;;      Locals:         0       0       0       0
  6913 ;;      Temps:          0       0       0       0
  6914 ;;      Totals:         0       0       0       0
  6915 ;;Total ram usage:        0 bytes
  6916 ;; Hardware stack levels used:    1
  6917 ;; Hardware stack levels required when called:    4
  6918 ;; This function calls:
  6919 ;;		Nothing
  6920 ;; This function is called by:
  6921 ;;		_Sensor_Acq_ExecutePacket
  6922 ;; This function uses a non-reentrant model
  6923 ;;
  6924                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  6925                           	file	"mcc_generated_files/tmr2.c"
  6926                           	line	93
  6927                           global __ptext27
  6928                           __ptext27:	;psect for function _TMR2_StopTimer
  6929  0000'                    psect	text27
  6930                           	file	"mcc_generated_files/tmr2.c"
  6931                           	line	93
  6932                           	global	__size_of_TMR2_StopTimer
  6933                           	__size_of_TMR2_StopTimer	equ	__end_of_TMR2_StopTimer-_TMR2_StopTimer
  6934  0003                     	
  6935                           _TMR2_StopTimer:	
  6936  0000'                    ;incstack = 0
  6937                           	opt	stack 6
  6938                           ; Regs used in _TMR2_StopTimer: []
  6939                           	line	96
  6940                           	
  6941                           l1769:	
  6942  0000'                    ;mcc_generated_files/tmr2.c: 96:     T2CONbits.TMR2ON = 0;
  6943                           	movlb 0	; select bank0
  6944  0000' 0020               	bcf	(28),2	;volatile
  6945  0001' 111C               	line	97
  6946                           	
  6947                           l61:	
  6948  0002'                    	return
  6949  0002' 0008               	opt stack 0
  6950                           GLOBAL	__end_of_TMR2_StopTimer
  6951                           	__end_of_TMR2_StopTimer:
  6952  0003'                    	signat	_TMR2_StopTimer,89
  6953                           	global	_TMR2_StartTimer
  6954                           
  6955 ;; *************** function _TMR2_StartTimer *****************
  6956 ;; Defined at:
  6957 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;		None
  6960 ;; Auto vars:     Size  Location     Type
  6961 ;;		None
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      void 
  6964 ;; Registers used:
  6965 ;;		None
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6971 ;;      Params:         0       0       0       0
  6972 ;;      Locals:         0       0       0       0
  6973 ;;      Temps:          0       0       0       0
  6974 ;;      Totals:         0       0       0       0
  6975 ;;Total ram usage:        0 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    4
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_Sensor_Acq_ExecutePacket
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  6985                           	line	87
  6986                           global __ptext28
  6987                           __ptext28:	;psect for function _TMR2_StartTimer
  6988  0000'                    psect	text28
  6989                           	file	"mcc_generated_files/tmr2.c"
  6990                           	line	87
  6991                           	global	__size_of_TMR2_StartTimer
  6992                           	__size_of_TMR2_StartTimer	equ	__end_of_TMR2_StartTimer-_TMR2_StartTimer
  6993  0003                     	
  6994                           _TMR2_StartTimer:	
  6995  0000'                    ;incstack = 0
  6996                           	opt	stack 6
  6997                           ; Regs used in _TMR2_StartTimer: []
  6998                           	line	90
  6999                           	
  7000                           l1767:	
  7001  0000'                    ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  7002                           	movlb 0	; select bank0
  7003  0000' 0020               	bsf	(28),2	;volatile
  7004  0001' 151C               	line	91
  7005                           	
  7006                           l58:	
  7007  0002'                    	return
  7008  0002' 0008               	opt stack 0
  7009                           GLOBAL	__end_of_TMR2_StartTimer
  7010                           	__end_of_TMR2_StartTimer:
  7011  0003'                    	signat	_TMR2_StartTimer,89
  7012                           	global	_TMR2_SetInterruptHandler
  7013                           
  7014 ;; *************** function _TMR2_SetInterruptHandler *****************
  7015 ;; Defined at:
  7016 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  7019 ;;		 -> Sensor_Acq_ExecuteScan(1), TMR2_DefaultInterruptHandler(1), 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1    wreg      void 
  7024 ;; Registers used:
  7025 ;;		wreg
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7031 ;;      Params:         0       2       0       0
  7032 ;;      Locals:         0       0       0       0
  7033 ;;      Temps:          0       0       0       0
  7034 ;;      Totals:         0       2       0       0
  7035 ;;Total ram usage:        2 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:    4
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_TMR2_Initialize
  7042 ;;		_Sensor_Acq_ExecutePacket
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  7046                           	line	132
  7047                           global __ptext29
  7048                           __ptext29:	;psect for function _TMR2_SetInterruptHandler
  7049  0000'                    psect	text29
  7050                           	file	"mcc_generated_files/tmr2.c"
  7051                           	line	132
  7052                           	global	__size_of_TMR2_SetInterruptHandler
  7053                           	__size_of_TMR2_SetInterruptHandler	equ	__end_of_TMR2_SetInterruptHandler-_TMR2_SetInter
                                 ruptHandler
  7054  0006                     	
  7055                           _TMR2_SetInterruptHandler:	
  7056  0000'                    ;incstack = 0
  7057                           	opt	stack 9
  7058                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  7059                           	line	133
  7060                           	
  7061                           l1765:	
  7062  0000'                    ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  7063                           	movlb 0	; select bank0
  7064  0000' 0020               	movf	(TMR2_SetInterruptHandler@InterruptHandler+1),w
  7065  0001' 0801'              	movwf	(_TMR2_InterruptHandler+1)
  7066  0002' 0083'              	movf	(TMR2_SetInterruptHandler@InterruptHandler),w
  7067  0003' 0800'              	movwf	(_TMR2_InterruptHandler)
  7068  0004' 0082'              	line	134
  7069                           	
  7070                           l77:	
  7071  0005'                    	return
  7072  0005' 0008               	opt stack 0
  7073                           GLOBAL	__end_of_TMR2_SetInterruptHandler
  7074                           	__end_of_TMR2_SetInterruptHandler:
  7075  0006'                    	signat	_TMR2_SetInterruptHandler,4217
  7076                           	global	_TMR2_LoadPeriodRegister
  7077                           
  7078 ;; *************** function _TMR2_LoadPeriodRegister *****************
  7079 ;; Defined at:
  7080 ;;		line 114 in file "mcc_generated_files/tmr2.c"
  7081 ;; Parameters:    Size  Location     Type
  7082 ;;  periodVal       1    wreg     unsigned char 
  7083 ;; Auto vars:     Size  Location     Type
  7084 ;;  periodVal       1    0[BANK0 ] unsigned char 
  7085 ;; Return value:  Size  Location     Type
  7086 ;;                  1    wreg      void 
  7087 ;; Registers used:
  7088 ;;		wreg
  7089 ;; Tracked objects:
  7090 ;;		On entry : 0/0
  7091 ;;		On exit  : 0/0
  7092 ;;		Unchanged: 0/0
  7093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7094 ;;      Params:         0       0       0       0
  7095 ;;      Locals:         0       1       0       0
  7096 ;;      Temps:          0       0       0       0
  7097 ;;      Totals:         0       1       0       0
  7098 ;;Total ram usage:        1 bytes
  7099 ;; Hardware stack levels used:    1
  7100 ;; Hardware stack levels required when called:    4
  7101 ;; This function calls:
  7102 ;;		Nothing
  7103 ;; This function is called by:
  7104 ;;		_Sensor_Acq_ExecutePacket
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  7108                           	line	114
  7109                           global __ptext30
  7110                           __ptext30:	;psect for function _TMR2_LoadPeriodRegister
  7111  0000'                    psect	text30
  7112                           	file	"mcc_generated_files/tmr2.c"
  7113                           	line	114
  7114                           	global	__size_of_TMR2_LoadPeriodRegister
  7115                           	__size_of_TMR2_LoadPeriodRegister	equ	__end_of_TMR2_LoadPeriodRegister-_TMR2_LoadPeriod
                                 Register
  7116  0005                     	
  7117                           _TMR2_LoadPeriodRegister:	
  7118  0000'                    ;incstack = 0
  7119                           	opt	stack 6
  7120                           ; Regs used in _TMR2_LoadPeriodRegister: [wreg]
  7121                           ;TMR2_LoadPeriodRegister@periodVal stored from wreg
  7122                           	movlb 0	; select bank0
  7123  0000' 0020               	movwf	(TMR2_LoadPeriodRegister@periodVal)
  7124  0001' 0080'              	line	116
  7125                           	
  7126                           l1771:	
  7127  0002'                    ;mcc_generated_files/tmr2.c: 114: void TMR2_LoadPeriodRegister(uint8_t periodVal);mcc_ge
                                 nerated_files/tmr2.c: 115: {;mcc_generated_files/tmr2.c: 116:    PR2 = periodVal;
  7128                           	movf	(TMR2_LoadPeriodRegister@periodVal),w
  7129  0002' 0800'              	movwf	(27)	;volatile
  7130  0003' 009B               	line	117
  7131                           	
  7132                           l70:	
  7133  0004'                    	return
  7134  0004' 0008               	opt stack 0
  7135                           GLOBAL	__end_of_TMR2_LoadPeriodRegister
  7136                           	__end_of_TMR2_LoadPeriodRegister:
  7137  0005'                    	signat	_TMR2_LoadPeriodRegister,4217
  7138                           	global	_Sensor_setScanFunction
  7139                           
  7140 ;; *************** function _Sensor_setScanFunction *****************
  7141 ;; Defined at:
  7142 ;;		line 508 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7143 ;; Parameters:    Size  Location     Type
  7144 ;;  sensor          1    wreg     PTR struct .
  7145 ;;		 -> mtouch_sensor(9), 
  7146 ;; Auto vars:     Size  Location     Type
  7147 ;;  sensor          1    0[BANK0 ] PTR struct .
  7148 ;;		 -> mtouch_sensor(9), 
  7149 ;; Return value:  Size  Location     Type
  7150 ;;                  1    wreg      void 
  7151 ;; Registers used:
  7152 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7153 ;; Tracked objects:
  7154 ;;		On entry : 0/0
  7155 ;;		On exit  : 0/0
  7156 ;;		Unchanged: 0/0
  7157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7158 ;;      Params:         0       0       0       0
  7159 ;;      Locals:         0       1       0       0
  7160 ;;      Temps:          0       0       0       0
  7161 ;;      Totals:         0       1       0       0
  7162 ;;Total ram usage:        1 bytes
  7163 ;; Hardware stack levels used:    1
  7164 ;; Hardware stack levels required when called:    4
  7165 ;; This function calls:
  7166 ;;		Nothing
  7167 ;; This function is called by:
  7168 ;;		_Sensor_Acq_ExecutePacket
  7169 ;; This function uses a non-reentrant model
  7170 ;;
  7171                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
  7172                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  7173                           	line	508
  7174                           global __ptext31
  7175                           __ptext31:	;psect for function _Sensor_setScanFunction
  7176  0000'                    psect	text31
  7177                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  7178                           	line	508
  7179                           	global	__size_of_Sensor_setScanFunction
  7180                           	__size_of_Sensor_setScanFunction	equ	__end_of_Sensor_setScanFunction-_Sensor_setScanFun
                                 ction
  7181  0012                     	
  7182                           _Sensor_setScanFunction:	
  7183  0000'                    ;incstack = 0
  7184                           	opt	stack 6
  7185                           ; Regs used in _Sensor_setScanFunction: [wreg+fsr1l+fsr1h+status,2+status,0]
  7186                           ;Sensor_setScanFunction@sensor stored from wreg
  7187                           	movlb 0	; select bank0
  7188  0000' 0020               	movwf	(Sensor_setScanFunction@sensor)
  7189  0001' 0080'              	line	510
  7190                           	
  7191                           l1781:	
  7192  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 508: static void Sensor_setScanFunction(mto
                                 uch_sensor_t* sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 509: {;mcc_generated_f
                                 iles/mtouch/mtouch_sensor.c: 510:     Sensor_scanA = sensor->scanA;
  7193                           	incf	(Sensor_setScanFunction@sensor),w
  7194  0002' 0A00'              	movwf	fsr1l
  7195  0003' 0086               	clrf fsr1h	
  7196  0004' 0187               	
  7197                           	moviw	[0]fsr1
  7198  0005' 3F40               	movwf	(_Sensor_scanA)
  7199  0006' 008C'              	moviw	[1]fsr1
  7200  0007' 3F41               	movwf	(_Sensor_scanA+1)
  7201  0008' 008D'              	line	511
  7202                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 511:     Sensor_scanB = sensor->scanB;
  7203                           	movf	(Sensor_setScanFunction@sensor),w
  7204  0009' 0800'              	addlw	03h
  7205  000A' 3E03               	movwf	fsr1l
  7206  000B' 0086               	clrf fsr1h	
  7207  000C' 0187               	
  7208                           	moviw	[0]fsr1
  7209  000D' 3F40               	movwf	(_Sensor_scanB)
  7210  000E' 008A'              	moviw	[1]fsr1
  7211  000F' 3F41               	movwf	(_Sensor_scanB+1)
  7212  0010' 008B'              	line	512
  7213                           	
  7214                           l336:	
  7215  0011'                    	return
  7216  0011' 0008               	opt stack 0
  7217                           GLOBAL	__end_of_Sensor_setScanFunction
  7218                           	__end_of_Sensor_setScanFunction:
  7219  0012'                    	signat	_Sensor_setScanFunction,4217
  7220                           	global	_MTOUCH_Sensor_Scan_Initialize
  7221                           
  7222 ;; *************** function _MTOUCH_Sensor_Scan_Initialize *****************
  7223 ;; Defined at:
  7224 ;;		line 188 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7225 ;; Parameters:    Size  Location     Type
  7226 ;;		None
  7227 ;; Auto vars:     Size  Location     Type
  7228 ;;		None
  7229 ;; Return value:  Size  Location     Type
  7230 ;;                  1    wreg      void 
  7231 ;; Registers used:
  7232 ;;		wreg, status,2, status,0
  7233 ;; Tracked objects:
  7234 ;;		On entry : 0/0
  7235 ;;		On exit  : 0/0
  7236 ;;		Unchanged: 0/0
  7237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7238 ;;      Params:         0       0       0       0
  7239 ;;      Locals:         0       0       0       0
  7240 ;;      Temps:          0       0       0       0
  7241 ;;      Totals:         0       0       0       0
  7242 ;;Total ram usage:        0 bytes
  7243 ;; Hardware stack levels used:    1
  7244 ;; Hardware stack levels required when called:    4
  7245 ;; This function calls:
  7246 ;;		Nothing
  7247 ;; This function is called by:
  7248 ;;		_MTOUCH_Initialize
  7249 ;;		_Sensor_Acq_ExecutePacket
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
  7253                           	line	188
  7254                           global __ptext32
  7255                           __ptext32:	;psect for function _MTOUCH_Sensor_Scan_Initialize
  7256  0000'                    psect	text32
  7257                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  7258                           	line	188
  7259                           	global	__size_of_MTOUCH_Sensor_Scan_Initialize
  7260                           	__size_of_MTOUCH_Sensor_Scan_Initialize	equ	__end_of_MTOUCH_Sensor_Scan_Initialize-_MTO
                                 UCH_Sensor_Scan_Initialize
  7261  0009                     	
  7262                           _MTOUCH_Sensor_Scan_Initialize:	
  7263  0000'                    ;incstack = 0
  7264                           	opt	stack 9
  7265                           ; Regs used in _MTOUCH_Sensor_Scan_Initialize: [wreg+status,2+status,0]
  7266                           	line	190
  7267                           	
  7268                           l1773:	
  7269  0000'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 190:     T2CONbits.T2CKPS = 0x0;
  7270                           	movlw	((0 & ((1<<2)-1))<<0)|not (((1<<2)-1)<<0)
  7271  0000' 30FC               	movlb 0	; select bank0
  7272  0001' 0020               	andwf	(28),f	;volatile
  7273  0002' 059C               	line	192
  7274                           	
  7275                           l1775:	
  7276  0003'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 192:     ADCON0 = (uint8_t)0;
  7277                           	movlb 1	; select bank1
  7278  0003' 0021               	clrf	(157)^080h	;volatile
  7279  0004' 019D               	line	193
  7280                           	
  7281                           l1777:	
  7282  0005'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 193:     ADCON1 = (uint8_t)( 0x1<<7 | 0x2<<
                                 4 | 0x0 );
  7283                           	movlw	low(0A0h)
  7284  0005' 30A0               	movwf	(158)^080h	;volatile
  7285  0006' 009E               	line	194
  7286                           	
  7287                           l1779:	
  7288  0007'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 194:     ADCON2 = (uint8_t)0;
  7289                           	clrf	(159)^080h	;volatile
  7290  0007' 019F               	line	195
  7291                           	
  7292                           l246:	
  7293  0008'                    	return
  7294  0008' 0008               	opt stack 0
  7295                           GLOBAL	__end_of_MTOUCH_Sensor_Scan_Initialize
  7296                           	__end_of_MTOUCH_Sensor_Scan_Initialize:
  7297  0009'                    	signat	_MTOUCH_Sensor_Scan_Initialize,89
  7298                           	global	_MTOUCH_Button_ServiceAll
  7299                           
  7300 ;; *************** function _MTOUCH_Button_ServiceAll *****************
  7301 ;; Defined at:
  7302 ;;		line 159 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;		None
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;  button          1   23[BANK0 ] enum E2303
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      void 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7316 ;;      Params:         0       0       0       0
  7317 ;;      Locals:         0       1       0       0
  7318 ;;      Temps:          0       1       0       0
  7319 ;;      Totals:         0       2       0       0
  7320 ;;Total ram usage:        2 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; Hardware stack levels required when called:    9
  7323 ;; This function calls:
  7324 ;;		_Button_Service
  7325 ;; This function is called by:
  7326 ;;		_MTOUCH_Service_Mainloop
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
  7330                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7331                           	line	159
  7332                           global __ptext33
  7333                           __ptext33:	;psect for function _MTOUCH_Button_ServiceAll
  7334  0000'                    psect	text33
  7335                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7336                           	line	159
  7337                           	global	__size_of_MTOUCH_Button_ServiceAll
  7338                           	__size_of_MTOUCH_Button_ServiceAll	equ	__end_of_MTOUCH_Button_ServiceAll-_MTOUCH_Button
                                 _ServiceAll
  7339  0019                     	
  7340                           _MTOUCH_Button_ServiceAll:	
  7341  0000'                    ;incstack = 0
  7342                           	opt	stack 5
  7343                           ; Regs used in _MTOUCH_Button_ServiceAll: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  7344                           	line	162
  7345                           	
  7346                           l2189:	
  7347  0000'                    ;mcc_generated_files/mtouch/mtouch_button.c: 161:     enum mtouch_button_names button;;m
                                 cc_generated_files/mtouch/mtouch_button.c: 162:     for (button = 0; button < (u_int)1; 
                                 button++)
  7348                           	movlb 0	; select bank0
  7349  0000' 0020               	clrf	(MTOUCH_Button_ServiceAll@button)
  7350  0001' 0197'              	
  7351                           l2191:	
  7352  0002'                    	movf	((MTOUCH_Button_ServiceAll@button)),w
  7353  0002' 0817'              	btfsc	status,2
  7354  0003' 1903               	goto	u1451
  7355  0004' 2806'              	goto	u1450
  7356  0005' 2807'              u1451:
  7357  0006'                    	goto	l2195
  7358  0006' 2809'              u1450:
  7359  0007'                    	goto	l427
  7360  0007' 2818'              	
  7361                           l2193:	
  7362  0008'                    	goto	l427
  7363  0008' 2818'              	
  7364                           l425:	
  7365  0009'                    	line	164
  7366                           	
  7367                           l2195:	
  7368  0009'                    ;mcc_generated_files/mtouch/mtouch_button.c: 163:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 164:         Button_Service(button);
  7369                           	movf	(MTOUCH_Button_ServiceAll@button),w
  7370  0009' 0817'              	fcall	_Button_Service
  7371  000A' 3180' 2000' 3180'  	line	165
  7372                           	
  7373                           l2197:	
  7374  000D'                    ;mcc_generated_files/mtouch/mtouch_button.c: 165:     }
  7375                           	movlw	low(01h)
  7376  000D' 3001               	movlb 0	; select bank0
  7377  000E' 0020               	movwf	(??_MTOUCH_Button_ServiceAll+0)+0
  7378  000F' 0096'              	movf	(??_MTOUCH_Button_ServiceAll+0)+0,w
  7379  0010' 0816'              	addwf	(MTOUCH_Button_ServiceAll@button),f
  7380  0011' 0797'              	
  7381                           l2199:	
  7382  0012'                    	movf	((MTOUCH_Button_ServiceAll@button)),w
  7383  0012' 0817'              	btfsc	status,2
  7384  0013' 1903               	goto	u1461
  7385  0014' 2816'              	goto	u1460
  7386  0015' 2817'              u1461:
  7387  0016'                    	goto	l2195
  7388  0016' 2809'              u1460:
  7389  0017'                    	goto	l427
  7390  0017' 2818'              	
  7391                           l426:	
  7392  0018'                    	line	166
  7393                           	
  7394                           l427:	
  7395  0018'                    	return
  7396  0018' 0008               	opt stack 0
  7397                           GLOBAL	__end_of_MTOUCH_Button_ServiceAll
  7398                           	__end_of_MTOUCH_Button_ServiceAll:
  7399  0019'                    	signat	_MTOUCH_Button_ServiceAll,89
  7400                           	global	_Button_Service
  7401                           
  7402 ;; *************** function _Button_Service *****************
  7403 ;; Defined at:
  7404 ;;		line 168 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7405 ;; Parameters:    Size  Location     Type
  7406 ;;  name            1    wreg     enum E2303
  7407 ;; Auto vars:     Size  Location     Type
  7408 ;;  name            1   20[BANK0 ] enum E2303
  7409 ;;  button          1   21[BANK0 ] PTR struct .
  7410 ;;		 -> mtouch_button(16), 
  7411 ;; Return value:  Size  Location     Type
  7412 ;;                  1    wreg      void 
  7413 ;; Registers used:
  7414 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7415 ;; Tracked objects:
  7416 ;;		On entry : 0/0
  7417 ;;		On exit  : 0/0
  7418 ;;		Unchanged: 0/0
  7419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7420 ;;      Params:         0       0       0       0
  7421 ;;      Locals:         0       2       0       0
  7422 ;;      Temps:          0       2       0       0
  7423 ;;      Totals:         0       4       0       0
  7424 ;;Total ram usage:        4 bytes
  7425 ;; Hardware stack levels used:    1
  7426 ;; Hardware stack levels required when called:    8
  7427 ;; This function calls:
  7428 ;;		_Button_Deviation_Update
  7429 ;;		_Button_Reading_Update
  7430 ;;		_Button_State_Initializing
  7431 ;;		_Button_State_NotPressed
  7432 ;;		_Button_State_Pressed
  7433 ;;		_MTOUCH_Button_Initialize
  7434 ;;		_MTOUCH_Sensor_isCalibrated
  7435 ;;		_MTOUCH_Sensor_wasSampled
  7436 ;; This function is called by:
  7437 ;;		_MTOUCH_Button_ServiceAll
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
  7441                           	line	168
  7442                           global __ptext34
  7443                           __ptext34:	;psect for function _Button_Service
  7444  0000'                    psect	text34
  7445                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7446                           	line	168
  7447                           	global	__size_of_Button_Service
  7448                           	__size_of_Button_Service	equ	__end_of_Button_Service-_Button_Service
  7449  0057                     	
  7450                           _Button_Service:	
  7451  0000'                    ;incstack = 0
  7452                           	opt	stack 5
  7453                           ; Regs used in _Button_Service: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7454                           ;Button_Service@name stored from wreg
  7455                           	movlb 0	; select bank0
  7456  0000' 0020               	movwf	(Button_Service@name)
  7457  0001' 0094'              	line	170
  7458                           	
  7459                           l2099:	
  7460  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 168: static void Button_Service(enum mtouch
                                 _button_names name);mcc_generated_files/mtouch/mtouch_button.c: 169: {;mcc_generated_fil
                                 es/mtouch/mtouch_button.c: 170:     mtouch_button_t* button = &mtouch_button[name];
  7461                           	movf	(Button_Service@name),w
  7462  0002' 0814'              	movwf	(??_Button_Service+0)+0
  7463  0003' 0092'              	movlw	(04h)-1
  7464  0004' 3003               u1345:
  7465  0005'                    	lslf	(??_Button_Service+0)+0,f
  7466  0005' 3592'              	addlw	-1
  7467  0006' 3EFF               	skipz
  7468  0007' 1D03               	goto	u1345
  7469  0008' 2805'              	lslf	(??_Button_Service+0)+0,w
  7470  0009' 3512'              	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  7471  000A' 3E00'              	movwf	(??_Button_Service+1)+0
  7472  000B' 0093'              	movf	(??_Button_Service+1)+0,w
  7473  000C' 0813'              	movwf	(Button_Service@button)
  7474  000D' 0095'              	line	172
  7475                           	
  7476                           l2101:	
  7477  000E'                    ;mcc_generated_files/mtouch/mtouch_button.c: 172:     if (MTOUCH_Sensor_wasSampled(butto
                                 n->sensor) && MTOUCH_Sensor_isCalibrated(button->sensor))
  7478                           	incf	(Button_Service@button),w
  7479  000E' 0A15'              	movwf	fsr1l
  7480  000F' 0086               	clrf fsr1h	
  7481  0010' 0187               	
  7482                           	movf	indf1,w
  7483  0011' 0801               	fcall	_MTOUCH_Sensor_wasSampled
  7484  0012' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  7485  0015' 3A00               	skipnz
  7486  0016' 1903               	goto	u1351
  7487  0017' 2819'              	goto	u1350
  7488  0018' 281A'              u1351:
  7489  0019'                    	goto	l432
  7490  0019' 2856'              u1350:
  7491  001A'                    	
  7492                           l2103:	
  7493  001A'                    	movlb 0	; select bank0
  7494  001A' 0020               	incf	(Button_Service@button),w
  7495  001B' 0A15'              	movwf	fsr1l
  7496  001C' 0086               	clrf fsr1h	
  7497  001D' 0187               	
  7498                           	movf	indf1,w
  7499  001E' 0801               	fcall	_MTOUCH_Sensor_isCalibrated
  7500  001F' 3180' 2000' 3180'  	xorlw	low(0)&0ffh
  7501  0022' 3A00               	skipnz
  7502  0023' 1903               	goto	u1361
  7503  0024' 2826'              	goto	u1360
  7504  0025' 2827'              u1361:
  7505  0026'                    	goto	l432
  7506  0026' 2856'              u1360:
  7507  0027'                    	line	174
  7508                           	
  7509                           l2105:	
  7510  0027'                    ;mcc_generated_files/mtouch/mtouch_button.c: 173:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 174:         Button_Reading_Update(button);
  7511                           	movlb 0	; select bank0
  7512  0027' 0020               	movf	(Button_Service@button),w
  7513  0028' 0815'              	fcall	_Button_Reading_Update
  7514  0029' 3180' 2000' 3180'  	line	175
  7515                           ;mcc_generated_files/mtouch/mtouch_button.c: 175:         Button_Deviation_Update(button
                                 );
  7516                           	movlb 0	; select bank0
  7517  002C' 0020               	movf	(Button_Service@button),w
  7518  002D' 0815'              	fcall	_Button_Deviation_Update
  7519  002E' 3180' 2000' 3180'  	line	177
  7520                           	
  7521                           l2107:	
  7522  0031'                    ;mcc_generated_files/mtouch/mtouch_button.c: 177:         if (button->state >= (uint8_t)
                                 (sizeof(Button_StateMachine)/sizeof(button_statemachine_state_t)))
  7523                           	movlb 0	; select bank0
  7524  0031' 0020               	movf	(Button_Service@button),w
  7525  0032' 0815'              	addlw	02h
  7526  0033' 3E02               	movwf	fsr1l
  7527  0034' 0086               	clrf fsr1h	
  7528  0035' 0187               	
  7529                           	movlw	low(03h)
  7530  0036' 3003               	subwf	indf1,w
  7531  0037' 0201               	skipc
  7532  0038' 1C03               	goto	u1371
  7533  0039' 283B'              	goto	u1370
  7534  003A' 283C'              u1371:
  7535  003B'                    	goto	l431
  7536  003B' 2843'              u1370:
  7537  003C'                    	line	179
  7538                           	
  7539                           l2109:	
  7540  003C'                    ;mcc_generated_files/mtouch/mtouch_button.c: 178:         {;mcc_generated_files/mtouch/m
                                 touch_button.c: 179:             MTOUCH_Button_Initialize(button->name);
  7541                           	movf	(Button_Service@button),w
  7542  003C' 0815'              	movwf	fsr1l
  7543  003D' 0086               	clrf fsr1h	
  7544  003E' 0187               	
  7545                           	movf	indf1,w
  7546  003F' 0801               	fcall	_MTOUCH_Button_Initialize
  7547  0040' 3180' 2000' 3180'  	line	180
  7548                           ;mcc_generated_files/mtouch/mtouch_button.c: 180:         }
  7549                           	
  7550                           l431:	
  7551  0043'                    	line	181
  7552                           ;mcc_generated_files/mtouch/mtouch_button.c: 181:         Button_StateMachine[button->st
                                 ate](button);
  7553                           	movlb 0	; select bank0
  7554  0043' 0020               	movf	(Button_Service@button),w
  7555  0044' 0815'              	movwf	(??_Button_Service+0)+0
  7556  0045' 0092'              	movf	(??_Button_Service+0)+0,w
  7557  0046' 0812'              	movwf	(Button_State_Pressed@button)
  7558  0047' 008D'              	movf	(Button_Service@button),w
  7559  0048' 0815'              	addlw	02h
  7560  0049' 3E02               	movwf	fsr1l
  7561  004A' 0086               	clrf fsr1h	
  7562  004B' 0187               	
  7563                           	lslf	indf1,w
  7564  004C' 3501               	addlw	low(_Button_StateMachine|((0x0)<<8))&0ffh
  7565  004D' 3E00'              	movwf	fsr1l
  7566  004E' 0086               	clrf fsr1h	
  7567  004F' 0187               	
  7568                           	moviw	[1]fsr1
  7569  0050' 3F41               	movwf	pclath
  7570  0051' 008A               	moviw	[0]fsr1
  7571  0052' 3F40               	callw
  7572  0053' 000A               	pagesel	$
  7573  0054' 3180'              	goto	l432
  7574  0055' 2856'              	line	182
  7575                           ;mcc_generated_files/mtouch/mtouch_button.c: 182:     }
  7576                           	
  7577                           l430:	
  7578  0056'                    	line	183
  7579                           	
  7580                           l432:	
  7581  0056'                    	return
  7582  0056' 0008               	opt stack 0
  7583                           GLOBAL	__end_of_Button_Service
  7584                           	__end_of_Button_Service:
  7585  0057'                    	signat	_Button_Service,4217
  7586                           	global	_MTOUCH_Sensor_wasSampled
  7587                           
  7588 ;; *************** function _MTOUCH_Sensor_wasSampled *****************
  7589 ;; Defined at:
  7590 ;;		line 603 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7591 ;; Parameters:    Size  Location     Type
  7592 ;;  sensor          1    wreg     enum E2110
  7593 ;; Auto vars:     Size  Location     Type
  7594 ;;  sensor          1    5[BANK0 ] enum E2110
  7595 ;; Return value:  Size  Location     Type
  7596 ;;                  1    wreg      _Bool 
  7597 ;; Registers used:
  7598 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7599 ;; Tracked objects:
  7600 ;;		On entry : 0/0
  7601 ;;		On exit  : 0/0
  7602 ;;		Unchanged: 0/0
  7603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7604 ;;      Params:         0       0       0       0
  7605 ;;      Locals:         0       1       0       0
  7606 ;;      Temps:          0       1       0       0
  7607 ;;      Totals:         0       2       0       0
  7608 ;;Total ram usage:        2 bytes
  7609 ;; Hardware stack levels used:    1
  7610 ;; Hardware stack levels required when called:    5
  7611 ;; This function calls:
  7612 ;;		___bmul
  7613 ;; This function is called by:
  7614 ;;		_Button_Service
  7615 ;; This function uses a non-reentrant model
  7616 ;;
  7617                           psect	text35,local,class=CODE,delta=2,merge=1,group=0
  7618                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  7619                           	line	603
  7620                           global __ptext35
  7621                           __ptext35:	;psect for function _MTOUCH_Sensor_wasSampled
  7622  0000'                    psect	text35
  7623                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  7624                           	line	603
  7625                           	global	__size_of_MTOUCH_Sensor_wasSampled
  7626                           	__size_of_MTOUCH_Sensor_wasSampled	equ	__end_of_MTOUCH_Sensor_wasSampled-_MTOUCH_Sensor
                                 _wasSampled
  7627  0012                     	
  7628                           _MTOUCH_Sensor_wasSampled:	
  7629  0000'                    ;incstack = 0
  7630                           	opt	stack 7
  7631                           ; Regs used in _MTOUCH_Sensor_wasSampled: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  7632                           ;MTOUCH_Sensor_wasSampled@sensor stored from wreg
  7633                           	movlb 0	; select bank0
  7634  0000' 0020               	movwf	(MTOUCH_Sensor_wasSampled@sensor)
  7635  0001' 0085'              	line	606
  7636                           	
  7637                           l1931:	
  7638  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 603: _Bool MTOUCH_Sensor_wasSampled(enum mt
                                 ouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 604: {;mcc_generat
                                 ed_files/mtouch/mtouch_sensor.c: 606:         return (_Bool)mtouch_sensor[sensor].sample
                                 d;
  7639                           	movlw	low(09h)
  7640  0002' 3009               	movwf	(??_MTOUCH_Sensor_wasSampled+0)+0
  7641  0003' 0084'              	movf	(??_MTOUCH_Sensor_wasSampled+0)+0,w
  7642  0004' 0804'              	movwf	(___bmul@multiplicand)
  7643  0005' 0080'              	movf	(MTOUCH_Sensor_wasSampled@sensor),w
  7644  0006' 0805'              	fcall	___bmul
  7645  0007' 3180' 2000' 3180'  	addlw	08h
  7646  000A' 3E08               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  7647  000B' 3E00'              	movwf	fsr1l
  7648  000C' 0086               	clrf fsr1h	
  7649  000D' 0187               	
  7650                           	rrf	indf1,w
  7651  000E' 0C01               	andlw	(1<<1)-1
  7652  000F' 3901               	goto	l356
  7653  0010' 2811'              	
  7654                           l1933:	
  7655  0011'                    	line	609
  7656                           	
  7657                           l356:	
  7658  0011'                    	return
  7659  0011' 0008               	opt stack 0
  7660                           GLOBAL	__end_of_MTOUCH_Sensor_wasSampled
  7661                           	__end_of_MTOUCH_Sensor_wasSampled:
  7662  0012'                    	signat	_MTOUCH_Sensor_wasSampled,4217
  7663                           	global	_MTOUCH_Sensor_isCalibrated
  7664                           
  7665 ;; *************** function _MTOUCH_Sensor_isCalibrated *****************
  7666 ;; Defined at:
  7667 ;;		line 576 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  sensor          1    wreg     enum E2110
  7670 ;; Auto vars:     Size  Location     Type
  7671 ;;  sensor          1    0[COMMON] enum E2110
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  1    wreg      _Bool 
  7674 ;; Registers used:
  7675 ;;		wreg
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7681 ;;      Params:         0       0       0       0
  7682 ;;      Locals:         0       0       0       0
  7683 ;;      Temps:          0       0       0       0
  7684 ;;      Totals:         0       0       0       0
  7685 ;;Total ram usage:        0 bytes
  7686 ;; Hardware stack levels used:    1
  7687 ;; Hardware stack levels required when called:    4
  7688 ;; This function calls:
  7689 ;;		Nothing
  7690 ;; This function is called by:
  7691 ;;		_Button_Service
  7692 ;; This function uses a non-reentrant model
  7693 ;;
  7694                           psect	text36,local,class=CODE,delta=2,merge=1,group=0
  7695                           	line	576
  7696                           global __ptext36
  7697                           __ptext36:	;psect for function _MTOUCH_Sensor_isCalibrated
  7698  0000'                    psect	text36
  7699                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  7700                           	line	576
  7701                           	global	__size_of_MTOUCH_Sensor_isCalibrated
  7702                           	__size_of_MTOUCH_Sensor_isCalibrated	equ	__end_of_MTOUCH_Sensor_isCalibrated-_MTOUCH_Se
                                 nsor_isCalibrated
  7703  0003                     	
  7704                           _MTOUCH_Sensor_isCalibrated:	
  7705  0000'                    ;incstack = 0
  7706                           	opt	stack 8
  7707                           ; Regs used in _MTOUCH_Sensor_isCalibrated: [wreg]
  7708                           	line	579
  7709                           	
  7710                           l1927:	
  7711  0000'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 576: _Bool MTOUCH_Sensor_isCalibrated(enum 
                                 mtouch_sensor_names sensor);mcc_generated_files/mtouch/mtouch_sensor.c: 577: {;mcc_gener
                                 ated_files/mtouch/mtouch_sensor.c: 579:     return 1;
  7712                           	movlw	low(01h)
  7713  0000' 3001               	goto	l345
  7714  0001' 2802'              	
  7715                           l1929:	
  7716  0002'                    	line	580
  7717                           	
  7718                           l345:	
  7719  0002'                    	return
  7720  0002' 0008               	opt stack 0
  7721                           GLOBAL	__end_of_MTOUCH_Sensor_isCalibrated
  7722                           	__end_of_MTOUCH_Sensor_isCalibrated:
  7723  0003'                    	signat	_MTOUCH_Sensor_isCalibrated,4217
  7724                           	global	_Button_State_Pressed
  7725                           	global	_Button_State_Initializing
  7726                           	global	_Button_State_NotPressed
  7727                           
  7728 ;; *************** function _Button_State_NotPressed *****************
  7729 ;; Defined at:
  7730 ;;		line 204 in file "mcc_generated_files/mtouch/mtouch_button.c"
  7731 ;; Parameters:    Size  Location     Type
  7732 ;;  button          1   13[BANK0 ] PTR struct .
  7733 ;;		 -> mtouch_button(16), 
  7734 ;; Auto vars:     Size  Location     Type
  7735 ;;		None
  7736 ;; Return value:  Size  Location     Type
  7737 ;;                  1    wreg      void 
  7738 ;; Registers used:
  7739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7740 ;; Tracked objects:
  7741 ;;		On entry : 0/0
  7742 ;;		On exit  : 0/0
  7743 ;;		Unchanged: 0/0
  7744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7745 ;;      Params:         0       1       0       0
  7746 ;;      Locals:         0       0       0       0
  7747 ;;      Temps:          0       2       0       0
  7748 ;;      Totals:         0       3       0       0
  7749 ;;Total ram usage:        3 bytes
  7750 ;; Hardware stack levels used:    1
  7751 ;; Hardware stack levels required when called:    6
  7752 ;; This function calls:
  7753 ;;		_Button_Baseline_Update
  7754 ;;		_Button_DefaultCallback
  7755 ;;		_MTOUCH_Button_Initialize
  7756 ;; This function is called by:
  7757 ;;		_Button_Service
  7758 ;; This function uses a non-reentrant model
  7759 ;;
  7760                           psect	text37,local,class=CODE,delta=2,merge=1,group=0
  7761                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7762                           	line	204
  7763                           global __ptext37
  7764                           __ptext37:	;psect for function _Button_State_NotPressed
  7765  0000'                    psect	text37
  7766                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  7767                           	line	204
  7768                           	global	__size_of_Button_State_NotPressed
  7769                           	__size_of_Button_State_NotPressed	equ	__end_of_Button_State_NotPressed-_Button_State_No
                                 tPressed
  7770  0096                     	
  7771                           _Button_State_NotPressed:	
  7772  0000'                    ;incstack = 0
  7773                           	opt	stack 6
  7774                           ; Regs used in _Button_State_NotPressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
                                 ck]
  7775                           	line	207
  7776                           	
  7777                           l1985:	
  7778  0000'                    ;mcc_generated_files/mtouch/mtouch_button.c: 204: static void Button_State_NotPressed(mt
                                 ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 205: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 207:     if ((button->deviation) < (mtouch_button_deviatio
                                 n_t)(mtouch_button_deviation_t)-10)
  7779                           	movlb 0	; select bank0
  7780  0000' 0020               	movf	(Button_State_NotPressed@button),w
  7781  0001' 080D'              	addlw	09h
  7782  0002' 3E09               	movwf	fsr1l
  7783  0003' 0086               	clrf fsr1h	
  7784  0004' 0187               	
  7785                           	movf	indf1,w
  7786  0005' 0801               	xorlw	80h
  7787  0006' 3A80               	addlw	-((-10)^80h)
  7788  0007' 3E8A               	skipnc
  7789  0008' 1803               	goto	u1201
  7790  0009' 280B'              	goto	u1200
  7791  000A' 280C'              u1201:
  7792  000B'                    	goto	l1993
  7793  000B' 2836'              u1200:
  7794  000C'                    	line	209
  7795                           	
  7796                           l1987:	
  7797  000C'                    ;mcc_generated_files/mtouch/mtouch_button.c: 208:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 209:         (button->counter)++;
  7798                           	movf	(Button_State_NotPressed@button),w
  7799  000C' 080D'              	addlw	0Ah
  7800  000D' 3E0A               	movwf	fsr1l
  7801  000E' 0086               	clrf fsr1h	
  7802  000F' 0187               	
  7803                           	movlw	01h
  7804  0010' 3001               	addwf	indf1,f
  7805  0011' 0781               	addfsr	fsr1,1
  7806  0012' 3141               	skipnc
  7807  0013' 1803               	incf	indf1,f
  7808  0014' 0A81               	line	210
  7809                           ;mcc_generated_files/mtouch/mtouch_button.c: 210:         if ((button->counter) > (mtouc
                                 h_button_statecounter_t)((mtouch_button_statecounter_t)32))
  7810                           	movf	(Button_State_NotPressed@button),w
  7811  0015' 080D'              	addlw	0Ah
  7812  0016' 3E0A               	movwf	fsr1l
  7813  0017' 0086               	clrf fsr1h	
  7814  0018' 0187               	
  7815                           	moviw	[0]fsr1
  7816  0019' 3F40               	movwf	(??_Button_State_NotPressed+0)+0
  7817  001A' 008E'              	moviw	[1]fsr1
  7818  001B' 3F41               	movwf	(??_Button_State_NotPressed+0)+0+1
  7819  001C' 008F'              	movlw	0
  7820  001D' 3000               	subwf	1+(??_Button_State_NotPressed+0)+0,w
  7821  001E' 020F'              	movlw	021h
  7822  001F' 3021               	skipnz
  7823  0020' 1903               	subwf	0+(??_Button_State_NotPressed+0)+0,w
  7824  0021' 020E'              	skipc
  7825  0022' 1C03               	goto	u1211
  7826  0023' 2825'              	goto	u1210
  7827  0024' 2826'              u1211:
  7828  0025'                    	goto	l443
  7829  0025' 286E'              u1210:
  7830  0026'                    	line	212
  7831                           	
  7832                           l1989:	
  7833  0026'                    ;mcc_generated_files/mtouch/mtouch_button.c: 211:         {;mcc_generated_files/mtouch/m
                                 touch_button.c: 212:             button->counter = (mtouch_button_statecounter_t)0;
  7834                           	movf	(Button_State_NotPressed@button),w
  7835  0026' 080D'              	addlw	0Ah
  7836  0027' 3E0A               	movwf	fsr1l
  7837  0028' 0086               	clrf fsr1h	
  7838  0029' 0187               	
  7839                           	movlw	0
  7840  002A' 3000               	movwi	[0]fsr1
  7841  002B' 3FC0               	movwi	[1]fsr1
  7842  002C' 3FC1               	line	213
  7843                           	
  7844                           l1991:	
  7845  002D'                    ;mcc_generated_files/mtouch/mtouch_button.c: 213:             MTOUCH_Button_Initialize(b
                                 utton->name);
  7846                           	movf	(Button_State_NotPressed@button),w
  7847  002D' 080D'              	movwf	fsr1l
  7848  002E' 0086               	clrf fsr1h	
  7849  002F' 0187               	
  7850                           	movf	indf1,w
  7851  0030' 0801               	fcall	_MTOUCH_Button_Initialize
  7852  0031' 3180' 2000' 3180'  	goto	l443
  7853  0034' 286E'              	line	214
  7854                           ;mcc_generated_files/mtouch/mtouch_button.c: 214:         }
  7855                           	
  7856                           l442:	
  7857  0035'                    	line	215
  7858                           ;mcc_generated_files/mtouch/mtouch_button.c: 215:     }
  7859                           	goto	l443
  7860  0035' 286E'              	line	217
  7861                           ;mcc_generated_files/mtouch/mtouch_button.c: 217:     else if ((button->deviation) > (bu
                                 tton->threshold))
  7862                           	
  7863                           l441:	
  7864  0036'                    	
  7865                           l1993:	
  7866  0036'                    	movlb 0	; select bank0
  7867  0036' 0020               	movf	(Button_State_NotPressed@button),w
  7868  0037' 080D'              	addlw	0Eh
  7869  0038' 3E0E               	movwf	fsr1l
  7870  0039' 0086               	clrf fsr1h	
  7871  003A' 0187               	
  7872                           	movf	indf1,w
  7873  003B' 0801               	xorlw	80h
  7874  003C' 3A80               	movwf	(??_Button_State_NotPressed+0)+0
  7875  003D' 008E'              	movf	(Button_State_NotPressed@button),w
  7876  003E' 080D'              	addlw	09h
  7877  003F' 3E09               	movwf	fsr1l
  7878  0040' 0086               	clrf fsr1h	
  7879  0041' 0187               	
  7880                           	movf	indf1,w
  7881  0042' 0801               	xorlw	80h
  7882  0043' 3A80               	subwf	(??_Button_State_NotPressed+0)+0
  7883  0044' 028E'              	skipnc
  7884  0045' 1803               	goto	u1221
  7885  0046' 2848'              	goto	u1220
  7886  0047' 2849'              u1221:
  7887  0048'                    	goto	l1999
  7888  0048' 2865'              u1220:
  7889  0049'                    	line	219
  7890                           	
  7891                           l1995:	
  7892  0049'                    ;mcc_generated_files/mtouch/mtouch_button.c: 218:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 219:         button->state = MTOUCH_BUTTON_STATE_pressed;
  7893                           	movlw	low(02h)
  7894  0049' 3002               	movwf	(??_Button_State_NotPressed+0)+0
  7895  004A' 008E'              	movf	(Button_State_NotPressed@button),w
  7896  004B' 080D'              	addlw	02h
  7897  004C' 3E02               	movwf	fsr1l
  7898  004D' 0086               	clrf fsr1h	
  7899  004E' 0187               	
  7900                           	movf	(??_Button_State_NotPressed+0)+0,w
  7901  004F' 080E'              	movwf	indf1
  7902  0050' 0081               	line	220
  7903                           ;mcc_generated_files/mtouch/mtouch_button.c: 220:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  7904                           	movf	(Button_State_NotPressed@button),w
  7905  0051' 080D'              	addlw	0Ah
  7906  0052' 3E0A               	movwf	fsr1l
  7907  0053' 0086               	clrf fsr1h	
  7908  0054' 0187               	
  7909                           	movlw	0
  7910  0055' 3000               	movwi	[0]fsr1
  7911  0056' 3FC0               	movwi	[1]fsr1
  7912  0057' 3FC1               	line	221
  7913                           	
  7914                           l1997:	
  7915  0058'                    ;mcc_generated_files/mtouch/mtouch_button.c: 221:         callback_pressed(button->name)
                                 ;
  7916                           	movf	(Button_State_NotPressed@button),w
  7917  0058' 080D'              	movwf	fsr1l
  7918  0059' 0086               	clrf fsr1h	
  7919  005A' 0187               	
  7920                           	movf	indf1,w
  7921  005B' 0801               	movwf	(??_Button_State_NotPressed+0)+0
  7922  005C' 008E'              	movf	(??_Button_State_NotPressed+0)+0,w
  7923  005D' 080E'              	movwf	(Button_DefaultCallback@button)
  7924  005E' 0080'              	movf	(_callback_pressed+1),w
  7925  005F' 0809'              	movwf	pclath
  7926  0060' 008A               	movf	(_callback_pressed),w
  7927  0061' 0808'              	callw
  7928  0062' 000A               	pagesel	$
  7929  0063' 3180'              	line	222
  7930                           ;mcc_generated_files/mtouch/mtouch_button.c: 222:     }
  7931                           	goto	l443
  7932  0064' 286E'              	line	223
  7933                           ;mcc_generated_files/mtouch/mtouch_button.c: 223:     else
  7934                           	
  7935                           l444:	
  7936  0065'                    	line	226
  7937                           	
  7938                           l1999:	
  7939  0065'                    ;mcc_generated_files/mtouch/mtouch_button.c: 224:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 226:         button->counter = (mtouch_button_statecounter_t)0;
  7940                           	movlb 0	; select bank0
  7941  0065' 0020               	movf	(Button_State_NotPressed@button),w
  7942  0066' 080D'              	addlw	0Ah
  7943  0067' 3E0A               	movwf	fsr1l
  7944  0068' 0086               	clrf fsr1h	
  7945  0069' 0187               	
  7946                           	movlw	0
  7947  006A' 3000               	movwi	[0]fsr1
  7948  006B' 3FC0               	movwi	[1]fsr1
  7949  006C' 3FC1               	goto	l443
  7950  006D' 286E'              	line	227
  7951                           ;mcc_generated_files/mtouch/mtouch_button.c: 227:     }
  7952                           	
  7953                           l445:	
  7954  006E'                    	
  7955                           l443:	
  7956  006E'                    	line	230
  7957                           ;mcc_generated_files/mtouch/mtouch_button.c: 230:     (button->baseline_count)++;
  7958                           	movlb 0	; select bank0
  7959  006E' 0020               	movf	(Button_State_NotPressed@button),w
  7960  006F' 080D'              	addlw	0Ch
  7961  0070' 3E0C               	movwf	fsr1l
  7962  0071' 0086               	clrf fsr1h	
  7963  0072' 0187               	
  7964                           	movlw	01h
  7965  0073' 3001               	addwf	indf1,f
  7966  0074' 0781               	addfsr	fsr1,1
  7967  0075' 3141               	skipnc
  7968  0076' 1803               	incf	indf1,f
  7969  0077' 0A81               	line	231
  7970                           ;mcc_generated_files/mtouch/mtouch_button.c: 231:     if ((button->baseline_count) > ((m
                                 touch_button_baselinecounter_t)32))
  7971                           	movf	(Button_State_NotPressed@button),w
  7972  0078' 080D'              	addlw	0Ch
  7973  0079' 3E0C               	movwf	fsr1l
  7974  007A' 0086               	clrf fsr1h	
  7975  007B' 0187               	
  7976                           	moviw	[0]fsr1
  7977  007C' 3F40               	movwf	(??_Button_State_NotPressed+0)+0
  7978  007D' 008E'              	moviw	[1]fsr1
  7979  007E' 3F41               	movwf	(??_Button_State_NotPressed+0)+0+1
  7980  007F' 008F'              	movlw	0
  7981  0080' 3000               	subwf	1+(??_Button_State_NotPressed+0)+0,w
  7982  0081' 020F'              	movlw	021h
  7983  0082' 3021               	skipnz
  7984  0083' 1903               	subwf	0+(??_Button_State_NotPressed+0)+0,w
  7985  0084' 020E'              	skipc
  7986  0085' 1C03               	goto	u1231
  7987  0086' 2888'              	goto	u1230
  7988  0087' 2889'              u1231:
  7989  0088'                    	goto	l447
  7990  0088' 2895'              u1230:
  7991  0089'                    	line	233
  7992                           	
  7993                           l2001:	
  7994  0089'                    ;mcc_generated_files/mtouch/mtouch_button.c: 232:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 233:         button->baseline_count = (mtouch_button_baselinecounter_t)0;
  7995                           	movf	(Button_State_NotPressed@button),w
  7996  0089' 080D'              	addlw	0Ch
  7997  008A' 3E0C               	movwf	fsr1l
  7998  008B' 0086               	clrf fsr1h	
  7999  008C' 0187               	
  8000                           	movlw	0
  8001  008D' 3000               	movwi	[0]fsr1
  8002  008E' 3FC0               	movwi	[1]fsr1
  8003  008F' 3FC1               	line	234
  8004                           	
  8005                           l2003:	
  8006  0090'                    ;mcc_generated_files/mtouch/mtouch_button.c: 234:         Button_Baseline_Update(button)
                                 ;
  8007                           	movf	(Button_State_NotPressed@button),w
  8008  0090' 080D'              	fcall	_Button_Baseline_Update
  8009  0091' 3180' 2000' 3180'  	goto	l447
  8010  0094' 2895'              	line	235
  8011                           ;mcc_generated_files/mtouch/mtouch_button.c: 235:     }
  8012                           	
  8013                           l446:	
  8014  0095'                    	line	236
  8015                           	
  8016                           l447:	
  8017  0095'                    	return
  8018  0095' 0008               	opt stack 0
  8019                           GLOBAL	__end_of_Button_State_NotPressed
  8020                           	__end_of_Button_State_NotPressed:
  8021  0096'                    	signat	_Button_State_NotPressed,4217
  8022                           
  8023 ;; *************** function _Button_State_Initializing *****************
  8024 ;; Defined at:
  8025 ;;		line 185 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8026 ;; Parameters:    Size  Location     Type
  8027 ;;  button          1   13[BANK0 ] PTR struct .
  8028 ;;		 -> mtouch_button(16), 
  8029 ;; Auto vars:     Size  Location     Type
  8030 ;;		None
  8031 ;; Return value:  Size  Location     Type
  8032 ;;                  1    wreg      void 
  8033 ;; Registers used:
  8034 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8035 ;; Tracked objects:
  8036 ;;		On entry : 0/0
  8037 ;;		On exit  : 0/0
  8038 ;;		Unchanged: 0/0
  8039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8040 ;;      Params:         0       1       0       0
  8041 ;;      Locals:         0       0       0       0
  8042 ;;      Temps:          0       4       0       0
  8043 ;;      Totals:         0       5       0       0
  8044 ;;Total ram usage:        5 bytes
  8045 ;; Hardware stack levels used:    1
  8046 ;; Hardware stack levels required when called:    7
  8047 ;; This function calls:
  8048 ;;		_Button_Baseline_Initialize
  8049 ;;		_Button_Baseline_Update
  8050 ;; This function is called by:
  8051 ;;		_Button_Service
  8052 ;; This function uses a non-reentrant model
  8053 ;;
  8054                           psect	text38,local,class=CODE,delta=2,merge=1,group=0
  8055                           	line	185
  8056                           global __ptext38
  8057                           __ptext38:	;psect for function _Button_State_Initializing
  8058  0000'                    psect	text38
  8059                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8060                           	line	185
  8061                           	global	__size_of_Button_State_Initializing
  8062                           	__size_of_Button_State_Initializing	equ	__end_of_Button_State_Initializing-_Button_Stat
                                 e_Initializing
  8063  0062                     	
  8064                           _Button_State_Initializing:	
  8065  0000'                    ;incstack = 0
  8066                           	opt	stack 5
  8067                           ; Regs used in _Button_State_Initializing: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cs
                                 tack]
  8068                           	line	188
  8069                           	
  8070                           l1973:	
  8071  0000'                    ;mcc_generated_files/mtouch/mtouch_button.c: 185: static void Button_State_Initializing(
                                 mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 186: {;mcc_generate
                                 d_files/mtouch/mtouch_button.c: 188:     if ((button->counter) <= (mtouch_button_stateco
                                 unter_t)((mtouch_button_statecounter_t)16)/2)
  8072                           	movlb 0	; select bank0
  8073  0000' 0020               	movf	(Button_State_Initializing@button),w
  8074  0001' 080D'              	addlw	0Ah
  8075  0002' 3E0A               	movwf	fsr1l
  8076  0003' 0086               	clrf fsr1h	
  8077  0004' 0187               	
  8078                           	moviw	[0]fsr1
  8079  0005' 3F40               	movwf	(??_Button_State_Initializing+0)+0
  8080  0006' 008E'              	moviw	[1]fsr1
  8081  0007' 3F41               	movwf	(??_Button_State_Initializing+0)+0+1
  8082  0008' 008F'              	movlw	0
  8083  0009' 3000               	subwf	1+(??_Button_State_Initializing+0)+0,w
  8084  000A' 020F'              	movlw	09h
  8085  000B' 3009               	skipnz
  8086  000C' 1903               	subwf	0+(??_Button_State_Initializing+0)+0,w
  8087  000D' 020E'              	skipnc
  8088  000E' 1803               	goto	u1171
  8089  000F' 2811'              	goto	u1170
  8090  0010' 2812'              u1171:
  8091  0011'                    	goto	l1977
  8092  0011' 2817'              u1170:
  8093  0012'                    	line	190
  8094                           	
  8095                           l1975:	
  8096  0012'                    ;mcc_generated_files/mtouch/mtouch_button.c: 189:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 190:         Button_Baseline_Initialize(button);
  8097                           	movf	(Button_State_Initializing@button),w
  8098  0012' 080D'              	fcall	_Button_Baseline_Initialize
  8099  0013' 3180' 2000' 3180'  	line	191
  8100                           ;mcc_generated_files/mtouch/mtouch_button.c: 191:     } else {
  8101                           	goto	l1979
  8102  0016' 281D'              	
  8103                           l435:	
  8104  0017'                    	line	192
  8105                           	
  8106                           l1977:	
  8107  0017'                    ;mcc_generated_files/mtouch/mtouch_button.c: 192:         Button_Baseline_Update(button)
                                 ;
  8108                           	movlb 0	; select bank0
  8109  0017' 0020               	movf	(Button_State_Initializing@button),w
  8110  0018' 080D'              	fcall	_Button_Baseline_Update
  8111  0019' 3180' 2000' 3180'  	goto	l1979
  8112  001C' 281D'              	line	193
  8113                           ;mcc_generated_files/mtouch/mtouch_button.c: 193:     }
  8114                           	
  8115                           l436:	
  8116  001D'                    	line	196
  8117                           	
  8118                           l1979:	
  8119  001D'                    ;mcc_generated_files/mtouch/mtouch_button.c: 196:     (button->counter)++;
  8120                           	movlb 0	; select bank0
  8121  001D' 0020               	movf	(Button_State_Initializing@button),w
  8122  001E' 080D'              	addlw	0Ah
  8123  001F' 3E0A               	movwf	fsr1l
  8124  0020' 0086               	clrf fsr1h	
  8125  0021' 0187               	
  8126                           	movlw	01h
  8127  0022' 3001               	addwf	indf1,f
  8128  0023' 0781               	addfsr	fsr1,1
  8129  0024' 3141               	skipnc
  8130  0025' 1803               	incf	indf1,f
  8131  0026' 0A81               	line	197
  8132                           	
  8133                           l1981:	
  8134  0027'                    ;mcc_generated_files/mtouch/mtouch_button.c: 197:     if ((button->counter) >= (mtouch_b
                                 utton_statecounter_t)((mtouch_button_statecounter_t)16))
  8135                           	movf	(Button_State_Initializing@button),w
  8136  0027' 080D'              	addlw	0Ah
  8137  0028' 3E0A               	movwf	fsr1l
  8138  0029' 0086               	clrf fsr1h	
  8139  002A' 0187               	
  8140                           	moviw	[0]fsr1
  8141  002B' 3F40               	movwf	(??_Button_State_Initializing+0)+0
  8142  002C' 008E'              	moviw	[1]fsr1
  8143  002D' 3F41               	movwf	(??_Button_State_Initializing+0)+0+1
  8144  002E' 008F'              	movlw	0
  8145  002F' 3000               	subwf	1+(??_Button_State_Initializing+0)+0,w
  8146  0030' 020F'              	movlw	010h
  8147  0031' 3010               	skipnz
  8148  0032' 1903               	subwf	0+(??_Button_State_Initializing+0)+0,w
  8149  0033' 020E'              	skipc
  8150  0034' 1C03               	goto	u1181
  8151  0035' 2837'              	goto	u1180
  8152  0036' 2838'              u1181:
  8153  0037'                    	goto	l438
  8154  0037' 2861'              u1180:
  8155  0038'                    	line	199
  8156                           	
  8157                           l1983:	
  8158  0038'                    ;mcc_generated_files/mtouch/mtouch_button.c: 198:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 199:         button->reading = (mtouch_button_reading_t)((button->baseline)>
                                 >((uint8_t)4));
  8159                           	movf	(Button_State_Initializing@button),w
  8160  0038' 080D'              	addlw	05h
  8161  0039' 3E05               	movwf	fsr1l
  8162  003A' 0086               	clrf fsr1h	
  8163  003B' 0187               	
  8164                           	moviw	[0]fsr1
  8165  003C' 3F40               	movwf	((??_Button_State_Initializing+0)+0+0)
  8166  003D' 008E'              	moviw	[1]fsr1
  8167  003E' 3F41               	movwf	((??_Button_State_Initializing+0)+0+1)
  8168  003F' 008F'              	moviw	[2]fsr1
  8169  0040' 3F42               	movwf	((??_Button_State_Initializing+0)+0+2)
  8170  0041' 0090'              	moviw	[3]fsr1
  8171  0042' 3F43               	movwf	((??_Button_State_Initializing+0)+0+3)
  8172  0043' 0091'              	movlw	04h
  8173  0044' 3004               u1195:
  8174  0045'                    	lsrf	(??_Button_State_Initializing+0)+3,f
  8175  0045' 3691'              	rrf	(??_Button_State_Initializing+0)+2,f
  8176  0046' 0C90'              	rrf	(??_Button_State_Initializing+0)+1,f
  8177  0047' 0C8F'              	rrf	(??_Button_State_Initializing+0)+0,f
  8178  0048' 0C8E'              u1190:
  8179  0049'                    	decfsz	wreg,f
  8180  0049' 0B89               	goto	u1195
  8181  004A' 2845'              	movf	(Button_State_Initializing@button),w
  8182  004B' 080D'              	addlw	03h
  8183  004C' 3E03               	movwf	fsr1l
  8184  004D' 0086               	clrf fsr1h	
  8185  004E' 0187               	
  8186                           	movf	0+(??_Button_State_Initializing+0)+0,w
  8187  004F' 080E'              	movwi	[0]fsr1
  8188  0050' 3FC0               	movf	1+(??_Button_State_Initializing+0)+0,w
  8189  0051' 080F'              	movwi	[1]fsr1
  8190  0052' 3FC1               	line	200
  8191                           ;mcc_generated_files/mtouch/mtouch_button.c: 200:         button->state = MTOUCH_BUTTON_
                                 STATE_notPressed;
  8192                           	movf	(Button_State_Initializing@button),w
  8193  0053' 080D'              	addlw	02h
  8194  0054' 3E02               	movwf	fsr1l
  8195  0055' 0086               	clrf fsr1h	
  8196  0056' 0187               	
  8197                           	clrf	indf1
  8198  0057' 0181               	incf	indf1,f
  8199  0058' 0A81               	line	201
  8200                           ;mcc_generated_files/mtouch/mtouch_button.c: 201:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  8201                           	movf	(Button_State_Initializing@button),w
  8202  0059' 080D'              	addlw	0Ah
  8203  005A' 3E0A               	movwf	fsr1l
  8204  005B' 0086               	clrf fsr1h	
  8205  005C' 0187               	
  8206                           	movlw	0
  8207  005D' 3000               	movwi	[0]fsr1
  8208  005E' 3FC0               	movwi	[1]fsr1
  8209  005F' 3FC1               	goto	l438
  8210  0060' 2861'              	line	202
  8211                           ;mcc_generated_files/mtouch/mtouch_button.c: 202:     }
  8212                           	
  8213                           l437:	
  8214  0061'                    	line	203
  8215                           	
  8216                           l438:	
  8217  0061'                    	return
  8218  0061' 0008               	opt stack 0
  8219                           GLOBAL	__end_of_Button_State_Initializing
  8220                           	__end_of_Button_State_Initializing:
  8221  0062'                    	signat	_Button_State_Initializing,4217
  8222                           
  8223 ;; *************** function _Button_State_Pressed *****************
  8224 ;; Defined at:
  8225 ;;		line 237 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  button          1   13[BANK0 ] PTR struct .
  8228 ;;		 -> mtouch_button(16), 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;		None
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  1    wreg      void 
  8233 ;; Registers used:
  8234 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8240 ;;      Params:         0       1       0       0
  8241 ;;      Locals:         0       0       0       0
  8242 ;;      Temps:          0       2       0       0
  8243 ;;      Totals:         0       3       0       0
  8244 ;;Total ram usage:        3 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; Hardware stack levels required when called:    6
  8247 ;; This function calls:
  8248 ;;		_Button_DefaultCallback
  8249 ;;		_MTOUCH_Button_Initialize
  8250 ;; This function is called by:
  8251 ;;		_Button_Service
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           psect	text39,local,class=CODE,delta=2,merge=1,group=0
  8255                           	line	237
  8256                           global __ptext39
  8257                           __ptext39:	;psect for function _Button_State_Pressed
  8258  0000'                    psect	text39
  8259                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8260                           	line	237
  8261                           	global	__size_of_Button_State_Pressed
  8262                           	__size_of_Button_State_Pressed	equ	__end_of_Button_State_Pressed-_Button_State_Pressed

  8263  0056                     	
  8264                           _Button_State_Pressed:	
  8265  0000'                    ;incstack = 0
  8266                           	opt	stack 6
  8267                           ; Regs used in _Button_State_Pressed: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
                                 
  8268                           	line	240
  8269                           	
  8270                           l2005:	
  8271  0000'                    ;mcc_generated_files/mtouch/mtouch_button.c: 237: static void Button_State_Pressed(mtouc
                                 h_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 238: {;mcc_generated_fil
                                 es/mtouch/mtouch_button.c: 240:     if ((button->counter) >= ((mtouch_button_statecounte
                                 r_t)1000))
  8272                           	movlb 0	; select bank0
  8273  0000' 0020               	movf	(Button_State_Pressed@button),w
  8274  0001' 080D'              	addlw	0Ah
  8275  0002' 3E0A               	movwf	fsr1l
  8276  0003' 0086               	clrf fsr1h	
  8277  0004' 0187               	
  8278                           	moviw	[0]fsr1
  8279  0005' 3F40               	movwf	(??_Button_State_Pressed+0)+0
  8280  0006' 008E'              	moviw	[1]fsr1
  8281  0007' 3F41               	movwf	(??_Button_State_Pressed+0)+0+1
  8282  0008' 008F'              	movlw	03h
  8283  0009' 3003               	subwf	1+(??_Button_State_Pressed+0)+0,w
  8284  000A' 020F'              	movlw	0E8h
  8285  000B' 30E8               	skipnz
  8286  000C' 1903               	subwf	0+(??_Button_State_Pressed+0)+0,w
  8287  000D' 020E'              	skipc
  8288  000E' 1C03               	goto	u1241
  8289  000F' 2811'              	goto	u1240
  8290  0010' 2812'              u1241:
  8291  0011'                    	goto	l2009
  8292  0011' 2827'              u1240:
  8293  0012'                    	line	242
  8294                           	
  8295                           l2007:	
  8296  0012'                    ;mcc_generated_files/mtouch/mtouch_button.c: 241:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 242:         MTOUCH_Button_Initialize(button->name);
  8297                           	movf	(Button_State_Pressed@button),w
  8298  0012' 080D'              	movwf	fsr1l
  8299  0013' 0086               	clrf fsr1h	
  8300  0014' 0187               	
  8301                           	movf	indf1,w
  8302  0015' 0801               	fcall	_MTOUCH_Button_Initialize
  8303  0016' 3180' 2000' 3180'  	line	243
  8304                           ;mcc_generated_files/mtouch/mtouch_button.c: 243:         callback_notPressed(button->na
                                 me);
  8305                           	movlb 0	; select bank0
  8306  0019' 0020               	movf	(Button_State_Pressed@button),w
  8307  001A' 080D'              	movwf	fsr1l
  8308  001B' 0086               	clrf fsr1h	
  8309  001C' 0187               	
  8310                           	movf	indf1,w
  8311  001D' 0801               	movwf	(??_Button_State_Pressed+0)+0
  8312  001E' 008E'              	movf	(??_Button_State_Pressed+0)+0,w
  8313  001F' 080E'              	movwf	(Button_DefaultCallback@button)
  8314  0020' 0080'              	movf	(_callback_notPressed+1),w
  8315  0021' 0807'              	movwf	pclath
  8316  0022' 008A               	movf	(_callback_notPressed),w
  8317  0023' 0806'              	callw
  8318  0024' 000A               	pagesel	$
  8319  0025' 3180'              	line	244
  8320                           ;mcc_generated_files/mtouch/mtouch_button.c: 244:     }
  8321                           	goto	l453
  8322  0026' 2855'              	line	247
  8323                           ;mcc_generated_files/mtouch/mtouch_button.c: 247:     else if ((button->deviation) < (mt
                                 ouch_button_deviation_t)((button->threshold) >> 1))
  8324                           	
  8325                           l450:	
  8326  0027'                    	
  8327                           l2009:	
  8328  0027'                    	movlb 0	; select bank0
  8329  0027' 0020               	movf	(Button_State_Pressed@button),w
  8330  0028' 080D'              	addlw	09h
  8331  0029' 3E09               	movwf	fsr1l
  8332  002A' 0086               	clrf fsr1h	
  8333  002B' 0187               	
  8334                           	movf	indf1,w
  8335  002C' 0801               	xorlw	80h
  8336  002D' 3A80               	movwf	(??_Button_State_Pressed+0)+0
  8337  002E' 008E'              	movf	(Button_State_Pressed@button),w
  8338  002F' 080D'              	addlw	0Eh
  8339  0030' 3E0E               	movwf	fsr1l
  8340  0031' 0086               	clrf fsr1h	
  8341  0032' 0187               	
  8342                           	asrf	indf1,w
  8343  0033' 3701               	xorlw	80h
  8344  0034' 3A80               	subwf	(??_Button_State_Pressed+0)+0
  8345  0035' 028E'              	skipnc
  8346  0036' 1803               	goto	u1251
  8347  0037' 2839'              	goto	u1250
  8348  0038' 283A'              u1251:
  8349  0039'                    	goto	l453
  8350  0039' 2855'              u1250:
  8351  003A'                    	line	249
  8352                           	
  8353                           l2011:	
  8354  003A'                    ;mcc_generated_files/mtouch/mtouch_button.c: 248:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 249:         button->state = MTOUCH_BUTTON_STATE_notPressed;
  8355                           	movf	(Button_State_Pressed@button),w
  8356  003A' 080D'              	addlw	02h
  8357  003B' 3E02               	movwf	fsr1l
  8358  003C' 0086               	clrf fsr1h	
  8359  003D' 0187               	
  8360                           	clrf	indf1
  8361  003E' 0181               	incf	indf1,f
  8362  003F' 0A81               	line	250
  8363                           ;mcc_generated_files/mtouch/mtouch_button.c: 250:         button->counter = (mtouch_butt
                                 on_statecounter_t)0;
  8364                           	movf	(Button_State_Pressed@button),w
  8365  0040' 080D'              	addlw	0Ah
  8366  0041' 3E0A               	movwf	fsr1l
  8367  0042' 0086               	clrf fsr1h	
  8368  0043' 0187               	
  8369                           	movlw	0
  8370  0044' 3000               	movwi	[0]fsr1
  8371  0045' 3FC0               	movwi	[1]fsr1
  8372  0046' 3FC1               	line	251
  8373                           	
  8374                           l2013:	
  8375  0047'                    ;mcc_generated_files/mtouch/mtouch_button.c: 251:         callback_notPressed(button->na
                                 me);
  8376                           	movf	(Button_State_Pressed@button),w
  8377  0047' 080D'              	movwf	fsr1l
  8378  0048' 0086               	clrf fsr1h	
  8379  0049' 0187               	
  8380                           	movf	indf1,w
  8381  004A' 0801               	movwf	(??_Button_State_Pressed+0)+0
  8382  004B' 008E'              	movf	(??_Button_State_Pressed+0)+0,w
  8383  004C' 080E'              	movwf	(Button_DefaultCallback@button)
  8384  004D' 0080'              	movf	(_callback_notPressed+1),w
  8385  004E' 0807'              	movwf	pclath
  8386  004F' 008A               	movf	(_callback_notPressed),w
  8387  0050' 0806'              	callw
  8388  0051' 000A               	pagesel	$
  8389  0052' 3180'              	goto	l453
  8390  0053' 2855'              	line	252
  8391                           ;mcc_generated_files/mtouch/mtouch_button.c: 252:     }
  8392                           	
  8393                           l452:	
  8394  0054'                    	goto	l453
  8395  0054' 2855'              	
  8396                           l451:	
  8397  0055'                    	line	253
  8398                           	
  8399                           l453:	
  8400  0055'                    	return
  8401  0055' 0008               	opt stack 0
  8402                           GLOBAL	__end_of_Button_State_Pressed
  8403                           	__end_of_Button_State_Pressed:
  8404  0056'                    	signat	_Button_State_Pressed,4217
  8405                           	global	_MTOUCH_Button_Initialize
  8406                           
  8407 ;; *************** function _MTOUCH_Button_Initialize *****************
  8408 ;; Defined at:
  8409 ;;		line 129 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  name            1    wreg     enum E2303
  8412 ;; Auto vars:     Size  Location     Type
  8413 ;;  name            1    2[BANK0 ] enum E2303
  8414 ;;  button          1    3[BANK0 ] PTR struct .
  8415 ;;		 -> mtouch_button(16), 
  8416 ;; Return value:  Size  Location     Type
  8417 ;;                  1    wreg      void 
  8418 ;; Registers used:
  8419 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8420 ;; Tracked objects:
  8421 ;;		On entry : 0/0
  8422 ;;		On exit  : 0/0
  8423 ;;		Unchanged: 0/0
  8424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8425 ;;      Params:         0       0       0       0
  8426 ;;      Locals:         0       2       0       0
  8427 ;;      Temps:          0       2       0       0
  8428 ;;      Totals:         0       4       0       0
  8429 ;;Total ram usage:        4 bytes
  8430 ;; Hardware stack levels used:    1
  8431 ;; Hardware stack levels required when called:    5
  8432 ;; This function calls:
  8433 ;;		_MTOUCH_Sensor_Calibrate
  8434 ;; This function is called by:
  8435 ;;		_MTOUCH_Button_InitializeAll
  8436 ;;		_Button_Service
  8437 ;;		_Button_State_NotPressed
  8438 ;;		_Button_State_Pressed
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           psect	text40,local,class=CODE,delta=2,merge=1,group=0
  8442                           	line	129
  8443                           global __ptext40
  8444                           __ptext40:	;psect for function _MTOUCH_Button_Initialize
  8445  0000'                    psect	text40
  8446                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8447                           	line	129
  8448                           	global	__size_of_MTOUCH_Button_Initialize
  8449                           	__size_of_MTOUCH_Button_Initialize	equ	__end_of_MTOUCH_Button_Initialize-_MTOUCH_Button
                                 _Initialize
  8450  0033                     	
  8451                           _MTOUCH_Button_Initialize:	
  8452  0000'                    ;incstack = 0
  8453                           	opt	stack 7
  8454                           ; Regs used in _MTOUCH_Button_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cst
                                 ack]
  8455                           ;MTOUCH_Button_Initialize@name stored from wreg
  8456                           	movlb 0	; select bank0
  8457  0000' 0020               	movwf	(MTOUCH_Button_Initialize@name)
  8458  0001' 0082'              	line	131
  8459                           	
  8460                           l1845:	
  8461  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 129: void MTOUCH_Button_Initialize(enum mto
                                 uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 130: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 131:     mtouch_button_t* button = &mtouch_button[name];
  8462                           	movf	(MTOUCH_Button_Initialize@name),w
  8463  0002' 0802'              	movwf	(??_MTOUCH_Button_Initialize+0)+0
  8464  0003' 0080'              	movlw	(04h)-1
  8465  0004' 3003               u1015:
  8466  0005'                    	lslf	(??_MTOUCH_Button_Initialize+0)+0,f
  8467  0005' 3580'              	addlw	-1
  8468  0006' 3EFF               	skipz
  8469  0007' 1D03               	goto	u1015
  8470  0008' 2805'              	lslf	(??_MTOUCH_Button_Initialize+0)+0,w
  8471  0009' 3500'              	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  8472  000A' 3E00'              	movwf	(??_MTOUCH_Button_Initialize+1)+0
  8473  000B' 0081'              	movf	(??_MTOUCH_Button_Initialize+1)+0,w
  8474  000C' 0801'              	movwf	(MTOUCH_Button_Initialize@button)
  8475  000D' 0083'              	line	133
  8476                           	
  8477                           l1847:	
  8478  000E'                    ;mcc_generated_files/mtouch/mtouch_button.c: 133:     button->state = MTOUCH_BUTTON_STAT
                                 E_initializing;
  8479                           	movf	(MTOUCH_Button_Initialize@button),w
  8480  000E' 0803'              	addlw	02h
  8481  000F' 3E02               	movwf	fsr1l
  8482  0010' 0086               	clrf fsr1h	
  8483  0011' 0187               	
  8484                           	clrf	indf1
  8485  0012' 0181               	line	134
  8486                           	
  8487                           l1849:	
  8488  0013'                    ;mcc_generated_files/mtouch/mtouch_button.c: 134:     button->baseline = (mtouch_button_
                                 baseline_t)0;
  8489                           	movf	(MTOUCH_Button_Initialize@button),w
  8490  0013' 0803'              	addlw	05h
  8491  0014' 3E05               	movwf	fsr1l
  8492  0015' 0086               	clrf fsr1h	
  8493  0016' 0187               	
  8494                           	movlw	0
  8495  0017' 3000               	movwi	[0]fsr1
  8496  0018' 3FC0               	movlw	0
  8497  0019' 3000               	movwi	[1]fsr1
  8498  001A' 3FC1               	movwi	[2]fsr1
  8499  001B' 3FC2               	movwi	[3]fsr1
  8500  001C' 3FC3               	line	135
  8501                           	
  8502                           l1851:	
  8503  001D'                    ;mcc_generated_files/mtouch/mtouch_button.c: 135:     button->counter = (mtouch_button_s
                                 tatecounter_t)0;
  8504                           	movf	(MTOUCH_Button_Initialize@button),w
  8505  001D' 0803'              	addlw	0Ah
  8506  001E' 3E0A               	movwf	fsr1l
  8507  001F' 0086               	clrf fsr1h	
  8508  0020' 0187               	
  8509                           	movlw	0
  8510  0021' 3000               	movwi	[0]fsr1
  8511  0022' 3FC0               	movwi	[1]fsr1
  8512  0023' 3FC1               	line	136
  8513                           	
  8514                           l1853:	
  8515  0024'                    ;mcc_generated_files/mtouch/mtouch_button.c: 136:     button->baseline_count = (mtouch_b
                                 utton_baselinecounter_t)0;
  8516                           	movf	(MTOUCH_Button_Initialize@button),w
  8517  0024' 0803'              	addlw	0Ch
  8518  0025' 3E0C               	movwf	fsr1l
  8519  0026' 0086               	clrf fsr1h	
  8520  0027' 0187               	
  8521                           	movlw	0
  8522  0028' 3000               	movwi	[0]fsr1
  8523  0029' 3FC0               	movwi	[1]fsr1
  8524  002A' 3FC1               	line	138
  8525                           	
  8526                           l1855:	
  8527  002B'                    ;mcc_generated_files/mtouch/mtouch_button.c: 138:     MTOUCH_Sensor_Calibrate(button->se
                                 nsor);
  8528                           	incf	(MTOUCH_Button_Initialize@button),w
  8529  002B' 0A03'              	movwf	fsr1l
  8530  002C' 0086               	clrf fsr1h	
  8531  002D' 0187               	
  8532                           	movf	indf1,w
  8533  002E' 0801               	fcall	_MTOUCH_Sensor_Calibrate
  8534  002F' 3180' 2000' 3180'  	line	139
  8535                           	
  8536                           l417:	
  8537  0032'                    	return
  8538  0032' 0008               	opt stack 0
  8539                           GLOBAL	__end_of_MTOUCH_Button_Initialize
  8540                           	__end_of_MTOUCH_Button_Initialize:
  8541  0033'                    	signat	_MTOUCH_Button_Initialize,4217
  8542                           	global	_MTOUCH_Sensor_Calibrate
  8543                           
  8544 ;; *************** function _MTOUCH_Sensor_Calibrate *****************
  8545 ;; Defined at:
  8546 ;;		line 582 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;  sensor          1    wreg     enum E2110
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;  sensor          1    0[COMMON] enum E2110
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8560 ;;      Params:         0       0       0       0
  8561 ;;      Locals:         0       0       0       0
  8562 ;;      Temps:          0       0       0       0
  8563 ;;      Totals:         0       0       0       0
  8564 ;;Total ram usage:        0 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; Hardware stack levels required when called:    4
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_MTOUCH_Button_Initialize
  8571 ;; This function uses a non-reentrant model
  8572 ;;
  8573                           psect	text41,local,class=CODE,delta=2,merge=1,group=0
  8574                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  8575                           	line	582
  8576                           global __ptext41
  8577                           __ptext41:	;psect for function _MTOUCH_Sensor_Calibrate
  8578  0000'                    psect	text41
  8579                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  8580                           	line	582
  8581                           	global	__size_of_MTOUCH_Sensor_Calibrate
  8582                           	__size_of_MTOUCH_Sensor_Calibrate	equ	__end_of_MTOUCH_Sensor_Calibrate-_MTOUCH_Sensor_C
                                 alibrate
  8583  0001                     	
  8584                           _MTOUCH_Sensor_Calibrate:	
  8585  0000'                    ;incstack = 0
  8586                           	opt	stack 7
  8587                           ; Regs used in _MTOUCH_Sensor_Calibrate: [wreg]
  8588                           	line	585
  8589                           	
  8590                           l348:	
  8591  0000'                    	return
  8592  0000' 0008               	opt stack 0
  8593                           GLOBAL	__end_of_MTOUCH_Sensor_Calibrate
  8594                           	__end_of_MTOUCH_Sensor_Calibrate:
  8595  0001'                    	signat	_MTOUCH_Sensor_Calibrate,4217
  8596                           	global	_Button_DefaultCallback
  8597                           
  8598 ;; *************** function _Button_DefaultCallback *****************
  8599 ;; Defined at:
  8600 ;;		line 448 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;  button          1    0[BANK0 ] enum E2303
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;		None
  8605 ;; Return value:  Size  Location     Type
  8606 ;;                  1    wreg      void 
  8607 ;; Registers used:
  8608 ;;		None
  8609 ;; Tracked objects:
  8610 ;;		On entry : 0/0
  8611 ;;		On exit  : 0/0
  8612 ;;		Unchanged: 0/0
  8613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8614 ;;      Params:         0       1       0       0
  8615 ;;      Locals:         0       0       0       0
  8616 ;;      Temps:          0       0       0       0
  8617 ;;      Totals:         0       1       0       0
  8618 ;;Total ram usage:        1 bytes
  8619 ;; Hardware stack levels used:    1
  8620 ;; Hardware stack levels required when called:    4
  8621 ;; This function calls:
  8622 ;;		Nothing
  8623 ;; This function is called by:
  8624 ;;		_Button_State_NotPressed
  8625 ;;		_Button_State_Pressed
  8626 ;; This function uses a non-reentrant model
  8627 ;;
  8628                           psect	text42,local,class=CODE,delta=2,merge=1,group=0
  8629                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8630                           	line	448
  8631                           global __ptext42
  8632                           __ptext42:	;psect for function _Button_DefaultCallback
  8633  0000'                    psect	text42
  8634                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8635                           	line	448
  8636                           	global	__size_of_Button_DefaultCallback
  8637                           	__size_of_Button_DefaultCallback	equ	__end_of_Button_DefaultCallback-_Button_DefaultCal
                                 lback
  8638  0001                     	
  8639                           _Button_DefaultCallback:	
  8640  0000'                    ;incstack = 0
  8641                           	opt	stack 7
  8642                           ; Regs used in _Button_DefaultCallback: []
  8643                           	
  8644                           l536:	
  8645  0000'                    	return
  8646  0000' 0008               	opt stack 0
  8647                           GLOBAL	__end_of_Button_DefaultCallback
  8648                           	__end_of_Button_DefaultCallback:
  8649  0001'                    	signat	_Button_DefaultCallback,4217
  8650                           	global	_Button_Baseline_Update
  8651                           
  8652 ;; *************** function _Button_Baseline_Update *****************
  8653 ;; Defined at:
  8654 ;;		line 412 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8655 ;; Parameters:    Size  Location     Type
  8656 ;;  button          1    wreg     PTR struct .
  8657 ;;		 -> mtouch_button(16), 
  8658 ;; Auto vars:     Size  Location     Type
  8659 ;;  button          1    6[BANK0 ] PTR struct .
  8660 ;;		 -> mtouch_button(16), 
  8661 ;; Return value:  Size  Location     Type
  8662 ;;                  1    wreg      void 
  8663 ;; Registers used:
  8664 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8665 ;; Tracked objects:
  8666 ;;		On entry : 0/0
  8667 ;;		On exit  : 0/0
  8668 ;;		Unchanged: 0/0
  8669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8670 ;;      Params:         0       0       0       0
  8671 ;;      Locals:         0       1       0       0
  8672 ;;      Temps:          0       6       0       0
  8673 ;;      Totals:         0       7       0       0
  8674 ;;Total ram usage:        7 bytes
  8675 ;; Hardware stack levels used:    1
  8676 ;; Hardware stack levels required when called:    4
  8677 ;; This function calls:
  8678 ;;		Nothing
  8679 ;; This function is called by:
  8680 ;;		_Button_State_Initializing
  8681 ;;		_Button_State_NotPressed
  8682 ;; This function uses a non-reentrant model
  8683 ;;
  8684                           psect	text43,local,class=CODE,delta=2,merge=1,group=0
  8685                           	line	412
  8686                           global __ptext43
  8687                           __ptext43:	;psect for function _Button_Baseline_Update
  8688  0000'                    psect	text43
  8689                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8690                           	line	412
  8691                           	global	__size_of_Button_Baseline_Update
  8692                           	__size_of_Button_Baseline_Update	equ	__end_of_Button_Baseline_Update-_Button_Baseline_U
                                 pdate
  8693  008B                     	
  8694                           _Button_Baseline_Update:	
  8695  0000'                    ;incstack = 0
  8696                           	opt	stack 7
  8697                           ; Regs used in _Button_Baseline_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  8698                           ;Button_Baseline_Update@button stored from wreg
  8699                           	movlb 0	; select bank0
  8700  0000' 0020               	movwf	(Button_Baseline_Update@button)
  8701  0001' 0086'              	line	414
  8702                           	
  8703                           l1861:	
  8704  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 412: static void Button_Baseline_Update(mto
                                 uch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 413: {;mcc_generated_f
                                 iles/mtouch/mtouch_button.c: 414:     if (GIE == (uint8_t)1)
  8705                           	btfss	(95/8),(95)&7	;volatile
  8706  0002' 1F8B               	goto	u1031
  8707  0003' 2805'              	goto	u1030
  8708  0004' 2806'              u1031:
  8709  0005'                    	goto	l1869
  8710  0005' 2849'              u1030:
  8711  0006'                    	line	416
  8712                           	
  8713                           l1863:	
  8714  0006'                    ;mcc_generated_files/mtouch/mtouch_button.c: 415:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 416:         GIE = (uint8_t)0;
  8715                           	bcf	(95/8),(95)&7	;volatile
  8716  0006' 138B               	line	417
  8717                           	
  8718                           l1865:	
  8719  0007'                    ;mcc_generated_files/mtouch/mtouch_button.c: 417:         button->baseline -= (button->b
                                 aseline) >> ((uint8_t)4);
  8720                           	movf	(Button_Baseline_Update@button),w
  8721  0007' 0806'              	addlw	05h
  8722  0008' 3E05               	movwf	fsr1l
  8723  0009' 0086               	clrf fsr1h	
  8724  000A' 0187               	
  8725                           	moviw	[0]fsr1
  8726  000B' 3F40               	movwf	((??_Button_Baseline_Update+0)+0+0)
  8727  000C' 0080'              	moviw	[1]fsr1
  8728  000D' 3F41               	movwf	((??_Button_Baseline_Update+0)+0+1)
  8729  000E' 0081'              	moviw	[2]fsr1
  8730  000F' 3F42               	movwf	((??_Button_Baseline_Update+0)+0+2)
  8731  0010' 0082'              	moviw	[3]fsr1
  8732  0011' 3F43               	movwf	((??_Button_Baseline_Update+0)+0+3)
  8733  0012' 0083'              	movlw	04h
  8734  0013' 3004               u1045:
  8735  0014'                    	lsrf	(??_Button_Baseline_Update+0)+3,f
  8736  0014' 3683'              	rrf	(??_Button_Baseline_Update+0)+2,f
  8737  0015' 0C82'              	rrf	(??_Button_Baseline_Update+0)+1,f
  8738  0016' 0C81'              	rrf	(??_Button_Baseline_Update+0)+0,f
  8739  0017' 0C80'              u1040:
  8740  0018'                    	decfsz	wreg,f
  8741  0018' 0B89               	goto	u1045
  8742  0019' 2814'              	movf	(Button_Baseline_Update@button),w
  8743  001A' 0806'              	addlw	05h
  8744  001B' 3E05               	movwf	fsr1l
  8745  001C' 0086               	clrf fsr1h	
  8746  001D' 0187               	
  8747                           	movf	0+(??_Button_Baseline_Update+0)+0,w
  8748  001E' 0800'              	subwf	indf1,f
  8749  001F' 0281               	addfsr	fsr1,1
  8750  0020' 3141               	movf	1+(??_Button_Baseline_Update+0)+0,w
  8751  0021' 0801'              	subwfb	indf1,f
  8752  0022' 3B81               	addfsr	fsr1,1
  8753  0023' 3141               	movf	2+(??_Button_Baseline_Update+0)+0,w
  8754  0024' 0802'              	subwfb	indf1,f
  8755  0025' 3B81               	addfsr	fsr1,1
  8756  0026' 3141               	movf	3+(??_Button_Baseline_Update+0)+0,w
  8757  0027' 0803'              	subwfb	indf1,f
  8758  0028' 3B81               	addfsr	fsr1,-3
  8759  0029' 317D               	line	418
  8760                           ;mcc_generated_files/mtouch/mtouch_button.c: 418:         button->baseline += button->re
                                 ading;
  8761                           	movf	(Button_Baseline_Update@button),w
  8762  002A' 0806'              	addlw	03h
  8763  002B' 3E03               	movwf	fsr1l
  8764  002C' 0086               	clrf fsr1h	
  8765  002D' 0187               	
  8766                           	moviw	[0]fsr1
  8767  002E' 3F40               	movwf	(??_Button_Baseline_Update+0)+0
  8768  002F' 0080'              	moviw	[1]fsr1
  8769  0030' 3F41               	movwf	(??_Button_Baseline_Update+0)+0+1
  8770  0031' 0081'              	movf	0+(??_Button_Baseline_Update+0)+0,w
  8771  0032' 0800'              	movwf	((??_Button_Baseline_Update+2)+0)
  8772  0033' 0082'              	movf	1+(??_Button_Baseline_Update+0)+0,w
  8773  0034' 0801'              	movwf	((??_Button_Baseline_Update+2)+0+1)
  8774  0035' 0083'              	clrf	((??_Button_Baseline_Update+2)+0+2)
  8775  0036' 0184'              	clrf	((??_Button_Baseline_Update+2)+0+3)
  8776  0037' 0185'              	movf	(Button_Baseline_Update@button),w
  8777  0038' 0806'              	addlw	05h
  8778  0039' 3E05               	movwf	fsr1l
  8779  003A' 0086               	clrf fsr1h	
  8780  003B' 0187               	
  8781                           	movf	0+(??_Button_Baseline_Update+2)+0,w
  8782  003C' 0802'              	addwf	indf1,f
  8783  003D' 0781               	addfsr	fsr1,1
  8784  003E' 3141               	movf	1+(??_Button_Baseline_Update+2)+0,w
  8785  003F' 0803'              	addwfc	indf1,f
  8786  0040' 3D81               	addfsr	fsr1,1
  8787  0041' 3141               	movf	2+(??_Button_Baseline_Update+2)+0,w
  8788  0042' 0804'              	addwfc	indf1,f
  8789  0043' 3D81               	addfsr	fsr1,1
  8790  0044' 3141               	movf	3+(??_Button_Baseline_Update+2)+0,w
  8791  0045' 0805'              	addwfc	indf1,f
  8792  0046' 3D81               
  8793                           	line	419
  8794                           	
  8795                           l1867:	
  8796  0047'                    ;mcc_generated_files/mtouch/mtouch_button.c: 419:         GIE = (uint8_t)1;
  8797                           	bsf	(95/8),(95)&7	;volatile
  8798  0047' 178B               	line	420
  8799                           ;mcc_generated_files/mtouch/mtouch_button.c: 420:     }
  8800                           	goto	l525
  8801  0048' 288A'              	line	421
  8802                           ;mcc_generated_files/mtouch/mtouch_button.c: 421:     else
  8803                           	
  8804                           l523:	
  8805  0049'                    	line	423
  8806                           	
  8807                           l1869:	
  8808  0049'                    ;mcc_generated_files/mtouch/mtouch_button.c: 422:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 423:         button->baseline -= (button->baseline) >> ((uint8_t)4);
  8809                           	movf	(Button_Baseline_Update@button),w
  8810  0049' 0806'              	addlw	05h
  8811  004A' 3E05               	movwf	fsr1l
  8812  004B' 0086               	clrf fsr1h	
  8813  004C' 0187               	
  8814                           	moviw	[0]fsr1
  8815  004D' 3F40               	movwf	((??_Button_Baseline_Update+0)+0+0)
  8816  004E' 0080'              	moviw	[1]fsr1
  8817  004F' 3F41               	movwf	((??_Button_Baseline_Update+0)+0+1)
  8818  0050' 0081'              	moviw	[2]fsr1
  8819  0051' 3F42               	movwf	((??_Button_Baseline_Update+0)+0+2)
  8820  0052' 0082'              	moviw	[3]fsr1
  8821  0053' 3F43               	movwf	((??_Button_Baseline_Update+0)+0+3)
  8822  0054' 0083'              	movlw	04h
  8823  0055' 3004               u1055:
  8824  0056'                    	lsrf	(??_Button_Baseline_Update+0)+3,f
  8825  0056' 3683'              	rrf	(??_Button_Baseline_Update+0)+2,f
  8826  0057' 0C82'              	rrf	(??_Button_Baseline_Update+0)+1,f
  8827  0058' 0C81'              	rrf	(??_Button_Baseline_Update+0)+0,f
  8828  0059' 0C80'              u1050:
  8829  005A'                    	decfsz	wreg,f
  8830  005A' 0B89               	goto	u1055
  8831  005B' 2856'              	movf	(Button_Baseline_Update@button),w
  8832  005C' 0806'              	addlw	05h
  8833  005D' 3E05               	movwf	fsr1l
  8834  005E' 0086               	clrf fsr1h	
  8835  005F' 0187               	
  8836                           	movf	0+(??_Button_Baseline_Update+0)+0,w
  8837  0060' 0800'              	subwf	indf1,f
  8838  0061' 0281               	addfsr	fsr1,1
  8839  0062' 3141               	movf	1+(??_Button_Baseline_Update+0)+0,w
  8840  0063' 0801'              	subwfb	indf1,f
  8841  0064' 3B81               	addfsr	fsr1,1
  8842  0065' 3141               	movf	2+(??_Button_Baseline_Update+0)+0,w
  8843  0066' 0802'              	subwfb	indf1,f
  8844  0067' 3B81               	addfsr	fsr1,1
  8845  0068' 3141               	movf	3+(??_Button_Baseline_Update+0)+0,w
  8846  0069' 0803'              	subwfb	indf1,f
  8847  006A' 3B81               	addfsr	fsr1,-3
  8848  006B' 317D               	line	424
  8849                           ;mcc_generated_files/mtouch/mtouch_button.c: 424:         button->baseline += button->re
                                 ading;
  8850                           	movf	(Button_Baseline_Update@button),w
  8851  006C' 0806'              	addlw	03h
  8852  006D' 3E03               	movwf	fsr1l
  8853  006E' 0086               	clrf fsr1h	
  8854  006F' 0187               	
  8855                           	moviw	[0]fsr1
  8856  0070' 3F40               	movwf	(??_Button_Baseline_Update+0)+0
  8857  0071' 0080'              	moviw	[1]fsr1
  8858  0072' 3F41               	movwf	(??_Button_Baseline_Update+0)+0+1
  8859  0073' 0081'              	movf	0+(??_Button_Baseline_Update+0)+0,w
  8860  0074' 0800'              	movwf	((??_Button_Baseline_Update+2)+0)
  8861  0075' 0082'              	movf	1+(??_Button_Baseline_Update+0)+0,w
  8862  0076' 0801'              	movwf	((??_Button_Baseline_Update+2)+0+1)
  8863  0077' 0083'              	clrf	((??_Button_Baseline_Update+2)+0+2)
  8864  0078' 0184'              	clrf	((??_Button_Baseline_Update+2)+0+3)
  8865  0079' 0185'              	movf	(Button_Baseline_Update@button),w
  8866  007A' 0806'              	addlw	05h
  8867  007B' 3E05               	movwf	fsr1l
  8868  007C' 0086               	clrf fsr1h	
  8869  007D' 0187               	
  8870                           	movf	0+(??_Button_Baseline_Update+2)+0,w
  8871  007E' 0802'              	addwf	indf1,f
  8872  007F' 0781               	addfsr	fsr1,1
  8873  0080' 3141               	movf	1+(??_Button_Baseline_Update+2)+0,w
  8874  0081' 0803'              	addwfc	indf1,f
  8875  0082' 3D81               	addfsr	fsr1,1
  8876  0083' 3141               	movf	2+(??_Button_Baseline_Update+2)+0,w
  8877  0084' 0804'              	addwfc	indf1,f
  8878  0085' 3D81               	addfsr	fsr1,1
  8879  0086' 3141               	movf	3+(??_Button_Baseline_Update+2)+0,w
  8880  0087' 0805'              	addwfc	indf1,f
  8881  0088' 3D81               
  8882                           	goto	l525
  8883  0089' 288A'              	line	425
  8884                           ;mcc_generated_files/mtouch/mtouch_button.c: 425:     }
  8885                           	
  8886                           l524:	
  8887  008A'                    	line	426
  8888                           	
  8889                           l525:	
  8890  008A'                    	return
  8891  008A' 0008               	opt stack 0
  8892                           GLOBAL	__end_of_Button_Baseline_Update
  8893                           	__end_of_Button_Baseline_Update:
  8894  008B'                    	signat	_Button_Baseline_Update,4217
  8895                           	global	_Button_Baseline_Initialize
  8896                           
  8897 ;; *************** function _Button_Baseline_Initialize *****************
  8898 ;; Defined at:
  8899 ;;		line 406 in file "mcc_generated_files/mtouch/mtouch_button.c"
  8900 ;; Parameters:    Size  Location     Type
  8901 ;;  button          1    wreg     PTR struct .
  8902 ;;		 -> mtouch_button(16), 
  8903 ;; Auto vars:     Size  Location     Type
  8904 ;;  button          1   12[BANK0 ] PTR struct .
  8905 ;;		 -> mtouch_button(16), 
  8906 ;; Return value:  Size  Location     Type
  8907 ;;                  1    wreg      void 
  8908 ;; Registers used:
  8909 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8910 ;; Tracked objects:
  8911 ;;		On entry : 0/0
  8912 ;;		On exit  : 0/0
  8913 ;;		Unchanged: 0/0
  8914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8915 ;;      Params:         0       0       0       0
  8916 ;;      Locals:         0       1       0       0
  8917 ;;      Temps:          0       4       0       0
  8918 ;;      Totals:         0       5       0       0
  8919 ;;Total ram usage:        5 bytes
  8920 ;; Hardware stack levels used:    1
  8921 ;; Hardware stack levels required when called:    6
  8922 ;; This function calls:
  8923 ;;		_MTOUCH_Sensor_RawSample_Get
  8924 ;; This function is called by:
  8925 ;;		_Button_State_Initializing
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           psect	text44,local,class=CODE,delta=2,merge=1,group=0
  8929                           	line	406
  8930                           global __ptext44
  8931                           __ptext44:	;psect for function _Button_Baseline_Initialize
  8932  0000'                    psect	text44
  8933                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  8934                           	line	406
  8935                           	global	__size_of_Button_Baseline_Initialize
  8936                           	__size_of_Button_Baseline_Initialize	equ	__end_of_Button_Baseline_Initialize-_Button_Ba
                                 seline_Initialize
  8937  002C                     	
  8938                           _Button_Baseline_Initialize:	
  8939  0000'                    ;incstack = 0
  8940                           	opt	stack 5
  8941                           ; Regs used in _Button_Baseline_Initialize: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
                                 stack]
  8942                           ;Button_Baseline_Initialize@button stored from wreg
  8943                           	movlb 0	; select bank0
  8944  0000' 0020               	movwf	(Button_Baseline_Initialize@button)
  8945  0001' 008C'              	line	408
  8946                           	
  8947                           l1857:	
  8948  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 406: static void Button_Baseline_Initialize
                                 (mtouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 407: {;mcc_generat
                                 ed_files/mtouch/mtouch_button.c: 408:     button->baseline = MTOUCH_Sensor_RawSample_Get
                                 (button->sensor);
  8949                           	incf	(Button_Baseline_Initialize@button),w
  8950  0002' 0A0C'              	movwf	fsr1l
  8951  0003' 0086               	clrf fsr1h	
  8952  0004' 0187               	
  8953                           	movf	indf1,w
  8954  0005' 0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  8955  0006' 3180' 2000' 3180'  	movlb 0	; select bank0
  8956  0009' 0020               	movf	(0+(?_MTOUCH_Sensor_RawSample_Get)),w
  8957  000A' 0804'              	movwf	((??_Button_Baseline_Initialize+0)+0)
  8958  000B' 0088'              	movf	(1+(?_MTOUCH_Sensor_RawSample_Get)),w
  8959  000C' 0805'              	movwf	((??_Button_Baseline_Initialize+0)+0+1)
  8960  000D' 0089'              	clrf	((??_Button_Baseline_Initialize+0)+0+2)
  8961  000E' 018A'              	clrf	((??_Button_Baseline_Initialize+0)+0+3)
  8962  000F' 018B'              	movf	(Button_Baseline_Initialize@button),w
  8963  0010' 080C'              	addlw	05h
  8964  0011' 3E05               	movwf	fsr1l
  8965  0012' 0086               	clrf fsr1h	
  8966  0013' 0187               	
  8967                           	movf	0+(??_Button_Baseline_Initialize+0)+0,w
  8968  0014' 0808'              	movwi	[0]fsr1
  8969  0015' 3FC0               	movf	1+(??_Button_Baseline_Initialize+0)+0,w
  8970  0016' 0809'              	movwi	[1]fsr1
  8971  0017' 3FC1               	movf	2+(??_Button_Baseline_Initialize+0)+0,w
  8972  0018' 080A'              	movwi	[2]fsr1
  8973  0019' 3FC2               	movf	3+(??_Button_Baseline_Initialize+0)+0,w
  8974  001A' 080B'              	movwi	[3]fsr1
  8975  001B' 3FC3               	line	409
  8976                           	
  8977                           l1859:	
  8978  001C'                    ;mcc_generated_files/mtouch/mtouch_button.c: 409:     button->baseline <<= ((uint8_t)4);
                                 
  8979                           	movf	(Button_Baseline_Initialize@button),w
  8980  001C' 080C'              	addlw	05h
  8981  001D' 3E05               	movwf	fsr1l
  8982  001E' 0086               	clrf fsr1h	
  8983  001F' 0187               	
  8984                           	movlw	04h
  8985  0020' 3004               u1025:
  8986  0021'                    	lslf	indf1,f
  8987  0021' 3581               	addfsr	fsr1,1
  8988  0022' 3141               	rlf	indf1,f
  8989  0023' 0D81               	addfsr	fsr1,1
  8990  0024' 3141               	rlf	indf1,f
  8991  0025' 0D81               	addfsr	fsr1,1
  8992  0026' 3141               	rlf	indf1,f
  8993  0027' 0D81               	addfsr	fsr1,-3
  8994  0028' 317D               	decfsz	wreg,f
  8995  0029' 0B89               	goto	u1025
  8996  002A' 2821'              	line	410
  8997                           	
  8998                           l520:	
  8999  002B'                    	return
  9000  002B' 0008               	opt stack 0
  9001                           GLOBAL	__end_of_Button_Baseline_Initialize
  9002                           	__end_of_Button_Baseline_Initialize:
  9003  002C'                    	signat	_Button_Baseline_Initialize,4217
  9004                           	global	_Button_Reading_Update
  9005                           
  9006 ;; *************** function _Button_Reading_Update *****************
  9007 ;; Defined at:
  9008 ;;		line 390 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9009 ;; Parameters:    Size  Location     Type
  9010 ;;  button          1    wreg     PTR struct .
  9011 ;;		 -> mtouch_button(16), 
  9012 ;; Auto vars:     Size  Location     Type
  9013 ;;  button          1   10[BANK0 ] PTR struct .
  9014 ;;		 -> mtouch_button(16), 
  9015 ;; Return value:  Size  Location     Type
  9016 ;;                  1    wreg      void 
  9017 ;; Registers used:
  9018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9019 ;; Tracked objects:
  9020 ;;		On entry : 0/0
  9021 ;;		On exit  : 0/0
  9022 ;;		Unchanged: 0/0
  9023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9024 ;;      Params:         0       0       0       0
  9025 ;;      Locals:         0       1       0       0
  9026 ;;      Temps:          0       2       0       0
  9027 ;;      Totals:         0       3       0       0
  9028 ;;Total ram usage:        3 bytes
  9029 ;; Hardware stack levels used:    1
  9030 ;; Hardware stack levels required when called:    6
  9031 ;; This function calls:
  9032 ;;		_MTOUCH_Sensor_RawSample_Get
  9033 ;; This function is called by:
  9034 ;;		_Button_Service
  9035 ;; This function uses a non-reentrant model
  9036 ;;
  9037                           psect	text45,local,class=CODE,delta=2,merge=1,group=0
  9038                           	line	390
  9039                           global __ptext45
  9040                           __ptext45:	;psect for function _Button_Reading_Update
  9041  0000'                    psect	text45
  9042                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  9043                           	line	390
  9044                           	global	__size_of_Button_Reading_Update
  9045                           	__size_of_Button_Reading_Update	equ	__end_of_Button_Reading_Update-_Button_Reading_Upda
                                 te
  9046  006B                     	
  9047                           _Button_Reading_Update:	
  9048  0000'                    ;incstack = 0
  9049                           	opt	stack 6
  9050                           ; Regs used in _Button_Reading_Update: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
                                 ]
  9051                           ;Button_Reading_Update@button stored from wreg
  9052                           	movlb 0	; select bank0
  9053  0000' 0020               	movwf	(Button_Reading_Update@button)
  9054  0001' 008A'              	line	392
  9055                           	
  9056                           l1947:	
  9057  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 390: static void Button_Reading_Update(mtou
                                 ch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 391: {;mcc_generated_fi
                                 les/mtouch/mtouch_button.c: 392:     if (GIE == (uint8_t)1)
  9058                           	btfss	(95/8),(95)&7	;volatile
  9059  0002' 1F8B               	goto	u1121
  9060  0003' 2805'              	goto	u1120
  9061  0004' 2806'              u1121:
  9062  0005'                    	goto	l1957
  9063  0005' 2839'              u1120:
  9064  0006'                    	line	394
  9065                           	
  9066                           l1949:	
  9067  0006'                    ;mcc_generated_files/mtouch/mtouch_button.c: 393:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 394:         GIE = (uint8_t)0;
  9068                           	bcf	(95/8),(95)&7	;volatile
  9069  0006' 138B               	line	395
  9070                           	
  9071                           l1951:	
  9072  0007'                    ;mcc_generated_files/mtouch/mtouch_button.c: 395:         button->reading -= button->rea
                                 ding>>(uint8_t)2;
  9073                           	movf	(Button_Reading_Update@button),w
  9074  0007' 080A'              	addlw	03h
  9075  0008' 3E03               	movwf	fsr1l
  9076  0009' 0086               	clrf fsr1h	
  9077  000A' 0187               	
  9078                           	moviw	[0]fsr1
  9079  000B' 3F40               	movwf	(??_Button_Reading_Update+0)+0
  9080  000C' 0088'              	moviw	[1]fsr1
  9081  000D' 3F41               	movwf	(??_Button_Reading_Update+0)+0+1
  9082  000E' 0089'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9083  000F' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9084  0010' 0C88'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9085  0011' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9086  0012' 0C88'              	movf	(Button_Reading_Update@button),w
  9087  0013' 080A'              	addlw	03h
  9088  0014' 3E03               	movwf	fsr1l
  9089  0015' 0086               	clrf fsr1h	
  9090  0016' 0187               	
  9091                           	movf	0+(??_Button_Reading_Update+0)+0,w
  9092  0017' 0808'              	subwf	indf1,f
  9093  0018' 0281               	addfsr	fsr1,1
  9094  0019' 3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  9095  001A' 0809'              	subwfb	indf1,f
  9096  001B' 3B81               	addfsr	fsr1,-1
  9097  001C' 317F               	line	396
  9098                           	
  9099                           l1953:	
  9100  001D'                    ;mcc_generated_files/mtouch/mtouch_button.c: 396:         button->reading += MTOUCH_Sens
                                 or_RawSample_Get(button->sensor)>>(uint8_t)2;
  9101                           	incf	(Button_Reading_Update@button),w
  9102  001D' 0A0A'              	movwf	fsr1l
  9103  001E' 0086               	clrf fsr1h	
  9104  001F' 0187               	
  9105                           	movf	indf1,w
  9106  0020' 0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  9107  0021' 3180' 2000' 3180'  	movlb 0	; select bank0
  9108  0024' 0020               	movf	(0+?_MTOUCH_Sensor_RawSample_Get),w
  9109  0025' 0804'              	movwf	(??_Button_Reading_Update+0)+0
  9110  0026' 0088'              	movf	(1+?_MTOUCH_Sensor_RawSample_Get),w
  9111  0027' 0805'              	movwf	((??_Button_Reading_Update+0)+0+1)
  9112  0028' 0089'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9113  0029' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9114  002A' 0C88'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9115  002B' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9116  002C' 0C88'              	movf	(Button_Reading_Update@button),w
  9117  002D' 080A'              	addlw	03h
  9118  002E' 3E03               	movwf	fsr1l
  9119  002F' 0086               	clrf fsr1h	
  9120  0030' 0187               	
  9121                           	movf	0+(??_Button_Reading_Update+0)+0,w
  9122  0031' 0808'              	addwf	indf1,f
  9123  0032' 0781               	addfsr	fsr1,1
  9124  0033' 3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  9125  0034' 0809'              	addwfc	indf1,f
  9126  0035' 3D81               	addfsr	fsr1,-1
  9127  0036' 317F               	line	397
  9128                           	
  9129                           l1955:	
  9130  0037'                    ;mcc_generated_files/mtouch/mtouch_button.c: 397:         GIE = (uint8_t)1;
  9131                           	bsf	(95/8),(95)&7	;volatile
  9132  0037' 178B               	line	398
  9133                           ;mcc_generated_files/mtouch/mtouch_button.c: 398:     }
  9134                           	goto	l517
  9135  0038' 286A'              	line	399
  9136                           ;mcc_generated_files/mtouch/mtouch_button.c: 399:     else
  9137                           	
  9138                           l515:	
  9139  0039'                    	line	401
  9140                           	
  9141                           l1957:	
  9142  0039'                    ;mcc_generated_files/mtouch/mtouch_button.c: 400:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 401:         button->reading -= button->reading>>(uint8_t)2;
  9143                           	movf	(Button_Reading_Update@button),w
  9144  0039' 080A'              	addlw	03h
  9145  003A' 3E03               	movwf	fsr1l
  9146  003B' 0086               	clrf fsr1h	
  9147  003C' 0187               	
  9148                           	moviw	[0]fsr1
  9149  003D' 3F40               	movwf	(??_Button_Reading_Update+0)+0
  9150  003E' 0088'              	moviw	[1]fsr1
  9151  003F' 3F41               	movwf	(??_Button_Reading_Update+0)+0+1
  9152  0040' 0089'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9153  0041' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9154  0042' 0C88'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9155  0043' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9156  0044' 0C88'              	movf	(Button_Reading_Update@button),w
  9157  0045' 080A'              	addlw	03h
  9158  0046' 3E03               	movwf	fsr1l
  9159  0047' 0086               	clrf fsr1h	
  9160  0048' 0187               	
  9161                           	movf	0+(??_Button_Reading_Update+0)+0,w
  9162  0049' 0808'              	subwf	indf1,f
  9163  004A' 0281               	addfsr	fsr1,1
  9164  004B' 3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  9165  004C' 0809'              	subwfb	indf1,f
  9166  004D' 3B81               	addfsr	fsr1,-1
  9167  004E' 317F               	line	402
  9168                           	
  9169                           l1959:	
  9170  004F'                    ;mcc_generated_files/mtouch/mtouch_button.c: 402:         button->reading += MTOUCH_Sens
                                 or_RawSample_Get(button->sensor)>>(uint8_t)2;
  9171                           	incf	(Button_Reading_Update@button),w
  9172  004F' 0A0A'              	movwf	fsr1l
  9173  0050' 0086               	clrf fsr1h	
  9174  0051' 0187               	
  9175                           	movf	indf1,w
  9176  0052' 0801               	fcall	_MTOUCH_Sensor_RawSample_Get
  9177  0053' 3180' 2000' 3180'  	movlb 0	; select bank0
  9178  0056' 0020               	movf	(0+?_MTOUCH_Sensor_RawSample_Get),w
  9179  0057' 0804'              	movwf	(??_Button_Reading_Update+0)+0
  9180  0058' 0088'              	movf	(1+?_MTOUCH_Sensor_RawSample_Get),w
  9181  0059' 0805'              	movwf	((??_Button_Reading_Update+0)+0+1)
  9182  005A' 0089'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9183  005B' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9184  005C' 0C88'              	lsrf	(??_Button_Reading_Update+0)+1,f
  9185  005D' 3689'              	rrf	(??_Button_Reading_Update+0)+0,f
  9186  005E' 0C88'              	movf	(Button_Reading_Update@button),w
  9187  005F' 080A'              	addlw	03h
  9188  0060' 3E03               	movwf	fsr1l
  9189  0061' 0086               	clrf fsr1h	
  9190  0062' 0187               	
  9191                           	movf	0+(??_Button_Reading_Update+0)+0,w
  9192  0063' 0808'              	addwf	indf1,f
  9193  0064' 0781               	addfsr	fsr1,1
  9194  0065' 3141               	movf	1+(??_Button_Reading_Update+0)+0,w
  9195  0066' 0809'              	addwfc	indf1,f
  9196  0067' 3D81               	addfsr	fsr1,-1
  9197  0068' 317F               	goto	l517
  9198  0069' 286A'              	line	403
  9199                           ;mcc_generated_files/mtouch/mtouch_button.c: 403:     }
  9200                           	
  9201                           l516:	
  9202  006A'                    	line	404
  9203                           	
  9204                           l517:	
  9205  006A'                    	return
  9206  006A' 0008               	opt stack 0
  9207                           GLOBAL	__end_of_Button_Reading_Update
  9208                           	__end_of_Button_Reading_Update:
  9209  006B'                    	signat	_Button_Reading_Update,4217
  9210                           	global	_MTOUCH_Sensor_RawSample_Get
  9211                           
  9212 ;; *************** function _MTOUCH_Sensor_RawSample_Get *****************
  9213 ;; Defined at:
  9214 ;;		line 466 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  name            1    wreg     enum E2110
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;  name            1    7[BANK0 ] enum E2110
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  2    4[BANK0 ] unsigned short 
  9221 ;; Registers used:
  9222 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9228 ;;      Params:         0       2       0       0
  9229 ;;      Locals:         0       1       0       0
  9230 ;;      Temps:          0       1       0       0
  9231 ;;      Totals:         0       4       0       0
  9232 ;;Total ram usage:        4 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; Hardware stack levels required when called:    5
  9235 ;; This function calls:
  9236 ;;		___bmul
  9237 ;; This function is called by:
  9238 ;;		_Button_Reading_Update
  9239 ;;		_Button_Baseline_Initialize
  9240 ;; This function uses a non-reentrant model
  9241 ;;
  9242                           psect	text46,local,class=CODE,delta=2,merge=1,group=0
  9243                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  9244                           	line	466
  9245                           global __ptext46
  9246                           __ptext46:	;psect for function _MTOUCH_Sensor_RawSample_Get
  9247  0000'                    psect	text46
  9248                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
  9249                           	line	466
  9250                           	global	__size_of_MTOUCH_Sensor_RawSample_Get
  9251                           	__size_of_MTOUCH_Sensor_RawSample_Get	equ	__end_of_MTOUCH_Sensor_RawSample_Get-_MTOUCH_
                                 Sensor_RawSample_Get
  9252  0020                     	
  9253                           _MTOUCH_Sensor_RawSample_Get:	
  9254  0000'                    ;incstack = 0
  9255                           	opt	stack 5
  9256                           ; Regs used in _MTOUCH_Sensor_RawSample_Get: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
                                 cstack]
  9257                           ;MTOUCH_Sensor_RawSample_Get@name stored from wreg
  9258                           	movlb 0	; select bank0
  9259  0000' 0020               	movwf	(MTOUCH_Sensor_RawSample_Get@name)
  9260  0001' 0087'              	line	468
  9261                           	
  9262                           l1783:	
  9263  0002'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 466: mtouch_sensor_sample_t MTOUCH_Sensor_R
                                 awSample_Get(enum mtouch_sensor_names name);mcc_generated_files/mtouch/mtouch_sensor.c: 
                                 467: {;mcc_generated_files/mtouch/mtouch_sensor.c: 468:     if (name < 1)
  9264                           	movf	((MTOUCH_Sensor_RawSample_Get@name)),w
  9265  0002' 0807'              	btfss	status,2
  9266  0003' 1D03               	goto	u941
  9267  0004' 2806'              	goto	u940
  9268  0005' 2807'              u941:
  9269  0006'                    	goto	l1791
  9270  0006' 281B'              u940:
  9271  0007'                    	line	470
  9272                           	
  9273                           l1785:	
  9274  0007'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 469:     {;mcc_generated_files/mtouch/mtouc
                                 h_sensor.c: 470:         return mtouch_sensor[name].rawSample;
  9275                           	movlw	low(09h)
  9276  0007' 3009               	movwf	(??_MTOUCH_Sensor_RawSample_Get+0)+0
  9277  0008' 0086'              	movf	(??_MTOUCH_Sensor_RawSample_Get+0)+0,w
  9278  0009' 0806'              	movwf	(___bmul@multiplicand)
  9279  000A' 0080'              	movf	(MTOUCH_Sensor_RawSample_Get@name),w
  9280  000B' 0807'              	fcall	___bmul
  9281  000C' 3180' 2000' 3180'  	addlw	06h
  9282  000F' 3E06               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
  9283  0010' 3E00'              	movwf	fsr1l
  9284  0011' 0086               	clrf fsr1h	
  9285  0012' 0187               	
  9286                           	moviw	[0]fsr1
  9287  0013' 3F40               	movlb 0	; select bank0
  9288  0014' 0020               	movwf	(?_MTOUCH_Sensor_RawSample_Get)
  9289  0015' 0084'              	moviw	[1]fsr1
  9290  0016' 3F41               	movwf	(?_MTOUCH_Sensor_RawSample_Get+1)
  9291  0017' 0085'              	goto	l321
  9292  0018' 281F'              	
  9293                           l1787:	
  9294  0019'                    	goto	l321
  9295  0019' 281F'              	line	471
  9296                           	
  9297                           l1789:	
  9298  001A'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 471:     }
  9299                           	goto	l321
  9300  001A' 281F'              	line	472
  9301                           ;mcc_generated_files/mtouch/mtouch_sensor.c: 472:     else
  9302                           	
  9303                           l320:	
  9304  001B'                    	line	473
  9305                           	
  9306                           l1791:	
  9307  001B'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 473:         return (mtouch_sensor_sample_t
                                 )0;
  9308                           	clrf	(?_MTOUCH_Sensor_RawSample_Get)
  9309  001B' 0184'              	clrf	(?_MTOUCH_Sensor_RawSample_Get+1)
  9310  001C' 0185'              	goto	l321
  9311  001D' 281F'              	
  9312                           l1793:	
  9313  001E'                    	goto	l321
  9314  001E' 281F'              	
  9315                           l322:	
  9316  001F'                    	line	474
  9317                           	
  9318                           l321:	
  9319  001F'                    	return
  9320  001F' 0008               	opt stack 0
  9321                           GLOBAL	__end_of_MTOUCH_Sensor_RawSample_Get
  9322                           	__end_of_MTOUCH_Sensor_RawSample_Get:
  9323  0020'                    	signat	_MTOUCH_Sensor_RawSample_Get,4218
  9324                           	global	___bmul
  9325                           
  9326 ;; *************** function ___bmul *****************
  9327 ;; Defined at:
  9328 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;  multiplier      1    wreg     unsigned char 
  9331 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  multiplier      1    3[BANK0 ] unsigned char 
  9334 ;;  product         1    2[BANK0 ] unsigned char 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      unsigned char 
  9337 ;; Registers used:
  9338 ;;		wreg, status,2, status,0
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9344 ;;      Params:         0       1       0       0
  9345 ;;      Locals:         0       2       0       0
  9346 ;;      Temps:          0       1       0       0
  9347 ;;      Totals:         0       4       0       0
  9348 ;;Total ram usage:        4 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    4
  9351 ;; This function calls:
  9352 ;;		Nothing
  9353 ;; This function is called by:
  9354 ;;		_MTOUCH_Sensor_Initialize
  9355 ;;		_Sensor_Service
  9356 ;;		_Sensor_Acq_ExecuteScan
  9357 ;;		_MTOUCH_Sensor_RawSample_Get
  9358 ;;		_MTOUCH_Sensor_wasSampled
  9359 ;; This function uses a non-reentrant model
  9360 ;;
  9361                           psect	text47,local,class=CODE,delta=2,merge=1,group=1
  9362                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9363                           	line	4
  9364                           global __ptext47
  9365                           __ptext47:	;psect for function ___bmul
  9366  0000'                    psect	text47
  9367                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
  9368                           	line	4
  9369                           	global	__size_of___bmul
  9370                           	__size_of___bmul	equ	__end_of___bmul-___bmul
  9371  001A                     	
  9372                           ___bmul:	
  9373  0000'                    ;incstack = 0
  9374                           	opt	stack 7
  9375                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9376                           ;___bmul@multiplier stored from wreg
  9377                           	movlb 0	; select bank0
  9378  0000' 0020               	movwf	(___bmul@multiplier)
  9379  0001' 0083'              	line	6
  9380                           	
  9381                           l1751:	
  9382  0002'                    	clrf	(___bmul@product)
  9383  0002' 0182'              	goto	l1753
  9384  0003' 2804'              	line	42
  9385                           	
  9386                           l594:	
  9387  0004'                    	line	43
  9388                           	
  9389                           l1753:	
  9390  0004'                    	btfss	(___bmul@multiplier),(0)&7
  9391  0004' 1C03'              	goto	u921
  9392  0005' 2807'              	goto	u920
  9393  0006' 2808'              u921:
  9394  0007'                    	goto	l1757
  9395  0007' 280D'              u920:
  9396  0008'                    	line	44
  9397                           	
  9398                           l1755:	
  9399  0008'                    	movf	(___bmul@multiplicand),w
  9400  0008' 0800'              	movwf	(??___bmul+0)+0
  9401  0009' 0081'              	movf	(??___bmul+0)+0,w
  9402  000A' 0801'              	addwf	(___bmul@product),f
  9403  000B' 0782'              	goto	l1757
  9404  000C' 280D'              	
  9405                           l595:	
  9406  000D'                    	line	45
  9407                           	
  9408                           l1757:	
  9409  000D'                    	clrc
  9410  000D' 1003               	rlf	(___bmul@multiplicand),f
  9411  000E' 0D80'              
  9412                           	line	46
  9413                           	
  9414                           l1759:	
  9415  000F'                    	clrc
  9416  000F' 1003               	rrf	(___bmul@multiplier),f
  9417  0010' 0C83'              
  9418                           	line	47
  9419                           	movf	((___bmul@multiplier)),w
  9420  0011' 0803'              	btfss	status,2
  9421  0012' 1D03               	goto	u931
  9422  0013' 2815'              	goto	u930
  9423  0014' 2816'              u931:
  9424  0015'                    	goto	l1753
  9425  0015' 2804'              u930:
  9426  0016'                    	goto	l1761
  9427  0016' 2817'              	
  9428                           l596:	
  9429  0017'                    	line	50
  9430                           	
  9431                           l1761:	
  9432  0017'                    	movf	(___bmul@product),w
  9433  0017' 0802'              	goto	l597
  9434  0018' 2819'              	
  9435                           l1763:	
  9436  0019'                    	line	51
  9437                           	
  9438                           l597:	
  9439  0019'                    	return
  9440  0019' 0008               	opt stack 0
  9441                           GLOBAL	__end_of___bmul
  9442                           	__end_of___bmul:
  9443  001A'                    	signat	___bmul,8313
  9444                           	global	_Button_Deviation_Update
  9445                           
  9446 ;; *************** function _Button_Deviation_Update *****************
  9447 ;; Defined at:
  9448 ;;		line 341 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  button          1    wreg     PTR struct .
  9451 ;;		 -> mtouch_button(16), 
  9452 ;; Auto vars:     Size  Location     Type
  9453 ;;  button          1   10[BANK0 ] PTR struct .
  9454 ;;		 -> mtouch_button(16), 
  9455 ;;  deviation       4   11[BANK0 ] long 
  9456 ;; Return value:  Size  Location     Type
  9457 ;;                  1    wreg      void 
  9458 ;; Registers used:
  9459 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9460 ;; Tracked objects:
  9461 ;;		On entry : 0/0
  9462 ;;		On exit  : 0/0
  9463 ;;		Unchanged: 0/0
  9464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9465 ;;      Params:         0       0       0       0
  9466 ;;      Locals:         0       5       0       0
  9467 ;;      Temps:          0      10       0       0
  9468 ;;      Totals:         0      15       0       0
  9469 ;;Total ram usage:       15 bytes
  9470 ;; Hardware stack levels used:    1
  9471 ;; Hardware stack levels required when called:    4
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		_Button_Service
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           psect	text48,local,class=CODE,delta=2,merge=1,group=0
  9479                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  9480                           	line	341
  9481                           global __ptext48
  9482                           __ptext48:	;psect for function _Button_Deviation_Update
  9483  0000'                    psect	text48
  9484                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  9485                           	line	341
  9486                           	global	__size_of_Button_Deviation_Update
  9487                           	__size_of_Button_Deviation_Update	equ	__end_of_Button_Deviation_Update-_Button_Deviatio
                                 n_Update
  9488  0094                     	
  9489                           _Button_Deviation_Update:	
  9490  0000'                    ;incstack = 0
  9491                           	opt	stack 8
  9492                           ; Regs used in _Button_Deviation_Update: [wreg+fsr1l+fsr1h+status,2+status,0]
  9493                           ;Button_Deviation_Update@button stored from wreg
  9494                           	movlb 0	; select bank0
  9495  0000' 0020               	movwf	(Button_Deviation_Update@button)
  9496  0001' 008A'              	line	345
  9497                           	
  9498                           l1961:	
  9499  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 341: static void Button_Deviation_Update(mt
                                 ouch_button_t* button);mcc_generated_files/mtouch/mtouch_button.c: 342: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 343:     int32_t deviation;;mcc_generated_files/mtouch/mto
                                 uch_button.c: 345:     deviation = (int32_t)((int32_t)(button->reading) - (int32_t)((but
                                 ton->baseline)>>((uint8_t)4)));
  9500                           	movf	(Button_Deviation_Update@button),w
  9501  0002' 080A'              	addlw	05h
  9502  0003' 3E05               	movwf	fsr1l
  9503  0004' 0086               	clrf fsr1h	
  9504  0005' 0187               	
  9505                           	moviw	[0]fsr1
  9506  0006' 3F40               	movwf	((??_Button_Deviation_Update+0)+0+0)
  9507  0007' 0080'              	moviw	[1]fsr1
  9508  0008' 3F41               	movwf	((??_Button_Deviation_Update+0)+0+1)
  9509  0009' 0081'              	moviw	[2]fsr1
  9510  000A' 3F42               	movwf	((??_Button_Deviation_Update+0)+0+2)
  9511  000B' 0082'              	moviw	[3]fsr1
  9512  000C' 3F43               	movwf	((??_Button_Deviation_Update+0)+0+3)
  9513  000D' 0083'              	movlw	04h
  9514  000E' 3004               u1135:
  9515  000F'                    	lsrf	(??_Button_Deviation_Update+0)+3,f
  9516  000F' 3683'              	rrf	(??_Button_Deviation_Update+0)+2,f
  9517  0010' 0C82'              	rrf	(??_Button_Deviation_Update+0)+1,f
  9518  0011' 0C81'              	rrf	(??_Button_Deviation_Update+0)+0,f
  9519  0012' 0C80'              u1130:
  9520  0013'                    	decfsz	wreg,f
  9521  0013' 0B89               	goto	u1135
  9522  0014' 280F'              	comf	(??_Button_Deviation_Update+0)+0,f
  9523  0015' 0980'              	comf	(??_Button_Deviation_Update+0)+1,f
  9524  0016' 0981'              	comf	(??_Button_Deviation_Update+0)+2,f
  9525  0017' 0982'              	comf	(??_Button_Deviation_Update+0)+3,f
  9526  0018' 0983'              	incf	(??_Button_Deviation_Update+0)+0,f
  9527  0019' 0A80'              	skipnz
  9528  001A' 1903               	incf	(??_Button_Deviation_Update+0)+1,f
  9529  001B' 0A81'              	skipnz
  9530  001C' 1903               	incf	(??_Button_Deviation_Update+0)+2,f
  9531  001D' 0A82'              	skipnz
  9532  001E' 1903               	incf	(??_Button_Deviation_Update+0)+3,f
  9533  001F' 0A83'              	movf	(Button_Deviation_Update@button),w
  9534  0020' 080A'              	addlw	03h
  9535  0021' 3E03               	movwf	fsr1l
  9536  0022' 0086               	clrf fsr1h	
  9537  0023' 0187               	
  9538                           	moviw	[0]fsr1
  9539  0024' 3F40               	movwf	(??_Button_Deviation_Update+4)+0
  9540  0025' 0084'              	moviw	[1]fsr1
  9541  0026' 3F41               	movwf	(??_Button_Deviation_Update+4)+0+1
  9542  0027' 0085'              	movf	0+(??_Button_Deviation_Update+4)+0,w
  9543  0028' 0804'              	movwf	((??_Button_Deviation_Update+6)+0)
  9544  0029' 0086'              	movf	1+(??_Button_Deviation_Update+4)+0,w
  9545  002A' 0805'              	movwf	((??_Button_Deviation_Update+6)+0+1)
  9546  002B' 0087'              	clrf	((??_Button_Deviation_Update+6)+0+2)
  9547  002C' 0188'              	clrf	((??_Button_Deviation_Update+6)+0+3)
  9548  002D' 0189'              	movf	0+(??_Button_Deviation_Update+6)+0,w
  9549  002E' 0806'              	addwf	(??_Button_Deviation_Update+0)+0,f
  9550  002F' 0780'              	movf	1+(??_Button_Deviation_Update+6)+0,w
  9551  0030' 0807'              	addwfc	(??_Button_Deviation_Update+0)+1,f
  9552  0031' 3D81'              	movf	2+(??_Button_Deviation_Update+6)+0,w
  9553  0032' 0808'              	addwfc	(??_Button_Deviation_Update+0)+2,f
  9554  0033' 3D82'              	movf	3+(??_Button_Deviation_Update+6)+0,w
  9555  0034' 0809'              	addwfc	(??_Button_Deviation_Update+0)+3,f
  9556  0035' 3D83'              	movf	3+(??_Button_Deviation_Update+0)+0,w
  9557  0036' 0803'              	movwf	(Button_Deviation_Update@deviation+3)
  9558  0037' 008E'              	movf	2+(??_Button_Deviation_Update+0)+0,w
  9559  0038' 0802'              	movwf	(Button_Deviation_Update@deviation+2)
  9560  0039' 008D'              	movf	1+(??_Button_Deviation_Update+0)+0,w
  9561  003A' 0801'              	movwf	(Button_Deviation_Update@deviation+1)
  9562  003B' 008C'              	movf	0+(??_Button_Deviation_Update+0)+0,w
  9563  003C' 0800'              	movwf	(Button_Deviation_Update@deviation)
  9564  003D' 008B'              
  9565                           	line	348
  9566                           ;mcc_generated_files/mtouch/mtouch_button.c: 348:     deviation = deviation >> (button->
                                 scaling);
  9567                           	movf	(Button_Deviation_Update@deviation),w
  9568  003E' 080B'              	movwf	(??_Button_Deviation_Update+0)+0
  9569  003F' 0080'              	movf	(Button_Deviation_Update@deviation+1),w
  9570  0040' 080C'              	movwf	((??_Button_Deviation_Update+0)+0+1)
  9571  0041' 0081'              	movf	(Button_Deviation_Update@deviation+2),w
  9572  0042' 080D'              	movwf	((??_Button_Deviation_Update+0)+0+2)
  9573  0043' 0082'              	movf	(Button_Deviation_Update@deviation+3),w
  9574  0044' 080E'              	movwf	((??_Button_Deviation_Update+0)+0+3)
  9575  0045' 0083'              	movf	(Button_Deviation_Update@button),w
  9576  0046' 080A'              	addlw	0Fh
  9577  0047' 3E0F               	movwf	fsr1l
  9578  0048' 0086               	clrf fsr1h	
  9579  0049' 0187               	
  9580                           	incf	indf1,w
  9581  004A' 0A01               	goto	u1140
  9582  004B' 2850'              u1145:
  9583  004C'                    	asrf	(??_Button_Deviation_Update+0)+3,f
  9584  004C' 3783'              	rrf	(??_Button_Deviation_Update+0)+2,f
  9585  004D' 0C82'              	rrf	(??_Button_Deviation_Update+0)+1,f
  9586  004E' 0C81'              	rrf	(??_Button_Deviation_Update+0)+0,f
  9587  004F' 0C80'              u1140:
  9588  0050'                    	decfsz	wreg,f
  9589  0050' 0B89               	goto	u1145
  9590  0051' 284C'              	movf	3+(??_Button_Deviation_Update+0)+0,w
  9591  0052' 0803'              	movwf	(Button_Deviation_Update@deviation+3)
  9592  0053' 008E'              	movf	2+(??_Button_Deviation_Update+0)+0,w
  9593  0054' 0802'              	movwf	(Button_Deviation_Update@deviation+2)
  9594  0055' 008D'              	movf	1+(??_Button_Deviation_Update+0)+0,w
  9595  0056' 0801'              	movwf	(Button_Deviation_Update@deviation+1)
  9596  0057' 008C'              	movf	0+(??_Button_Deviation_Update+0)+0,w
  9597  0058' 0800'              	movwf	(Button_Deviation_Update@deviation)
  9598  0059' 008B'              
  9599                           	line	351
  9600                           	
  9601                           l1963:	
  9602  005A'                    ;mcc_generated_files/mtouch/mtouch_button.c: 351:     if (deviation > ((0x7f)))
  9603                           	btfsc	(Button_Deviation_Update@deviation+3),7
  9604  005A' 1B8E'              	goto	u1151
  9605  005B' 286A'              	movf	(Button_Deviation_Update@deviation+3),w
  9606  005C' 080E'              	btfss	status,2
  9607  005D' 1D03               	goto	u1150
  9608  005E' 286B'              	movf	(Button_Deviation_Update@deviation+2),w
  9609  005F' 080D'              	btfss	status,2
  9610  0060' 1D03               	goto	u1150
  9611  0061' 286B'              	movf	(Button_Deviation_Update@deviation+1),w
  9612  0062' 080C'              	btfss	status,2
  9613  0063' 1D03               	goto	u1150
  9614  0064' 286B'              	movlw	128
  9615  0065' 3080               	subwf	 (Button_Deviation_Update@deviation),w
  9616  0066' 020B'              	btfss	status,0
  9617  0067' 1C03               	goto	u1151
  9618  0068' 286A'              	goto	u1150
  9619  0069' 286B'              
  9620                           u1151:
  9621  006A'                    	goto	l1967
  9622  006A' 2874'              u1150:
  9623  006B'                    	line	353
  9624                           	
  9625                           l1965:	
  9626  006B'                    ;mcc_generated_files/mtouch/mtouch_button.c: 352:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 353:         deviation = ((0x7f));
  9627                           	movlw	0
  9628  006B' 3000               	movwf	(Button_Deviation_Update@deviation+3)
  9629  006C' 008E'              	movlw	0
  9630  006D' 3000               	movwf	(Button_Deviation_Update@deviation+2)
  9631  006E' 008D'              	movlw	0
  9632  006F' 3000               	movwf	(Button_Deviation_Update@deviation+1)
  9633  0070' 008C'              	movlw	07Fh
  9634  0071' 307F               	movwf	(Button_Deviation_Update@deviation)
  9635  0072' 008B'              
  9636                           	goto	l1967
  9637  0073' 2874'              	line	354
  9638                           ;mcc_generated_files/mtouch/mtouch_button.c: 354:     }
  9639                           	
  9640                           l499:	
  9641  0074'                    	line	355
  9642                           	
  9643                           l1967:	
  9644  0074'                    ;mcc_generated_files/mtouch/mtouch_button.c: 355:     if (deviation < ((-1-0x7f)))
  9645                           	btfss	(Button_Deviation_Update@deviation+3),7
  9646  0074' 1F8E'              	goto	u1161
  9647  0075' 2881'              	movlw	128
  9648  0076' 3080               	subwf	 (Button_Deviation_Update@deviation),w
  9649  0077' 020B'              	movlw	255
  9650  0078' 30FF               	subwfb	(Button_Deviation_Update@deviation+1),w
  9651  0079' 3B0C'              	movlw	255
  9652  007A' 30FF               	subwfb	(Button_Deviation_Update@deviation+2),w
  9653  007B' 3B0D'              	movlw	255
  9654  007C' 30FF               	subwfb	(Button_Deviation_Update@deviation+3),w
  9655  007D' 3B0E'              	btfsc	status,0
  9656  007E' 1803               	goto	u1161
  9657  007F' 2881'              	goto	u1160
  9658  0080' 2882'              
  9659                           u1161:
  9660  0081'                    	goto	l1971
  9661  0081' 288B'              u1160:
  9662  0082'                    	line	357
  9663                           	
  9664                           l1969:	
  9665  0082'                    ;mcc_generated_files/mtouch/mtouch_button.c: 356:     {;mcc_generated_files/mtouch/mtouc
                                 h_button.c: 357:         deviation = ((-1-0x7f));
  9666                           	movlw	0FFh
  9667  0082' 30FF               	movwf	(Button_Deviation_Update@deviation+3)
  9668  0083' 008E'              	movlw	0FFh
  9669  0084' 30FF               	movwf	(Button_Deviation_Update@deviation+2)
  9670  0085' 008D'              	movlw	0FFh
  9671  0086' 30FF               	movwf	(Button_Deviation_Update@deviation+1)
  9672  0087' 008C'              	movlw	080h
  9673  0088' 3080               	movwf	(Button_Deviation_Update@deviation)
  9674  0089' 008B'              
  9675                           	goto	l1971
  9676  008A' 288B'              	line	358
  9677                           ;mcc_generated_files/mtouch/mtouch_button.c: 358:     }
  9678                           	
  9679                           l500:	
  9680  008B'                    	line	360
  9681                           	
  9682                           l1971:	
  9683  008B'                    ;mcc_generated_files/mtouch/mtouch_button.c: 360:     button->deviation = (mtouch_button
                                 _deviation_t)deviation;
  9684                           	movf	(Button_Deviation_Update@deviation),w
  9685  008B' 080B'              	movwf	(??_Button_Deviation_Update+0)+0
  9686  008C' 0080'              	movf	(Button_Deviation_Update@button),w
  9687  008D' 080A'              	addlw	09h
  9688  008E' 3E09               	movwf	fsr1l
  9689  008F' 0086               	clrf fsr1h	
  9690  0090' 0187               	
  9691                           	movf	(??_Button_Deviation_Update+0)+0,w
  9692  0091' 0800'              	movwf	indf1
  9693  0092' 0081               	line	361
  9694                           	
  9695                           l501:	
  9696  0093'                    	return
  9697  0093' 0008               	opt stack 0
  9698                           GLOBAL	__end_of_Button_Deviation_Update
  9699                           	__end_of_Button_Deviation_Update:
  9700  0094'                    	signat	_Button_Deviation_Update,4217
  9701                           	global	_MTOUCH_Button_isPressed
  9702                           
  9703 ;; *************** function _MTOUCH_Button_isPressed *****************
  9704 ;; Defined at:
  9705 ;;		line 317 in file "mcc_generated_files/mtouch/mtouch_button.c"
  9706 ;; Parameters:    Size  Location     Type
  9707 ;;  name            1    wreg     enum E2303
  9708 ;; Auto vars:     Size  Location     Type
  9709 ;;  name            1    1[BANK0 ] enum E2303
  9710 ;; Return value:  Size  Location     Type
  9711 ;;                  1    wreg      _Bool 
  9712 ;; Registers used:
  9713 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9714 ;; Tracked objects:
  9715 ;;		On entry : 0/0
  9716 ;;		On exit  : 0/0
  9717 ;;		Unchanged: 0/0
  9718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9719 ;;      Params:         0       0       0       0
  9720 ;;      Locals:         0       1       0       0
  9721 ;;      Temps:          0       1       0       0
  9722 ;;      Totals:         0       2       0       0
  9723 ;;Total ram usage:        2 bytes
  9724 ;; Hardware stack levels used:    1
  9725 ;; Hardware stack levels required when called:    4
  9726 ;; This function calls:
  9727 ;;		Nothing
  9728 ;; This function is called by:
  9729 ;;		_main
  9730 ;;		_MTOUCH_Button_Buttonmask_Get
  9731 ;; This function uses a non-reentrant model
  9732 ;;
  9733                           psect	text49,local,class=CODE,delta=2,merge=1,group=0
  9734                           	line	317
  9735                           global __ptext49
  9736                           __ptext49:	;psect for function _MTOUCH_Button_isPressed
  9737  0000'                    psect	text49
  9738                           	file	"mcc_generated_files/mtouch/mtouch_button.c"
  9739                           	line	317
  9740                           	global	__size_of_MTOUCH_Button_isPressed
  9741                           	__size_of_MTOUCH_Button_isPressed	equ	__end_of_MTOUCH_Button_isPressed-_MTOUCH_Button_i
                                 sPressed
  9742  0022                     	
  9743                           _MTOUCH_Button_isPressed:	
  9744  0000'                    ;incstack = 0
  9745                           	opt	stack 11
  9746                           ; Regs used in _MTOUCH_Button_isPressed: [wreg+fsr1l+fsr1h+status,2+status,0]
  9747                           ;MTOUCH_Button_isPressed@name stored from wreg
  9748                           	movlb 0	; select bank0
  9749  0000' 0020               	movwf	(MTOUCH_Button_isPressed@name)
  9750  0001' 0081'              	line	319
  9751                           	
  9752                           l2271:	
  9753  0002'                    ;mcc_generated_files/mtouch/mtouch_button.c: 317: _Bool MTOUCH_Button_isPressed(enum mto
                                 uch_button_names name);mcc_generated_files/mtouch/mtouch_button.c: 318: {;mcc_generated_
                                 files/mtouch/mtouch_button.c: 319:     if(name < (u_int)1)
  9754                           	movf	((MTOUCH_Button_isPressed@name)),w
  9755  0002' 0801'              	btfss	status,2
  9756  0003' 1D03               	goto	u1531
  9757  0004' 2806'              	goto	u1530
  9758  0005' 2807'              u1531:
  9759  0006'                    	goto	l2279
  9760  0006' 281E'              u1530:
  9761  0007'                    	line	320
  9762                           	
  9763                           l2273:	
  9764  0007'                    ;mcc_generated_files/mtouch/mtouch_button.c: 320:         return (mtouch_button[name].st
                                 ate == MTOUCH_BUTTON_STATE_pressed) ? 1 : 0;
  9765                           	movf	(MTOUCH_Button_isPressed@name),w
  9766  0007' 0801'              	movwf	(??_MTOUCH_Button_isPressed+0)+0
  9767  0008' 0080'              	movlw	(04h)-1
  9768  0009' 3003               u1545:
  9769  000A'                    	lslf	(??_MTOUCH_Button_isPressed+0)+0,f
  9770  000A' 3580'              	addlw	-1
  9771  000B' 3EFF               	skipz
  9772  000C' 1D03               	goto	u1545
  9773  000D' 280A'              	lslf	(??_MTOUCH_Button_isPressed+0)+0,w
  9774  000E' 3500'              	addlw	02h
  9775  000F' 3E02               	addlw	low(_mtouch_button|((0x0)<<8))&0ffh
  9776  0010' 3E00'              	movwf	fsr1l
  9777  0011' 0086               	clrf fsr1h	
  9778  0012' 0187               	
  9779                           		movlw	2
  9780  0013' 3002               	xorwf	(indf1),w
  9781  0014' 0601               	btfsc	status,2
  9782  0015' 1903               	goto	u1551
  9783  0016' 2818'              	goto	u1550
  9784  0017' 281A'              u1551:
  9785  0018'                    	movlw	1
  9786  0018' 3001               	goto	u1560
  9787  0019' 281B'              u1550:
  9788  001A'                    	movlw	0
  9789  001A' 3000               u1560:
  9790  001B'                    	goto	l485
  9791  001B' 2821'              	
  9792                           l2275:	
  9793  001C'                    	goto	l485
  9794  001C' 2821'              	
  9795                           l2277:	
  9796  001D'                    	goto	l485
  9797  001D' 2821'              	line	321
  9798                           ;mcc_generated_files/mtouch/mtouch_button.c: 321:     else
  9799                           	
  9800                           l484:	
  9801  001E'                    	line	322
  9802                           	
  9803                           l2279:	
  9804  001E'                    ;mcc_generated_files/mtouch/mtouch_button.c: 322:         return 0;
  9805                           	movlw	low(0)
  9806  001E' 3000               	goto	l485
  9807  001F' 2821'              	
  9808                           l2281:	
  9809  0020'                    	goto	l485
  9810  0020' 2821'              	
  9811                           l486:	
  9812  0021'                    	line	323
  9813                           	
  9814                           l485:	
  9815  0021'                    	return
  9816  0021' 0008               	opt stack 0
  9817                           GLOBAL	__end_of_MTOUCH_Button_isPressed
  9818                           	__end_of_MTOUCH_Button_isPressed:
  9819  0022'                    	signat	_MTOUCH_Button_isPressed,4217
  9820                           	global	_INTERRUPT_InterruptManager
  9821                           
  9822 ;; *************** function _INTERRUPT_InterruptManager *****************
  9823 ;; Defined at:
  9824 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1    wreg      void 
  9831 ;; Registers used:
  9832 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9838 ;;      Params:         0       0       0       0
  9839 ;;      Locals:         0       0       0       0
  9840 ;;      Temps:          0       0       0       0
  9841 ;;      Totals:         0       0       0       0
  9842 ;;Total ram usage:        0 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    3
  9845 ;; This function calls:
  9846 ;;		_TMR2_ISR
  9847 ;; This function is called by:
  9848 ;;		Interrupt level 1
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           psect	intentry,class=CODE,delta=2
  9852                           global __pintentry
  9853                           __pintentry:
  9854  0000'                    psect	intentry
  9855                           	file	"mcc_generated_files/interrupt_manager.c"
  9856                           	line	52
  9857                           	global	__size_of_INTERRUPT_InterruptManager
  9858                           	__size_of_INTERRUPT_InterruptManager	equ	__end_of_INTERRUPT_InterruptManager-_INTERRUPT
                                 _InterruptManager
  9859  0019                     	
  9860                           _INTERRUPT_InterruptManager:	
  9861  0000'                    ;incstack = 0
  9862                           	opt	stack 5
  9863                           	bsf int$flags,0 ;set compiler interrupt flag (level 1)
  9864  0000' 147E               ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
                                 
  9865                           psect	intentry
  9866                           	pagesel	$
  9867  0001' 3180'              	line	55
  9868                           	
  9869                           i1l2283:	
  9870  0002'                    ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  9871                           	btfss	(11),6	;volatile
  9872  0002' 1F0B               	goto	u157_21
  9873  0003' 2805'              	goto	u157_20
  9874  0004' 2806'              u157_21:
  9875  0005'                    	goto	i1l125
  9876  0005' 2817'              u157_20:
  9877  0006'                    	line	57
  9878                           	
  9879                           i1l2285:	
  9880  0006'                    ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
                                 r.c: 57:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  9881                           	movlb 1	; select bank1
  9882  0006' 0021               	btfss	(145)^080h,1	;volatile
  9883  0007' 1C91               	goto	u158_21
  9884  0008' 280A'              	goto	u158_20
  9885  0009' 280B'              u158_21:
  9886  000A'                    	goto	i1l125
  9887  000A' 2817'              u158_20:
  9888  000B'                    	
  9889                           i1l2287:	
  9890  000B'                    	movlb 0	; select bank0
  9891  000B' 0020               	btfss	(17),1	;volatile
  9892  000C' 1C91               	goto	u159_21
  9893  000D' 280F'              	goto	u159_20
  9894  000E' 2810'              u159_21:
  9895  000F'                    	goto	i1l125
  9896  000F' 2817'              u159_20:
  9897  0010'                    	line	59
  9898                           	
  9899                           i1l2289:	
  9900  0010'                    ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
                                 nager.c: 59:             TMR2_ISR();
  9901                           	fcall	_TMR2_ISR
  9902  0010' 3180' 2000' 3180'  	line	60
  9903                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  9904                           	goto	i1l125
  9905  0013' 2817'              	line	61
  9906                           ;mcc_generated_files/interrupt_manager.c: 61:         else
  9907                           	
  9908                           i1l122:	
  9909  0014'                    	goto	i1l125
  9910  0014' 2817'              	line	64
  9911                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
                                 nager.c: 64:         }
  9912                           	
  9913                           i1l123:	
  9914  0015'                    	line	65
  9915                           ;mcc_generated_files/interrupt_manager.c: 65:     }
  9916                           	goto	i1l125
  9917  0015' 2817'              	line	66
  9918                           ;mcc_generated_files/interrupt_manager.c: 66:     else
  9919                           	
  9920                           i1l121:	
  9921  0016'                    	goto	i1l125
  9922  0016' 2817'              	line	69
  9923                           ;mcc_generated_files/interrupt_manager.c: 67:     {;mcc_generated_files/interrupt_manage
                                 r.c: 69:     }
  9924                           	
  9925                           i1l124:	
  9926  0017'                    	line	70
  9927                           	
  9928                           i1l125:	
  9929  0017'                    	bcf int$flags,0 ;clear compiler interrupt flag (level 1)
  9930  0017' 107E               	retfie
  9931  0018' 0009               	opt stack 0
  9932                           GLOBAL	__end_of_INTERRUPT_InterruptManager
  9933                           	__end_of_INTERRUPT_InterruptManager:
  9934  0019'                    	signat	_INTERRUPT_InterruptManager,89
  9935                           	global	_TMR2_ISR
  9936                           
  9937 ;; *************** function _TMR2_ISR *****************
  9938 ;; Defined at:
  9939 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9953 ;;      Params:         0       0       0       0
  9954 ;;      Locals:         0       0       0       0
  9955 ;;      Temps:          0       0       0       0
  9956 ;;      Totals:         0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; Hardware stack levels required when called:    2
  9960 ;; This function calls:
  9961 ;;		Absolute function
  9962 ;;		_Sensor_Acq_ExecuteScan
  9963 ;;		_TMR2_DefaultInterruptHandler
  9964 ;; This function is called by:
  9965 ;;		_INTERRUPT_InterruptManager
  9966 ;; This function uses a non-reentrant model
  9967 ;;
  9968                           psect	text51,local,class=CODE,delta=2,merge=1,group=0
  9969                           	file	"mcc_generated_files/tmr2.c"
  9970                           	line	119
  9971                           global __ptext51
  9972                           __ptext51:	;psect for function _TMR2_ISR
  9973  0000'                    psect	text51
  9974                           	file	"mcc_generated_files/tmr2.c"
  9975                           	line	119
  9976                           	global	__size_of_TMR2_ISR
  9977                           	__size_of_TMR2_ISR	equ	__end_of_TMR2_ISR-_TMR2_ISR
  9978  000F                     	
  9979                           _TMR2_ISR:	
  9980  0000'                    ;incstack = 0
  9981                           	opt	stack 5
  9982                           ; Regs used in _TMR2_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9983                           	line	123
  9984                           	
  9985                           i1l2253:	
  9986  0000'                    ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  9987                           	movlb 0	; select bank0
  9988  0000' 0020               	bcf	(17),1	;volatile
  9989  0001' 1091               	line	125
  9990                           	
  9991                           i1l2255:	
  9992  0002'                    ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  9993                           	movf	((_TMR2_InterruptHandler)),w
  9994  0002' 0802'              iorwf	((_TMR2_InterruptHandler+1)),w
  9995  0003' 0403'              	btfsc	status,2
  9996  0004' 1903               	goto	u151_21
  9997  0005' 2807'              	goto	u151_20
  9998  0006' 2808'              u151_21:
  9999  0007'                    	goto	i1l74
 10000  0007' 280E'              u151_20:
 10001  0008'                    	line	127
 10002                           	
 10003                           i1l2257:	
 10004  0008'                    ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
                                 terruptHandler();
 10005                           	movf	(_TMR2_InterruptHandler+1),w
 10006  0008' 0803'              	movwf	pclath
 10007  0009' 008A               	movf	(_TMR2_InterruptHandler),w
 10008  000A' 0802'              	callw
 10009  000B' 000A               	pagesel	$
 10010  000C' 3180'              	goto	i1l74
 10011  000D' 280E'              	line	128
 10012                           ;mcc_generated_files/tmr2.c: 128:     }
 10013                           	
 10014                           i1l73:	
 10015  000E'                    	line	129
 10016                           	
 10017                           i1l74:	
 10018  000E'                    	return
 10019  000E' 0008               	opt stack 0
 10020                           GLOBAL	__end_of_TMR2_ISR
 10021                           	__end_of_TMR2_ISR:
 10022  000F'                    	signat	_TMR2_ISR,89
 10023                           	global	_TMR2_DefaultInterruptHandler
 10024                           	global	_Sensor_Acq_ExecuteScan
 10025                           
 10026 ;; *************** function _Sensor_Acq_ExecuteScan *****************
 10027 ;; Defined at:
 10028 ;;		line 359 in file "mcc_generated_files/mtouch/mtouch_sensor.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;		None
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;  result          2    6[COMMON] unsigned short 
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10042 ;;      Params:         0       0       0       0
 10043 ;;      Locals:         2       0       0       0
 10044 ;;      Temps:          2       0       0       0
 10045 ;;      Totals:         4       0       0       0
 10046 ;;Total ram usage:        4 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; Hardware stack levels required when called:    1
 10049 ;; This function calls:
 10050 ;;		_MTOUCH_CVD_ScanA_0
 10051 ;;		_MTOUCH_CVD_ScanB_0
 10052 ;;		i1___bmul
 10053 ;;		i1_abs
 10054 ;; This function is called by:
 10055 ;;		_Sensor_Acq_ExecutePacket
 10056 ;;		_TMR2_ISR
 10057 ;; This function uses a non-reentrant model
 10058 ;;
 10059                           psect	text52,local,class=CODE,delta=2,merge=1,group=0
 10060                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
 10061                           	line	359
 10062                           global __ptext52
 10063                           __ptext52:	;psect for function _Sensor_Acq_ExecuteScan
 10064  0000'                    psect	text52
 10065                           	file	"mcc_generated_files/mtouch/mtouch_sensor.c"
 10066                           	line	359
 10067                           	global	__size_of_Sensor_Acq_ExecuteScan
 10068                           	__size_of_Sensor_Acq_ExecuteScan	equ	__end_of_Sensor_Acq_ExecuteScan-_Sensor_Acq_Execut
                                 eScan
 10069  00B2                     	
 10070                           _Sensor_Acq_ExecuteScan:	
 10071  0000'                    ;incstack = 0
 10072                           	opt	stack 5
 10073                           ; Regs used in _Sensor_Acq_ExecuteScan: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10074                           	line	361
 10075                           	
 10076                           i1l2203:	
 10077  0000'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 361:     mtouch_sensor_adcsample_t result =
                                  ADRES;
 10078                           	movlb 1	; select bank1
 10079  0000' 0021               	movf	(155+1)^080h,w	;volatile
 10080  0001' 081C               	movwf	(Sensor_Acq_ExecuteScan@result+1)
 10081  0002' 0087'              	movf	(155)^080h,w	;volatile
 10082  0003' 081B               	movwf	(Sensor_Acq_ExecuteScan@result)
 10083  0004' 0086'              	line	364
 10084                           	
 10085                           i1l2205:	
 10086  0005'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 362:     static mtouch_sensor_adcsample_t l
                                 ast_a,last_b;;mcc_generated_files/mtouch/mtouch_sensor.c: 364:     if(sensor_globalFlags
                                 .packet_done)
 10087                           	movlb 0	; select bank0
 10088  0005' 0020               	btfss	(_sensor_globalFlags),0	;volatile
 10089  0006' 1C06'              	goto	u147_21
 10090  0007' 2809'              	goto	u147_20
 10091  0008' 280A'              u147_21:
 10092  0009'                    	goto	i1l2209
 10093  0009' 280C'              u147_20:
 10094  000A'                    	goto	i1l292
 10095  000A' 28B1'              	line	365
 10096                           	
 10097                           i1l2207:	
 10098  000B'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 365:         return;
 10099                           	goto	i1l292
 10100  000B' 28B1'              	
 10101                           i1l291:	
 10102  000C'                    	line	367
 10103                           	
 10104                           i1l2209:	
 10105  000C'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 367:     if (packet_counter != (uint8_t)0)

 10106                           	movf	((_packet_counter)),w
 10107  000C' 0804'              	btfsc	status,2
 10108  000D' 1903               	goto	u148_21
 10109  000E' 2810'              	goto	u148_20
 10110  000F' 2811'              u148_21:
 10111  0010'                    	goto	i1l2239
 10112  0010' 2895'              u148_20:
 10113  0011'                    	goto	i1l2219
 10114  0011' 2823'              	line	370
 10115                           	
 10116                           i1l2211:	
 10117  0012'                    ;mcc_generated_files/mtouch/mtouch_sensor.c: 368:     {
 10118                           	goto	i1l2219
 10119  0012' 2823'              	line	372
 10120                           	
 10121                           i1l295:	
 10122  0013'                    	
 10123                           i1l2213:	
 10124  0013'                    	movlb 0	; select bank0
 10125  0013' 0020               	movf	(_Sensor_scanA+1),w
 10126  0014' 080D'              	movwf	pclath
 10127  0015' 008A               	movf	(_Sensor_scanA),w
 10128  0016' 080C'              	callw
 10129  0017' 000A               	pagesel	$
 10130  0018' 3180'              	goto	i1l2221
 10131  0019' 2834'              	line	373
 10132                           	
 10133                           i1l297:	
 10134  001A'                    	
 10135                           i1l2215:	
 10136  001A'                    	movlb 0	; select bank0
 10137  001A' 0020               	movf	(_Sensor_scanB+1),w
 10138  001B' 080B'              	movwf	pclath
 10139  001C' 008A               	movf	(_Sensor_scanB),w
 10140  001D' 080A'              	callw
 10141  001E' 000A               	pagesel	$
 10142  001F' 3180'              	goto	i1l2221
 10143  0020' 2834'              	line	374
 10144                           	
 10145                           i1l298:	
 10146  0021'                    	goto	i1l2221
 10147  0021' 2834'              	line	375
 10148                           	
 10149                           i1l2217:	
 10150  0022'                    	goto	i1l2221
 10151  0022' 2834'              	
 10152                           i1l294:	
 10153  0023'                    	
 10154                           i1l2219:	
 10155  0023'                    	movf	(_packet_counter),w
 10156  0023' 0804'              	andlw	01h
 10157  0024' 3901               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
 10158  0025' 0084'              	clrf	(??_Sensor_Acq_ExecuteScan+0)+0+1
 10159  0026' 0185'              	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
 10160                           ; Switch size 1, requested type "space"
 10161                           ; Number of cases is 1, Range of values is 0 to 0
 10162                           ; switch strategies available:
 10163                           ; Name         Instructions Cycles
 10164                           ; simple_byte            4     3 (average)
 10165                           ; direct_byte            8     6 (fixed)
 10166                           ; jumptable            260     6 (fixed)
 10167                           ;	Chosen strategy is simple_byte
 10168                           
 10169                           	movf 1+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10170  0027' 0805'              	opt asmopt_push
 10171                           	opt asmopt_off
 10172                           	xorlw	0^0	; case 0
 10173  0028' 3A00               	skipnz
 10174  0029' 1903               	goto	i1l2587
 10175  002A' 282C'              	goto	i1l2221
 10176  002B' 2834'              	opt asmopt_pop
 10177                           	
 10178                           i1l2587:	
 10179  002C'                    ; Switch size 1, requested type "space"
 10180                           ; Number of cases is 2, Range of values is 0 to 1
 10181                           ; switch strategies available:
 10182                           ; Name         Instructions Cycles
 10183                           ; simple_byte            7     4 (average)
 10184                           ; direct_byte           10     6 (fixed)
 10185                           ; jumptable            260     6 (fixed)
 10186                           ;	Chosen strategy is simple_byte
 10187                           
 10188                           	movf 0+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10189  002C' 0804'              	opt asmopt_push
 10190                           	opt asmopt_off
 10191                           	xorlw	0^0	; case 0
 10192  002D' 3A00               	skipnz
 10193  002E' 1903               	goto	i1l2213
 10194  002F' 2813'              	xorlw	1^0	; case 1
 10195  0030' 3A01               	skipnz
 10196  0031' 1903               	goto	i1l2215
 10197  0032' 281A'              	goto	i1l2221
 10198  0033' 2834'              	opt asmopt_pop
 10199                           
 10200                           	
 10201                           i1l296:	
 10202  0034'                    	line	377
 10203                           	
 10204                           i1l2221:	
 10205  0034'                    	movlw	low(09h)
 10206  0034' 3009               	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
 10207  0035' 0084'              	movf	(??_Sensor_Acq_ExecuteScan+0)+0,w
 10208  0036' 0804'              	movwf	(i1___bmul@multiplicand)
 10209  0037' 0080'              	movf	(_currentScannSensor),w
 10210  0038' 0805'              	fcall	i1___bmul
 10211  0039' 3180' 2000' 3180'  	addlw	05h
 10212  003C' 3E05               	addlw	low(_mtouch_sensor|((0x0)<<8))&0ffh
 10213  003D' 3E00'              	movwf	fsr1l
 10214  003E' 0086               	clrf fsr1h	
 10215  003F' 0187               	
 10216                           	movf	indf1,w
 10217  0040' 0801               	xorwf	(_packet_counter),w
 10218  0041' 0604'              	skipnz
 10219  0042' 1903               	goto	u149_21
 10220  0043' 2845'              	goto	u149_20
 10221  0044' 2846'              u149_21:
 10222  0045'                    	goto	i1l2237
 10223  0045' 2892'              u149_20:
 10224  0046'                    	line	379
 10225                           	
 10226                           i1l2223:	
 10227  0046'                    	btfss	(_packet_counter),(0)&7
 10228  0046' 1C04'              	goto	u150_21
 10229  0047' 2849'              	goto	u150_20
 10230  0048' 284A'              u150_21:
 10231  0049'                    	goto	i1l2231
 10232  0049' 2872'              u150_20:
 10233  004A'                    	line	381
 10234                           	
 10235                           i1l2225:	
 10236  004A'                    	comf	(Sensor_Acq_ExecuteScan@result),w
 10237  004A' 0906'              	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
 10238  004B' 0084'              	comf	(Sensor_Acq_ExecuteScan@result+1),w
 10239  004C' 0907'              	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
 10240  004D' 0085'              	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
 10241  004E' 0A84'              	skipnz
 10242  004F' 1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
 10243  0050' 0A85'              	movf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10244  0051' 0804'              	addlw	0
 10245  0052' 3E00               	movwf	(Sensor_Acq_ExecuteScan@result)
 10246  0053' 0086'              	movlw	04h
 10247  0054' 3004               	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10248  0055' 3D05'              	movwf	1+(Sensor_Acq_ExecuteScan@result)
 10249  0056' 0087'              	line	382
 10250                           	
 10251                           i1l2227:	
 10252  0057'                    	comf	(Sensor_Acq_ExecuteScan@result),w
 10253  0057' 0906'              	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
 10254  0058' 0084'              	comf	(Sensor_Acq_ExecuteScan@result+1),w
 10255  0059' 0907'              	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
 10256  005A' 0085'              	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
 10257  005B' 0A84'              	skipnz
 10258  005C' 1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
 10259  005D' 0A85'              	movlb 0	; select bank0
 10260  005E' 0020               	movf	(Sensor_Acq_ExecuteScan@last_a),w
 10261  005F' 0802'              	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10262  0060' 0704'              	movwf	(i1abs@a)
 10263  0061' 0080'              	movf	(Sensor_Acq_ExecuteScan@last_a+1),w
 10264  0062' 0803'              	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10265  0063' 3D05'              	movwf	1+(i1abs@a)
 10266  0064' 0081'              	fcall	i1_abs
 10267  0065' 3180' 2000' 3180'  	movf	(0+(?i1_abs)),w
 10268  0068' 0800'              	addwf	(_packet_noise),f
 10269  0069' 0780'              	movf	(1+(?i1_abs)),w
 10270  006A' 0801'              	addwfc	(_packet_noise+1),f
 10271  006B' 3D81'              	line	383
 10272                           	
 10273                           i1l2229:	
 10274  006C'                    	movf	(Sensor_Acq_ExecuteScan@result+1),w
 10275  006C' 0807'              	movlb 0	; select bank0
 10276  006D' 0020               	movwf	(Sensor_Acq_ExecuteScan@last_a+1)
 10277  006E' 0083'              	movf	(Sensor_Acq_ExecuteScan@result),w
 10278  006F' 0806'              	movwf	(Sensor_Acq_ExecuteScan@last_a)
 10279  0070' 0082'              	line	384
 10280                           	goto	i1l2235
 10281  0071' 288D'              	line	385
 10282                           	
 10283                           i1l300:	
 10284  0072'                    	line	387
 10285                           	
 10286                           i1l2231:	
 10287  0072'                    	comf	(Sensor_Acq_ExecuteScan@result),w
 10288  0072' 0906'              	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
 10289  0073' 0084'              	comf	(Sensor_Acq_ExecuteScan@result+1),w
 10290  0074' 0907'              	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
 10291  0075' 0085'              	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
 10292  0076' 0A84'              	skipnz
 10293  0077' 1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
 10294  0078' 0A85'              	movlb 0	; select bank0
 10295  0079' 0020               	movf	(Sensor_Acq_ExecuteScan@last_b),w
 10296  007A' 0800'              	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10297  007B' 0704'              	movwf	(i1abs@a)
 10298  007C' 0080'              	movf	(Sensor_Acq_ExecuteScan@last_b+1),w
 10299  007D' 0801'              	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10300  007E' 3D05'              	movwf	1+(i1abs@a)
 10301  007F' 0081'              	fcall	i1_abs
 10302  0080' 3180' 2000' 3180'  	movf	(0+(?i1_abs)),w
 10303  0083' 0800'              	addwf	(_packet_noise),f
 10304  0084' 0780'              	movf	(1+(?i1_abs)),w
 10305  0085' 0801'              	addwfc	(_packet_noise+1),f
 10306  0086' 3D81'              	line	388
 10307                           	
 10308                           i1l2233:	
 10309  0087'                    	movf	(Sensor_Acq_ExecuteScan@result+1),w
 10310  0087' 0807'              	movlb 0	; select bank0
 10311  0088' 0020               	movwf	(Sensor_Acq_ExecuteScan@last_b+1)
 10312  0089' 0081'              	movf	(Sensor_Acq_ExecuteScan@result),w
 10313  008A' 0806'              	movwf	(Sensor_Acq_ExecuteScan@last_b)
 10314  008B' 0080'              	goto	i1l2235
 10315  008C' 288D'              	line	389
 10316                           	
 10317                           i1l301:	
 10318  008D'                    	line	390
 10319                           	
 10320                           i1l2235:	
 10321  008D'                    	movf	(Sensor_Acq_ExecuteScan@result),w
 10322  008D' 0806'              	addwf	(_packet_sample),f
 10323  008E' 0784'              	movf	(Sensor_Acq_ExecuteScan@result+1),w
 10324  008F' 0807'              	addwfc	(_packet_sample+1),f
 10325  0090' 3D85'              	goto	i1l2237
 10326  0091' 2892'              	line	391
 10327                           	
 10328                           i1l299:	
 10329  0092'                    	line	392
 10330                           	
 10331                           i1l2237:	
 10332  0092'                    	movlw	01h
 10333  0092' 3001               	subwf	(_packet_counter),f
 10334  0093' 0284'              	line	393
 10335                           	goto	i1l292
 10336  0094' 28B1'              	line	394
 10337                           	
 10338                           i1l293:	
 10339  0095'                    	line	396
 10340                           	
 10341                           i1l2239:	
 10342  0095'                    	movf	(Sensor_Acq_ExecuteScan@result),w
 10343  0095' 0806'              	movlb 0	; select bank0
 10344  0096' 0020               	addwf	(_packet_sample),f
 10345  0097' 0784'              	movf	(Sensor_Acq_ExecuteScan@result+1),w
 10346  0098' 0807'              	addwfc	(_packet_sample+1),f
 10347  0099' 3D85'              	line	397
 10348                           	
 10349                           i1l2241:	
 10350  009A'                    	comf	(Sensor_Acq_ExecuteScan@result),w
 10351  009A' 0906'              	movwf	(??_Sensor_Acq_ExecuteScan+0)+0
 10352  009B' 0084'              	comf	(Sensor_Acq_ExecuteScan@result+1),w
 10353  009C' 0907'              	movwf	((??_Sensor_Acq_ExecuteScan+0)+0+1)
 10354  009D' 0085'              	incf	(??_Sensor_Acq_ExecuteScan+0)+0,f
 10355  009E' 0A84'              	skipnz
 10356  009F' 1903               	incf	((??_Sensor_Acq_ExecuteScan+0)+0+1),f
 10357  00A0' 0A85'              	movf	(Sensor_Acq_ExecuteScan@last_b),w
 10358  00A1' 0800'              	addwf	0+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10359  00A2' 0704'              	movwf	(i1abs@a)
 10360  00A3' 0080'              	movf	(Sensor_Acq_ExecuteScan@last_b+1),w
 10361  00A4' 0801'              	addwfc	1+(??_Sensor_Acq_ExecuteScan+0)+0,w
 10362  00A5' 3D05'              	movwf	1+(i1abs@a)
 10363  00A6' 0081'              	fcall	i1_abs
 10364  00A7' 3180' 2000' 3180'  	movf	(0+(?i1_abs)),w
 10365  00AA' 0800'              	addwf	(_packet_noise),f
 10366  00AB' 0780'              	movf	(1+(?i1_abs)),w
 10367  00AC' 0801'              	addwfc	(_packet_noise+1),f
 10368  00AD' 3D81'              	line	398
 10369                           	
 10370                           i1l2243:	
 10371  00AE'                    	movlb 0	; select bank0
 10372  00AE' 0020               	bsf	(_sensor_globalFlags),0	;volatile
 10373  00AF' 1406'              	goto	i1l292
 10374  00B0' 28B1'              	line	399
 10375                           	
 10376                           i1l302:	
 10377  00B1'                    	line	400
 10378                           	
 10379                           i1l292:	
 10380  00B1'                    	return
 10381  00B1' 0008               	opt stack 0
 10382                           GLOBAL	__end_of_Sensor_Acq_ExecuteScan
 10383                           	__end_of_Sensor_Acq_ExecuteScan:
 10384  00B2'                    	signat	_Sensor_Acq_ExecuteScan,89
 10385                           
 10386 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 10387 ;; Defined at:
 10388 ;;		line 136 in file "mcc_generated_files/tmr2.c"
 10389 ;; Parameters:    Size  Location     Type
 10390 ;;		None
 10391 ;; Auto vars:     Size  Location     Type
 10392 ;;		None
 10393 ;; Return value:  Size  Location     Type
 10394 ;;                  1    wreg      void 
 10395 ;; Registers used:
 10396 ;;		None
 10397 ;; Tracked objects:
 10398 ;;		On entry : 0/0
 10399 ;;		On exit  : 0/0
 10400 ;;		Unchanged: 0/0
 10401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10402 ;;      Params:         0       0       0       0
 10403 ;;      Locals:         0       0       0       0
 10404 ;;      Temps:          0       0       0       0
 10405 ;;      Totals:         0       0       0       0
 10406 ;;Total ram usage:        0 bytes
 10407 ;; Hardware stack levels used:    1
 10408 ;; This function calls:
 10409 ;;		Nothing
 10410 ;; This function is called by:
 10411 ;;		_TMR2_Initialize
 10412 ;;		_TMR2_ISR
 10413 ;; This function uses a non-reentrant model
 10414 ;;
 10415                           psect	text53,local,class=CODE,delta=2,merge=1,group=0
 10416                           	file	"mcc_generated_files/tmr2.c"
 10417                           	line	136
 10418                           global __ptext53
 10419                           __ptext53:	;psect for function _TMR2_DefaultInterruptHandler
 10420  0000'                    psect	text53
 10421                           	file	"mcc_generated_files/tmr2.c"
 10422                           	line	136
 10423                           	global	__size_of_TMR2_DefaultInterruptHandler
 10424                           	__size_of_TMR2_DefaultInterruptHandler	equ	__end_of_TMR2_DefaultInterruptHandler-_TMR2_
                                 DefaultInterruptHandler
 10425  0001                     	
 10426                           _TMR2_DefaultInterruptHandler:	
 10427  0000'                    ;incstack = 0
 10428                           	opt	stack 6
 10429                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 10430                           	line	139
 10431                           	
 10432                           i1l80:	
 10433  0000'                    	return
 10434  0000' 0008               	opt stack 0
 10435                           GLOBAL	__end_of_TMR2_DefaultInterruptHandler
 10436                           	__end_of_TMR2_DefaultInterruptHandler:
 10437  0001'                    	signat	_TMR2_DefaultInterruptHandler,89
 10438                           	global	i1_abs
 10439                           
 10440 ;; *************** function i1_abs *****************
 10441 ;; Defined at:
 10442 ;;		line 1 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 10443 ;; Parameters:    Size  Location     Type
 10444 ;;  a               2    0[COMMON] int 
 10445 ;; Auto vars:     Size  Location     Type
 10446 ;;		None
 10447 ;; Return value:  Size  Location     Type
 10448 ;;                  2    0[COMMON] int 
 10449 ;; Registers used:
 10450 ;;		wreg, status,2, status,0
 10451 ;; Tracked objects:
 10452 ;;		On entry : 0/0
 10453 ;;		On exit  : 0/0
 10454 ;;		Unchanged: 0/0
 10455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10456 ;;      Params:         2       0       0       0
 10457 ;;      Locals:         0       0       0       0
 10458 ;;      Temps:          2       0       0       0
 10459 ;;      Totals:         4       0       0       0
 10460 ;;Total ram usage:        4 bytes
 10461 ;; Hardware stack levels used:    1
 10462 ;; This function calls:
 10463 ;;		Nothing
 10464 ;; This function is called by:
 10465 ;;		_Sensor_Acq_ExecuteScan
 10466 ;; This function uses a non-reentrant model
 10467 ;;
 10468                           psect	text54,local,class=CODE,delta=2,merge=1,group=0
 10469                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 10470                           	line	1
 10471                           global __ptext54
 10472                           __ptext54:	;psect for function i1_abs
 10473  0000'                    psect	text54
 10474                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\abs.c"
 10475                           	line	1
 10476                           	global	__size_ofi1_abs
 10477                           	__size_ofi1_abs	equ	__end_ofi1_abs-i1_abs
 10478  001B                     	
 10479                           i1_abs:	
 10480  0000'                    ;incstack = 0
 10481                           	opt	stack 5
 10482                           ; Regs used in i1_abs: [wreg+status,2+status,0]
 10483                           	line	3
 10484                           	
 10485                           i1l2111:	
 10486  0000'                    	movf	(i1abs@a+1),w
 10487  0000' 0801'              	xorlw	80h
 10488  0001' 3A80               	movwf	(??i1_abs+0)+0
 10489  0002' 0082'              	movlw	(0)^80h
 10490  0003' 3080               	subwf	(??i1_abs+0)+0,w
 10491  0004' 0202'              	skipz
 10492  0005' 1D03               	goto	u138_25
 10493  0006' 2809'              	movlw	01h
 10494  0007' 3001               	subwf	(i1abs@a),w
 10495  0008' 0200'              u138_25:
 10496  0009'                    
 10497                           	skipnc
 10498  0009' 1803               	goto	u138_21
 10499  000A' 280C'              	goto	u138_20
 10500  000B' 280D'              u138_21:
 10501  000C'                    	goto	i1l1006
 10502  000C' 2819'              u138_20:
 10503  000D'                    	
 10504                           i1l2113:	
 10505  000D'                    	comf	(i1abs@a),w
 10506  000D' 0900'              	movwf	(??i1_abs+0)+0
 10507  000E' 0082'              	comf	(i1abs@a+1),w
 10508  000F' 0901'              	movwf	((??i1_abs+0)+0+1)
 10509  0010' 0083'              	incf	(??i1_abs+0)+0,f
 10510  0011' 0A82'              	skipnz
 10511  0012' 1903               	incf	((??i1_abs+0)+0+1),f
 10512  0013' 0A83'              	movf	0+(??i1_abs+0)+0,w
 10513  0014' 0802'              	movwf	(?i1_abs)
 10514  0015' 0080'              	movf	1+(??i1_abs+0)+0,w
 10515  0016' 0803'              	movwf	(?i1_abs+1)
 10516  0017' 0081'              	goto	i1l1009
 10517  0018' 281A'              	
 10518                           i1l1006:	
 10519  0019'                    	goto	i1l1009
 10520  0019' 281A'              	
 10521                           i1l1008:	
 10522  001A'                    	line	4
 10523                           	
 10524                           i1l1009:	
 10525  001A'                    	return
 10526  001A' 0008               	opt stack 0
 10527                           GLOBAL	__end_ofi1_abs
 10528                           	__end_ofi1_abs:
 10529  001B'                    	signat	i1_abs,90
 10530                           	global	i1___bmul
 10531                           
 10532 ;; *************** function i1___bmul *****************
 10533 ;; Defined at:
 10534 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  multiplier      1    wreg     unsigned char 
 10537 ;;  multiplicand    1    0[COMMON] unsigned char 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  multiplier      1    2[COMMON] unsigned char 
 10540 ;;  __bmul          1    3[COMMON] unsigned char 
 10541 ;; Return value:  Size  Location     Type
 10542 ;;                  1    wreg      unsigned char 
 10543 ;; Registers used:
 10544 ;;		wreg, status,2, status,0
 10545 ;; Tracked objects:
 10546 ;;		On entry : 0/0
 10547 ;;		On exit  : 0/0
 10548 ;;		Unchanged: 0/0
 10549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10550 ;;      Params:         1       0       0       0
 10551 ;;      Locals:         2       0       0       0
 10552 ;;      Temps:          1       0       0       0
 10553 ;;      Totals:         4       0       0       0
 10554 ;;Total ram usage:        4 bytes
 10555 ;; Hardware stack levels used:    1
 10556 ;; This function calls:
 10557 ;;		Nothing
 10558 ;; This function is called by:
 10559 ;;		_Sensor_Acq_ExecuteScan
 10560 ;; This function uses a non-reentrant model
 10561 ;;
 10562                           psect	text55,local,class=CODE,delta=2,merge=1,group=0
 10563                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
 10564                           	line	4
 10565                           global __ptext55
 10566                           __ptext55:	;psect for function i1___bmul
 10567  0000'                    psect	text55
 10568                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c99\common\Umul8.c"
 10569                           	line	4
 10570                           	global	__size_ofi1___bmul
 10571                           	__size_ofi1___bmul	equ	__end_ofi1___bmul-i1___bmul
 10572  0019                     	
 10573                           i1___bmul:	
 10574  0000'                    ;incstack = 0
 10575                           	opt	stack 5
 10576                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 10577                           ;i1___bmul@multiplier stored from wreg
 10578                           	movwf	(i1___bmul@multiplier)
 10579  0000' 0082'              	line	6
 10580                           	
 10581                           i1l2115:	
 10582  0001'                    	clrf	(i1___bmul@product)
 10583  0001' 0183'              	goto	i1l2117
 10584  0002' 2803'              	line	42
 10585                           	
 10586                           i1l594:	
 10587  0003'                    	line	43
 10588                           	
 10589                           i1l2117:	
 10590  0003'                    	btfss	(i1___bmul@multiplier),(0)&7
 10591  0003' 1C02'              	goto	u139_21
 10592  0004' 2806'              	goto	u139_20
 10593  0005' 2807'              u139_21:
 10594  0006'                    	goto	i1l2121
 10595  0006' 280C'              u139_20:
 10596  0007'                    	line	44
 10597                           	
 10598                           i1l2119:	
 10599  0007'                    	movf	(i1___bmul@multiplicand),w
 10600  0007' 0800'              	movwf	(??i1___bmul+0)+0
 10601  0008' 0081'              	movf	(??i1___bmul+0)+0,w
 10602  0009' 0801'              	addwf	(i1___bmul@product),f
 10603  000A' 0783'              	goto	i1l2121
 10604  000B' 280C'              	
 10605                           i1l595:	
 10606  000C'                    	line	45
 10607                           	
 10608                           i1l2121:	
 10609  000C'                    	clrc
 10610  000C' 1003               	rlf	(i1___bmul@multiplicand),f
 10611  000D' 0D80'              
 10612                           	line	46
 10613                           	
 10614                           i1l2123:	
 10615  000E'                    	clrc
 10616  000E' 1003               	rrf	(i1___bmul@multiplier),f
 10617  000F' 0C82'              
 10618                           	line	47
 10619                           	movf	((i1___bmul@multiplier)),w
 10620  0010' 0802'              	btfss	status,2
 10621  0011' 1D03               	goto	u140_21
 10622  0012' 2814'              	goto	u140_20
 10623  0013' 2815'              u140_21:
 10624  0014'                    	goto	i1l2117
 10625  0014' 2803'              u140_20:
 10626  0015'                    	goto	i1l2125
 10627  0015' 2816'              	
 10628                           i1l596:	
 10629  0016'                    	line	50
 10630                           	
 10631                           i1l2125:	
 10632  0016'                    	movf	(i1___bmul@product),w
 10633  0016' 0803'              	goto	i1l597
 10634  0017' 2818'              	
 10635                           i1l2127:	
 10636  0018'                    	line	51
 10637                           	
 10638                           i1l597:	
 10639  0018'                    	return
 10640  0018' 0008               	opt stack 0
 10641                           GLOBAL	__end_ofi1___bmul
 10642                           	__end_ofi1___bmul:
 10643  0019'                    	signat	i1___bmul,89
 10644                           	global	_MTOUCH_CVD_ScanB_0
 10645                           
 10646 ;; *************** function _MTOUCH_CVD_ScanB_0 *****************
 10647 ;; Defined at:
 10648 ;;		line 131 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		wreg
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10662 ;;      Params:         0       0       0       0
 10663 ;;      Locals:         0       0       0       0
 10664 ;;      Temps:          0       0       0       0
 10665 ;;      Totals:         0       0       0       0
 10666 ;;Total ram usage:        0 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_Sensor_Acq_ExecuteScan
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           psect	text56,local,class=CODE,delta=2,merge=1,group=0
 10675                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10676                           	line	131
 10677                           global __ptext56
 10678                           __ptext56:	;psect for function _MTOUCH_CVD_ScanB_0
 10679  0000'                    psect	text56
 10680                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10681                           	line	131
 10682                           	global	__size_of_MTOUCH_CVD_ScanB_0
 10683                           	__size_of_MTOUCH_CVD_ScanB_0	equ	__end_of_MTOUCH_CVD_ScanB_0-_MTOUCH_CVD_ScanB_0
 10684  0024                     	
 10685                           _MTOUCH_CVD_ScanB_0:	
 10686  0000'                    ;incstack = 0
 10687                           	opt	stack 5
 10688                           ; Regs used in _MTOUCH_CVD_ScanB_0: [wreg]
 10689                           	line	134
 10690                           	
 10691                           i1l2089:	
 10692  0000'                    # 134 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10693                           BANKSEL LATC ;# 
 10694  0000' 0022               	line	135
 10695                           # 135 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10696                           bcf LATC & 0x7F, 1 ;# 
 10697  0001' 108E               	line	138
 10698                           # 138 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10699                           BANKSEL ADCON0 ;# 
 10700  0002' 0021               	line	139
 10701                           # 139 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10702                           movlw ( 0x5<<2 | 0x1 ) ;# 
 10703  0003' 3015               	line	140
 10704                           # 140 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10705                           movwf ADCON0 & 0x7F ;# 
 10706  0004' 009D               psect	text56
 10707                           	line	143
 10708                           	
 10709                           i1l2091:	
 10710  0005'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 143:     _delay(10);
 10711                           	opt asmopt_push
 10712                           opt asmopt_off
 10713                           	movlw	3
 10714  0005' 3003               u183_27:
 10715  0006'                    decfsz	wreg
 10716  0006' 0B89               	goto	u183_27
 10717  0007' 2806'              	nop
 10718  0008' 0000               opt asmopt_pop
 10719                           
 10720                           	line	146
 10721                           # 146 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10722                           movlw 113 ;# 
 10723  0009' 3071               	line	147
 10724                           # 147 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10725                           movwf ADCON0 & 0x7F ;# 
 10726  000A' 009D               	line	148
 10727                           # 148 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10728                           BANKSEL LATC ;# 
 10729  000B' 0022               	line	149
 10730                           # 149 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10731                           bsf LATC & 0x7F, 1 ;# 
 10732  000C' 148E               	line	150
 10733                           # 150 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10734                           BANKSEL ADCON0 ;# 
 10735  000D' 0021               	line	153
 10736                           # 153 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10737                           movlw LOW TRISC ;# 
 10738  000E' 308E               	line	154
 10739                           # 154 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10740                           movwf FSR0L & 0x7F ;# 
 10741  000F' 0084               	line	155
 10742                           # 155 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10743                           movlw HIGH TRISC ;# 
 10744  0010' 3000               	line	156
 10745                           # 156 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10746                           movwf FSR0H & 0x7F ;# 
 10747  0011' 0085               	line	159
 10748                           # 159 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10749                           movlw LOW LATC ;# 
 10750  0012' 300E               	line	160
 10751                           # 160 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10752                           movwf FSR1L & 0x7F ;# 
 10753  0013' 0086               	line	161
 10754                           # 161 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10755                           movlw HIGH LATC ;# 
 10756  0014' 3001               	line	162
 10757                           # 162 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10758                           movwf FSR1H & 0x7F ;# 
 10759  0015' 0087               	line	165
 10760                           # 165 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10761                           movlw ( 0x5<<2 | 0x1 ) ;# 
 10762  0016' 3015               	line	166
 10763                           # 166 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10764                           bsf INDF0 & 0x7F, 1 ;# 
 10765  0017' 1480               psect	text56
 10766                           	line	167
 10767                           	
 10768                           i1l2093:	
 10769  0018'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 167:     _delay(0);
 10770                           		opt asmopt_push
 10771                           	opt asmopt_off
 10772                           	opt asmopt_pop
 10773                           
 10774                           	line	168
 10775                           # 168 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10776                           movwf ADCON0 & 0x7F ;# 
 10777  0018' 009D               psect	text56
 10778                           	line	174
 10779                           	
 10780                           i1l2095:	
 10781  0019'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 174:     _delay(5);
 10782                           		opt asmopt_push
 10783                           	opt asmopt_off
 10784                           	nop2	;2 cycle nop
 10785  0019' 3200               	nop2	;2 cycle nop
 10786  001A' 3200               	nop
 10787  001B' 0000               	opt asmopt_pop
 10788                           
 10789                           	line	177
 10790                           # 177 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10791                           BANKSEL ADCON0 ;# 
 10792  001C' 0021               	line	178
 10793                           # 178 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10794                           bsf ADCON0 & 0x7F, 1 ;# 
 10795  001D' 149D               psect	text56
 10796                           	line	181
 10797                           	
 10798                           i1l2097:	
 10799  001E'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 181:     _delay(3);
 10800                           		opt asmopt_push
 10801                           	opt asmopt_off
 10802                           	nop2	;2 cycle nop
 10803  001E' 3200               	nop
 10804  001F' 0000               	opt asmopt_pop
 10805                           
 10806                           	line	184
 10807                           # 184 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10808                           BANKSEL LATC ;# 
 10809  0020' 0022               	line	185
 10810                           # 185 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10811                           bcf LATC & 0x7F, 1 ;# 
 10812  0021' 108E               	line	186
 10813                           # 186 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10814                           bcf INDF0 & 0x7F, 1 ;# 
 10815  0022' 1080               psect	text56
 10816                           	line	188
 10817                           	
 10818                           i1l370:	
 10819  0023'                    	return
 10820  0023' 0008               	opt stack 0
 10821                           GLOBAL	__end_of_MTOUCH_CVD_ScanB_0
 10822                           	__end_of_MTOUCH_CVD_ScanB_0:
 10823  0024'                    	signat	_MTOUCH_CVD_ScanB_0,89
 10824                           	global	_MTOUCH_CVD_ScanA_0
 10825                           
 10826 ;; *************** function _MTOUCH_CVD_ScanA_0 *****************
 10827 ;; Defined at:
 10828 ;;		line 62 in file "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10829 ;; Parameters:    Size  Location     Type
 10830 ;;		None
 10831 ;; Auto vars:     Size  Location     Type
 10832 ;;		None
 10833 ;; Return value:  Size  Location     Type
 10834 ;;                  1    wreg      void 
 10835 ;; Registers used:
 10836 ;;		wreg
 10837 ;; Tracked objects:
 10838 ;;		On entry : 0/0
 10839 ;;		On exit  : 0/0
 10840 ;;		Unchanged: 0/0
 10841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
 10842 ;;      Params:         0       0       0       0
 10843 ;;      Locals:         0       0       0       0
 10844 ;;      Temps:          0       0       0       0
 10845 ;;      Totals:         0       0       0       0
 10846 ;;Total ram usage:        0 bytes
 10847 ;; Hardware stack levels used:    1
 10848 ;; This function calls:
 10849 ;;		Nothing
 10850 ;; This function is called by:
 10851 ;;		_Sensor_Acq_ExecuteScan
 10852 ;; This function uses a non-reentrant model
 10853 ;;
 10854                           psect	text57,local,class=CODE,delta=2,merge=1,group=0
 10855                           	line	62
 10856                           global __ptext57
 10857                           __ptext57:	;psect for function _MTOUCH_CVD_ScanA_0
 10858  0000'                    psect	text57
 10859                           	file	"mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10860                           	line	62
 10861                           	global	__size_of_MTOUCH_CVD_ScanA_0
 10862                           	__size_of_MTOUCH_CVD_ScanA_0	equ	__end_of_MTOUCH_CVD_ScanA_0-_MTOUCH_CVD_ScanA_0
 10863  0024                     	
 10864                           _MTOUCH_CVD_ScanA_0:	
 10865  0000'                    ;incstack = 0
 10866                           	opt	stack 5
 10867                           ; Regs used in _MTOUCH_CVD_ScanA_0: [wreg]
 10868                           	line	65
 10869                           	
 10870                           i1l2079:	
 10871  0000'                    # 65 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10872                           BANKSEL LATC ;# 
 10873  0000' 0022               	line	66
 10874                           # 66 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10875                           bsf LATC & 0x7F, 1 ;# 
 10876  0001' 148E               	line	69
 10877                           # 69 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10878                           BANKSEL ADCON0 ;# 
 10879  0002' 0021               	line	70
 10880                           # 70 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10881                           movlw ( 0x5<<2 | 0x1 ) ;# 
 10882  0003' 3015               	line	71
 10883                           # 71 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10884                           movwf ADCON0 & 0x7F ;# 
 10885  0004' 009D               psect	text57
 10886                           	line	74
 10887                           	
 10888                           i1l2081:	
 10889  0005'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 74:     _delay(10);
 10890                           	opt asmopt_push
 10891                           opt asmopt_off
 10892                           	movlw	3
 10893  0005' 3003               u184_27:
 10894  0006'                    decfsz	wreg
 10895  0006' 0B89               	goto	u184_27
 10896  0007' 2806'              	nop
 10897  0008' 0000               opt asmopt_pop
 10898                           
 10899                           	line	77
 10900                           # 77 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10901                           movlw 113 ;# 
 10902  0009' 3071               	line	78
 10903                           # 78 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10904                           movwf ADCON0 & 0x7F ;# 
 10905  000A' 009D               	line	79
 10906                           # 79 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10907                           BANKSEL LATC ;# 
 10908  000B' 0022               	line	80
 10909                           # 80 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10910                           bcf LATC & 0x7F, 1 ;# 
 10911  000C' 108E               	line	81
 10912                           # 81 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10913                           BANKSEL ADCON0 ;# 
 10914  000D' 0021               	line	84
 10915                           # 84 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10916                           movlw LOW TRISC ;# 
 10917  000E' 308E               	line	85
 10918                           # 85 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10919                           movwf FSR0L & 0x7F ;# 
 10920  000F' 0084               	line	86
 10921                           # 86 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10922                           movlw HIGH TRISC ;# 
 10923  0010' 3000               	line	87
 10924                           # 87 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10925                           movwf FSR0H & 0x7F ;# 
 10926  0011' 0085               	line	90
 10927                           # 90 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10928                           movlw LOW LATC ;# 
 10929  0012' 300E               	line	91
 10930                           # 91 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10931                           movwf FSR1L & 0x7F ;# 
 10932  0013' 0086               	line	92
 10933                           # 92 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10934                           movlw HIGH LATC ;# 
 10935  0014' 3001               	line	93
 10936                           # 93 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10937                           movwf FSR1H & 0x7F ;# 
 10938  0015' 0087               	line	96
 10939                           # 96 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10940                           movlw ( 0x5<<2 | 0x1 ) ;# 
 10941  0016' 3015               	line	97
 10942                           # 97 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10943                           bsf INDF0 & 0x7F, 1 ;# 
 10944  0017' 1480               psect	text57
 10945                           	line	98
 10946                           	
 10947                           i1l2083:	
 10948  0018'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 98:     _delay(0);
 10949                           		opt asmopt_push
 10950                           	opt asmopt_off
 10951                           	opt asmopt_pop
 10952                           
 10953                           	line	99
 10954                           # 99 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10955                           movwf ADCON0 & 0x7F ;# 
 10956  0018' 009D               psect	text57
 10957                           	line	104
 10958                           	
 10959                           i1l2085:	
 10960  0019'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 104:     _delay(5);
 10961                           		opt asmopt_push
 10962                           	opt asmopt_off
 10963                           	nop2	;2 cycle nop
 10964  0019' 3200               	nop2	;2 cycle nop
 10965  001A' 3200               	nop
 10966  001B' 0000               	opt asmopt_pop
 10967                           
 10968                           	line	107
 10969                           # 107 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10970                           BANKSEL ADCON0 ;# 
 10971  001C' 0021               	line	108
 10972                           # 108 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10973                           bsf ADCON0 & 0x7F, 1 ;# 
 10974  001D' 149D               psect	text57
 10975                           	line	111
 10976                           	
 10977                           i1l2087:	
 10978  001E'                    ;mcc_generated_files/mtouch/mtouch_sensor_scan.c: 111:     _delay(3);
 10979                           		opt asmopt_push
 10980                           	opt asmopt_off
 10981                           	nop2	;2 cycle nop
 10982  001E' 3200               	nop
 10983  001F' 0000               	opt asmopt_pop
 10984                           
 10985                           	line	114
 10986                           # 114 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10987                           BANKSEL LATC ;# 
 10988  0020' 0022               	line	115
 10989                           # 115 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10990                           bsf LATC & 0x7F, 1 ;# 
 10991  0021' 148E               	line	116
 10992                           # 116 "mcc_generated_files/mtouch/mtouch_sensor_scan.c"
 10993                           bcf INDF0 & 0x7F, 1 ;# 
 10994  0022' 1080               psect	text57
 10995                           	line	118
 10996                           	
 10997                           i1l367:	
 10998  0023'                    	return
 10999  0023' 0008               	opt stack 0
 11000                           GLOBAL	__end_of_MTOUCH_CVD_ScanA_0
 11001                           	__end_of_MTOUCH_CVD_ScanA_0:
 11002  0024'                    	signat	_MTOUCH_CVD_ScanA_0,89
 11003                           global	___latbits
 11004                           ___latbits	equ	0
 11005  0000                     	global	btemp
 11006                           	btemp set 07Eh
 11007  007E                     
 11008                           	DABS	1,126,2	;btemp
 11009                           	global	int$flags
 11010                           	int$flags	set btemp
 11011  007E                     	global	wtemp0
 11012                           	wtemp0 set btemp+0
 11013  007E                     	end


Data Sizes:
    Strings     0
    Constant    21
    Data        26
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     24      73
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    Sensor_Scanfrequency_Evaluation@sensor.scanB	const PTR FTN()void  size(2) Largest target is 0
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Scanfrequency_Evaluation@sensor.scanA	const PTR FTN()void  size(2) Largest target is 0
		 -> MTOUCH_CVD_ScanA_0(), 

    Button_Service$1586$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Service$1586	PTR FTN(PTR struct .,)void  size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    Button_StateMachine$0	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Sensor_isEnabled$0	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    memcpy@d1	PTR void  size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    memcpy@s1	PTR const void  size(2) Largest target is 16
		 -> mtouch_button_init(CODE[16]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 16
		 -> mtouch_button_init(CODE[16]), 

    Button_Baseline_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Baseline_Initialize@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Reading_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Deviation_Update@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Tick_helper@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_Pressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_NotPressed@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_State_Initializing@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_Service@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    sp__memcpy	PTR void  size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    MTOUCH_Button_Initialize@button	PTR struct . size(1) Largest target is 16
		 -> mtouch_button(BANK0[16]), 

    Button_StateMachine	PTR FTN(PTR struct .,)void [3] size(2) Largest target is 1
		 -> Button_State_Pressed(), Button_State_NotPressed(), Button_State_Initializing(), 

    callback_notPressed	PTR FTN(enum E2303,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    callback_pressed	PTR FTN(enum E2303,)void  size(2) Largest target is 1
		 -> Button_DefaultCallback(), 

    Sensor_setSampled@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setSampled@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setSampled@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Sampled_Reset@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Sampled_Reset@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Sampled_Reset@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    MTOUCH_Sensor_Sampled_ResetAll@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setInactive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setInactive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setInactive@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setActive@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setActive@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setActive@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_setScanFunction@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_setScanFunction@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_setScanFunction@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_RawSample_Update@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_RawSample_Update@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_RawSample_Update@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Acq_ExecutePacket@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acq_ExecutePacket@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acq_ExecutePacket@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Acquisition@sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_Acquisition@sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_Acquisition@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    Sensor_Service@sensor	PTR struct . size(1) Largest target is 9
		 -> mtouch_sensor(BANK0[9]), 

    S371$scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    mtouch_sensor.scanB	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    S371$scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    mtouch_sensor.scanA	const PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    Sensor_scanB	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanB_0(), 

    Sensor_scanA	PTR FTN()void  size(2) Largest target is 1
		 -> MTOUCH_CVD_ScanA_0(), 

    callback_sampled	PTR FTN(enum E2110,)void  size(2) Largest target is 1
		 -> Sensor_DefaultCallback(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sensor_Acq_ExecuteScan(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Sensor_Acq_ExecuteScan(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_ISR->_Sensor_Acq_ExecuteScan
    _Sensor_Acq_ExecuteScan->i1___bmul
    _Sensor_Acq_ExecuteScan->i1_abs

Critical Paths under _main in BANK0

    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _MTOUCH_Initialize->_MTOUCH_Button_InitializeAll
    _MTOUCH_Sensor_InitializeAll->_MTOUCH_Sensor_Initialize
    _MTOUCH_Sensor_Initialize->___bmul
    _MTOUCH_Button_InitializeAll->_memcpy
    _MTOUCH_Service_Mainloop->_MTOUCH_Button_ServiceAll
    _MTOUCH_Button_Tick->_Button_Tick_helper
    _MTOUCH_Sensor_Sampled_ResetAll->_Sensor_Sampled_Reset
    _MTOUCH_Sensor_SampleAll->_Sensor_Service
    _Sensor_Service->_Sensor_Acquisition
    _Sensor_Acquisition->_Sensor_Acq_ExecutePacket
    _Sensor_Acq_ExecutePacket->_TMR2_SetInterruptHandler
    _MTOUCH_Button_ServiceAll->_Button_Service
    _Button_Service->_Button_State_Initializing
    _MTOUCH_Sensor_wasSampled->___bmul
    _Button_State_Initializing->_Button_Baseline_Initialize
    _Button_Baseline_Initialize->_MTOUCH_Sensor_RawSample_Get
    _Button_Reading_Update->_MTOUCH_Sensor_RawSample_Get
    _MTOUCH_Sensor_RawSample_Get->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    6933
            _MTOUCH_Button_isPressed
            _MTOUCH_Service_Mainloop
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1284
                  _MTOUCH_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Initialize                                    0     0      0    1110
        _MTOUCH_Button_InitializeAll
        _MTOUCH_Sensor_InitializeAll
     _MTOUCH_Sensor_Sampled_ResetAll
      _MTOUCH_Sensor_Scan_Initialize
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_InitializeAll                          2     2      0     425
                                              7 BANK0      2     2      0
           _MTOUCH_Sensor_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_Initialize                             3     3      0     357
                                              4 BANK0      3     3      0
               _MTOUCH_Sensor_Enable
               _Sensor_Sampled_Reset
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_InitializeAll                          2     2      0     529
                                             10 BANK0      2     2      0
           _MTOUCH_Button_Initialize
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     6      4     328
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Service_Mainloop                              0     0      0    5605
           _MTOUCH_Button_ServiceAll
            _MTOUCH_Sensor_SampleAll
     _MTOUCH_Sensor_Sampled_ResetAll
                        _MTOUCH_Tick
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Tick                                          0     0      0     121
                 _MTOUCH_Button_Tick
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Button_Tick                                   0     0      0     121
                 _Button_Tick_helper
 ---------------------------------------------------------------------------------
 (4) _Button_Tick_helper                                   3     3      0     121
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Sampled_ResetAll                       2     2      0     156
                                              1 BANK0      2     2      0
               _Sensor_Sampled_Reset
 ---------------------------------------------------------------------------------
 (4) _Sensor_Sampled_Reset                                 1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Sensor_SampleAll                              2     2      0    1818
                                             16 BANK0      2     2      0
                     _Sensor_Service
 ---------------------------------------------------------------------------------
 (3) _Sensor_Service                                       5     5      0    1719
                                             11 BANK0      5     5      0
                 _Sensor_Acquisition
             _Sensor_DefaultCallback *
            _Sensor_RawSample_Update
                  _Sensor_setSampled
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _Sensor_setSampled                                    1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_RawSample_Update                              1     1      0      77
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _Sensor_DefaultCallback                               1     0      1      53
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Sensor_Acquisition                                   6     6      0    1108
                                              5 BANK0      6     6      0
           _Sensor_Acq_ExecutePacket
                   _Sensor_isEnabled
                   _Sensor_setActive
                 _Sensor_setInactive
                                _abs
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     292
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (5) _Sensor_setInactive                                   1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_setActive                                     1     1      0      55
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _Sensor_isEnabled                                     0     0      0      18
 ---------------------------------------------------------------------------------
 (5) _Sensor_Acq_ExecutePacket                             3     3      0     429
                                              2 BANK0      3     3      0
      _MTOUCH_Sensor_Scan_Initialize
             _Sensor_setScanFunction
            _TMR2_LoadPeriodRegister
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (6) _TMR2_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _TMR2_LoadPeriodRegister                              1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _Sensor_setScanFunction                               1     1      0      77
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _MTOUCH_Sensor_Scan_Initialize                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MTOUCH_Button_ServiceAll                             2     2      0    3510
                                             22 BANK0      2     2      0
                     _Button_Service
 ---------------------------------------------------------------------------------
 (3) _Button_Service                                       4     4      0    3442
                                             18 BANK0      4     4      0
            _Button_Deviation_Update
              _Button_Reading_Update
          _Button_State_Initializing *
            _Button_State_NotPressed *
               _Button_State_Pressed *
           _MTOUCH_Button_Initialize
         _MTOUCH_Sensor_isCalibrated
           _MTOUCH_Sensor_wasSampled
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_wasSampled                             2     2      0     225
                                              4 BANK0      2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Sensor_isCalibrated                           1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _Button_State_Pressed                                 3     2      1     521
                                             13 BANK0      3     2      1
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _Button_State_NotPressed                              3     2      1     882
                                             13 BANK0      3     2      1
             _Button_Baseline_Update
             _Button_DefaultCallback *
           _MTOUCH_Button_Initialize
 ---------------------------------------------------------------------------------
 (4) _MTOUCH_Button_Initialize                             4     4      0     133
                                              0 BANK0      4     4      0
            _MTOUCH_Sensor_Calibrate
 ---------------------------------------------------------------------------------
 (5) _MTOUCH_Sensor_Calibrate                              1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _Button_DefaultCallback                               1     0      1     159
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _Button_State_Initializing                            5     4      1     813
                                             13 BANK0      5     4      1
         _Button_Baseline_Initialize
             _Button_Baseline_Update
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Update                               7     7      0     260
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (5) _Button_Baseline_Initialize                           5     5      0     355
                                              8 BANK0      5     5      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (4) _Button_Reading_Update                                3     3      0     456
                                              8 BANK0      3     3      0
        _MTOUCH_Sensor_RawSample_Get
 ---------------------------------------------------------------------------------
 (6) _MTOUCH_Sensor_RawSample_Get                          4     2      2     247
                                              4 BANK0      4     2      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (5) ___bmul                                               4     3      1     203
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (4) _Button_Deviation_Update                             15    15      0     213
                                              0 BANK0     15    15      0
 ---------------------------------------------------------------------------------
 (1) _MTOUCH_Button_isPressed                              2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _INTERRUPT_InterruptManager                           0     0      0     409
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (9) _TMR2_ISR                                             0     0      0     409
                   Absolute function *
             _Sensor_Acq_ExecuteScan *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _Sensor_Acq_ExecuteScan                              4     4      0     409
                                              4 COMMON     4     4      0
                 _MTOUCH_CVD_ScanA_0 *
                 _MTOUCH_CVD_ScanB_0 *
                           i1___bmul
                              i1_abs
 ---------------------------------------------------------------------------------
 (11) i1_abs                                               4     2      2     144
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (11) i1___bmul                                            4     3      1      87
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_CVD_ScanB_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _MTOUCH_CVD_ScanA_0                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MTOUCH_Button_isPressed
   _MTOUCH_Service_Mainloop
     _MTOUCH_Button_ServiceAll
       _Button_Service
         _Button_Deviation_Update
         _Button_Reading_Update
           _MTOUCH_Sensor_RawSample_Get
             ___bmul
         _Button_State_Initializing *
           _Button_Baseline_Initialize
             _MTOUCH_Sensor_RawSample_Get
               ___bmul
           _Button_Baseline_Update
         _Button_State_NotPressed *
           _Button_Baseline_Update
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
         _Button_State_Pressed *
           _Button_DefaultCallback *
           _MTOUCH_Button_Initialize *
             _MTOUCH_Sensor_Calibrate
         _MTOUCH_Button_Initialize *
           _MTOUCH_Sensor_Calibrate
         _MTOUCH_Sensor_isCalibrated *
         _MTOUCH_Sensor_wasSampled *
           ___bmul
     _MTOUCH_Sensor_SampleAll
       _Sensor_Service
         _Sensor_Acquisition
           _Sensor_Acq_ExecutePacket
             _MTOUCH_Sensor_Scan_Initialize
             _Sensor_setScanFunction
             _TMR2_LoadPeriodRegister
             _TMR2_SetInterruptHandler
             _TMR2_StartTimer
             _TMR2_StopTimer
           _Sensor_isEnabled
           _Sensor_setActive
           _Sensor_setInactive
           _abs
         _Sensor_DefaultCallback *
         _Sensor_RawSample_Update *
         _Sensor_setSampled *
         ___bmul *
     _MTOUCH_Sensor_Sampled_ResetAll
       _Sensor_Sampled_Reset
     _MTOUCH_Tick
       _MTOUCH_Button_Tick
         _Button_Tick_helper
   _SYSTEM_Initialize
     _MTOUCH_Initialize
       _MTOUCH_Button_InitializeAll
         _MTOUCH_Button_Initialize
           _MTOUCH_Sensor_Calibrate
         _memcpy
       _MTOUCH_Sensor_InitializeAll
         _MTOUCH_Sensor_Initialize
           _MTOUCH_Sensor_Enable
           _Sensor_Sampled_Reset
           ___bmul
       _MTOUCH_Sensor_Sampled_ResetAll
         _Sensor_Sampled_Reset
       _MTOUCH_Sensor_Scan_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   _TMR2_ISR
     Absolute function(Fake) *
     _Sensor_Acq_ExecuteScan *
       _MTOUCH_CVD_ScanA_0 *
       _MTOUCH_CVD_ScanB_0 *
       i1___bmul *
       i1_abs *
     _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      57       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     18      49       6       91.3%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      57      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Aug 06 20:11:15 2018

                    __end_of_TMR2_SetInterruptHandler 0006                          ?_MTOUCH_Sensor_RawSample_Get 0004  
                                      ___bmul@product 0002                                           __CFG_CP$OFF 0000  
                              _Sensor_setScanFunction 0000                                                    l30 000E  
                                                  l31 000E                                                    l25 000F  
                                                  l34 0003                                                    l28 0008  
                                                  l61 0002                                                    l29 0008  
                                                  l70 0004                                                    l55 0012  
                                                  l58 0002                                                    l77 0005  
                     __size_of_Sensor_Acq_ExecuteScan 00B2                            __end_of_Sensor_setInactive 0008  
                                         __CFG_LVP$ON 0000                                                   LATC 010E  
                                                 l105 0015                                                   l151 0003  
                                                 l320 001B                                                   l144 000C  
                                                 l321 001F                                                   l241 0009  
                                                 l322 001F                                                   l330 0000  
                                                 l250 0020                                                   l234 000C  
                                                 l242 0018                                                   l251 0015  
                                                 l147 000B                                                   l235 0003  
                                                 l243 0018                                                   l500 008B  
                                                 l252 0022                                                   l148 0016  
                                                 l420 0016                                                   l236 001A  
                                                 l501 0093                                                   l325 0011  
                                                 l421 0025                                                   l237 000A  
                                                 l430 0056                                                   l246 0008  
                                                 l342 0007                                                   l270 001E  
                                                 l326 001A                                                   l422 0025  
                                                 l238 002D                                                   l431 0043  
                                                 l271 002A                                                   l327 001A  
                                                 l255 002E                                                   l351 000F  
                                                 l520 002B                                                   l432 0056  
                                                 l336 0011                                                   l280 0040  
                                                 l272 005C                                                   l256 0018  
                                                 l352 0021                                                   l417 0032  
                                                 l441 0036                                                   l345 0002  
                                                 l425 0009                                                   l281 0046  
                                                 l273 0062                                                   l257 003E  
                                                 l249 0009                                                   l353 0021  
                                                 l450 0027                                                   l442 0035  
                                                 l426 0018                                                   l282 004A  
                                                 l266 0012                                                   l362 0007  
                                                 l258 002C                                                   l515 0039  
                                                 l523 0049                                                   l451 0055  
                                                 l435 0017                                                   l443 006E  
                                                 l427 0018                                                   l283 0050  
                                                 l339 0007                                                   l267 0064  
                                                 l259 0041                                                   l516 006A  
                                                 l524 008A                                                   l348 0000  
                                                 l452 0054                                                   l436 001D  
                                                 l444 0065                                                   l356 0011  
                                                 l284 005C                                                   l276 0012  
                                                 l268 001F                                                   l460 0028  
                                                 l517 006A                                                   l525 008A  
                                                 l453 0055                                                   l437 0061  
                                                 l445 006E                                                   l277 005E  
                                                 l269 0013                                                   l461 0029  
                                                 l438 0061                                                   l446 0095  
                                                 l278 003F                                                   l447 0095  
                                                 l279 0046                                                   l359 0007  
                                                 l536 0000                                                   l456 0004  
                                                 l560 0016                                                   l561 0019  
                                                 l562 001E                                                   l459 0029  
                                                 l563 001A                                                   l484 001E  
                                                 l564 001D                                                   l485 0021  
                                                 l565 0020                                                   l557 0005  
                                                 l486 0021                                                   l566 0021  
                                                 l558 001F                                                   l567 0021  
                                                 l559 001A                                                   l594 0004  
                                                 l499 0074                                                   l595 000D  
                                                 l596 0017                                                   l597 0019  
                                                 _GIE 005F                                                   _PR2 001B  
                                                 u920 0008                                                   u921 0007  
                                                 u930 0016                                                   u931 0015  
                                                 u940 0007                                                   u941 0006  
                                                 u950 000F                                                   u951 000E  
                                                 u960 0044                                                   u961 0043  
                                                 u970 004A                                                   u971 0049  
                                                 u980 004F                                                   u981 004E  
                                                 u990 0058                                                   u991 0057  
                                                 _abs 0000                                       _TMR2_Initialize 0000  
                                        __CFG_BORV$LO 0000                                                   wreg 0009  
                    ??_MTOUCH_Sensor_Sampled_ResetAll 0001                       ?_MTOUCH_Sensor_Sampled_ResetAll 0000  
                    __size_of_MTOUCH_Sensor_SampleAll 0023                     __size_of_MTOUCH_Sensor_Initialize 002E  
                           ?_MTOUCH_Sensor_Initialize 0000                                                  INDF0 0000  
                                                FSR0H 0005                                                  FSR1H 0007  
                                                FSR0L 0004                                                  FSR1L 0006  
                                  _MTOUCH_CVD_ScanA_0 0000                                    _MTOUCH_CVD_ScanB_0 0000  
                                                l1012 0023                                                  l1013 000B  
                                                l1006 001B                                                  l1014 0030  
                                                l1015 0030                                                  l1008 001C  
                                                l2001 0089                                                  l1009 001C  
                                                l2011 003A                                                  l2003 0090  
                                                ?_abs 0000                                                  l2013 0047  
                                                l2005 0000                                                  l2101 000E  
                                                l2021 0000                                                  l2007 0012  
                                                l2103 001A                                                  l2015 0002  
                                                l2031 0012                                                  l2023 0002  
                                                l2009 0027                                                  l2105 0027  
                                                l2017 000C                                                  l2201 0000  
                                                l2041 0016                                                  l2033 0000  
                                                l2025 0008                                                  l2107 0031  
                                                l2051 000F                                                  l2019 001F  
                                                l2043 001A                                                  l2035 000D  
                                                l2027 0009                                                  l2131 0003  
                                                l2109 003C                                                  l2053 0013  
                                                l2045 001F                                                  l2037 000F  
                                                l2029 000D                                                  l2141 0000  
                                                l2133 0006                                                  l2055 0018  
                                                l2047 0000                                                  l2039 0015  
                                                l2143 0003                                                  l2135 0008  
                                                l2151 0000                                                  l2049 000E  
                                                l2057 0000                                                  l2145 0004  
                                                l2137 000B                                                  l2129 0000  
                                                l2161 000F                                                  l2153 0003  
                                                l2163 0000                                                  l2147 0005  
                                                l2139 0010                                                  l2155 0004  
                                                l2251 000C                                                  l2501 0014  
                                                l2165 0003                                                  l2157 0005  
                                                l2149 0000                                                  l2271 0002  
                                                l2191 0002                                                  l2431 0006  
                                                l2503 0016                                                  l2167 0006  
                                                l2159 0007                                                  l2511 000D  
                                                l2281 0020                                                  l2273 0007  
                                                l2193 0008                                                  l1801 0011  
                                                l2441 001D                                                  l2433 000F  
                                                l2169 0009                                                  l2249 0000  
                                                l2505 0000                                                  l2275 001C  
                                                l2099 0002                                                  l2195 0009  
                                                l1811 0023                                                  l1803 0012  
                                                l2451 0062                                                  l2435 0011  
                                                l2443 001F                                                  l2507 0003  
                                                l2277 001D                                                  l2197 000D  
                                                l2189 0000                                                  l1821 0034  
                                                l1813 0028                                                  l1805 0013  
                                                l2453 0064                                                  l2445 002A  
                                                l2437 0013                                                  l2429 0002  
                                                l2461 0021                                                  l2509 0004  
                                                l2279 001E                                                  l1751 0002  
                                                l2199 0012                                                  l1831 0053  
                                                l1823 0039                                                  l1815 002A  
                                                l1807 0016                                                  l2447 0057  
                                                l2439 001B                                                  l2463 002D  
                                                l2455 0002                                                  l1761 0017  
                                                l1753 0004                                                  l1833 0058  
                                                l1825 003C                                                  l1817 002B  
                                                l1809 001B                                                  l1841 0002  
                                                l2449 005C                                                  l1921 000F  
                                                l2465 002E                                                  l2457 000F  
                                                l2481 0009                                                  l1763 0019  
                                                l1755 0008                                                  l1851 001D  
                                                l1931 0002                                                  l1771 0002  
                                                l1835 005E                                                  l1827 0045  
                                                l1819 002D                                                  l1843 0002  
                                                l1923 0011                                                  l1915 0002  
                                                l2467 003E                                                  l2459 0018  
                                                l2491 0022                                                  l2483 0012  
                                                l2475 0000                                                  l1757 000D  
                                                l1861 0002                                                  l1853 0024  
                                                l1845 0002                                                  l1933 0011  
                                                l1773 0000                                                  l1781 0002  
                                                l1765 0000                                                  l1829 0050  
                                                l1837 0000                                                  l1917 0006  
                                                l1925 0002                                                  l2469 0041  
                                                l2485 0014                                                  l2477 0002  
                                                l2493 0000                                                  l1941 0017  
                                                l1759 000F                                                  l1791 001B  
                                                l1783 0002                                                  l1951 0007  
                                                l1863 0006                                                  l1855 002B  
                                                l1847 000E                                                  l1927 0000  
                                                l1775 0003                                                  l1767 0000  
                                                l1839 000E                                                  l1919 0007  
                                                l2487 0015                                                  l2479 0008  
                                                l2495 0008                                                  l1943 001E  
                                                l1935 0002                                                  l2583 0015  
                                                l1871 0002                                                  l1961 0002  
                                                l1793 001E                                                  l1785 0007  
                                                l1953 001D                                                  l1857 0002  
                                                l1865 0007                                                  l1849 0013  
                                                l1929 0002                                                  l1777 0005  
                                                l1769 0000                                                  l2585 0039  
                                                l2489 0020                                                  l2497 000A  
                                                l1937 000B                                                  l1945 0023  
                                                l1881 002D                                                  l1873 000B  
                                                l1971 008B                                                  l1963 005A  
                                                l1787 0019                                                  l1955 0037  
                                                l1947 0002                                                  l1859 001C  
                                                l1867 0047                                                  l1779 0007  
                                                l1795 0002                                                  l2499 000B  
                                                l1939 0013                                                  l1875 000C  
                                                l1965 006B                                                  l1789 001A  
                                                l1949 0006                                                  l1957 0039  
                                                l1869 0049                                                  l1981 0027  
                                                l1973 0000                                                  l1797 0002  
                                                l1877 001A                                                  l1967 0074  
                                                l1959 004F                                                  l1983 0038  
                                                l1975 0012                                                  l1991 002D  
                                                l1799 000F                                                  l1879 001F  
                                                l1969 0082                                                  l1977 0017  
                                                l1993 0036                                                  l1985 0000  
                                                l1979 001D                                                  l1995 0049  
                                                l1987 000C                                                  l1997 0058  
                                                l1989 0026                                                  l1999 0065  
                                                TRISC 008E                                                  u1000 000E  
                                                u1001 000D                                                  u1100 0006  
                                                u1005 000A                                                  u1101 0005  
                                                u1030 0006                                                  u1110 002F  
                                                u1031 0005                                                  u1015 0005  
                                                u1111 002E                                                  u1120 0006  
                                                u1040 0018                                                  u1200 000C  
                                                u1121 0005                                                  u1025 0021  
                                                u1201 000B                                                  u1130 0013  
                                                u1050 005A                                                  u1210 0026  
                                                u1211 0025                                                  u1140 0050  
                                                u1220 0049                                                  u1300 0014  
                                                u1045 0014                                                  u1221 0048  
                                                u1301 0013                                                  u1150 006B  
                                                u1230 0089                                                  u1310 0024  
                                                u1151 006A                                                  u1135 000F  
                                                u1055 0056                                                  u1231 0088  
                                                u1311 0023                                                  u1160 0082  
                                                u1240 0012                                                  u1320 000D  
                                                u1161 0081                                                  u1145 004C  
                                                u1241 0011                                                  u1321 000C  
                                                u1250 003A                                                  u1170 0012  
                                                u1330 0020                                                  u1410 000D  
                                                u1251 0039                                                  u1171 0011  
                                                u1331 001F                                                  u1411 000C  
                                                u1180 0038                                                  u1260 000C  
                                                u1181 0037                                                  u1261 000B  
                                                _LATA 010C                                                  u1190 0049  
                                                u1350 001A                                                  u1270 001F  
                                                u1351 0019                                                  u1271 001E  
                                                _LATC 010E                                                  u1360 0027  
                                                u1280 0007                                                  u1361 0026  
                                                u1345 0005                                                  u1281 0006  
                                                u1530 0007                                                  u1370 003C  
                                                u1450 0007                                                  u1290 0017  
                                                u1531 0006                                                  u1195 0045  
                                                u1371 003B                                                  u1451 0006  
                                                u1291 0016                                                  u1460 0017  
                                                u1461 0016                                                  u1550 001A  
                                                u1551 0018                                                  u1560 001B  
                                                u1800 0008                                                  u1545 000A  
                                                u1801 0007                                                  u1730 000F  
                                                u1810 000D                                                  u1731 000E  
                                                u1811 000C                                                  u1740 001B  
                                                u1820 0016                                                  u1741 001A  
                                                u1821 0015                                                  u1750 0029  
                                                u1751 0028                                                  u1760 0057  
                                                u1761 0056                                                  u1770 0007  
                                                u1771 0006                                                  u1780 0012  
                                                u1765 0053                                                  u1781 0011  
                                                u1790 001F                                                  u1791 001E  
                                                i1l80 0000                                                  i1l73 000E  
                                                i1l74 000E                                                  _PLLR 04D6  
                          Button_State_Pressed@button 000D                                                  _TMR2 001A  
                                                _WPUA 020C                                                  _WPUC 020E  
                   __size_of_Sensor_Acq_ExecutePacket 005F                             ?_Sensor_Acq_ExecutePacket 0000  
                                        __CFG_WRT$OFF 0000                                                  abs@a 0000  
                                                _main 0000                  __size_of_MTOUCH_Button_InitializeAll 0026  
                                                fsr0h 0005                                                  fsr1h 0007  
                                                indf0 0000                                                  fsr0l 0004  
                                                indf1 0001                                                  fsr1l 0006  
                __size_of_MTOUCH_Sensor_InitializeAll 0019                                                  btemp 007E  
                                 ?_MTOUCH_CVD_ScanA_0 0000                                   ?_MTOUCH_CVD_ScanB_0 0000  
                                                start 0000*                                    ___bmul@multiplier 0003  
                                       __CFG_MCLRE$ON 0000                                                 ADCON0 009D  
__end_ofSensor_Scanfrequency_Evaluation@frequency_hop 0005          Sensor_Scanfrequency_Evaluation@frequency_hop 0000  
                            ?_MTOUCH_Service_Mainloop 0000                      __size_of_MTOUCH_Button_isPressed 0022  
                       __size_of_Button_State_Pressed 0056                                                 ??_abs 0002  
                         ?_Button_Baseline_Initialize 0000                         ??_MTOUCH_Sensor_RawSample_Get 0006  
                       Sensor_RawSample_Update@sensor 0000                                         __CFG_PLLEN$ON 0000  
                      __size_of_OSCILLATOR_Initialize 000F                         __end_of_OSCILLATOR_Initialize 000F  
                                               ?_main 0000                                                 _ADRES 009B  
                                       __CFG_WDTE$OFF 0000                                  ??_MTOUCH_CVD_ScanA_0 0000  
                                ??_MTOUCH_CVD_ScanB_0 0000                                                 _T2CON 001C  
                             __size_of_Button_Service 0057                                                 i1l121 0016  
                                               i1l122 0014                                                 i1l123 0015  
                                               i1l300 0072                                                 i1l124 0017  
                                               i1l301 008D                                                 i1l125 0017  
                                               i1l302 00B1                                                 i1l370 0023  
                                               i1l291 000C                                                 i1l292 00B1  
                                               i1l293 0095                                                 i1l294 0023  
                                               i1l367 0023                                                 i1l295 0013  
                                               i1l296 0034                                                 i1l297 001A  
                                               i1l298 0021                                                 i1l299 0092  
                                               i1l594 0003                                                 i1l595 000C  
                                               i1l596 0016                                                 i1l597 0018  
                                               _TRISA 008C                                                 _TRISC 008E  
                                               i1_abs 0000                       __size_of_Button_DefaultCallback 0001  
                                    __end_of_TMR2_ISR 000F                       __size_of_Sensor_DefaultCallback 0001  
                             __size_of_Sensor_Service 0042                 __end_of_MTOUCH_Sensor_Scan_Initialize 0009  
              __size_of_MTOUCH_Sensor_Scan_Initialize 0009                         _MTOUCH_Sensor_Scan_Initialize 0000  
                                      _WDT_Initialize 0000                               Sensor_setSampled@sensor 0000  
                              _Sensor_Acq_ExecuteScan 0000                      __size_of_Button_State_NotPressed 0096  
                                    __end_ofi1___bmul 0019                                        __CFG_BOREN$OFF 0000  
                                               pclath 000A                                  _Sensor_Sampled_Reset 0000  
                                  _Sensor_isEnabled$0 0000                                                 status 0003  
                                               wtemp0 007E                                       _TMR2_StartTimer 0000  
                    __size_of_TMR2_LoadPeriodRegister 0005                             __size_of_Sensor_setActive 0008  
                                     __initialization 0000                                          __end_of_main 0022  
                             __end_of_TMR2_Initialize 0013                                        __CFG_LPBOR$OFF 0000  
                         ?_INTERRUPT_InterruptManager 0000                      __end_of_MTOUCH_Button_Initialize 0033  
                            _TMR2_SetInterruptHandler 0000                                                ??_main 0018  
                             _MTOUCH_Sensor_Calibrate 0000                               ??_Button_Reading_Update 0008  
                                              ?i1_abs 0000                  MTOUCH_Sensor_Sampled_ResetAll@sensor 0002  
                            ?_Button_Deviation_Update 0000                                __end_of_WDT_Initialize 0004  
                                        ?_MTOUCH_Tick 0000                          Button_Baseline_Update@button 0006  
                                              _ADCON0 009D                                                _ADCON1 009E  
                                              _ADCON2 009F                  __size_of_MTOUCH_Sensor_RawSample_Get 0020  
                                      __CFG_ZCDDIS$ON 0000                                                _ANSELA 018C  
                                              _ANSELC 018E                                                _BORCON 0116  
                                              i1l1006 0019                                                i1l1008 001A  
                                              i1l1009 001A                                                i1l2111 0000  
                                              i1l2121 000C                                                i1l2113 000D  
                                              i1l2123 000E                                                i1l2115 0001  
                                              i1l2211 0012                                                i1l2203 0000  
                                              i1l2125 0016                                                i1l2117 0003  
                                              i1l2221 0034                                                i1l2213 0013  
                                              i1l2205 0005                                                i1l2127 0018  
                                              i1l2119 0007                                                i1l2231 0072  
                                              i1l2223 0046                                                i1l2215 001A  
                                              i1l2207 000B                                                i1l2081 0005  
                                              i1l2241 009A                                                i1l2233 0087  
                                              i1l2225 004A                                                i1l2217 0022  
                                              i1l2209 000C                                                _ODCONA 028C  
                                              i1l2083 0018                                                i1l2091 0005  
                                              i1l2243 00AE                                                i1l2235 008D  
                                              i1l2227 0057                                                i1l2219 0023  
                                              _ODCONC 028E                                                i1l2085 0019  
                                              i1l2093 0018                                                i1l2229 006C  
                                              i1l2237 0092                                                i1l2253 0000  
                                              i1l2087 001E                                                i1l2079 0000  
                                              i1l2095 0019                                                i1l2239 0095  
                                              i1l2255 0002                                                i1l2097 001E  
                                              i1l2089 0000                                                i1l2257 0008  
                                              i1l2283 0002                                                i1l2285 0006  
                                              i1l2287 000B                                                i1l2289 0010  
                                              i1l2587 002C                                                u140_20 0015  
                                              u140_21 0014                                                u150_20 004A  
                                              u150_21 0049                                                u151_20 0008  
                                              u151_21 0007                                 ?_Sensor_Sampled_Reset 0000  
                                              u138_20 000D                                                u138_21 000C  
                                              u138_25 0009                                                u139_20 0007  
                                              u147_20 000A                                                u139_21 0006  
                                              u147_21 0009                                                u148_20 0011  
                                              u148_21 0010                                                u149_20 0046  
                                              u157_20 0006                                                u149_21 0045  
                                              u157_21 0005                                                u158_20 000B  
                                              u158_21 000A                                                u159_20 0010  
                                              u159_21 000F                                                u183_27 0006  
                                              u184_27 0006                                                _OSCCON 0099  
                                              _WDTCON 0097                     MTOUCH_Button_InitializeAll@button 000B  
                                              i1abs@a 0000                                _Button_DefaultCallback 0000  
                     __end_of_MTOUCH_Service_Mainloop 0017                                        __CFG_PWRTE$OFF 0000  
                              _Sensor_DefaultCallback 0000                                         _packet_sample 0004  
                                              ___bmul 0000                          Sensor_DefaultCallback@sensor 0000  
                                      __CFG_STVREN$ON 0000                                                _memcpy 0000  
                    __end_of_MTOUCH_Button_ServiceAll 0019                               _MTOUCH_Sensor_SampleAll 0000  
                        Button_DefaultCallback@button 0000                                       ?_WDT_Initialize 0000  
                            ?_Sensor_RawSample_Update 0000                            __end_of_Sensor_Acquisition 0065  
                             ?_Button_Baseline_Update 0000                               __end_of_TMR2_StartTimer 0003  
            TMR2_SetInterruptHandler@InterruptHandler 0000                       MTOUCH_Sensor_RawSample_Get@name 0007  
                                   _SYSTEM_Initialize 0000                               __end_of__initialization 001A  
                 __size_of_Button_Baseline_Initialize 002C                        ?_MTOUCH_Sensor_Scan_Initialize 0000  
                                  ?_SYSTEM_Initialize 0000                                   _Button_StateMachine 0000  
                          __end_of_Button_Tick_helper 002A                         MTOUCH_Sensor_Calibrate@sensor 0000  
                                 ___bmul@multiplicand 0000                                         __end_ofi1_abs 001B  
                             ?_Sensor_setScanFunction 0000                                        __pcstackCOMMON 0000  
                             _MTOUCH_Button_isPressed 0000                                          __pidataBANK0 0000  
                                 ??_SYSTEM_Initialize 000C                                             ?_TMR2_ISR 0000  
                          __end_of_MTOUCH_Button_Tick 0005                      __end_of_MTOUCH_Sensor_Initialize 002E  
                           ??_MTOUCH_Sensor_Calibrate 0000                                      _Sensor_isEnabled 0000* 
                                    ?_TMR2_Initialize 0000                       __end_of_Button_Deviation_Update 0094  
                                           ?i1___bmul 0000                              Sensor_setInactive@sensor 0000  
                                      _Button_Service 0000                      __end_of_Sensor_Acq_ExecutePacket 005F  
                          ?_Button_State_Initializing 000D                                  Button_Service@button 0015  
                                      _OPTION_REGbits 0095                                               ??i1_abs 0002  
                      __end_of_Button_Baseline_Update 008B                                  Sensor_Service@sensor 000F  
                            _MTOUCH_Button_Initialize 0000                                        _Sensor_Service 0000  
                                    i1___bmul@product 0003                               _Button_State_NotPressed 0000  
                                  _Sensor_setInactive 0000                             __end_of_SYSTEM_Initialize 0010  
                    MTOUCH_Sensor_isCalibrated@sensor 0000                                ??_Sensor_Sampled_Reset 0000  
                                          __pbssBANK0 0000                               _TMR2_LoadPeriodRegister 0000  
                                 ?_Sensor_setInactive 0000                                      _Sensor_setActive 0000  
                                  Sensor_Service@name 000D                            __end_of_mtouch_button_init 0010  
                      __end_of_Sensor_setScanFunction 0012                                            __pmaintext 0000  
                                             ?___bmul 0000                                       __CFG_PPS1WAY$ON 0000  
                                          ??_TMR2_ISR 0008                        MTOUCH_Sensor_wasSampled@sensor 0005  
                                          __pintentry 0000                                __end_of_Button_Service 0057  
                                             ?_memcpy 0000                   __end_of_MTOUCH_Button_InitializeAll 0026  
                         _MTOUCH_Button_InitializeAll 0000                   __end_of_MTOUCH_Sensor_InitializeAll 0019  
                         _MTOUCH_Sensor_InitializeAll 0000                             ??_MTOUCH_Sensor_SampleAll 0010  
                                          ??i1___bmul 0001                       __end_of_Sensor_RawSample_Update 001B  
                                ??_Sensor_setInactive 0000                     __size_of_MTOUCH_Sensor_wasSampled 0012  
                           ?_MTOUCH_Sensor_wasSampled 0000                     __end_of_Button_State_Initializing 0062  
                              __end_of_Sensor_Service 0042                              _MTOUCH_Button_ServiceAll 0000  
                             ?_Sensor_Acq_ExecuteScan 0000                         MTOUCH_Sensor_SampleAll@sensor 0011  
                                             _OSCSTAT 009A                                               _OSCTUNE 0098  
                    __size_of_MTOUCH_Service_Mainloop 0017                          __end_of_Button_State_Pressed 0056  
                             __size_of_TMR2_StopTimer 0003                                      ?_TMR2_StartTimer 0000  
                    Button_Baseline_Initialize@button 000C                                  __size_of_MTOUCH_Tick 0004  
                           ??_MTOUCH_Button_isPressed 0000                                        _packet_counter 0004  
                          ??_TMR2_SetInterruptHandler 0002                               Sensor_Acquisition@retry 0009  
                                     __size_of___bmul 001A                        MTOUCH_Button_Initialize@button 0003  
                                     ?_Button_Service 0000                                       __size_of_memcpy 0031  
                                             __ptext1 0000                                               __ptext2 0000  
                                             __ptext3 0000                                               __ptext4 0000  
                                             __ptext5 0000                                               __ptext6 0000  
                                             __ptext7 0000                                               __ptext8 0000  
                                             __ptext9 0000                           Button_Reading_Update@button 000A  
                         __size_of_MTOUCH_CVD_ScanA_0 0024                           __size_of_MTOUCH_CVD_ScanB_0 0024  
                            _MTOUCH_Sensor_Initialize 0000                        __end_of_Sensor_Acq_ExecuteScan 00B2  
                               _OSCILLATOR_Initialize 0000                                             _T2CONbits 001C  
                                        __size_of_abs 001D                             ??_Button_State_NotPressed 000E  
                                     ?_Sensor_Service 0000                              ??_PIN_MANAGER_Initialize 0000  
                                 i1___bmul@multiplier 0002                        __size_of_Button_Reading_Update 006B  
                       __end_of_Button_Reading_Update 006B                     MTOUCH_Sensor_InitializeAll@sensor 0008  
                            _Sensor_Acq_ExecutePacket 0000                                      _callback_sampled 000E  
                           ??_TMR2_LoadPeriodRegister 0000                            __size_of_SYSTEM_Initialize 0010  
                                             clrloop0 0001                                      _callback_pressed 0008  
                      MTOUCH_Sensor_Initialize@sensor 0006                                  end_of_initialization 001A  
                             ?_Button_DefaultCallback 0000                                               memcpy@d 0009  
                                             memcpy@n 0002                                               memcpy@s 0005  
                                             init_ram 0000                                               initloop 0001  
                             ?_Sensor_DefaultCallback 0000                      __size_of_Button_Deviation_Update 0094  
                        ??_MTOUCH_Sensor_isCalibrated 0000                   __end_of_MTOUCH_Sensor_RawSample_Get 0020  
                         _MTOUCH_Sensor_RawSample_Get 0000                                      ??_WDT_Initialize 0000  
                              Sensor_setActive@sensor 0000                                      __CFG_FOSC$INTOSC 0000  
                       Button_Deviation_Update@button 000A                                             _TRISCbits 008E  
                                 _callback_notPressed 0006                   __size_of_MTOUCH_Sensor_isCalibrated 0003  
                      __end_of_Button_DefaultCallback 0001                                    _sensor_globalFlags 0006  
                        Sensor_Acq_ExecuteScan@last_a 0002                          Sensor_Acq_ExecuteScan@last_b 0000  
                      __end_of_Sensor_DefaultCallback 0001                          Sensor_Acq_ExecuteScan@result 0006  
                    __size_of_Sensor_RawSample_Update 001B                                    _Sensor_Acquisition 0000  
                __end_of_TMR2_DefaultInterruptHandler 0001                 __size_of_TMR2_DefaultInterruptHandler 0001  
                        _TMR2_DefaultInterruptHandler 0000                                  _Button_State_Pressed 0000  
                                      __end_of___bmul 001A                                   ?_Sensor_Acquisition 0000  
                          ??_MTOUCH_Button_Initialize 0000                       ??_MTOUCH_Sensor_Scan_Initialize 0000  
                                   __size_of_TMR2_ISR 000F                         Sensor_Acq_ExecutePacket@error 0003  
                                  _Button_Tick_helper 0000                                        __end_of_memcpy 0031  
                              ?_OSCILLATOR_Initialize 0000                              __end_of_Sensor_setActive 0008  
                    TMR2_LoadPeriodRegister@periodVal 0000                           ??_Button_State_Initializing 000E  
                                   __size_ofi1___bmul 0019                                   start_initialization 0000  
                             _MTOUCH_Service_Mainloop 0000                       __size_of_PIN_MANAGER_Initialize 0016  
                                  _MTOUCH_Button_Tick 0000                                   ?_Button_Tick_helper 0000  
                                         __end_of_abs 001D                                        _TMR2_StopTimer 0000  
                                ??_Sensor_Acquisition 0005                                   ?_MTOUCH_Button_Tick 0000  
                     Button_State_Initializing@button 000D                      __end_of_MTOUCH_Sensor_wasSampled 0012  
                                ??_Button_Tick_helper 0000                                          _packet_noise 0000  
                                            ??___bmul 0001                                 ?_Button_State_Pressed 000D  
                          ??_MTOUCH_Button_ServiceAll 0016                                           __pdataBANK0 0000  
                                            ??_memcpy 0004                          ??_Button_Baseline_Initialize 0008  
                                       _sample_period 0010                         ?_TMR2_DefaultInterruptHandler 0000  
                                ??_MTOUCH_Button_Tick 0003                                    _mtouch_button_init 0000  
                          Sensor_Sampled_Reset@sensor 0000                                __end_of_TMR2_StopTimer 0003  
                                         __pbssCOMMON 0000                                             ___latbits 0000  
                                       __pcstackBANK0 0000                              __size_of_TMR2_Initialize 0013  
                      MTOUCH_Button_ServiceAll@button 0017                                   Sensor_Service@error 000E  
                       __size_of_Sensor_Sampled_Reset 0008                               _Button_Deviation_Update 0000  
                           _Button_State_Initializing 0000                    __end_of_MTOUCH_Sensor_isCalibrated 0003  
                          _MTOUCH_Sensor_isCalibrated 0000                                     _Sensor_setSampled 0000  
                              _PIN_MANAGER_Initialize 0000                                      ??_Button_Service 0012  
                            ?_MTOUCH_Sensor_Calibrate 0000                                    ?_Sensor_setSampled 0000  
                          ??_MTOUCH_Sensor_Initialize 0004                                      ??_Sensor_Service 000B  
                          ??_Sensor_Acq_ExecutePacket 0002                          ??_INTERRUPT_InterruptManager 0008  
                                 ??_Sensor_setSampled 0000                             ??_MTOUCH_Service_Mainloop 0018  
                         __size_of_Sensor_setInactive 0008                                       ?_TMR2_StopTimer 0000  
                                      __size_ofi1_abs 001B                        Sensor_Acq_ExecutePacket@sensor 0004  
                                       ??_MTOUCH_Tick 0003                             __end_of_Sensor_setSampled 0008  
                                            _LATCbits 010E                                    _currentScannSensor 0005  
                             _Sensor_RawSample_Update 0000                                             clear_ram0 0000  
                                            _PIE1bits 0091                              __size_of_TMR2_StartTimer 0003  
                               i1___bmul@multiplicand 0000                   __size_of_INTERRUPT_InterruptManager 0019  
                                            _PIR1bits 0011                                ??_Button_State_Pressed 000E  
              __end_of_MTOUCH_Sensor_Sampled_ResetAll 0022               __size_of_MTOUCH_Sensor_Sampled_ResetAll 0022  
                      _MTOUCH_Sensor_Sampled_ResetAll 0000                              ?_MTOUCH_Sensor_SampleAll 0000  
                                            _TMR2_ISR 0000                              _MTOUCH_Sensor_wasSampled 0000  
                          __end_of_MTOUCH_CVD_ScanA_0 0024                            __end_of_MTOUCH_CVD_ScanB_0 0024  
                            ??_Button_Baseline_Update 0000                                              i1___bmul 0000  
                                            _WPUCbits 020E                        ??_TMR2_DefaultInterruptHandler 0000  
                   __size_of_TMR2_SetInterruptHandler 0006                             ?_TMR2_SetInterruptHandler 0000  
                                _MTOUCH_Sensor_Enable 0000*                             Button_Tick_helper@button 0002  
                           ??_Button_Deviation_Update 0000                                 _Button_Reading_Update 0000  
                            ??_Sensor_setScanFunction 0000                              ?_MTOUCH_Button_isPressed 0000  
                                   ?_Sensor_isEnabled 0000                                     ??_TMR2_Initialize 0002  
                                 __end_of_MTOUCH_Tick 0004                                     _MTOUCH_Initialize 0000  
                     __end_of_MTOUCH_Sensor_Calibrate 0001                                    ??_Sensor_isEnabled 0000  
                                  ?_MTOUCH_Initialize 0000                                             memcpy@tmp 0007  
                             ??_OSCILLATOR_Initialize 0000                    __end_of_Button_Baseline_Initialize 002C  
                          _Button_Baseline_Initialize 0000                              Sensor_Acquisition@sensor 000A  
                                 ??_MTOUCH_Initialize 000C                              ?_Button_State_NotPressed 000D  
                                          _ANSELCbits 018E                                    Button_Service@name 0014  
                                   ?_Sensor_setActive 0000                              ?_TMR2_LoadPeriodRegister 0000  
                                        _Sensor_scanA 000C                                          _Sensor_scanB 000A  
                                  ??_Sensor_setActive 0000                                 ?_MTOUCH_Sensor_Enable 0000  
                                            __ptext10 0000                                              __ptext11 0000  
                                            __ptext20 0000                                              __ptext12 0000  
                                            __ptext21 0000                                              __ptext13 0000  
                                            __ptext30 0000                                              __ptext22 0000  
                                            __ptext14 0000                                              __ptext31 0000  
                                            __ptext23 0000                                              __ptext15 0000  
                                            __ptext40 0000                                              __ptext32 0000  
                                            __ptext24 0000                                              __ptext16 0000  
                                            __ptext41 0000                                              __ptext33 0000  
                                            __ptext25 0000                                              __ptext17 0000  
                                            __ptext42 0000                                              __ptext34 0000  
                                            __ptext26 0000                                              __ptext18 0000  
                                            __ptext51 0000                                              __ptext43 0000  
                                            __ptext35 0000                                              __ptext27 0000  
                                            __ptext19 0000                                              __ptext52 0000  
                                            __ptext44 0000                                              __ptext36 0000  
                                            __ptext28 0000                                              __ptext53 0000  
                                            __ptext45 0000                                              __ptext37 0000  
                                            __ptext29 0000                                              __ptext54 0000  
                                            __ptext46 0000                                              __ptext38 0000  
                                            __ptext55 0000                                              __ptext47 0000  
                                            __ptext39 0000                                              __ptext56 0000  
                                            __ptext48 0000                                              __ptext57 0000  
                                            __ptext49 0000                             __end_of_MTOUCH_Initialize 000D  
                           ??_Sensor_RawSample_Update 0000                            __size_of_Sensor_setSampled 0008  
                                       __size_of_main 0022                       __end_of_MTOUCH_Sensor_SampleAll 0023  
                        Sensor_setScanFunction@sensor 0000                                              int$flags 007E  
                            ??_Sensor_Acq_ExecuteScan 0004                    __size_of_Button_State_Initializing 0062  
                                   ??_TMR2_StartTimer 0000                    __end_of_INTERRUPT_InterruptManager 0019  
                          _INTERRUPT_InterruptManager 0000                       __size_of_Button_Baseline_Update 008B  
                        ?_MTOUCH_Button_InitializeAll 0000                          ?_MTOUCH_Sensor_InitializeAll 0000  
                                       _mtouch_button 0007                                            _INTCONbits 000B  
                                       _mtouch_sensor 0011                                              memcpy@d1 0008  
                                            memcpy@s1 0000                       __end_of_MTOUCH_Button_isPressed 0022  
                                         _MTOUCH_Tick 0000                                ?_Button_Reading_Update 0000  
                    Button_Deviation_Update@deviation 000B                               __size_of_WDT_Initialize 0004  
                        MTOUCH_Button_Initialize@name 0002                     __size_of_MTOUCH_Button_Initialize 0033  
                                            intlevel1 0000*                            ?_MTOUCH_Button_Initialize 0000  
                         __size_of_Sensor_Acquisition 0065                       __size_of_Sensor_setScanFunction 0012  
                             ?_PIN_MANAGER_Initialize 0000                                     __CFG_CLKOUTEN$OFF 0000  
                         ?_MTOUCH_Sensor_isCalibrated 0000                           __size_of_Button_Tick_helper 002A  
                     __end_of_Button_State_NotPressed 0096                          __end_of_Sensor_Sampled_Reset 0008  
                                    ??_TMR2_StopTimer 0000                       __end_of_TMR2_LoadPeriodRegister 0005  
                         __size_of_MTOUCH_Button_Tick 0005                                         __pstringtext1 0000  
                                       __pstringtext2 0000                         ??_MTOUCH_Button_InitializeAll 000A  
                            ??_Button_DefaultCallback 0001                         ??_MTOUCH_Sensor_InitializeAll 0007  
                    __size_of_MTOUCH_Sensor_Calibrate 0001                                ??_MTOUCH_Sensor_Enable 0000  
                            ??_Sensor_DefaultCallback 0001                     __size_of_MTOUCH_Button_ServiceAll 0019  
                           ?_MTOUCH_Button_ServiceAll 0000                         Button_State_NotPressed@button 000D  
                          __size_of_MTOUCH_Initialize 000D                        __end_of_PIN_MANAGER_Initialize 0016  
                              _Button_Baseline_Update 0000                           MTOUCH_Button_isPressed@name 0001  
                               _TMR2_InterruptHandler 0002                            ??_MTOUCH_Sensor_wasSampled 0004  
